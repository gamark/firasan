!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AARCH64_GET_REG	sanitizer_common/sanitizer_mac.cpp	818;"	d
AARCH64_GET_REG	sanitizer_common/sanitizer_mac.cpp	822;"	d
ACCESS_MEMORY_RANGE	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	52;"	d
ACCESS_MEMORY_RANGE	asan/asan_interceptors_memintrinsics.h	52;"	d
AK_Float	ubsan/ubsan_diag.h	/^    AK_Float,  \/\/\/< A floating-point argument.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_Pointer	ubsan/ubsan_diag.h	/^    AK_Pointer \/\/\/< A pointer argument, displayed in hexadecimal.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_SInt	ubsan/ubsan_diag.h	/^    AK_SInt,   \/\/\/< A signed integer argument.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_String	ubsan/ubsan_diag.h	/^    AK_String, \/\/\/< A string argument, displayed as-is.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_TypeName	ubsan/ubsan_diag.h	/^    AK_TypeName,\/\/\/< A C++ type name, possibly demangled before display.$/;"	e	enum:__ubsan::Diag::ArgKind
AK_UInt	ubsan/ubsan_diag.h	/^    AK_UInt,   \/\/\/< An unsigned integer argument.$/;"	e	enum:__ubsan::Diag::ArgKind
ALIAS	hwasan/hwasan_setjmp.S	/^ALIAS __interceptor_setjmp, _setjmp$/;"	l
ALIAS	hwasan/hwasan_setjmp.S	/^ALIAS __interceptor_setjmp_bionic, setjmp$/;"	l
ALIAS	hwasan/hwasan_setjmp.S	/^ALIAS __interceptor_sigsetjmp, __sigsetjmp$/;"	l
ALIAS	hwasan/hwasan_setjmp.S	/^ALIAS __interceptor_sigsetjmp, sigsetjmp$/;"	l
ALIAS	sanitizer_common/sanitizer_internal_defs.h	208;"	d
ALIAS	sanitizer_common/sanitizer_internal_defs.h	220;"	d
ALIGNED	sanitizer_common/sanitizer_internal_defs.h	209;"	d
ALIGNED	sanitizer_common/sanitizer_internal_defs.h	223;"	d
ALLOCATION_FUNCTION_ATTRIBUTE	asan/asan_malloc_win.cpp	62;"	d
ALWAYS_INLINE	sanitizer_common/sanitizer_internal_defs.h	206;"	d
ALWAYS_INLINE	sanitizer_common/sanitizer_internal_defs.h	219;"	d
ANDROID_KITKAT	sanitizer_common/sanitizer_common.h	/^  ANDROID_KITKAT = 19,$/;"	e	enum:__sanitizer::AndroidApiLevel
ANDROID_LOLLIPOP_MR1	sanitizer_common/sanitizer_common.h	/^  ANDROID_LOLLIPOP_MR1 = 22,$/;"	e	enum:__sanitizer::AndroidApiLevel
ANDROID_NOT_ANDROID	sanitizer_common/sanitizer_common.h	/^  ANDROID_NOT_ANDROID = 0,$/;"	e	enum:__sanitizer::AndroidApiLevel
ANDROID_POST_LOLLIPOP	sanitizer_common/sanitizer_common.h	/^  ANDROID_POST_LOLLIPOP = 23$/;"	e	enum:__sanitizer::AndroidApiLevel
AP32	lsan/lsan_allocator.h	/^struct AP32 {$/;"	s	namespace:__lsan
AP32	sanitizer_common/sanitizer_allocator_internal.h	/^struct AP32 {$/;"	s	namespace:__sanitizer
AP32	tsan/tsan_rtl.h	/^struct AP32 {$/;"	s	namespace:__tsan
AP64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^struct AP64 {  \/\/ Allocator64 parameters. Deliberately using a short name.$/;"	s	namespace:__asan
AP64	asan/asan_allocator.h	/^struct AP64 {  \/\/ Allocator64 parameters. Deliberately using a short name.$/;"	s	namespace:__asan
AP64	hwasan/hwasan_allocator.h	/^struct AP64 {$/;"	s	namespace:__hwasan
AP64	tsan/tsan_rtl.h	/^struct AP64 {  \/\/ Allocator64 parameters. Deliberately using a short name.$/;"	s	namespace:__tsan
ARCH_HAS_BLX	sanitizer_common/sanitizer_linux.cpp	1628;"	d
ARCH_HAS_BX	sanitizer_common/sanitizer_linux.cpp	1625;"	d
ARCH_IOVEC_FOR_GETREGSET	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	488;"	d
ARCH_IOVEC_FOR_GETREGSET	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	512;"	d
ARCH_IOVEC_FOR_GETREGSET	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	518;"	d
ARCH_IOVEC_FOR_GETREGSET	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	524;"	d
ARM_HAS_BX	builtins/assembly.h	100;"	d
ARM_VFPREGS_SIZE	include/system/asm/ptrace.h	6;"	d
ARM_VFPREGS_SIZE	sanitizer_common/sanitizer_platform_limits_posix.cpp	100;"	d
ARM_VFPREGS_SIZE_ASAN	sanitizer_common/sanitizer_platform_limits_posix.cpp	98;"	d
ARRAY_SIZE	sanitizer_common/sanitizer_internal_defs.h	334;"	d
ARRAY_SIZE	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	25;"	d
ASAN_ACTIVATION_FLAG	asan/asan_activation.cpp	34;"	d
ASAN_ACTIVATION_FLAG	asan/asan_activation.cpp	39;"	d
ASAN_ACTIVATION_H	asan/asan_activation.h	15;"	d
ASAN_ALLOCATOR_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	15;"	d
ASAN_ALLOCATOR_H	asan/asan_allocator.h	15;"	d
ASAN_DEFINE_ERROR_KIND	asan/asan_errors.h	406;"	d
ASAN_DEFINE_ERROR_KIND	asan/asan_errors.h	449;"	d
ASAN_DESCRIPTIONS_H	asan/asan_descriptions.h	15;"	d
ASAN_DYNAMIC	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	47;"	d
ASAN_DYNAMIC	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	49;"	d
ASAN_DYNAMIC	asan/asan_internal.h	47;"	d
ASAN_DYNAMIC	asan/asan_internal.h	49;"	d
ASAN_ERRORS_H	asan/asan_errors.h	14;"	d
ASAN_ERROR_DESCRIPTION_CONSTRUCTOR	asan/asan_errors.h	408;"	d
ASAN_ERROR_DESCRIPTION_CONSTRUCTOR	asan/asan_errors.h	451;"	d
ASAN_ERROR_DESCRIPTION_MEMBER	asan/asan_errors.h	407;"	d
ASAN_ERROR_DESCRIPTION_MEMBER	asan/asan_errors.h	450;"	d
ASAN_ERROR_DESCRIPTION_PRINT	asan/asan_errors.h	412;"	d
ASAN_ERROR_DESCRIPTION_PRINT	asan/asan_errors.h	452;"	d
ASAN_FAKE_STACK_H	asan/asan_fake_stack.h	15;"	d
ASAN_FIXED_MAPPING	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	269;"	d
ASAN_FIXED_MAPPING	asan/asan_mapping.h	269;"	d
ASAN_FLAG	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_flags.h	32;"	d
ASAN_FLAG	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_flags.h	34;"	d
ASAN_FLAG	asan/asan_flags.cpp	38;"	d
ASAN_FLAG	asan/asan_flags.cpp	40;"	d
ASAN_FLAG	asan/asan_flags.cpp	44;"	d
ASAN_FLAG	asan/asan_flags.cpp	47;"	d
ASAN_FLAG	asan/asan_flags.h	32;"	d
ASAN_FLAG	asan/asan_flags.h	34;"	d
ASAN_FLAGS_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_flags.h	15;"	d
ASAN_FLAGS_H	asan/asan_flags.h	15;"	d
ASAN_FOR_EACH_ERROR_KIND	asan/asan_errors.h	/^  ASAN_FOR_EACH_ERROR_KIND(ASAN_DEFINE_ERROR_KIND)$/;"	e	enum:__asan::ErrorKind
ASAN_FOR_EACH_ERROR_KIND	asan/asan_errors.h	381;"	d
ASAN_FOR_EACH_ERROR_KIND	asan/asan_errors.h	448;"	d
ASAN_FREE_HOOK	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	133;"	d
ASAN_FREE_HOOK	asan/asan_internal.h	133;"	d
ASAN_HAS_EXCEPTIONS	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	32;"	d
ASAN_HAS_EXCEPTIONS	asan/asan_internal.h	32;"	d
ASAN_INIT_VERSION_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_init_version.h	15;"	d
ASAN_INIT_VERSION_H	asan/asan_init_version.h	15;"	d
ASAN_INTERCEPTORS_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	14;"	d
ASAN_INTERCEPTORS_H	asan/asan_interceptors.h	14;"	d
ASAN_INTERCEPTOR_ENTER	asan/asan_interceptors.cpp	87;"	d
ASAN_INTERCEPT_ATEXIT	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	109;"	d
ASAN_INTERCEPT_ATEXIT	asan/asan_interceptors.h	109;"	d
ASAN_INTERCEPT_ATOLL_AND_STRTOLL	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	45;"	d
ASAN_INTERCEPT_ATOLL_AND_STRTOLL	asan/asan_interceptors.h	45;"	d
ASAN_INTERCEPT_FUNC	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	142;"	d
ASAN_INTERCEPT_FUNC	asan/asan_interceptors.h	142;"	d
ASAN_INTERCEPT_FUNC_VER	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	147;"	d
ASAN_INTERCEPT_FUNC_VER	asan/asan_interceptors.h	147;"	d
ASAN_INTERCEPT_FUNC_VER_UNVERSIONED_FALLBACK	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	153;"	d
ASAN_INTERCEPT_FUNC_VER_UNVERSIONED_FALLBACK	asan/asan_interceptors.h	153;"	d
ASAN_INTERCEPT_INDEX	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	47;"	d
ASAN_INTERCEPT_INDEX	asan/asan_interceptors.h	47;"	d
ASAN_INTERCEPT_PTHREAD_ATFORK	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	129;"	d
ASAN_INTERCEPT_PTHREAD_ATFORK	asan/asan_interceptors.h	129;"	d
ASAN_INTERCEPT_PTHREAD_CREATE	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	48;"	d
ASAN_INTERCEPT_PTHREAD_CREATE	asan/asan_interceptors.h	48;"	d
ASAN_INTERCEPT_SIGLONGJMP	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	70;"	d
ASAN_INTERCEPT_SIGLONGJMP	asan/asan_interceptors.h	70;"	d
ASAN_INTERCEPT_SWAPCONTEXT	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	64;"	d
ASAN_INTERCEPT_SWAPCONTEXT	asan/asan_interceptors.h	64;"	d
ASAN_INTERCEPT_VFORK	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	123;"	d
ASAN_INTERCEPT_VFORK	asan/asan_interceptors.h	123;"	d
ASAN_INTERCEPT__LONGJMP	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	46;"	d
ASAN_INTERCEPT__LONGJMP	asan/asan_interceptors.h	46;"	d
ASAN_INTERCEPT__UNWIND_SJLJ_RAISEEXCEPTION	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	91;"	d
ASAN_INTERCEPT__UNWIND_SJLJ_RAISEEXCEPTION	asan/asan_interceptors.h	91;"	d
ASAN_INTERCEPT___CXA_ATEXIT	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	103;"	d
ASAN_INTERCEPT___CXA_ATEXIT	asan/asan_interceptors.h	103;"	d
ASAN_INTERCEPT___CXA_RETHROW_PRIMARY_EXCEPTION	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	86;"	d
ASAN_INTERCEPT___CXA_RETHROW_PRIMARY_EXCEPTION	asan/asan_interceptors.h	86;"	d
ASAN_INTERCEPT___CXA_THROW	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	83;"	d
ASAN_INTERCEPT___CXA_THROW	asan/asan_interceptors.h	83;"	d
ASAN_INTERCEPT___LONGJMP_CHK	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	76;"	d
ASAN_INTERCEPT___LONGJMP_CHK	asan/asan_interceptors.h	76;"	d
ASAN_INTERCEPT___STRDUP	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	115;"	d
ASAN_INTERCEPT___STRDUP	asan/asan_interceptors.h	115;"	d
ASAN_INTERFACE_INTERNAL_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	18;"	d
ASAN_INTERFACE_INTERNAL_H	asan/asan_interface_internal.h	18;"	d
ASAN_INTERNAL_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	14;"	d
ASAN_INTERNAL_H	asan/asan_internal.h	14;"	d
ASAN_LOW_MEMORY	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	39;"	d
ASAN_LOW_MEMORY	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	41;"	d
ASAN_LOW_MEMORY	asan/asan_internal.h	39;"	d
ASAN_LOW_MEMORY	asan/asan_internal.h	41;"	d
ASAN_MALLOC_HOOK	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	128;"	d
ASAN_MALLOC_HOOK	asan/asan_internal.h	128;"	d
ASAN_MALLOC_LOCAL_H	asan/asan_malloc_local.h	15;"	d
ASAN_MAPPING_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	14;"	d
ASAN_MAPPING_H	asan/asan_mapping.h	14;"	d
ASAN_MAPPING_MYRIAD_H	asan/asan_mapping_myriad.h	14;"	d
ASAN_MAPPING_SPARC64_H	asan/asan_mapping_sparc64.h	14;"	d
ASAN_MEMCPY_IMPL	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	81;"	d
ASAN_MEMCPY_IMPL	asan/asan_interceptors_memintrinsics.h	81;"	d
ASAN_MEMINTRIN_H	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	14;"	d
ASAN_MEMINTRIN_H	asan/asan_interceptors_memintrinsics.h	14;"	d
ASAN_MEMMOVE_IMPL	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	112;"	d
ASAN_MEMMOVE_IMPL	asan/asan_interceptors_memintrinsics.h	112;"	d
ASAN_MEMORY_ACCESS_CALLBACK	asan/asan_rtl.cpp	169;"	d
ASAN_MEMORY_ACCESS_CALLBACK_BODY	asan/asan_rtl.cpp	149;"	d
ASAN_MEMSET_IMPL	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	99;"	d
ASAN_MEMSET_IMPL	asan/asan_interceptors_memintrinsics.h	99;"	d
ASAN_ON_ERROR	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	138;"	d
ASAN_ON_ERROR	asan/asan_internal.h	138;"	d
ASAN_POISON_MEMORY_REGION	include/sanitizer/asan_interface.h	59;"	d
ASAN_POISON_MEMORY_REGION	include/sanitizer/asan_interface.h	72;"	d
ASAN_PREMAP_SHADOW	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	252;"	d
ASAN_PREMAP_SHADOW	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	254;"	d
ASAN_PREMAP_SHADOW	asan/asan_mapping.h	252;"	d
ASAN_PREMAP_SHADOW	asan/asan_mapping.h	254;"	d
ASAN_PREMAP_SHADOW_H	asan/asan_premap_shadow.h	16;"	d
ASAN_PTHREAD_CREATE_VERSION	asan/asan_interceptors.cpp	41;"	d
ASAN_PTHREAD_CREATE_VERSION	asan/asan_interceptors.cpp	43;"	d
ASAN_READ_RANGE	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	123;"	d
ASAN_READ_RANGE	asan/asan_interceptors_memintrinsics.h	123;"	d
ASAN_READ_STRING	asan/asan_interceptors.cpp	52;"	d
ASAN_READ_STRING_OF_LEN	asan/asan_interceptors.cpp	48;"	d
ASAN_REPORT_ERROR	asan/asan_rtl.cpp	101;"	d
ASAN_REPORT_ERROR_N	asan/asan_rtl.cpp	129;"	d
ASAN_REPORT_H	asan/asan_report.h	15;"	d
ASAN_RT_VERSION_DYNAMIC	asan/asan_linux.cpp	/^  ASAN_RT_VERSION_DYNAMIC,$/;"	e	enum:__anon72
ASAN_RT_VERSION_STATIC	asan/asan_linux.cpp	/^  ASAN_RT_VERSION_STATIC,$/;"	e	enum:__anon72
ASAN_RT_VERSION_UNDEFINED	asan/asan_linux.cpp	/^  ASAN_RT_VERSION_UNDEFINED = 0,$/;"	e	enum:__anon72
ASAN_SCARINESS_SCORE_H	asan/asan_scariness_score.h	29;"	d
ASAN_STACK_H	asan/asan_stack.h	15;"	d
ASAN_STATS_H	asan/asan_stats.h	14;"	d
ASAN_SUPPRESSIONS_H	asan/asan_suppressions.h	14;"	d
ASAN_THREAD_H	asan/asan_thread.h	15;"	d
ASAN_UNPOISON_MEMORY_REGION	include/sanitizer/asan_interface.h	69;"	d
ASAN_UNPOISON_MEMORY_REGION	include/sanitizer/asan_interface.h	74;"	d
ASAN_USE_ALIAS_ATTRIBUTE_FOR_INDEX	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	58;"	d
ASAN_USE_ALIAS_ATTRIBUTE_FOR_INDEX	asan/asan_interceptors.h	58;"	d
ASAN_WRITE_RANGE	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	125;"	d
ASAN_WRITE_RANGE	asan/asan_interceptors_memintrinsics.h	125;"	d
ASM_HIDDEN	sanitizer_common/sanitizer_asm.h	46;"	d
ASM_HIDDEN	sanitizer_common/sanitizer_asm.h	53;"	d
ASM_SIZE	sanitizer_common/sanitizer_asm.h	48;"	d
ASM_SIZE	sanitizer_common/sanitizer_asm.h	55;"	d
ASM_SYMBOL	sanitizer_common/sanitizer_asm.h	49;"	d
ASM_SYMBOL	sanitizer_common/sanitizer_asm.h	56;"	d
ASM_SYMBOL_INTERCEPTOR	sanitizer_common/sanitizer_asm.h	50;"	d
ASM_SYMBOL_INTERCEPTOR	sanitizer_common/sanitizer_asm.h	57;"	d
ASM_TYPE_FUNCTION	sanitizer_common/sanitizer_asm.h	47;"	d
ASM_TYPE_FUNCTION	sanitizer_common/sanitizer_asm.h	54;"	d
ASM_WRAPPER_NAME	sanitizer_common/sanitizer_asm.h	51;"	d
ASM_WRAPPER_NAME	sanitizer_common/sanitizer_asm.h	58;"	d
ASSIGN_REAL	interception/interception.h	179;"	d
ASSIGN_REAL	interception/interception.h	184;"	d
ATOMIC	tsan/tsan_interface_atomic.cpp	876;"	d
ATOMIC_ORDER	sanitizer_common/sanitizer_atomic_clang.h	103;"	d
ATOMIC_RET	tsan/tsan_interface_atomic.cpp	886;"	d
Aarch64GetESR	sanitizer_common/sanitizer_linux.cpp	/^static bool Aarch64GetESR(ucontext_t *ucontext, u64 *esr) {$/;"	f	namespace:__sanitizer
Abort	hwasan/hwasan_checks.h	/^enum class ErrorAction { Abort, Recover };$/;"	m	class:__hwasan::ErrorAction
Abort	sanitizer_common/sanitizer_common_nolibc.cpp	/^void Abort() { internal__exit(1); }$/;"	f	namespace:__sanitizer
Abort	sanitizer_common/sanitizer_fuchsia.cpp	/^void Abort() { abort(); }$/;"	f	namespace:__sanitizer
Abort	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void Abort() {$/;"	f	namespace:__sanitizer
Abort	sanitizer_common/sanitizer_rtems.cpp	/^void Abort() { abort(); }$/;"	f	namespace:__sanitizer
Abort	sanitizer_common/sanitizer_win.cpp	/^void Abort() {$/;"	f	namespace:__sanitizer
Access	asan/asan_descriptions.h	/^  const char *Access() { return Blue(); }$/;"	f	class:__asan::Decorator
Access	hwasan/hwasan_report.cpp	/^  const char *Access() { return Blue(); }$/;"	f	class:__hwasan::Decorator
Access	tsan/tsan_report.cpp	/^  const char *Access()     { return Blue(); }$/;"	f	class:__tsan::Decorator
AccessFunc	tsan/tsan_external.cpp	/^typedef void(*AccessFunc)(ThreadState *, uptr, uptr, int);$/;"	t	namespace:__tsan
AccessInfo	hwasan/hwasan_linux.cpp	/^struct AccessInfo {$/;"	s	namespace:__hwasan
AccessType	asan/asan_descriptions.h	/^enum AccessType {$/;"	g	namespace:__asan
AccessType	hwasan/hwasan_checks.h	/^enum class AccessType { Load, Store };$/;"	c	namespace:__hwasan
Acquire	tsan/tsan_rtl_mutex.cpp	/^void Acquire(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
AcquireGlobal	tsan/tsan_rtl_mutex.cpp	/^void AcquireGlobal(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
AcquireImpl	tsan/tsan_rtl_mutex.cpp	/^void AcquireImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
AcquireReleaseImpl	tsan/tsan_rtl_mutex.cpp	/^void AcquireReleaseImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
ActualSize	hwasan/hwasan_allocator.cpp	/^uptr HwasanChunkView::ActualSize() const {$/;"	f	class:__hwasan::HwasanChunkView
Add	sanitizer_common/sanitizer_allocator_primary32.h	/^    void Add(void *ptr) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
Add	sanitizer_common/sanitizer_allocator_stats.h	/^  void Add(AllocatorStat i, uptr v) {$/;"	f	class:AllocatorStats
Add	sanitizer_common/sanitizer_flag_parser.cpp	/^  void Add(const char *name) {$/;"	f	class:__sanitizer::UnknownFlags
Add	tsan/tsan_ignoreset.cpp	/^void IgnoreSet::Add(u32 stack_id) {$/;"	f	class:__tsan::IgnoreSet
Add	tsan/tsan_mutexset.cpp	/^void MutexSet::Add(u64 id, bool write, u64 epoch) {$/;"	f	class:__tsan::MutexSet
Add	tsan/tsan_mutexset.h	/^void MutexSet::Add(u64 id, bool write, u64 epoch) {}$/;"	f	class:__tsan::MutexSet
AddAddressRanges	sanitizer_common/sanitizer_procmaps_common.cpp	/^void MemoryMappedSegment::AddAddressRanges(LoadedModule *module) {$/;"	f	class:__sanitizer::MemoryMappedSegment
AddAddressRanges	sanitizer_common/sanitizer_procmaps_mac.cpp	/^void MemoryMappedSegment::AddAddressRanges(LoadedModule *module) {$/;"	f	class:__sanitizer::MemoryMappedSegment
AddArg	ubsan/ubsan_diag.h	/^  Diag &AddArg(Arg A) {$/;"	f	class:__ubsan::Diag
AddBucket	sanitizer_common/sanitizer_addrhashmap.h	/^  struct AddBucket {$/;"	s	class:__sanitizer::AddrHashMap
AddDeadMutex	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddDeadMutex(u64 id) {$/;"	f	class:__tsan::ScopedReportBase
AddDieCallback	sanitizer_common/sanitizer_termination.cpp	/^bool AddDieCallback(DieCallbackType callback) {$/;"	f	namespace:__sanitizer
AddExpectRace	tsan/tsan_interface_ann.cpp	/^static void AddExpectRace(ExpectRace *list,$/;"	f	namespace:__tsan
AddFrame	tsan/tsan_symbolize.cpp	/^static void AddFrame(void *ctx, const char *function_name, const char *file,$/;"	f	namespace:__tsan
AddHooks	sanitizer_common/sanitizer_symbolizer.cpp	/^void Symbolizer::AddHooks(Symbolizer::StartSymbolizationHook start_hook,$/;"	f	class:__sanitizer::Symbolizer
AddIgnoredLibrary	sanitizer_common/sanitizer_libignore.cpp	/^void LibIgnore::AddIgnoredLibrary(const char *name_templ) {$/;"	f	class:__sanitizer::LibIgnore
AddLeakedChunk	lsan/lsan_common.cpp	/^void LeakReport::AddLeakedChunk(uptr chunk, u32 stack_trace_id,$/;"	f	class:__lsan::LeakReport
AddLocation	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddLocation(uptr addr, uptr size) {$/;"	f	class:__tsan::ScopedReportBase
AddMemoryAccess	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddMemoryAccess(uptr addr, uptr external_tag, Shadow s,$/;"	f	class:__tsan::ScopedReportBase
AddMutex	tsan/tsan_rtl_report.cpp	/^u64 ScopedReportBase::AddMutex(u64 id) {$/;"	f	class:__tsan::ScopedReportBase
AddMutex	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddMutex(const SyncVar *s) {$/;"	f	class:__tsan::ScopedReportBase
AddRange	ubsan/ubsan_diag.h	/^  Diag &AddRange(Range A) {$/;"	f	class:__ubsan::Diag
AddSleep	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddSleep(u32 stack_id) {$/;"	f	class:__tsan::ScopedReportBase
AddStack	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddStack(StackTrace stack, bool suppressable) {$/;"	f	class:__tsan::ScopedReportBase
AddTagToPointer	hwasan/hwasan.h	/^static inline uptr AddTagToPointer(uptr p, tag_t tag) {$/;"	f
AddThread	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddThread(const ThreadContext *tctx, bool suppressable) {$/;"	f	class:__tsan::ScopedReportBase
AddThread	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddThread(int unique_tid, bool suppressable) {$/;"	f	class:__tsan::ScopedReportBase
AddThreadStats	hwasan/hwasan_thread_list.h	/^  void AddThreadStats(Thread *t) {$/;"	f	class:__hwasan::HwasanThreadList
AddUniqueTid	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::AddUniqueTid(int unique_tid) {$/;"	f	class:__tsan::ScopedReportBase
AdditionalSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  static uptr AdditionalSize() { return 0; }$/;"	f	class:SizeClassAllocator32
AdditionalSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static uptr AdditionalSize() {$/;"	f	class:SizeClassAllocator64
Addr0AndSizeAreEqual	tsan/tsan_rtl.h	/^  bool Addr0AndSizeAreEqual(const Shadow s1, const Shadow s2) {$/;"	f	class:__tsan::Shadow
Addr2LinePool	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  explicit Addr2LinePool(const char *addr2line_path,$/;"	f	class:__sanitizer::final
Addr2LineProcess	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  Addr2LineProcess(const char *path, const char *module_name)$/;"	f	class:__sanitizer::final
AddrHashMap	sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::AddrHashMap() {$/;"	f	class:__sanitizer::AddrHashMap
AddrHashMap	sanitizer_common/sanitizer_addrhashmap.h	/^class AddrHashMap {$/;"	c	namespace:__sanitizer
AddrIsAlignedByGranularity	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static inline bool AddrIsAlignedByGranularity(uptr a) {$/;"	f	namespace:__asan
AddrIsAlignedByGranularity	asan/asan_mapping.h	/^static inline bool AddrIsAlignedByGranularity(uptr a) {$/;"	f	namespace:__asan
AddrIsAtLeft	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  bool AddrIsAtLeft(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
AddrIsAtLeft	asan/asan_allocator.h	/^  bool AddrIsAtLeft(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
AddrIsAtRight	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  bool AddrIsAtRight(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
AddrIsAtRight	asan/asan_allocator.h	/^  bool AddrIsAtRight(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
AddrIsInFakeStack	asan/asan_fake_stack.cpp	/^uptr FakeStack::AddrIsInFakeStack(uptr ptr, uptr *frame_beg, uptr *frame_end) {$/;"	f	class:__asan::FakeStack
AddrIsInFakeStack	asan/asan_fake_stack.h	/^  USED uptr AddrIsInFakeStack(uptr addr) {$/;"	f	class:__asan::FakeStack
AddrIsInHighMem	asan/asan_mapping_myriad.h	/^static inline bool AddrIsInHighMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInHighMem	asan/asan_mapping_sparc64.h	/^static inline bool AddrIsInHighMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInHighShadow	asan/asan_mapping_myriad.h	/^static inline bool AddrIsInHighShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInHighShadow	asan/asan_mapping_sparc64.h	/^static inline bool AddrIsInHighShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInLowMem	asan/asan_mapping_myriad.h	/^static inline bool AddrIsInLowMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInLowMem	asan/asan_mapping_sparc64.h	/^static inline bool AddrIsInLowMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInLowShadow	asan/asan_mapping_myriad.h	/^static inline bool AddrIsInLowShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInLowShadow	asan/asan_mapping_sparc64.h	/^static inline bool AddrIsInLowShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInMem	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static inline bool AddrIsInMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInMem	asan/asan_mapping.h	/^static inline bool AddrIsInMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInMidMem	asan/asan_mapping_myriad.h	/^static inline bool AddrIsInMidMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInMidMem	asan/asan_mapping_sparc64.h	/^static inline bool AddrIsInMidMem(uptr a) {$/;"	f	namespace:__asan
AddrIsInMidShadow	asan/asan_mapping_myriad.h	/^static inline bool AddrIsInMidShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInMidShadow	asan/asan_mapping_sparc64.h	/^static inline bool AddrIsInMidShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInShadow	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static inline bool AddrIsInShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInShadow	asan/asan_mapping.h	/^static inline bool AddrIsInShadow(uptr a) {$/;"	f	namespace:__asan
AddrIsInShadowGap	asan/asan_mapping_myriad.h	/^static inline bool AddrIsInShadowGap(uptr a) {$/;"	f	namespace:__asan
AddrIsInShadowGap	asan/asan_mapping_sparc64.h	/^static inline bool AddrIsInShadowGap(uptr a) {$/;"	f	namespace:__asan
AddrIsInStack	asan/asan_thread.cpp	/^bool AsanThread::AddrIsInStack(uptr addr) {$/;"	f	class:__asan::AsanThread
AddrIsInStack	hwasan/hwasan_thread.h	/^  bool AddrIsInStack(uptr addr) {$/;"	f	class:__hwasan::Thread
AddrIsInside	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  bool AddrIsInside(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
AddrIsInside	asan/asan_allocator.cpp	/^  bool AddrIsInside(uptr addr) {$/;"	f	class:__asan::AsanChunk
AddrIsInside	asan/asan_allocator.h	/^  bool AddrIsInside(uptr addr, uptr access_size, sptr *offset) const {$/;"	f	class:__asan::AsanChunkView
Address	asan/asan_descriptions.h	/^  uptr Address() const {$/;"	f	class:__asan::AddressDescription
AddressDescription	asan/asan_descriptions.cpp	/^AddressDescription::AddressDescription(uptr addr, uptr access_size,$/;"	f	class:__asan::AddressDescription
AddressDescription	asan/asan_descriptions.h	/^  explicit AddressDescription(uptr addr, bool shouldLockThreadRegistry = true)$/;"	f	class:__asan::AddressDescription
AddressDescription	asan/asan_descriptions.h	/^class AddressDescription {$/;"	c	namespace:__asan
AddressDescriptionData	asan/asan_descriptions.h	/^  struct AddressDescriptionData {$/;"	s	class:__asan::AddressDescription
AddressInfo	sanitizer_common/sanitizer_symbolizer.cpp	/^AddressInfo::AddressInfo() {$/;"	f	class:__sanitizer::AddressInfo
AddressInfo	sanitizer_common/sanitizer_symbolizer.h	/^struct AddressInfo {$/;"	s	namespace:__sanitizer
AddressIsPoisoned	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static inline bool AddressIsPoisoned(uptr a) {$/;"	f	namespace:__asan
AddressIsPoisoned	asan/asan_mapping.h	/^static inline bool AddressIsPoisoned(uptr a) {$/;"	f	namespace:__asan
AddressKind	asan/asan_descriptions.h	/^enum AddressKind {$/;"	g	namespace:__asan
AddressRange	sanitizer_common/sanitizer_common.h	/^    AddressRange(uptr beg, uptr end, bool executable, bool writable,$/;"	f	struct:__sanitizer::LoadedModule::AddressRange
AddressRange	sanitizer_common/sanitizer_common.h	/^  struct AddressRange {$/;"	s	class:__sanitizer::LoadedModule
AddressSpaceIsUnlimited	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool AddressSpaceIsUnlimited() {$/;"	f	namespace:__sanitizer
AddressSpaceIsUnlimited	sanitizer_common/sanitizer_win.cpp	/^bool AddressSpaceIsUnlimited() {$/;"	f	namespace:__sanitizer
AdjacentShadowValuesAreFullyPoisoned	asan/asan_errors.cpp	/^static bool AdjacentShadowValuesAreFullyPoisoned(u8 *s) {$/;"	f	namespace:__asan
AdjustStackSize	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void AdjustStackSize(void *attr_) {$/;"	f	namespace:__sanitizer
AfterFork	hwasan/hwasan_interceptors.cpp	/^static void AfterFork() {$/;"	f
AfterSleep	tsan/tsan_rtl_mutex.cpp	/^void AfterSleep(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
AlignRight	hwasan/hwasan_allocator.cpp	/^static uptr AlignRight(uptr addr, uptr requested_size) {$/;"	f	namespace:__hwasan
AlignmentAssumptionData	ubsan/ubsan_handlers.h	/^struct AlignmentAssumptionData {$/;"	s	namespace:__ubsan
Alloc	sanitizer_common/sanitizer_flag_parser.cpp	/^LowLevelAllocator FlagParser::Alloc;$/;"	m	class:__sanitizer::FlagParser
Alloc	sanitizer_common/sanitizer_flag_parser.h	/^  static LowLevelAllocator Alloc;$/;"	m	class:__sanitizer::FlagParser
Alloc	tsan/tsan_dense_alloc.h	/^  IndexT Alloc(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
AllocBlock	tsan/tsan_sync.cpp	/^void MetaMap::AllocBlock(ThreadState *thr, uptr pc, uptr p, uptr sz) {$/;"	f	class:__tsan::MetaMap
AllocContext	tsan/tsan_interceptors_libdispatch.cpp	/^static block_context_t *AllocContext(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
AllocThread	hwasan/hwasan_thread_list.h	/^  Thread *AllocThread() {$/;"	f	class:__hwasan::HwasanThreadList
AllocTid	asan/asan_allocator.cpp	/^uptr AsanChunkView::AllocTid() const {$/;"	f	class:__asan::AsanChunkView
AllocType	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^enum AllocType {$/;"	g	namespace:__asan
AllocType	asan/asan_allocator.h	/^enum AllocType {$/;"	g	namespace:__asan
Allocate	asan/asan_allocator.cpp	/^  void *Allocate(uptr size) {$/;"	f	struct:__asan::QuarantineCallback
Allocate	asan/asan_allocator.cpp	/^  void *Allocate(uptr size, uptr alignment, BufferedStackTrace *stack,$/;"	f	struct:__asan::Allocator
Allocate	asan/asan_fake_stack.cpp	/^FakeFrame *FakeStack::Allocate(uptr stack_size_log, uptr class_id,$/;"	f	class:__asan::FakeStack
Allocate	lsan/lsan_allocator.cpp	/^void *Allocate(const StackTrace &stack, uptr size, uptr alignment,$/;"	f	namespace:__lsan
Allocate	sanitizer_common/sanitizer_allocator.cpp	/^void *LowLevelAllocator::Allocate(uptr size) {$/;"	f	class:__sanitizer::LowLevelAllocator
Allocate	sanitizer_common/sanitizer_allocator_combined.h	/^  void *Allocate(AllocatorCache *cache, uptr size, uptr alignment) {$/;"	f	class:CombinedAllocator
Allocate	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void *Allocate(SizeClassAllocator *allocator, uptr class_id) {$/;"	f	struct:SizeClassAllocator32LocalCache
Allocate	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void *Allocate(SizeClassAllocator *allocator, uptr class_id) {$/;"	f	struct:SizeClassAllocator64LocalCache
Allocate	sanitizer_common/sanitizer_allocator_secondary.h	/^  void *Allocate(AllocatorStats *stat, uptr size, uptr alignment) {$/;"	f	class:LargeMmapAllocator
AllocateBatch	sanitizer_common/sanitizer_allocator_primary32.h	/^  NOINLINE TransferBatch *AllocateBatch(AllocatorStats *stat, AllocatorCache *c,$/;"	f	class:SizeClassAllocator32
AllocateFromLocalPool	asan/asan_malloc_linux.cpp	/^static void *AllocateFromLocalPool(uptr size_in_bytes) {$/;"	f
AllocateFromLocalPool	hwasan/hwasan_interceptors.cpp	/^static void *AllocateFromLocalPool(uptr size_in_bytes) {$/;"	f
AllocateMemoryForTrampoline	interception/interception_win.cpp	/^static uptr AllocateMemoryForTrampoline(uptr image_address, size_t size) {$/;"	f	namespace:__interception
AllocateRegion	sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr AllocateRegion(AllocatorStats *stat, uptr class_id) {$/;"	f	class:SizeClassAllocator32
AllocateTrampolineRegion	interception/interception_win.cpp	/^static void *AllocateTrampolineRegion(uptr image_address, size_t granularity) {$/;"	f	namespace:__interception
Allocation	asan/asan_descriptions.h	/^  const char *Allocation() { return Magenta(); }$/;"	f	class:__asan::Decorator
Allocation	hwasan/hwasan_report.cpp	/^  const char *Allocation() const { return Magenta(); }$/;"	f	class:__hwasan::Decorator
AllocationSite	asan/asan_memory_profile.cpp	/^struct AllocationSite {$/;"	s	namespace:__asan
AllocationSize	asan/asan_allocator.cpp	/^  uptr AllocationSize(uptr p) {$/;"	f	struct:__asan::Allocator
AllocationSize	hwasan/hwasan_allocator.cpp	/^static uptr AllocationSize(const void *tagged_ptr) {$/;"	f	namespace:__hwasan
AllocationSizeRequiredForNElements	sanitizer_common/sanitizer_allocator_primary32.h	/^    static uptr AllocationSizeRequiredForNElements(uptr n) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
Allocator	asan/asan_allocator.cpp	/^  explicit Allocator(LinkerInitialized)$/;"	f	struct:__asan::Allocator
Allocator	asan/asan_allocator.cpp	/^struct Allocator {$/;"	s	namespace:__asan
Allocator	hwasan/hwasan_allocator.h	/^typedef CombinedAllocator<PrimaryAllocator> Allocator;$/;"	t	namespace:__hwasan
Allocator	sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef SizeClassAllocator Allocator;$/;"	t	struct:SizeClassAllocator32LocalCache
Allocator	sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef SizeClassAllocator Allocator;$/;"	t	struct:SizeClassAllocator64LocalCache
Allocator	tsan/tsan_rtl.h	/^typedef CombinedAllocator<PrimaryAllocator> Allocator;$/;"	t	namespace:__tsan
AllocatorCache	hwasan/hwasan_allocator.h	/^typedef Allocator::AllocatorCache AllocatorCache;$/;"	t	namespace:__hwasan
AllocatorCache	sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef SizeClassAllocator32LocalCache<ThisT> AllocatorCache;$/;"	t	class:SizeClassAllocator32
AllocatorCache	sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef SizeClassAllocator64LocalCache<ThisT> AllocatorCache;$/;"	t	class:SizeClassAllocator64
AllocatorCache	tsan/tsan_rtl.h	/^typedef Allocator::AllocatorCache AllocatorCache;$/;"	t	namespace:__tsan
AllocatorGlobalStats	sanitizer_common/sanitizer_allocator_stats.h	/^class AllocatorGlobalStats : public AllocatorStats {$/;"	c
AllocatorMayReturnNull	sanitizer_common/sanitizer_allocator.cpp	/^bool AllocatorMayReturnNull() {$/;"	f	namespace:__sanitizer
AllocatorOptions	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^struct AllocatorOptions {$/;"	s	namespace:__asan
AllocatorOptions	asan/asan_allocator.h	/^struct AllocatorOptions {$/;"	s	namespace:__asan
AllocatorPrintStats	tsan/tsan_mman.cpp	/^void AllocatorPrintStats() {$/;"	f	namespace:__tsan
AllocatorProcFinish	tsan/tsan_mman.cpp	/^void AllocatorProcFinish(Processor *proc) {$/;"	f	namespace:__tsan
AllocatorProcStart	tsan/tsan_mman.cpp	/^void AllocatorProcStart(Processor *proc) {$/;"	f	namespace:__tsan
AllocatorStat	sanitizer_common/sanitizer_allocator_stats.h	/^enum AllocatorStat {$/;"	g
AllocatorStatAllocated	sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStatAllocated,$/;"	e	enum:AllocatorStat
AllocatorStatCount	sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStatCount$/;"	e	enum:AllocatorStat
AllocatorStatCounters	sanitizer_common/sanitizer_allocator_stats.h	/^typedef uptr AllocatorStatCounters[AllocatorStatCount];$/;"	t
AllocatorStatMapped	sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStatMapped,$/;"	e	enum:AllocatorStat
AllocatorStats	sanitizer_common/sanitizer_allocator_stats.h	/^class AllocatorStats {$/;"	c
AllocatorSwallowThreadLocalCache	hwasan/hwasan_allocator.cpp	/^void AllocatorSwallowThreadLocalCache(AllocatorCache *cache) {$/;"	f	namespace:__hwasan
AllocatorThreadFinish	lsan/lsan_allocator.cpp	/^void AllocatorThreadFinish() {$/;"	f	namespace:__lsan
AndroidApiLevel	sanitizer_common/sanitizer_common.h	/^enum AndroidApiLevel {$/;"	g	namespace:__sanitizer
AndroidDetectApiLevel	sanitizer_common/sanitizer_linux.cpp	/^static AndroidApiLevel AndroidDetectApiLevel() {$/;"	f	namespace:__sanitizer
AndroidDetectApiLevelStatic	sanitizer_common/sanitizer_linux.cpp	/^static AndroidApiLevel AndroidDetectApiLevelStatic() {$/;"	f	namespace:__sanitizer
AndroidGetApiLevel	sanitizer_common/sanitizer_common.h	/^inline AndroidApiLevel AndroidGetApiLevel() { return ANDROID_NOT_ANDROID; }$/;"	f	namespace:__sanitizer
AndroidGetApiLevel	sanitizer_common/sanitizer_linux.cpp	/^AndroidApiLevel AndroidGetApiLevel() {$/;"	f	namespace:__sanitizer
AndroidLogInit	sanitizer_common/sanitizer_common.h	/^inline void AndroidLogInit() {}$/;"	f	namespace:__sanitizer
AndroidLogInit	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void AndroidLogInit() {$/;"	f	namespace:__sanitizer
AndroidLogInit	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void AndroidLogInit() {}$/;"	f	namespace:__sanitizer
AndroidLogInit	sanitizer_common/sanitizer_win.cpp	/^void AndroidLogInit(void) {$/;"	f	namespace:__sanitizer
AndroidLogWrite	sanitizer_common/sanitizer_common.h	/^inline void AndroidLogWrite(const char *buffer_unused) {}$/;"	f	namespace:__sanitizer
AndroidTestTlsSlot	hwasan/hwasan_linux.cpp	/^void AndroidTestTlsSlot() {$/;"	f	namespace:__hwasan
AndroidTestTlsSlot	hwasan/hwasan_linux.cpp	/^void AndroidTestTlsSlot() {}$/;"	f	namespace:__hwasan
AnnotateBenignRace	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateBenignRace($/;"	f
AnnotateBenignRaceSized	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateBenignRaceSized($/;"	f
AnnotateCondVarSignal	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateCondVarSignal(char *f, int l, uptr cv) {$/;"	f
AnnotateCondVarSignalAll	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateCondVarSignalAll(char *f, int l, uptr cv) {$/;"	f
AnnotateCondVarWait	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateCondVarWait(char *f, int l, uptr cv,$/;"	f
AnnotateEnableRaceDetection	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateEnableRaceDetection($/;"	f
AnnotateExpectRace	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateExpectRace($/;"	f
AnnotateFlushExpectedRaces	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateFlushExpectedRaces(char *f, int l) {$/;"	f
AnnotateFlushState	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateFlushState(char *f, int l) {$/;"	f
AnnotateHappensAfter	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateHappensAfter(char *f, int l, uptr addr) {$/;"	f
AnnotateHappensBefore	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateHappensBefore(char *f, int l, uptr addr) {$/;"	f
AnnotateIgnoreReadsBegin	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreReadsBegin(char *f, int l) {$/;"	f
AnnotateIgnoreReadsEnd	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreReadsEnd(char *f, int l) {$/;"	f
AnnotateIgnoreSyncBegin	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreSyncBegin(char *f, int l) {$/;"	f
AnnotateIgnoreSyncEnd	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreSyncEnd(char *f, int l) {$/;"	f
AnnotateIgnoreWritesBegin	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreWritesBegin(char *f, int l) {$/;"	f
AnnotateIgnoreWritesEnd	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateIgnoreWritesEnd(char *f, int l) {$/;"	f
AnnotateMemoryIsInitialized	tsan/tsan_interface_ann.cpp	/^AnnotateMemoryIsInitialized(char *f, int l, uptr mem, uptr sz) {}$/;"	f
AnnotateMemoryIsUninitialized	tsan/tsan_interface_ann.cpp	/^AnnotateMemoryIsUninitialized(char *f, int l, uptr mem, uptr sz) {}$/;"	f
AnnotateMutexIsNotPHB	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateMutexIsNotPHB(char *f, int l, uptr mu) {$/;"	f
AnnotateMutexIsUsedAsCondVar	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateMutexIsUsedAsCondVar($/;"	f
AnnotateNewMemory	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateNewMemory(char *f, int l, uptr mem,$/;"	f
AnnotateNoOp	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateNoOp(char *f, int l, uptr mem) {$/;"	f
AnnotatePCQCreate	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotatePCQCreate($/;"	f
AnnotatePCQDestroy	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotatePCQDestroy($/;"	f
AnnotatePCQGet	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotatePCQGet($/;"	f
AnnotatePCQPut	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotatePCQPut($/;"	f
AnnotatePublishMemoryRange	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotatePublishMemoryRange($/;"	f
AnnotateRWLockAcquired	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateRWLockAcquired(char *f, int l, uptr m,$/;"	f
AnnotateRWLockCreate	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateRWLockCreate(char *f, int l, uptr m) {$/;"	f
AnnotateRWLockCreateStatic	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateRWLockCreateStatic(char *f, int l, uptr m) {$/;"	f
AnnotateRWLockDestroy	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateRWLockDestroy(char *f, int l, uptr m) {$/;"	f
AnnotateRWLockReleased	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateRWLockReleased(char *f, int l, uptr m,$/;"	f
AnnotateThreadName	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateThreadName($/;"	f
AnnotateTraceMemory	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateTraceMemory(char *f, int l, uptr mem) {$/;"	f
AnnotateUnpublishMemoryRange	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE AnnotateUnpublishMemoryRange($/;"	f
Announce	hwasan/hwasan_thread.h	/^  void Announce() {$/;"	f	class:__hwasan::Thread
AppMemBeg	tsan/tsan_platform.h	/^uptr AppMemBeg(void) {$/;"	f	namespace:__tsan
AppMemEnd	tsan/tsan_platform.h	/^uptr AppMemEnd(void) {$/;"	f	namespace:__tsan
Append	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^void SuspendedThreadsListLinux::Append(tid_t tid) {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
Append	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^void SuspendedThreadsListMac::Append(thread_t thread) {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
Append	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^void SuspendedThreadsListNetBSD::Append(tid_t tid) {$/;"	f	class:__sanitizer::SuspendedThreadsListNetBSD
AppendChar	sanitizer_common/sanitizer_printf.cpp	/^static int AppendChar(char **buff, const char *buff_end, char c) {$/;"	f	namespace:__sanitizer
AppendNumber	sanitizer_common/sanitizer_printf.cpp	/^static int AppendNumber(char **buff, const char *buff_end, u64 absolute_value,$/;"	f	namespace:__sanitizer
AppendPointer	sanitizer_common/sanitizer_printf.cpp	/^static int AppendPointer(char **buff, const char *buff_end, u64 ptr_value) {$/;"	f	namespace:__sanitizer
AppendSignedDecimal	sanitizer_common/sanitizer_printf.cpp	/^static int AppendSignedDecimal(char **buff, const char *buff_end, s64 num,$/;"	f	namespace:__sanitizer
AppendString	sanitizer_common/sanitizer_printf.cpp	/^static int AppendString(char **buff, const char *buff_end, int width,$/;"	f	namespace:__sanitizer
AppendToErrorMessageBuffer	asan/asan_report.cpp	/^void AppendToErrorMessageBuffer(const char *buffer) {$/;"	f	namespace:__asan
AppendToErrorMessageBuffer	hwasan/hwasan_report.cpp	/^void AppendToErrorMessageBuffer(const char *buffer) {$/;"	f	namespace:__hwasan
AppendUnsigned	sanitizer_common/sanitizer_printf.cpp	/^static int AppendUnsigned(char **buff, const char *buff_end, u64 num, u8 base,$/;"	f	namespace:__sanitizer
ApplySuppressions	lsan/lsan_common.cpp	/^void LeakReport::ApplySuppressions() {$/;"	f	class:__lsan::LeakReport
Arg	ubsan/ubsan_diag.h	/^    Arg() {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	ubsan/ubsan_diag.h	/^    Arg(FloatMax Float) : Kind(AK_Float), Float(Float) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	ubsan/ubsan_diag.h	/^    Arg(SIntMax SInt) : Kind(AK_SInt), SInt(SInt) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	ubsan/ubsan_diag.h	/^    Arg(TypeName TN) : Kind(AK_TypeName), String(TN.getName()) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	ubsan/ubsan_diag.h	/^    Arg(UIntMax UInt) : Kind(AK_UInt), UInt(UInt) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	ubsan/ubsan_diag.h	/^    Arg(const char *String) : Kind(AK_String), String(String) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	ubsan/ubsan_diag.h	/^    Arg(const void *Pointer) : Kind(AK_Pointer), Pointer(Pointer) {}$/;"	f	struct:__ubsan::Diag::Arg
Arg	ubsan/ubsan_diag.h	/^  struct Arg {$/;"	s	class:__ubsan::Diag
ArgIndex	ubsan/ubsan_handlers.h	/^  int ArgIndex;$/;"	m	struct:__ubsan::NonNullArgData
ArgKind	ubsan/ubsan_diag.h	/^  enum ArgKind {$/;"	g	class:__ubsan::Diag
Args	ubsan/ubsan_diag.h	/^  Arg Args[MaxArgs];$/;"	m	class:__ubsan::Diag
ArrayRef	sanitizer_common/sanitizer_common.h	/^  ArrayRef() {}$/;"	f	class:__sanitizer::ArrayRef
ArrayRef	sanitizer_common/sanitizer_common.h	/^  ArrayRef(T *begin, T *end) : begin_(begin), end_(end) {}$/;"	f	class:__sanitizer::ArrayRef
ArrayRef	sanitizer_common/sanitizer_common.h	/^class ArrayRef {$/;"	c	namespace:__sanitizer
ArrayType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ArrayType;$/;"	m	struct:__ubsan::OutOfBoundsData
AsGlobal	asan/asan_descriptions.h	/^  const GlobalAddressDescription *AsGlobal() const {$/;"	f	class:__asan::AddressDescription
AsHeap	asan/asan_descriptions.h	/^  const HeapAddressDescription *AsHeap() const {$/;"	f	class:__asan::AddressDescription
AsShadow	asan/asan_descriptions.h	/^  const ShadowAddressDescription *AsShadow() const {$/;"	f	class:__asan::AddressDescription
AsStack	asan/asan_descriptions.h	/^  const StackAddressDescription *AsStack() const {$/;"	f	class:__asan::AddressDescription
AsanActivate	asan/asan_activation.cpp	/^void AsanActivate() {$/;"	f	namespace:__asan
AsanApplyToGlobals	asan/asan_fuchsia.cpp	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	asan/asan_linux.cpp	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	asan/asan_mac.cpp	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	asan/asan_rtems.cpp	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanApplyToGlobals	asan/asan_win.cpp	/^void AsanApplyToGlobals(globals_op_fptr op, const void *needle) {$/;"	f	namespace:__asan
AsanBuggyPcPool	asan/asan_report.cpp	/^static __sanitizer::atomic_uintptr_t AsanBuggyPcPool[kAsanBuggyPcPoolSize];$/;"	m	namespace:__asan
AsanCheckDynamicRTPrereqs	asan/asan_fuchsia.cpp	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	asan/asan_linux.cpp	/^void AsanCheckDynamicRTPrereqs() {$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	asan/asan_linux.cpp	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	asan/asan_mac.cpp	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	asan/asan_rtems.cpp	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckDynamicRTPrereqs	asan/asan_win.cpp	/^void AsanCheckDynamicRTPrereqs() {}$/;"	f	namespace:__asan
AsanCheckFailed	asan/asan_rtl.cpp	/^static void AsanCheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	asan/asan_fuchsia.cpp	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	asan/asan_linux.cpp	/^void AsanCheckIncompatibleRT() {$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	asan/asan_linux.cpp	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	asan/asan_mac.cpp	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	asan/asan_rtems.cpp	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanCheckIncompatibleRT	asan/asan_win.cpp	/^void AsanCheckIncompatibleRT() {}$/;"	f	namespace:__asan
AsanChunk	asan/asan_allocator.cpp	/^class AsanChunk : public ChunkBase {$/;"	c	namespace:__asan
AsanChunkFifoList	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  AsanChunkFifoList() { clear(); }$/;"	f	class:__asan::AsanChunkFifoList
AsanChunkFifoList	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  explicit AsanChunkFifoList(LinkerInitialized) { }$/;"	f	class:__asan::AsanChunkFifoList
AsanChunkFifoList	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^class AsanChunkFifoList: public IntrusiveList<AsanChunk> {$/;"	c	namespace:__asan
AsanChunkFifoList	asan/asan_allocator.h	/^  AsanChunkFifoList() { clear(); }$/;"	f	class:__asan::AsanChunkFifoList
AsanChunkFifoList	asan/asan_allocator.h	/^  explicit AsanChunkFifoList(LinkerInitialized) { }$/;"	f	class:__asan::AsanChunkFifoList
AsanChunkFifoList	asan/asan_allocator.h	/^class AsanChunkFifoList: public IntrusiveList<AsanChunk> {$/;"	c	namespace:__asan
AsanChunkView	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  explicit AsanChunkView(AsanChunk *chunk) : chunk_(chunk) {}$/;"	f	class:__asan::AsanChunkView
AsanChunkView	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^class AsanChunkView {$/;"	c	namespace:__asan
AsanChunkView	asan/asan_allocator.h	/^  explicit AsanChunkView(AsanChunk *chunk) : chunk_(chunk) {}$/;"	f	class:__asan::AsanChunkView
AsanChunkView	asan/asan_allocator.h	/^class AsanChunkView {$/;"	c	namespace:__asan
AsanDeactivate	asan/asan_activation.cpp	/^void AsanDeactivate() {$/;"	f	namespace:__asan
AsanDeactivatedFlags	asan/asan_activation.cpp	/^static struct AsanDeactivatedFlags {$/;"	s	namespace:__asan
AsanDie	asan/asan_rtl.cpp	/^static void AsanDie() {$/;"	f	namespace:__asan
AsanDlSymNext	asan/asan_linux.cpp	/^void *AsanDlSymNext(const char *sym) {$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	asan/asan_fuchsia.cpp	/^void *AsanDoesNotSupportStaticLinkage() { return nullptr; }$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	asan/asan_linux.cpp	/^void *AsanDoesNotSupportStaticLinkage() {$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	asan/asan_mac.cpp	/^void *AsanDoesNotSupportStaticLinkage() {$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	asan/asan_rtems.cpp	/^void *AsanDoesNotSupportStaticLinkage() { return nullptr; }$/;"	f	namespace:__asan
AsanDoesNotSupportStaticLinkage	asan/asan_win.cpp	/^void *AsanDoesNotSupportStaticLinkage() {$/;"	f	namespace:__asan
AsanGetStack	asan/asan_debugging.cpp	/^uptr AsanGetStack(uptr addr, uptr *trace, u32 size, u32 *thread_id,$/;"	f	namespace:__anon68
AsanInitFromRtl	asan/asan_rtl.cpp	/^void AsanInitFromRtl() {$/;"	f	namespace:__asan
AsanInitInternal	asan/asan_rtl.cpp	/^static void AsanInitInternal() {$/;"	f	namespace:__asan
AsanInitializer	asan/asan_rtl.cpp	/^  AsanInitializer() {$/;"	f	class:__asan::AsanInitializer
AsanInitializer	asan/asan_rtl.cpp	/^class AsanInitializer {$/;"	c	namespace:__asan
AsanInterceptorContext	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	/^struct AsanInterceptorContext {$/;"	s	namespace:__asan
AsanInterceptorContext	asan/asan_interceptors_memintrinsics.h	/^struct AsanInterceptorContext {$/;"	s	namespace:__asan
AsanMallocStats	asan/asan_stats.h	/^struct AsanMallocStats {$/;"	s	namespace:__asan
AsanMapUnmapCallback	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^struct AsanMapUnmapCallback {$/;"	s	namespace:__asan
AsanMapUnmapCallback	asan/asan_allocator.h	/^struct AsanMapUnmapCallback {$/;"	s	namespace:__asan
AsanMappingProfile	asan/asan_rtl.cpp	/^uptr AsanMappingProfile[kAsanMappingProfileSize];$/;"	m	namespace:__asan
AsanOnDeadlySignal	asan/asan_fuchsia.cpp	/^void AsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__asan
AsanOnDeadlySignal	asan/asan_posix.cpp	/^void AsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__asan
AsanOnDeadlySignal	asan/asan_rtems.cpp	/^void AsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__asan
AsanOnDeadlySignal	asan/asan_win.cpp	/^void AsanOnDeadlySignal(int, void *siginfo, void *context) { UNIMPLEMENTED(); }$/;"	f	namespace:__asan
AsanPoisonOrUnpoisonIntraObjectRedzone	asan/asan_poisoning.cpp	/^void AsanPoisonOrUnpoisonIntraObjectRedzone(uptr ptr, uptr size, bool poison) {$/;"	f	namespace:__asan
AsanQuarantine	asan/asan_allocator.cpp	/^typedef Quarantine<QuarantineCallback, AsanChunk> AsanQuarantine;$/;"	t	namespace:__asan
AsanSoftRssLimitExceededCallback	asan/asan_allocator.cpp	/^void AsanSoftRssLimitExceededCallback(bool limit_exceeded) {$/;"	f	namespace:__asan
AsanStats	asan/asan_stats.cpp	/^AsanStats::AsanStats() {$/;"	f	class:__asan::AsanStats
AsanStats	asan/asan_stats.h	/^  explicit AsanStats(LinkerInitialized) { }$/;"	f	struct:__asan::AsanStats
AsanStats	asan/asan_stats.h	/^struct AsanStats {$/;"	s	namespace:__asan
AsanTSDGet	asan/asan_fuchsia.cpp	/^void *AsanTSDGet() { return per_thread; }$/;"	f	namespace:__asan
AsanTSDGet	asan/asan_posix.cpp	/^void *AsanTSDGet() {$/;"	f	namespace:__asan
AsanTSDGet	asan/asan_rtems.cpp	/^void *AsanTSDGet() { return per_thread; }$/;"	f	namespace:__asan
AsanTSDGet	asan/asan_win.cpp	/^void *AsanTSDGet() {$/;"	f	namespace:__asan
AsanTSDInit	asan/asan_fuchsia.cpp	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDInit	asan/asan_posix.cpp	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDInit	asan/asan_rtems.cpp	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDInit	asan/asan_win.cpp	/^void AsanTSDInit(void (*destructor)(void *tsd)) {$/;"	f	namespace:__asan
AsanTSDSet	asan/asan_fuchsia.cpp	/^void AsanTSDSet(void *tsd) { per_thread = tsd; }$/;"	f	namespace:__asan
AsanTSDSet	asan/asan_posix.cpp	/^void AsanTSDSet(void *tsd) {$/;"	f	namespace:__asan
AsanTSDSet	asan/asan_rtems.cpp	/^void AsanTSDSet(void *tsd) { per_thread = tsd; }$/;"	f	namespace:__asan
AsanTSDSet	asan/asan_win.cpp	/^void AsanTSDSet(void *tsd) {$/;"	f	namespace:__asan
AsanThread	asan/asan_thread.h	/^class AsanThread {$/;"	c	namespace:__asan
AsanThreadContext	asan/asan_thread.h	/^  explicit AsanThreadContext(int tid)$/;"	f	class:__asan::final
AsanThreadIdAndName	asan/asan_descriptions.cpp	/^AsanThreadIdAndName::AsanThreadIdAndName(AsanThreadContext *t) {$/;"	f	class:__asan::AsanThreadIdAndName
AsanThreadIdAndName	asan/asan_descriptions.cpp	/^AsanThreadIdAndName::AsanThreadIdAndName(u32 tid) {$/;"	f	class:__asan::AsanThreadIdAndName
AsanThreadIdAndName	asan/asan_descriptions.h	/^class AsanThreadIdAndName {$/;"	c	namespace:__asan
AsanThreadLocalMallocStorage	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  AsanThreadLocalMallocStorage() {}$/;"	f	struct:__asan::AsanThreadLocalMallocStorage
AsanThreadLocalMallocStorage	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^struct AsanThreadLocalMallocStorage {$/;"	s	namespace:__asan
AsanThreadLocalMallocStorage	asan/asan_allocator.h	/^  AsanThreadLocalMallocStorage() {}$/;"	f	struct:__asan::AsanThreadLocalMallocStorage
AsanThreadLocalMallocStorage	asan/asan_allocator.h	/^struct AsanThreadLocalMallocStorage {$/;"	s	namespace:__asan
AsanThreadMmapSize	asan/asan_fuchsia.cpp	/^static inline size_t AsanThreadMmapSize() {$/;"	f	namespace:__asan
AssumptionLoc	ubsan/ubsan_handlers.h	/^  SourceLocation AssumptionLoc;$/;"	m	struct:__ubsan::AlignmentAssumptionData
AsyncSignalSafeLazyInitFakeStack	asan/asan_thread.cpp	/^FakeStack *AsanThread::AsyncSignalSafeLazyInitFakeStack() {$/;"	f	class:__asan::AsanThread
At	tsan/tsan_ignoreset.cpp	/^u32 IgnoreSet::At(uptr i) const {$/;"	f	class:__tsan::IgnoreSet
AtCxaAtexit	asan/asan_interceptors.cpp	/^static void AtCxaAtexit(void *unused) {$/;"	f
AtExitCtx	tsan/tsan_interceptors_posix.cpp	/^struct AtExitCtx {$/;"	s	namespace:__tsan
AtExitStack	tsan/tsan_interceptors_posix.cpp	/^  Vector<struct AtExitCtx *> AtExitStack;$/;"	m	struct:__tsan::InterceptorContext
Atexit	sanitizer_common/sanitizer_fuchsia.cpp	/^int Atexit(void (*function)(void)) { return atexit(function); }$/;"	f	namespace:__sanitizer
Atexit	sanitizer_common/sanitizer_posix_libcdep.cpp	/^int Atexit(void (*function)(void)) {$/;"	f	namespace:__sanitizer
Atexit	sanitizer_common/sanitizer_rtems.cpp	/^int Atexit(void (*function)(void)) { return atexit(function); }$/;"	f	namespace:__sanitizer
Atexit	sanitizer_common/sanitizer_win.cpp	/^int Atexit(void (*function)(void)) {$/;"	f	namespace:__sanitizer
AtomicCAS	tsan/tsan_interface_atomic.cpp	/^static T AtomicCAS(ThreadState *thr, uptr pc,$/;"	f
AtomicCAS	tsan/tsan_interface_atomic.cpp	/^static bool AtomicCAS(ThreadState *thr, uptr pc,$/;"	f
AtomicContextLoad	asan/asan_allocator.cpp	/^static void AtomicContextLoad(const volatile atomic_uint64_t *atomic_context,$/;"	f	namespace:__asan
AtomicContextStore	asan/asan_allocator.cpp	/^static void AtomicContextStore(volatile atomic_uint64_t *atomic_context,$/;"	f	namespace:__asan
AtomicExchange	tsan/tsan_interface_atomic.cpp	/^static T AtomicExchange(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicFence	tsan/tsan_interface_atomic.cpp	/^static void AtomicFence(ThreadState *thr, uptr pc, morder mo) {$/;"	f
AtomicFetchAdd	tsan/tsan_interface_atomic.cpp	/^static T AtomicFetchAdd(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicFetchAnd	tsan/tsan_interface_atomic.cpp	/^static T AtomicFetchAnd(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicFetchNand	tsan/tsan_interface_atomic.cpp	/^static T AtomicFetchNand(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicFetchOr	tsan/tsan_interface_atomic.cpp	/^static T AtomicFetchOr(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicFetchSub	tsan/tsan_interface_atomic.cpp	/^static T AtomicFetchSub(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicFetchXor	tsan/tsan_interface_atomic.cpp	/^static T AtomicFetchXor(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicLoad	tsan/tsan_interface_atomic.cpp	/^static T AtomicLoad(ThreadState *thr, uptr pc, const volatile T *a, morder mo) {$/;"	f
AtomicRMW	tsan/tsan_interface_atomic.cpp	/^static T AtomicRMW(ThreadState *thr, uptr pc, volatile T *a, T v, morder mo) {$/;"	f
AtomicStatInc	tsan/tsan_interface_atomic.cpp	/^static void AtomicStatInc(ThreadState *thr, uptr size, morder mo, StatType t) {$/;"	f
AtomicStore	tsan/tsan_interface_atomic.cpp	/^static void AtomicStore(ThreadState *thr, uptr pc, volatile T *a, T v,$/;"	f
AtomicallySetQuarantineFlagIfAllocated	asan/asan_allocator.cpp	/^  bool AtomicallySetQuarantineFlagIfAllocated(AsanChunk *m, void *ptr,$/;"	f	struct:__asan::Allocator
AtosSymbolizer	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^AtosSymbolizer::AtosSymbolizer(const char *path, LowLevelAllocator *allocator)$/;"	f	class:__sanitizer::AtosSymbolizer
AtosSymbolizerProcess	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^  explicit AtosSymbolizerProcess(const char *path)$/;"	f	class:__sanitizer::final
AttrLoc	ubsan/ubsan_handlers.h	/^  SourceLocation AttrLoc;$/;"	m	struct:__ubsan::NonNullArgData
AttrLoc	ubsan/ubsan_handlers.h	/^  SourceLocation AttrLoc;$/;"	m	struct:__ubsan::NonNullReturnData
AvoidCVE_2016_2143	sanitizer_common/sanitizer_common.h	/^inline void AvoidCVE_2016_2143() {}$/;"	f	namespace:__sanitizer
AvoidCVE_2016_2143	sanitizer_common/sanitizer_linux_s390.cpp	/^void AvoidCVE_2016_2143() {$/;"	f	namespace:__sanitizer
BLOCK_REAL	tsan/tsan_interceptors_posix.cpp	323;"	d
BLX	sanitizer_common/sanitizer_linux.cpp	1633;"	d
BOOL	asan/asan_malloc_win.cpp	/^typedef int BOOL;$/;"	t
BUILTIN_UNREACHABLE	sanitizer_common/sanitizer_win.cpp	52;"	d
BUILTIN_UNREACHABLE	sanitizer_common/sanitizer_win.cpp	55;"	d
BUILTIN_UNREACHABLE	sanitizer_common/sanitizer_win.cpp	57;"	d
BUILTIN_UNREACHABLE	sanitizer_common/sanitizer_win.cpp	59;"	d
BVGraph	sanitizer_common/sanitizer_bvgraph.h	/^class BVGraph {$/;"	c	namespace:__sanitizer
BackgroundThread	sanitizer_common/sanitizer_common_libcdep.cpp	/^void *BackgroundThread(void *arg) {$/;"	f	namespace:__sanitizer
BackgroundThread	tsan/tsan_rtl.cpp	/^static void *BackgroundThread(void *arg) {$/;"	f	namespace:__tsan
Backoff	tsan/tsan_mutex.cpp	/^  Backoff()$/;"	f	class:__tsan::Backoff
Backoff	tsan/tsan_mutex.cpp	/^class Backoff {$/;"	c	namespace:__tsan
Base	asan/asan_errors.h	/^    ErrorBase Base;$/;"	m	union:__asan::ErrorDescription::__anon75
BasicBitVector	sanitizer_common/sanitizer_bitvector.h	/^class BasicBitVector {$/;"	c	namespace:__sanitizer
BeforeFork	hwasan/hwasan_interceptors.cpp	/^static void BeforeFork() {$/;"	f
BeforeThreadCreateHook	asan/asan_fuchsia.cpp	/^static void *BeforeThreadCreateHook(uptr user_id, bool detached,$/;"	f	namespace:__asan
BeforeThreadCreateHook	asan/asan_rtems.cpp	/^static void *BeforeThreadCreateHook(uptr user_id, bool detached,$/;"	f	namespace:__asan
Beg	asan/asan_allocator.cpp	/^  uptr Beg() { return reinterpret_cast<uptr>(this) + kChunkHeaderSize; }$/;"	f	class:__asan::AsanChunk
Beg	asan/asan_allocator.cpp	/^uptr AsanChunkView::Beg() const { return chunk_->Beg(); }$/;"	f	class:__asan::AsanChunkView
Beg	hwasan/hwasan_allocator.cpp	/^uptr HwasanChunkView::Beg() const {$/;"	f	class:__hwasan::HwasanChunkView
BenignRaceImpl	tsan/tsan_interface_ann.cpp	/^static void BenignRaceImpl($/;"	f
BitVector	sanitizer_common/sanitizer_deadlock_detector.h	/^  typedef BV BitVector;$/;"	t	class:__sanitizer::DeadlockDetector
Black	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Black()   const { return ansi_ ? "\\033[1m\\033[30m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
BlockHeader	sanitizer_common/sanitizer_allocator.cpp	/^struct BlockHeader {$/;"	s	namespace:__sanitizer::__anon14
BlockingCall	tsan/tsan_interceptors_posix.cpp	/^  explicit BlockingCall(ThreadState *thr)$/;"	f	struct:BlockingCall
BlockingCall	tsan/tsan_interceptors_posix.cpp	/^struct BlockingCall {$/;"	s
BlockingMutex	sanitizer_common/sanitizer_fuchsia.cpp	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	sanitizer_common/sanitizer_linux.cpp	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	sanitizer_common/sanitizer_mac.cpp	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	sanitizer_common/sanitizer_mutex.h	/^  explicit constexpr BlockingMutex(LinkerInitialized)$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	sanitizer_common/sanitizer_mutex.h	/^class BlockingMutex {$/;"	c	namespace:__sanitizer
BlockingMutex	sanitizer_common/sanitizer_rtems.cpp	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	sanitizer_common/sanitizer_solaris.cpp	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutex	sanitizer_common/sanitizer_win.cpp	/^BlockingMutex::BlockingMutex() {$/;"	f	class:__sanitizer::BlockingMutex
BlockingMutexLock	sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedLock<BlockingMutex> BlockingMutexLock;$/;"	t	namespace:__sanitizer
Blue	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Blue()    const { return ansi_ ? "\\033[1m\\033[34m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
Bold	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Bold() const { return ansi_ ? "\\033[1m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
Bottom	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  void *Bottom() const {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
Bottom	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  void *Bottom() const {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
Bucket	sanitizer_common/sanitizer_addrhashmap.h	/^  struct Bucket {$/;"	s	class:__sanitizer::AddrHashMap
Buffer	ubsan/ubsan_monitor.h	/^  InternalScopedString Buffer;$/;"	m	struct:__ubsan::UndefinedBehaviorReport
BufferedStackTrace	sanitizer_common/sanitizer_stacktrace.h	/^  BufferedStackTrace() : StackTrace(trace_buffer, 0), top_frame_bp(0) {}$/;"	f	struct:__sanitizer::BufferedStackTrace
BufferedStackTrace	sanitizer_common/sanitizer_stacktrace.h	/^struct BufferedStackTrace : public StackTrace {$/;"	s	namespace:__sanitizer
BytesInSizeClass	asan/asan_fake_stack.h	/^  static uptr BytesInSizeClass(uptr class_id) {$/;"	f	class:__asan::FakeStack
CALLERPC	tsan/tsan_external.cpp	18;"	d
CALLERPC	tsan/tsan_interface.cpp	19;"	d
CALLERPC	tsan/tsan_interface_ann.cpp	25;"	d
CALLERPC	tsan/tsan_interface_inl.h	17;"	d
CAN_SANITIZE_LEAKS	lsan/lsan_common.h	35;"	d
CAN_SANITIZE_LEAKS	lsan/lsan_common.h	39;"	d
CAN_SANITIZE_LEAKS	lsan/lsan_common.h	41;"	d
CAN_SANITIZE_LEAKS	lsan/lsan_common.h	43;"	d
CAN_SANITIZE_LEAKS	lsan/lsan_common.h	45;"	d
CAN_SANITIZE_LEAKS	lsan/lsan_common.h	47;"	d
CAN_SANITIZE_UB	ubsan/ubsan_platform.h	21;"	d
CAN_SANITIZE_UB	ubsan/ubsan_platform.h	23;"	d
CFIBadIcallData	ubsan/ubsan_handlers.h	/^struct CFIBadIcallData {$/;"	s	namespace:__ubsan
CFICheckFailData	ubsan/ubsan_handlers.h	/^struct CFICheckFailData {$/;"	s	namespace:__ubsan
CFI_ADJUST_CFA_OFFSET	sanitizer_common/sanitizer_asm.h	24;"	d
CFI_ADJUST_CFA_OFFSET	sanitizer_common/sanitizer_asm.h	36;"	d
CFI_DEF_CFA	sanitizer_common/sanitizer_asm.h	29;"	d
CFI_DEF_CFA	sanitizer_common/sanitizer_asm.h	41;"	d
CFI_DEF_CFA_OFFSET	sanitizer_common/sanitizer_asm.h	25;"	d
CFI_DEF_CFA_OFFSET	sanitizer_common/sanitizer_asm.h	37;"	d
CFI_DEF_CFA_REGISTER	sanitizer_common/sanitizer_asm.h	28;"	d
CFI_DEF_CFA_REGISTER	sanitizer_common/sanitizer_asm.h	40;"	d
CFI_ENDPROC	sanitizer_common/sanitizer_asm.h	23;"	d
CFI_ENDPROC	sanitizer_common/sanitizer_asm.h	35;"	d
CFI_INL_ADJUST_CFA_OFFSET	sanitizer_common/sanitizer_asm.h	20;"	d
CFI_INL_ADJUST_CFA_OFFSET	sanitizer_common/sanitizer_asm.h	33;"	d
CFI_OFFSET	sanitizer_common/sanitizer_asm.h	27;"	d
CFI_OFFSET	sanitizer_common/sanitizer_asm.h	39;"	d
CFI_REL_OFFSET	sanitizer_common/sanitizer_asm.h	26;"	d
CFI_REL_OFFSET	sanitizer_common/sanitizer_asm.h	38;"	d
CFI_RESTORE	sanitizer_common/sanitizer_asm.h	30;"	d
CFI_RESTORE	sanitizer_common/sanitizer_asm.h	42;"	d
CFI_STARTPROC	sanitizer_common/sanitizer_asm.h	22;"	d
CFI_STARTPROC	sanitizer_common/sanitizer_asm.h	34;"	d
CHECK	sanitizer_common/sanitizer_internal_defs.h	299;"	d
CHECK_EQ	sanitizer_common/sanitizer_internal_defs.h	300;"	d
CHECK_GE	sanitizer_common/sanitizer_internal_defs.h	305;"	d
CHECK_GET_TLS_STATIC_INFO_VERSION	sanitizer_common/sanitizer_linux_libcdep.cpp	191;"	d
CHECK_GET_TLS_STATIC_INFO_VERSION	sanitizer_common/sanitizer_linux_libcdep.cpp	193;"	d
CHECK_GT	sanitizer_common/sanitizer_internal_defs.h	304;"	d
CHECK_IMPL	sanitizer_common/sanitizer_internal_defs.h	289;"	d
CHECK_LE	sanitizer_common/sanitizer_internal_defs.h	303;"	d
CHECK_LT	sanitizer_common/sanitizer_internal_defs.h	302;"	d
CHECK_NE	sanitizer_common/sanitizer_internal_defs.h	301;"	d
CHECK_NEEDED_LENGTH	sanitizer_common/sanitizer_printf.cpp	266;"	d
CHECK_NEEDED_LENGTH	sanitizer_common/sanitizer_printf.cpp	291;"	d
CHECK_RANGES_OVERLAP	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	135;"	d
CHECK_RANGES_OVERLAP	asan/asan_interceptors_memintrinsics.h	135;"	d
CHECK_SIZE_AND_OFFSET	sanitizer_common/sanitizer_platform_limits_freebsd.h	638;"	d
CHECK_SIZE_AND_OFFSET	sanitizer_common/sanitizer_platform_limits_netbsd.h	2399;"	d
CHECK_SIZE_AND_OFFSET	sanitizer_common/sanitizer_platform_limits_solaris.h	479;"	d
CHECK_SMALL_REGION	asan/asan_poisoning.cpp	210;"	d
CHECK_STRUCT_SIZE_AND_OFFSET	sanitizer_common/sanitizer_platform_limits_freebsd.h	646;"	d
CHECK_STRUCT_SIZE_AND_OFFSET	sanitizer_common/sanitizer_platform_limits_netbsd.h	2407;"	d
CHECK_STRUCT_SIZE_AND_OFFSET	sanitizer_common/sanitizer_platform_limits_solaris.h	487;"	d
CHECK_TYPE_SIZE	sanitizer_common/sanitizer_platform_limits_freebsd.h	635;"	d
CHECK_TYPE_SIZE	sanitizer_common/sanitizer_platform_limits_netbsd.h	2396;"	d
CHECK_TYPE_SIZE	sanitizer_common/sanitizer_platform_limits_solaris.h	476;"	d
CHECK_TYPE_SIZE_FITS	hwasan/hwasan_type_test.cpp	19;"	d
CHUNK_ALLOCATED	asan/asan_allocator.cpp	/^  CHUNK_ALLOCATED = 2,$/;"	e	enum:__asan::__anon67
CHUNK_INVALID	asan/asan_allocator.cpp	/^  CHUNK_INVALID = 0,$/;"	e	enum:__asan::__anon67
CHUNK_QUARANTINE	asan/asan_allocator.cpp	/^  CHUNK_QUARANTINE = 3,$/;"	e	enum:__asan::__anon67
COMMENT_EXPORT	asan/asan_new_delete.cpp	30;"	d
COMMENT_EXPORT	asan/asan_new_delete.cpp	46;"	d
COMMON_ACTIVATION_FLAG	asan/asan_activation.cpp	36;"	d
COMMON_ACTIVATION_FLAG	asan/asan_activation.cpp	40;"	d
COMMON_FLAG	sanitizer_common/sanitizer_flags.cpp	116;"	d
COMMON_FLAG	sanitizer_common/sanitizer_flags.cpp	119;"	d
COMMON_FLAG	sanitizer_common/sanitizer_flags.cpp	26;"	d
COMMON_FLAG	sanitizer_common/sanitizer_flags.cpp	28;"	d
COMMON_FLAG	sanitizer_common/sanitizer_flags.h	27;"	d
COMMON_FLAG	sanitizer_common/sanitizer_flags.h	29;"	d
COMMON_INTERCEPTOR_ACQUIRE	tsan/tsan_interceptors_posix.cpp	2277;"	d
COMMON_INTERCEPTOR_BLOCK_REAL	asan/asan_interceptors.cpp	130;"	d
COMMON_INTERCEPTOR_BLOCK_REAL	tsan/tsan_interceptors_posix.cpp	2304;"	d
COMMON_INTERCEPTOR_DIR_ACQUIRE	asan/asan_interceptors.cpp	110;"	d
COMMON_INTERCEPTOR_DIR_ACQUIRE	tsan/tsan_interceptors_posix.cpp	2283;"	d
COMMON_INTERCEPTOR_ENTER	asan/asan_interceptors.cpp	101;"	d
COMMON_INTERCEPTOR_ENTER	tsan/tsan_interceptors_posix.cpp	2245;"	d
COMMON_INTERCEPTOR_ENTER_NOIGNORE	tsan/tsan_interceptors_posix.cpp	2251;"	d
COMMON_INTERCEPTOR_FD_ACCESS	tsan/tsan_interceptors_posix.cpp	2292;"	d
COMMON_INTERCEPTOR_FD_ACQUIRE	asan/asan_interceptors.cpp	113;"	d
COMMON_INTERCEPTOR_FD_ACQUIRE	tsan/tsan_interceptors_posix.cpp	2286;"	d
COMMON_INTERCEPTOR_FD_RELEASE	asan/asan_interceptors.cpp	116;"	d
COMMON_INTERCEPTOR_FD_RELEASE	tsan/tsan_interceptors_posix.cpp	2289;"	d
COMMON_INTERCEPTOR_FD_SOCKET_ACCEPT	asan/asan_interceptors.cpp	119;"	d
COMMON_INTERCEPTOR_FD_SOCKET_ACCEPT	tsan/tsan_interceptors_posix.cpp	2295;"	d
COMMON_INTERCEPTOR_FILE_CLOSE	tsan/tsan_interceptors_posix.cpp	2265;"	d
COMMON_INTERCEPTOR_FILE_OPEN	tsan/tsan_interceptors_posix.cpp	2257;"	d
COMMON_INTERCEPTOR_GET_TLS_RANGE	asan/asan_interceptors.cpp	143;"	d
COMMON_INTERCEPTOR_GET_TLS_RANGE	tsan/tsan_interceptors_posix.cpp	2342;"	d
COMMON_INTERCEPTOR_HANDLE_RECVMSG	tsan/tsan_interceptors_posix.cpp	2337;"	d
COMMON_INTERCEPTOR_HANDLE_VFORK	asan/asan_interceptors_vfork.S	/^#define COMMON_INTERCEPTOR_HANDLE_VFORK __asan_handle_vfork$/;"	d
COMMON_INTERCEPTOR_HANDLE_VFORK	hwasan/hwasan_interceptors_vfork.S	/^#define COMMON_INTERCEPTOR_HANDLE_VFORK __hwasan_handle_vfork$/;"	d
COMMON_INTERCEPTOR_LIBRARY_LOADED	asan/asan_interceptors.cpp	140;"	d
COMMON_INTERCEPTOR_LIBRARY_LOADED	tsan/tsan_interceptors_posix.cpp	2271;"	d
COMMON_INTERCEPTOR_LIBRARY_UNLOADED	asan/asan_interceptors.cpp	141;"	d
COMMON_INTERCEPTOR_LIBRARY_UNLOADED	tsan/tsan_interceptors_posix.cpp	2274;"	d
COMMON_INTERCEPTOR_MEMCPY_IMPL	asan/asan_interceptors.cpp	157;"	d
COMMON_INTERCEPTOR_MEMMOVE_IMPL	asan/asan_interceptors.cpp	151;"	d
COMMON_INTERCEPTOR_MEMSET_IMPL	asan/asan_interceptors.cpp	163;"	d
COMMON_INTERCEPTOR_MMAP_IMPL	tsan/tsan_interceptors_posix.cpp	2329;"	d
COMMON_INTERCEPTOR_MUTEX_INVALID	tsan/tsan_interceptors_posix.cpp	2325;"	d
COMMON_INTERCEPTOR_MUTEX_POST_LOCK	tsan/tsan_interceptors_posix.cpp	2313;"	d
COMMON_INTERCEPTOR_MUTEX_PRE_LOCK	tsan/tsan_interceptors_posix.cpp	2309;"	d
COMMON_INTERCEPTOR_MUTEX_REPAIR	tsan/tsan_interceptors_posix.cpp	2321;"	d
COMMON_INTERCEPTOR_MUTEX_UNLOCK	tsan/tsan_interceptors_posix.cpp	2317;"	d
COMMON_INTERCEPTOR_NOTHING_IS_INITIALIZED	asan/asan_interceptors.cpp	142;"	d
COMMON_INTERCEPTOR_NOTHING_IS_INITIALIZED	tsan/tsan_interceptors_posix.cpp	161;"	d
COMMON_INTERCEPTOR_ON_DLOPEN	asan/asan_interceptors.cpp	133;"	d
COMMON_INTERCEPTOR_ON_EXIT	asan/asan_interceptors.cpp	139;"	d
COMMON_INTERCEPTOR_ON_EXIT	tsan/tsan_interceptors_posix.cpp	2306;"	d
COMMON_INTERCEPTOR_READ_RANGE	asan/asan_interceptors.cpp	99;"	d
COMMON_INTERCEPTOR_READ_RANGE	tsan/tsan_interceptors_posix.cpp	2240;"	d
COMMON_INTERCEPTOR_RELEASE	tsan/tsan_interceptors_posix.cpp	2280;"	d
COMMON_INTERCEPTOR_SET_PTHREAD_NAME	asan/asan_interceptors.cpp	127;"	d
COMMON_INTERCEPTOR_SET_PTHREAD_NAME	tsan/tsan_interceptors_posix.cpp	2301;"	d
COMMON_INTERCEPTOR_SET_THREAD_NAME	asan/asan_interceptors.cpp	122;"	d
COMMON_INTERCEPTOR_SET_THREAD_NAME	tsan/tsan_interceptors_posix.cpp	2298;"	d
COMMON_INTERCEPTOR_SPILL_AREA	asan/asan_interceptors_vfork.S	/^#define COMMON_INTERCEPTOR_SPILL_AREA __asan_extra_spill_area$/;"	d
COMMON_INTERCEPTOR_SPILL_AREA	hwasan/hwasan_interceptors_vfork.S	/^#define COMMON_INTERCEPTOR_SPILL_AREA __hwasan_extra_spill_area$/;"	d
COMMON_INTERCEPTOR_STRERROR	asan/asan_interceptors.cpp	170;"	d
COMMON_INTERCEPTOR_USER_CALLBACK_END	tsan/tsan_interceptors_posix.cpp	2353;"	d
COMMON_INTERCEPTOR_USER_CALLBACK_START	tsan/tsan_interceptors_posix.cpp	2350;"	d
COMMON_INTERCEPTOR_WRITE_RANGE	asan/asan_interceptors.cpp	97;"	d
COMMON_INTERCEPTOR_WRITE_RANGE	tsan/tsan_interceptors_posix.cpp	2235;"	d
COMMON_INTERCEPT_FUNCTION	asan/asan_interceptors.cpp	92;"	d
COMMON_INTERCEPT_FUNCTION	lsan/lsan_interceptors.cpp	506;"	d
COMMON_INTERCEPT_FUNCTION	tsan/tsan_interceptors_posix.cpp	2229;"	d
COMMON_INTERCEPT_FUNCTION_VER	asan/asan_interceptors.cpp	93;"	d
COMMON_INTERCEPT_FUNCTION_VER	tsan/tsan_interceptors_posix.cpp	2230;"	d
COMMON_INTERCEPT_FUNCTION_VER_UNVERSIONED_FALLBACK	asan/asan_interceptors.cpp	95;"	d
COMMON_INTERCEPT_FUNCTION_VER_UNVERSIONED_FALLBACK	tsan/tsan_interceptors_posix.cpp	2232;"	d
COMMON_MALLOC_CALLOC	asan/asan_malloc_mac.cpp	38;"	d
COMMON_MALLOC_CALLOC	lsan/lsan_malloc_mac.cpp	36;"	d
COMMON_MALLOC_CALLOC	tsan/tsan_malloc_mac.cpp	38;"	d
COMMON_MALLOC_ENTER	asan/asan_malloc_mac.cpp	25;"	d
COMMON_MALLOC_ENTER	lsan/lsan_malloc_mac.cpp	23;"	d
COMMON_MALLOC_ENTER	tsan/tsan_malloc_mac.cpp	23;"	d
COMMON_MALLOC_FILL_STATS	asan/asan_malloc_mac.cpp	52;"	d
COMMON_MALLOC_FILL_STATS	lsan/lsan_malloc_mac.cpp	49;"	d
COMMON_MALLOC_FILL_STATS	tsan/tsan_malloc_mac.cpp	61;"	d
COMMON_MALLOC_FORCE_LOCK	asan/asan_malloc_mac.cpp	27;"	d
COMMON_MALLOC_FORCE_LOCK	lsan/lsan_malloc_mac.cpp	25;"	d
COMMON_MALLOC_FORCE_LOCK	tsan/tsan_malloc_mac.cpp	25;"	d
COMMON_MALLOC_FORCE_UNLOCK	asan/asan_malloc_mac.cpp	28;"	d
COMMON_MALLOC_FORCE_UNLOCK	lsan/lsan_malloc_mac.cpp	26;"	d
COMMON_MALLOC_FORCE_UNLOCK	tsan/tsan_malloc_mac.cpp	26;"	d
COMMON_MALLOC_FREE	asan/asan_malloc_mac.cpp	47;"	d
COMMON_MALLOC_FREE	lsan/lsan_malloc_mac.cpp	45;"	d
COMMON_MALLOC_FREE	tsan/tsan_malloc_mac.cpp	56;"	d
COMMON_MALLOC_HAS_EXTRA_INTROSPECTION_INIT	asan/asan_malloc_mac.cpp	62;"	d
COMMON_MALLOC_HAS_EXTRA_INTROSPECTION_INIT	lsan/lsan_malloc_mac.cpp	55;"	d
COMMON_MALLOC_HAS_EXTRA_INTROSPECTION_INIT	tsan/tsan_malloc_mac.cpp	67;"	d
COMMON_MALLOC_HAS_ZONE_ENUMERATOR	asan/asan_malloc_mac.cpp	61;"	d
COMMON_MALLOC_HAS_ZONE_ENUMERATOR	lsan/lsan_malloc_mac.cpp	54;"	d
COMMON_MALLOC_HAS_ZONE_ENUMERATOR	tsan/tsan_malloc_mac.cpp	66;"	d
COMMON_MALLOC_MALLOC	asan/asan_malloc_mac.cpp	32;"	d
COMMON_MALLOC_MALLOC	lsan/lsan_malloc_mac.cpp	30;"	d
COMMON_MALLOC_MALLOC	tsan/tsan_malloc_mac.cpp	30;"	d
COMMON_MALLOC_MEMALIGN	asan/asan_malloc_mac.cpp	29;"	d
COMMON_MALLOC_MEMALIGN	lsan/lsan_malloc_mac.cpp	27;"	d
COMMON_MALLOC_MEMALIGN	tsan/tsan_malloc_mac.cpp	27;"	d
COMMON_MALLOC_NAMESPACE	asan/asan_malloc_mac.cpp	/^namespace COMMON_MALLOC_NAMESPACE {$/;"	n
COMMON_MALLOC_NAMESPACE	asan/asan_malloc_mac.cpp	60;"	d
COMMON_MALLOC_NAMESPACE	lsan/lsan_malloc_mac.cpp	53;"	d
COMMON_MALLOC_NAMESPACE	tsan/tsan_malloc_mac.cpp	65;"	d
COMMON_MALLOC_POSIX_MEMALIGN	asan/asan_malloc_mac.cpp	41;"	d
COMMON_MALLOC_POSIX_MEMALIGN	lsan/lsan_malloc_mac.cpp	39;"	d
COMMON_MALLOC_POSIX_MEMALIGN	tsan/tsan_malloc_mac.cpp	42;"	d
COMMON_MALLOC_REALLOC	asan/asan_malloc_mac.cpp	35;"	d
COMMON_MALLOC_REALLOC	lsan/lsan_malloc_mac.cpp	33;"	d
COMMON_MALLOC_REALLOC	tsan/tsan_malloc_mac.cpp	34;"	d
COMMON_MALLOC_REPORT_UNKNOWN_REALLOC	asan/asan_malloc_mac.cpp	57;"	d
COMMON_MALLOC_REPORT_UNKNOWN_REALLOC	lsan/lsan_malloc_mac.cpp	50;"	d
COMMON_MALLOC_REPORT_UNKNOWN_REALLOC	tsan/tsan_malloc_mac.cpp	62;"	d
COMMON_MALLOC_SANITIZER_INITIALIZED	asan/asan_malloc_mac.cpp	26;"	d
COMMON_MALLOC_SANITIZER_INITIALIZED	lsan/lsan_malloc_mac.cpp	24;"	d
COMMON_MALLOC_SANITIZER_INITIALIZED	tsan/tsan_malloc_mac.cpp	24;"	d
COMMON_MALLOC_SIZE	asan/asan_malloc_mac.cpp	50;"	d
COMMON_MALLOC_SIZE	lsan/lsan_malloc_mac.cpp	47;"	d
COMMON_MALLOC_SIZE	tsan/tsan_malloc_mac.cpp	60;"	d
COMMON_MALLOC_VALLOC	asan/asan_malloc_mac.cpp	44;"	d
COMMON_MALLOC_VALLOC	lsan/lsan_malloc_mac.cpp	42;"	d
COMMON_MALLOC_VALLOC	tsan/tsan_malloc_mac.cpp	51;"	d
COMMON_MALLOC_ZONE_NAME	asan/asan_malloc_mac.cpp	24;"	d
COMMON_MALLOC_ZONE_NAME	lsan/lsan_malloc_mac.cpp	22;"	d
COMMON_MALLOC_ZONE_NAME	tsan/tsan_malloc_mac.cpp	22;"	d
COMMON_SYSCALL_ACQUIRE	tsan/tsan_interceptors_posix.cpp	2523;"	d
COMMON_SYSCALL_FD_ACQUIRE	tsan/tsan_interceptors_posix.cpp	2531;"	d
COMMON_SYSCALL_FD_CLOSE	tsan/tsan_interceptors_posix.cpp	2529;"	d
COMMON_SYSCALL_FD_RELEASE	tsan/tsan_interceptors_posix.cpp	2533;"	d
COMMON_SYSCALL_POST_FORK	tsan/tsan_interceptors_posix.cpp	2538;"	d
COMMON_SYSCALL_POST_READ_RANGE	asan/asan_interceptors.cpp	181;"	d
COMMON_SYSCALL_POST_READ_RANGE	tsan/tsan_interceptors_posix.cpp	2511;"	d
COMMON_SYSCALL_POST_WRITE_RANGE	asan/asan_interceptors.cpp	186;"	d
COMMON_SYSCALL_POST_WRITE_RANGE	tsan/tsan_interceptors_posix.cpp	2517;"	d
COMMON_SYSCALL_PRE_FORK	tsan/tsan_interceptors_posix.cpp	2535;"	d
COMMON_SYSCALL_PRE_READ_RANGE	asan/asan_interceptors.cpp	179;"	d
COMMON_SYSCALL_PRE_READ_RANGE	tsan/tsan_interceptors_posix.cpp	2505;"	d
COMMON_SYSCALL_PRE_WRITE_RANGE	asan/asan_interceptors.cpp	180;"	d
COMMON_SYSCALL_PRE_WRITE_RANGE	tsan/tsan_interceptors_posix.cpp	2508;"	d
COMMON_SYSCALL_RELEASE	tsan/tsan_interceptors_posix.cpp	2526;"	d
COMPILERRT_ASSEMBLY_H	builtins/assembly.h	15;"	d
COMPILER_CHECK	sanitizer_common/sanitizer_internal_defs.h	332;"	d
CONST_SECTION	builtins/assembly.h	29;"	d
CONST_SECTION	builtins/assembly.h	43;"	d
CONST_SECTION	builtins/assembly.h	62;"	d
CPP_STAT_INC	tsan/tsan_clock.cpp	86;"	d
CPP_STAT_INC	tsan/tsan_clock.cpp	88;"	d
CPU_SUBTYPE_ARM_V7K	sanitizer_common/sanitizer_procmaps_mac.cpp	30;"	d
CPU_SUBTYPE_ARM_V7S	sanitizer_common/sanitizer_procmaps_mac.cpp	27;"	d
CPU_SUBTYPE_X86_64_H	sanitizer_common/sanitizer_procmaps_mac.cpp	24;"	d
CPU_TYPE_ARM64	sanitizer_common/sanitizer_procmaps_mac.cpp	33;"	d
CRAppendCrashLogMessage	sanitizer_common/sanitizer_mac.h	/^inline void CRAppendCrashLogMessage(const char *msg) {$/;"	f	namespace:__sanitizer
CXX_OPERATOR_ATTRIBUTE	asan/asan_new_delete.cpp	29;"	d
Cachable	tsan/tsan_clock.cpp	/^ALWAYS_INLINE bool SyncClock::Cachable() const {$/;"	f	class:__tsan::SyncClock
Cache	sanitizer_common/sanitizer_quarantine.h	/^  typedef QuarantineCache<Callback> Cache;$/;"	t	class:__sanitizer::Quarantine
Cache	tsan/tsan_dense_alloc.h	/^  typedef DenseSlabAllocCache Cache;$/;"	t	class:__tsan::DenseSlabAlloc
CacheBinaryName	sanitizer_common/sanitizer_common.cpp	/^void CacheBinaryName() {$/;"	f	namespace:__sanitizer
CacheMemoryMappings	sanitizer_common/sanitizer_procmaps_common.cpp	/^void MemoryMappingLayout::CacheMemoryMappings() {$/;"	f	class:__sanitizer::MemoryMappingLayout
CacheMemoryMappings	sanitizer_common/sanitizer_procmaps_mac.cpp	/^void MemoryMappingLayout::CacheMemoryMappings() {$/;"	f	class:__sanitizer::MemoryMappingLayout
CallGetTls	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void CallGetTls(void* ptr, size_t* size, size_t* align) {$/;"	f	namespace:__sanitizer::__anon7
CallPrintfAndReportCallback	sanitizer_common/sanitizer_printf.cpp	/^static void CallPrintfAndReportCallback(const char *str) {$/;"	f	namespace:__sanitizer
CallUserSignalHandler	tsan/tsan_interceptors_posix.cpp	/^static void CallUserSignalHandler(ThreadState *thr, bool sync, bool acquire,$/;"	f	namespace:__tsan
Callback	tsan/tsan_rtl_mutex.cpp	/^  Callback(ThreadState *thr, uptr pc)$/;"	f	struct:__tsan::final
Calloc	asan/asan_allocator.cpp	/^  void *Calloc(uptr nmemb, uptr size, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
Calloc	lsan/lsan_allocator.cpp	/^static void *Calloc(uptr nmemb, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
CanAllocate	sanitizer_common/sanitizer_allocator_primary32.h	/^  static bool CanAllocate(uptr size, uptr alignment) {$/;"	f	class:SizeClassAllocator32
CanAllocate	sanitizer_common/sanitizer_allocator_primary64.h	/^  static bool CanAllocate(uptr size, uptr alignment) {$/;"	f	class:SizeClassAllocator64
CanBeAHeapPointer	lsan/lsan_common.cpp	/^static inline bool CanBeAHeapPointer(uptr p) {$/;"	f	namespace:__lsan
CanLockAdj	tsan/tsan_mutex.cpp	/^static bool CanLockAdj[MutexTypeCount][MutexTypeCount];$/;"	m	namespace:__tsan
CanLockTab	tsan/tsan_mutex.cpp	/^static MutexType CanLockTab[MutexTypeCount][MutexTypeCount] = {$/;"	m	namespace:__tsan
CanPoisonMemory	asan/asan_poisoning.cpp	/^bool CanPoisonMemory() {$/;"	f	namespace:__asan
CanUnwind	asan/asan_stack.cpp	/^  bool CanUnwind() const { return can_unwind; }$/;"	f	class:__asan::__anon70::ScopedUnwinding
CanUseVDSO	sanitizer_common/sanitizer_linux_libcdep.cpp	/^inline bool CanUseVDSO() {$/;"	f	namespace:__sanitizer
CatastrophicErrorWrite	sanitizer_common/sanitizer_file.cpp	/^void CatastrophicErrorWrite(const char *buffer, uptr length) {$/;"	f	namespace:__sanitizer
CatastrophicErrorWrite	sanitizer_common/sanitizer_fuchsia.cpp	/^void CatastrophicErrorWrite(const char *buffer, uptr length) {$/;"	f	namespace:__sanitizer
Cell	sanitizer_common/sanitizer_addrhashmap.h	/^  struct Cell {$/;"	s	class:__sanitizer::AddrHashMap
ChangeMemoryProtection	interception/interception_win.cpp	/^static bool ChangeMemoryProtection($/;"	f	namespace:__interception
CheckASLR	sanitizer_common/sanitizer_fuchsia.cpp	/^void CheckASLR() {}$/;"	f	namespace:__sanitizer
CheckASLR	sanitizer_common/sanitizer_linux.cpp	/^void CheckASLR() {$/;"	f	namespace:__sanitizer
CheckASLR	sanitizer_common/sanitizer_mac.cpp	/^void CheckASLR() {$/;"	f	namespace:__sanitizer
CheckASLR	sanitizer_common/sanitizer_rtems.cpp	/^void CheckASLR() {}$/;"	f	namespace:__sanitizer
CheckASLR	sanitizer_common/sanitizer_win.cpp	/^void CheckASLR() {$/;"	f	namespace:__sanitizer
CheckAddress	hwasan/hwasan_checks.h	/^__attribute__((always_inline, nodebug)) static void CheckAddress(uptr p) {$/;"	f	namespace:__hwasan
CheckAddressSized	hwasan/hwasan_checks.h	/^__attribute__((always_inline, nodebug)) static void CheckAddressSized(uptr p,$/;"	f	namespace:__hwasan
CheckAlignedAllocAlignmentAndSize	sanitizer_common/sanitizer_allocator_checks.h	/^inline bool CheckAlignedAllocAlignmentAndSize(uptr alignment, uptr size) {$/;"	f	namespace:__sanitizer
CheckAndProtect	tsan/tsan_platform_posix.cpp	/^void CheckAndProtect() {$/;"	f	namespace:__tsan
CheckConsistency	sanitizer_common/sanitizer_list.h	/^  void CheckConsistency() {$/;"	f	struct:__sanitizer::IntrusiveList
CheckContains	tsan/tsan_interface_ann.cpp	/^static bool CheckContains(ExpectRace *list, uptr addr, uptr size) {$/;"	f	namespace:__tsan
CheckFailed	sanitizer_common/sanitizer_termination.cpp	/^void NORETURN CheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__sanitizer
CheckFailedCallback	sanitizer_common/sanitizer_termination.cpp	/^static CheckFailedCallbackType CheckFailedCallback;$/;"	m	namespace:__sanitizer
CheckFailedCallbackType	sanitizer_common/sanitizer_common.h	/^typedef void (*CheckFailedCallbackType)(const char *, int, const char *,$/;"	t	namespace:__sanitizer
CheckForCallocOverflow	sanitizer_common/sanitizer_allocator_checks.h	/^inline bool CheckForCallocOverflow(uptr size, uptr n) {$/;"	f	namespace:__sanitizer
CheckForInvalidPointerPair	asan/asan_report.cpp	/^static inline void CheckForInvalidPointerPair(void *p1, void *p2) {$/;"	f	namespace:__asan
CheckForLeaks	lsan/lsan_common.cpp	/^static bool CheckForLeaks() {$/;"	f	namespace:__lsan
CheckForLeaksCallback	lsan/lsan_common.cpp	/^static void CheckForLeaksCallback(const SuspendedThreadsList &suspended_threads,$/;"	f	namespace:__lsan
CheckForLeaksParam	lsan/lsan_common.h	/^struct CheckForLeaksParam {$/;"	s	namespace:__lsan
CheckForPvallocOverflow	sanitizer_common/sanitizer_allocator_checks.h	/^inline bool CheckForPvallocOverflow(uptr size, uptr page_size) {$/;"	f	namespace:__sanitizer
CheckId	tsan/tsan_sync.h	/^  bool CheckId(u64 uid) const {$/;"	f	struct:__tsan::SyncVar
CheckKind	ubsan/ubsan_handlers.h	/^  CFITypeCheckKind CheckKind;$/;"	m	struct:__ubsan::CFICheckFailData
CheckLocked	sanitizer_common/sanitizer_fuchsia.cpp	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	sanitizer_common/sanitizer_linux.cpp	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	sanitizer_common/sanitizer_mac.cpp	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	sanitizer_common/sanitizer_mutex.h	/^  void CheckLocked() {$/;"	f	class:__sanitizer::RWMutex
CheckLocked	sanitizer_common/sanitizer_mutex.h	/^  void CheckLocked() {$/;"	f	class:__sanitizer::StaticSpinMutex
CheckLocked	sanitizer_common/sanitizer_rtems.cpp	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	sanitizer_common/sanitizer_solaris.cpp	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	sanitizer_common/sanitizer_symbolizer_report.cpp	/^void ScopedErrorReportLock::CheckLocked() {$/;"	f	class:__sanitizer::ScopedErrorReportLock
CheckLocked	sanitizer_common/sanitizer_thread_registry.h	/^  void CheckLocked() { mtx_.CheckLocked(); }$/;"	f	class:__sanitizer::ThreadRegistry
CheckLocked	sanitizer_common/sanitizer_win.cpp	/^void BlockingMutex::CheckLocked() {$/;"	f	class:__sanitizer::BlockingMutex
CheckLocked	tsan/tsan_mutex.cpp	/^void Mutex::CheckLocked() {$/;"	f	class:__tsan::Mutex
CheckLocked	ubsan/ubsan_diag.h	/^  static void CheckLocked() { ScopedErrorReportLock::CheckLocked(); }$/;"	f	class:__ubsan::ScopedReport
CheckMPROTECT	sanitizer_common/sanitizer_fuchsia.cpp	/^void CheckMPROTECT() {}$/;"	f	namespace:__sanitizer
CheckMPROTECT	sanitizer_common/sanitizer_linux.cpp	/^void CheckMPROTECT() {$/;"	f	namespace:__sanitizer
CheckMPROTECT	sanitizer_common/sanitizer_mac.cpp	/^void CheckMPROTECT() {$/;"	f	namespace:__sanitizer
CheckMPROTECT	sanitizer_common/sanitizer_rtems.cpp	/^void CheckMPROTECT() {}$/;"	f	namespace:__sanitizer
CheckMPROTECT	sanitizer_common/sanitizer_win.cpp	/^void CheckMPROTECT() {$/;"	f	namespace:__sanitizer
CheckNoDeepBind	sanitizer_common/sanitizer_linux.cpp	/^void CheckNoDeepBind(const char *filename, int flag) {$/;"	f	namespace:__sanitizer
CheckNoDeepBind	sanitizer_common/sanitizer_mac.cpp	/^void CheckNoDeepBind(const char *filename, int flag) {$/;"	f	namespace:__sanitizer
CheckNoDeepBind	sanitizer_common/sanitizer_win.cpp	/^void CheckNoDeepBind(const char *filename, int flag) {$/;"	f	namespace:__sanitizer
CheckNoLocks	tsan/tsan_mutex.cpp	/^void CheckNoLocks(ThreadState *thr) {$/;"	f	namespace:__tsan
CheckNoLocks	tsan/tsan_mutex.cpp	/^void InternalDeadlockDetector::CheckNoLocks() {$/;"	f	class:__tsan::InternalDeadlockDetector
CheckODRViolationViaIndicator	asan/asan_globals.cpp	/^static void CheckODRViolationViaIndicator(const Global *g) {$/;"	f	namespace:__asan
CheckOptions	asan/asan_allocator.cpp	/^  void CheckOptions(const AllocatorOptions &options) const {$/;"	f	struct:__asan::Allocator
CheckPosixMemalignAlignment	sanitizer_common/sanitizer_allocator_checks.h	/^inline bool CheckPosixMemalignAlignment(uptr alignment) {$/;"	f	namespace:__sanitizer
CheckShadowMapping	tsan/tsan_rtl.cpp	/^static void CheckShadowMapping() {$/;"	f	namespace:__tsan
CheckVMASize	sanitizer_common/sanitizer_win.cpp	/^void CheckVMASize() {$/;"	f	namespace:__sanitizer
ChooseChunk	asan/asan_allocator.cpp	/^  AsanChunk *ChooseChunk(uptr addr, AsanChunk *left_chunk,$/;"	f	struct:__asan::Allocator
ChooseExternalSymbolizer	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^static SymbolizerTool *ChooseExternalSymbolizer(LowLevelAllocator *allocator) {$/;"	f	namespace:__sanitizer
ChooseSummaryStack	tsan/tsan_report.cpp	/^static ReportStack *ChooseSummaryStack(const ReportDesc *rep) {$/;"	f	namespace:__tsan
ChooseSymbolizerTools	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^static void ChooseSymbolizerTools(IntrusiveList<SymbolizerTool> *list,$/;"	f	namespace:__sanitizer
ChooseSymbolizerTools	sanitizer_common/sanitizer_symbolizer_win.cpp	/^static void ChooseSymbolizerTools(IntrusiveList<SymbolizerTool> *list,$/;"	f	namespace:__sanitizer
ChunkAccess	asan/asan_descriptions.h	/^struct ChunkAccess {$/;"	s	namespace:__asan
ChunkBase	asan/asan_allocator.cpp	/^class ChunkBase : public ChunkHeader {$/;"	c	namespace:__asan
ChunkCallback	asan/asan_memory_profile.cpp	/^static void ChunkCallback(uptr chunk, void *arg) {$/;"	f	namespace:__asan
ChunkHeader	asan/asan_allocator.cpp	/^class ChunkHeader {$/;"	c	namespace:__asan
ChunkMetadata	lsan/lsan_allocator.h	/^struct ChunkMetadata {$/;"	s	namespace:__lsan
ChunkTag	lsan/lsan_common.h	/^enum ChunkTag {$/;"	g	namespace:__lsan
ClassID	sanitizer_common/sanitizer_allocator_primary32.h	/^  static uptr ClassID(uptr size) { return SizeClassMap::ClassID(size); }$/;"	f	class:SizeClassAllocator32
ClassID	sanitizer_common/sanitizer_allocator_primary64.h	/^  static uptr ClassID(uptr size) { return SizeClassMap::ClassID(size); }$/;"	f	class:SizeClassAllocator64
ClassID	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static uptr ClassID(uptr size) {$/;"	f	class:SizeClassMap
ClassIdToSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  static uptr ClassIdToSize(uptr class_id) {$/;"	f	class:SizeClassAllocator32
ClassIdToSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static uptr ClassIdToSize(uptr class_id) {$/;"	f	class:SizeClassAllocator64
ClassifyAllChunks	lsan/lsan_common.cpp	/^static void ClassifyAllChunks(SuspendedThreadsList const &suspended_threads,$/;"	f	namespace:__lsan
Clear	asan/asan_scariness_score.h	/^  void Clear() {$/;"	f	struct:__asan::ScarinessScoreBase
Clear	asan/asan_stats.cpp	/^void AsanStats::Clear() {$/;"	f	class:__asan::AsanStats
Clear	sanitizer_common/sanitizer_allocator_primary32.h	/^    void Clear() { count_ = 0; }$/;"	f	struct:SizeClassAllocator32::TransferBatch
Clear	sanitizer_common/sanitizer_lfstack.h	/^  void Clear() {$/;"	f	struct:__sanitizer::LFStack
Clear	sanitizer_common/sanitizer_symbolizer.cpp	/^void AddressInfo::Clear() {$/;"	f	class:__sanitizer::AddressInfo
Clear	sanitizer_common/sanitizer_symbolizer.cpp	/^void DataInfo::Clear() {$/;"	f	class:__sanitizer::DataInfo
Clear	sanitizer_common/sanitizer_symbolizer.cpp	/^void FrameInfo::Clear() {$/;"	f	class:__sanitizer::FrameInfo
ClearAll	sanitizer_common/sanitizer_symbolizer.cpp	/^void SymbolizedStack::ClearAll() {$/;"	f	class:__sanitizer::SymbolizedStack
ClearHistorySize	tsan/tsan_rtl.h	/^  void ClearHistorySize() {$/;"	f	class:__tsan::FastState
ClearIgnoreBit	tsan/tsan_rtl.h	/^  void ClearIgnoreBit() { x_ &= ~kIgnoreBit; }$/;"	f	class:__tsan::FastState
ClearShadowForThreadStackAndTLS	asan/asan_thread.cpp	/^void AsanThread::ClearShadowForThreadStackAndTLS() {$/;"	f	class:__asan::AsanThread
ClearShadowForThreadStackAndTLS	hwasan/hwasan_thread.cpp	/^void Thread::ClearShadowForThreadStackAndTLS() {$/;"	f	class:__hwasan::Thread
ClearShadowMemoryForContextStack	asan/asan_interceptors.cpp	/^static void ClearShadowMemoryForContextStack(uptr stack, uptr ssize) {$/;"	f
ClockBlock	tsan/tsan_defs.h	/^  ClockBlock() {$/;"	f	struct:__tsan::ClockBlock
ClockBlock	tsan/tsan_defs.h	/^struct ClockBlock {$/;"	s	namespace:__tsan
ClockElem	tsan/tsan_defs.h	/^struct ClockElem {$/;"	s	namespace:__tsan
CloseFile	sanitizer_common/sanitizer_posix.cpp	/^void CloseFile(fd_t fd) {$/;"	f	namespace:__sanitizer
CloseFile	sanitizer_common/sanitizer_rtems.cpp	/^void CloseFile(fd_t fd) {$/;"	f	namespace:__sanitizer
CloseFile	sanitizer_common/sanitizer_win.cpp	/^void CloseFile(fd_t fd) {$/;"	f	namespace:__sanitizer
CloseOpenedRange	sanitizer_common/sanitizer_allocator_primary64.h	/^    void CloseOpenedRange() {$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
CmpLibcVersion	sanitizer_common/sanitizer_linux_libcdep.cpp	/^bool CmpLibcVersion(int major, int minor, int patch) {$/;"	f	namespace:__sanitizer::__anon7
CollectIgnoredCb	lsan/lsan_common.cpp	/^static void CollectIgnoredCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
CollectLeaksCb	lsan/lsan_common.cpp	/^static void CollectLeaksCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
CollectMatchedBenignRaces	tsan/tsan_interface_ann.cpp	/^static void CollectMatchedBenignRaces(Vector<ExpectRace> *matched,$/;"	f	namespace:__tsan
ColorizeReports	sanitizer_common/sanitizer_symbolizer_report.cpp	/^bool ColorizeReports() {$/;"	f	namespace:__sanitizer
Column	ubsan/ubsan_value.h	/^  u32 Column;$/;"	m	class:__ubsan::SourceLocation
CombinedAllocator	sanitizer_common/sanitizer_allocator_combined.h	/^class CombinedAllocator {$/;"	c
CommitBack	asan/asan_allocator.cpp	/^  void CommitBack(AsanThreadLocalMallocStorage *ms, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
CommitBack	asan/asan_allocator.cpp	/^void AsanThreadLocalMallocStorage::CommitBack() {$/;"	f	class:__asan::AsanThreadLocalMallocStorage
CommonFlags	sanitizer_common/sanitizer_flags.h	/^struct CommonFlags {$/;"	s	namespace:__sanitizer
CommonInit	ubsan/ubsan_init.cpp	/^static void CommonInit() {$/;"	f
CommonSanitizerReportMutex	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static StaticSpinMutex CommonSanitizerReportMutex;$/;"	m	namespace:__sanitizer
CommonStandaloneInit	ubsan/ubsan_init.cpp	/^static void CommonStandaloneInit() {$/;"	f
CompactPtrT	sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::CompactPtrT CompactPtrT;$/;"	t	struct:SizeClassAllocator64LocalCache
CompactPtrT	sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef u32 CompactPtrT;$/;"	t	class:SizeClassAllocator64
CompactPtrToPointer	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr CompactPtrToPointer(uptr base, CompactPtrT ptr32) const {$/;"	f	class:SizeClassAllocator64
CompactRingBuffer	sanitizer_common/sanitizer_ring_buffer.h	/^  CompactRingBuffer(const CompactRingBuffer &other, void *storage) {$/;"	f	class:__sanitizer::CompactRingBuffer
CompactRingBuffer	sanitizer_common/sanitizer_ring_buffer.h	/^  CompactRingBuffer(void *storage, uptr size) {$/;"	f	class:__sanitizer::CompactRingBuffer
CompactRingBuffer	sanitizer_common/sanitizer_ring_buffer.h	/^class CompactRingBuffer {$/;"	c	namespace:__sanitizer
CompactSizeClassMap	sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<3, 4, 8, 17, 64, 14> CompactSizeClassMap;$/;"	t
CompareBaseAddress	sanitizer_common/sanitizer_mac.cpp	/^static inline bool CompareBaseAddress(const LoadedModule &a,$/;"	f	namespace:__sanitizer
CompareLess	sanitizer_common/sanitizer_common.h	/^struct CompareLess {$/;"	s	namespace:__sanitizer
CompareModulesBase	sanitizer_common/sanitizer_win.cpp	/^int CompareModulesBase(const void *pl, const void *pr) {$/;"	f	namespace:__sanitizer::__anon43
CompleteObjectLocator	ubsan/ubsan_type_hash_win.cpp	/^struct CompleteObjectLocator {$/;"	s
CompleteObjectLocatorAbs	ubsan/ubsan_type_hash_win.cpp	/^struct CompleteObjectLocatorAbs {$/;"	s
ComputeRZLog	asan/asan_allocator.cpp	/^  uptr ComputeRZLog(uptr user_requested_size) {$/;"	f	struct:__asan::Allocator
ComputeRegionBeg	sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr ComputeRegionBeg(uptr mem) {$/;"	f	class:SizeClassAllocator32
ComputeRegionId	sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr ComputeRegionId(uptr mem) const {$/;"	f	class:SizeClassAllocator32
ComputeUserAlignment	asan/asan_allocator.cpp	/^  static uptr ComputeUserAlignment(uptr user_requested_alignment_log) {$/;"	f	struct:__asan::Allocator
ComputeUserRequestedAlignmentLog	asan/asan_allocator.cpp	/^  static uptr ComputeUserRequestedAlignmentLog(uptr user_requested_alignment) {$/;"	f	struct:__asan::Allocator
CondMutexUnlockCtx	tsan/tsan_interceptors_posix.cpp	/^struct CondMutexUnlockCtx {$/;"	s
ConstIterator	sanitizer_common/sanitizer_list.h	/^  typedef IteratorBase<const Item> ConstIterator;$/;"	t	struct:__sanitizer::IntrusiveList
ConsumeThreadByUid	tsan/tsan_rtl_thread.cpp	/^static bool ConsumeThreadByUid(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__tsan
ConsumeThreadContext	tsan/tsan_rtl_thread.cpp	/^struct ConsumeThreadContext {$/;"	s	namespace:__tsan
ContainsSameAccess	tsan/tsan_rtl.cpp	/^bool ContainsSameAccess(u64 *s, u64 a, u64 sync_epoch, bool is_write) {$/;"	f	namespace:__tsan
ContainsSameAccessFast	tsan/tsan_rtl.cpp	/^bool ContainsSameAccessFast(u64 *s, u64 a, u64 sync_epoch, bool is_write) {$/;"	f	namespace:__tsan
ContainsSameAccessSlow	tsan/tsan_rtl.cpp	/^bool ContainsSameAccessSlow(u64 *s, u64 a, u64 sync_epoch, bool is_write) {$/;"	f	namespace:__tsan
ContainsThread	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^bool SuspendedThreadsListMac::ContainsThread(thread_t thread) const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
ContainsTid	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^bool SuspendedThreadsListLinux::ContainsTid(tid_t thread_id) const {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
ContainsTid	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^bool SuspendedThreadsListNetBSD::ContainsTid(tid_t thread_id) const {$/;"	f	class:__sanitizer::SuspendedThreadsListNetBSD
Contention	tsan/tsan_mutex.cpp	/^  u64 Contention() const {$/;"	f	class:__tsan::Backoff
Context	tsan/tsan_rtl.cpp	/^Context::Context()$/;"	f	class:__tsan::Context
Context	tsan/tsan_rtl.h	/^struct Context {$/;"	s	namespace:__tsan
ConvertTypeToFlagName	ubsan/ubsan_diag.cpp	/^static const char *ConvertTypeToFlagName(ErrorType Type) {$/;"	f
ConvertTypeToString	ubsan/ubsan_diag.cpp	/^static const char *ConvertTypeToString(ErrorType Type) {$/;"	f
CopyFrom	sanitizer_common/sanitizer_flags.cpp	/^void CommonFlags::CopyFrom(const CommonFlags &other) {$/;"	f	class:__sanitizer::CommonFlags
CopyInstructions	interception/interception_win.cpp	/^static bool CopyInstructions(uptr to, uptr from, size_t size) {$/;"	f	namespace:__interception
CopyTo	asan/asan_allocator.cpp	/^void AllocatorOptions::CopyTo(Flags *f, CommonFlags *cf) {$/;"	f	class:__asan::AllocatorOptions
CopyToArray	sanitizer_common/sanitizer_allocator_primary32.h	/^    void CopyToArray(void *to_batch[]) const {$/;"	f	struct:SizeClassAllocator32::TransferBatch
CopyTrace	tsan/tsan_debugging.cpp	/^static void CopyTrace(SymbolizedStack *first_frame, void **trace,$/;"	f
Count	sanitizer_common/sanitizer_allocator_primary32.h	/^    uptr Count() const { return count_; }$/;"	f	struct:SizeClassAllocator32::TransferBatch
CplusV3Demangle	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^char *CplusV3Demangle(const char *name) {$/;"	f	namespace:__sanitizer::__anon11
CplusV3DemangleCallback	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^static void CplusV3DemangleCallback(const char *s, size_t l, void *vdata) {$/;"	f
CplusV3DemangleData	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^struct CplusV3DemangleData {$/;"	s	namespace:__sanitizer::__anon11
Create	asan/asan_fake_stack.cpp	/^FakeStack *FakeStack::Create(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
Create	asan/asan_thread.cpp	/^AsanThread *AsanThread::Create(thread_callback_t start_routine, void *arg,$/;"	f	class:__asan::AsanThread
Create	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^DDetector *DDetector::Create(const DDFlags *flags) {$/;"	f	class:__sanitizer::DDetector
Create	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^DDetector *DDetector::Create(const DDFlags *flags) {$/;"	f	class:__sanitizer::DDetector
CreateAsanThread	asan/asan_fuchsia.cpp	/^static AsanThread *CreateAsanThread(StackTrace *stack, u32 parent_tid,$/;"	f	namespace:__asan
CreateAsanThread	asan/asan_rtems.cpp	/^static AsanThread *CreateAsanThread(StackTrace *stack, u32 parent_tid,$/;"	f	namespace:__asan
CreateBatch	sanitizer_common/sanitizer_allocator_local_cache.h	/^  TransferBatch *CreateBatch(uptr class_id, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
CreateCurrentThread	hwasan/hwasan_thread_list.h	/^  Thread *CreateCurrentThread() {$/;"	f	class:__hwasan::HwasanThreadList
CreateLogicalThread	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^DDLogicalThread* DD::CreateLogicalThread(u64 ctx) {$/;"	f	class:__sanitizer::DD
CreateLogicalThread	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^DDLogicalThread* DD::CreateLogicalThread(u64 ctx) {$/;"	f	class:__sanitizer::DD
CreateLogicalThread	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual DDLogicalThread* CreateLogicalThread(u64 ctx) { return nullptr; }$/;"	f	struct:__sanitizer::DDetector
CreateMainThread	asan/asan_fuchsia.cpp	/^AsanThread *CreateMainThread() {$/;"	f	namespace:__asan
CreateMainThread	asan/asan_rtems.cpp	/^AsanThread *CreateMainThread() {$/;"	f	namespace:__asan
CreateMainThread	asan/asan_thread.cpp	/^AsanThread *CreateMainThread() {$/;"	f	namespace:__asan
CreatePhysicalThread	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^DDPhysicalThread* DD::CreatePhysicalThread() {$/;"	f	class:__sanitizer::DD
CreatePhysicalThread	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^DDPhysicalThread* DD::CreatePhysicalThread() {$/;"	f	class:__sanitizer::DD
CreatePhysicalThread	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual DDPhysicalThread* CreatePhysicalThread() { return nullptr; }$/;"	f	struct:__sanitizer::DDetector
CreateThread	sanitizer_common/sanitizer_thread_registry.cpp	/^u32 ThreadRegistry::CreateThread(uptr user_id, bool detached, u32 parent_tid,$/;"	f	class:__sanitizer::ThreadRegistry
CreateThreadContext	lsan/lsan_thread.cpp	/^static ThreadContextBase *CreateThreadContext(u32 tid) {$/;"	f	namespace:__lsan
CreateThreadContext	tsan/tsan_rtl.cpp	/^static ThreadContextBase *CreateThreadContext(u32 tid) {$/;"	f	namespace:__tsan
CreateThreadContextArgs	asan/asan_thread.h	/^  struct CreateThreadContextArgs {$/;"	s	class:__asan::final
CreateTwoHighNumberedPipes	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^static bool CreateTwoHighNumberedPipes(int *infd_, int *outfd_) {$/;"	f	namespace:__sanitizer
CurrentError	asan/asan_report.cpp	/^  static ErrorDescription &CurrentError() {$/;"	f	class:__asan::ScopedInErrorReport
CurrentStackId	tsan/tsan_rtl.cpp	/^u32 CurrentStackId(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
CurrentThreadContext	lsan/lsan_thread.cpp	/^ThreadContext *CurrentThreadContext() {$/;"	f	namespace:__lsan
CurrentUBR	ubsan/ubsan_monitor.cpp	/^static UndefinedBehaviorReport *CurrentUBR;$/;"	v
Cyan	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Cyan()    const { return ansi_ ? "\\033[1m\\033[36m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
CycleCheck	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::CycleCheck(DDPhysicalThread *pt, DDLogicalThread *lt,$/;"	f	class:__sanitizer::DD
DBGHELP_IMPORT	sanitizer_common/sanitizer_symbolizer_win.cpp	68;"	d
DBGHELP_IMPORT	sanitizer_common/sanitizer_symbolizer_win.cpp	85;"	d
DCHECK	sanitizer_common/sanitizer_internal_defs.h	308;"	d
DCHECK	sanitizer_common/sanitizer_internal_defs.h	316;"	d
DCHECK_EQ	sanitizer_common/sanitizer_internal_defs.h	309;"	d
DCHECK_EQ	sanitizer_common/sanitizer_internal_defs.h	317;"	d
DCHECK_GE	sanitizer_common/sanitizer_internal_defs.h	314;"	d
DCHECK_GE	sanitizer_common/sanitizer_internal_defs.h	322;"	d
DCHECK_GT	sanitizer_common/sanitizer_internal_defs.h	313;"	d
DCHECK_GT	sanitizer_common/sanitizer_internal_defs.h	321;"	d
DCHECK_LE	sanitizer_common/sanitizer_internal_defs.h	312;"	d
DCHECK_LE	sanitizer_common/sanitizer_internal_defs.h	320;"	d
DCHECK_LT	sanitizer_common/sanitizer_internal_defs.h	311;"	d
DCHECK_LT	sanitizer_common/sanitizer_internal_defs.h	319;"	d
DCHECK_NE	sanitizer_common/sanitizer_internal_defs.h	310;"	d
DCHECK_NE	sanitizer_common/sanitizer_internal_defs.h	318;"	d
DD	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^DD::DD(const DDFlags *flags)$/;"	f	class:__sanitizer::DD
DD	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^DD::DD(const DDFlags *flags) : flags(*flags) { free_id.reserve(1024); }$/;"	f	class:__sanitizer::DD
DDBV	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^typedef TwoLevelBitVector<> DDBV;  \/\/ DeadlockDetector's bit vector.$/;"	t	namespace:__sanitizer
DDCallback	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDCallback {$/;"	s	namespace:__sanitizer
DDFlags	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDFlags {$/;"	s	namespace:__sanitizer
DDLogicalThread	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^struct DDLogicalThread {$/;"	s	namespace:__sanitizer
DDLogicalThread	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^struct DDLogicalThread {$/;"	s	namespace:__sanitizer
DDMutex	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDMutex {$/;"	s	namespace:__sanitizer
DDMutexInit	tsan/tsan_rtl_mutex.cpp	/^void DDMutexInit(ThreadState *thr, uptr pc, SyncVar *s) {$/;"	f	namespace:__tsan
DDPhysicalThread	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^struct DDPhysicalThread {$/;"	s	namespace:__sanitizer
DDPhysicalThread	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^struct DDPhysicalThread {$/;"	s	namespace:__sanitizer
DDReport	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDReport {$/;"	s	namespace:__sanitizer
DDetector	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^struct DDetector {$/;"	s	namespace:__sanitizer
DECLARE_EXTERN_INTERCEPTOR_AND_WRAPPER	interception/interception.h	193;"	d
DECLARE_EXTERN_INTERCEPTOR_AND_WRAPPER	interception/interception.h	198;"	d
DECLARE_FUNC_ENCODING	builtins/assembly.h	130;"	d
DECLARE_FUNC_ENCODING	builtins/assembly.h	75;"	d
DECLARE_FUNC_ENCODING	builtins/assembly.h	89;"	d
DECLARE_REAL	interception/interception.h	164;"	d
DECLARE_REAL	interception/interception.h	167;"	d
DECLARE_REAL	interception/interception.h	174;"	d
DECLARE_REAL	interception/interception.h	182;"	d
DECLARE_REAL_AND_INTERCEPTOR	interception/interception.h	188;"	d
DECLARE_REAL_AND_INTERCEPTOR	interception/interception.h	197;"	d
DECLARE_SYMBOL_VISIBILITY	builtins/assembly.h	139;"	d
DECLARE_SYMBOL_VISIBILITY	builtins/assembly.h	142;"	d
DECLARE_WRAPPER	interception/interception.h	123;"	d
DECLARE_WRAPPER	interception/interception.h	129;"	d
DECLARE_WRAPPER	interception/interception.h	137;"	d
DECLARE_WRAPPER	interception/interception.h	145;"	d
DECLARE_WRAPPER	interception/interception.h	152;"	d
DECLARE_WRAPPER_WINAPI	interception/interception.h	131;"	d
DECLARE__REAL	sanitizer_common/sanitizer_solaris.cpp	46;"	d
DECLARE__REAL64	sanitizer_common/sanitizer_solaris.cpp	57;"	d
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(int, fork, void) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(int, mprotect, void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, close, fd_t fd) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, dup, int oldfd) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, dup2, int oldfd, int newfd) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, execve, const char *filename,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, ftruncate, fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, getpid, void) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, munmap, void *addr, uptr length) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, read, fd_t fd, void *buf, uptr count) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, readlink, const char *path, char *buf,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, rename, const char *oldpath,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, sched_yield, void) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, sigprocmask, int how,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, unlink, const char *path) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, waitpid, int pid, int *status, int options) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(uptr, write, fd_t fd, const void *buf, uptr count) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL(void, sigfillset, __sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL	sanitizer_common/sanitizer_solaris.cpp	48;"	d
DECLARE__REAL_AND_INTERNAL64	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL64(uptr, fstat, fd_t fd, void *buf) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL64	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL64(uptr, getdents, fd_t fd, struct linux_dirent *dirp,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL64	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL64(uptr, lseek, fd_t fd, OFF_T offset, int whence) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL64	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL64(uptr, lstat, const char *path, void *buf) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL64	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL64(uptr, mmap, void *addr, uptr \/*size_t*\/ length,$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL64	sanitizer_common/sanitizer_solaris.cpp	/^DECLARE__REAL_AND_INTERNAL64(uptr, stat, const char *path, void *buf) {$/;"	f	namespace:__sanitizer
DECLARE__REAL_AND_INTERNAL64	sanitizer_common/sanitizer_solaris.cpp	59;"	d
DEFINE_AEABI_FUNCTION_ALIAS	builtins/assembly.h	187;"	d
DEFINE_AEABI_FUNCTION_ALIAS	builtins/assembly.h	190;"	d
DEFINE_CODE_STATE	builtins/assembly.h	131;"	d
DEFINE_CODE_STATE	builtins/assembly.h	74;"	d
DEFINE_CODE_STATE	builtins/assembly.h	88;"	d
DEFINE_COMPILERRT_FUNCTION	builtins/assembly.h	145;"	d
DEFINE_COMPILERRT_FUNCTION_ALIAS	builtins/assembly.h	180;"	d
DEFINE_COMPILERRT_PRIVATE_FUNCTION	builtins/assembly.h	163;"	d
DEFINE_COMPILERRT_PRIVATE_FUNCTION_UNMANGLED	builtins/assembly.h	172;"	d
DEFINE_COMPILERRT_THUMB_FUNCTION	builtins/assembly.h	154;"	d
DEFINE_REAL	interception/interception.h	206;"	d
DEFINE_REAL	interception/interception.h	212;"	d
DEFINE_REAL_PTHREAD_FUNCTIONS	sanitizer_common/sanitizer_posix.h	81;"	d
DEFINE_STACK_MALLOC_FREE_WITH_CLASS_ID	asan/asan_fake_stack.cpp	222;"	d
DEFINE__REAL	sanitizer_common/sanitizer_netbsd.cpp	89;"	d
DFSAN_INTERFACE_H	include/sanitizer/dfsan_interface.h	14;"	d
DISPATCH_DATA_DESTRUCTOR_DEFAULT	tsan/tsan_dispatch_defs.h	49;"	d
DISPATCH_DATA_DESTRUCTOR_FREE	tsan/tsan_dispatch_defs.h	50;"	d
DISPATCH_DATA_DESTRUCTOR_MUNMAP	tsan/tsan_dispatch_defs.h	51;"	d
DISPATCH_DECL	tsan/tsan_dispatch_defs.h	19;"	d
DISPATCH_INTERCEPT	tsan/tsan_interceptors_libdispatch.cpp	213;"	d
DISPATCH_INTERCEPT_ASYNC_B	tsan/tsan_interceptors_libdispatch.cpp	159;"	d
DISPATCH_INTERCEPT_ASYNC_F	tsan/tsan_interceptors_libdispatch.cpp	187;"	d
DISPATCH_INTERCEPT_SYNC_B	tsan/tsan_interceptors_libdispatch.cpp	174;"	d
DISPATCH_INTERCEPT_SYNC_F	tsan/tsan_interceptors_libdispatch.cpp	200;"	d
DISPATCH_NOESCAPE	tsan/tsan_dispatch_defs.h	54;"	d
DISPATCH_NOESCAPE	tsan/tsan_dispatch_defs.h	56;"	d
DL_Error	ubsan/ubsan_diag.h	/^  DL_Error, \/\/\/< An error.$/;"	e	enum:__ubsan::DiagLevel
DL_INTERNAL_FUNCTION	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  typedef void (*get_tls_func)(size_t*, size_t*) DL_INTERNAL_FUNCTION;$/;"	t	struct:__sanitizer::__anon7::GetTlsStaticInfoRegparmCall
DL_INTERNAL_FUNCTION	sanitizer_common/sanitizer_linux_libcdep.cpp	197;"	d
DL_INTERNAL_FUNCTION	sanitizer_common/sanitizer_linux_libcdep.cpp	199;"	d
DL_Note	ubsan/ubsan_diag.h	/^  DL_Note   \/\/\/< A note, attached to a prior diagnostic.$/;"	e	enum:__ubsan::DiagLevel
DO_ASAN_MAPPING_PROFILE	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	259;"	d
DO_ASAN_MAPPING_PROFILE	asan/asan_mapping.h	259;"	d
DPrintf	tsan/tsan_rtl.h	700;"	d
DPrintf	tsan/tsan_rtl.h	702;"	d
DPrintf2	tsan/tsan_rtl.h	706;"	d
DPrintf2	tsan/tsan_rtl.h	708;"	d
DTLS	sanitizer_common/sanitizer_tls_get_addr.h	/^struct DTLS {$/;"	s	namespace:__sanitizer
DTLSInDestruction	sanitizer_common/sanitizer_tls_get_addr.cpp	/^bool DTLSInDestruction(DTLS *dtls) {$/;"	f	namespace:__sanitizer
DTLS_Deallocate	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static inline void DTLS_Deallocate(DTLS::DTV *dtv, uptr size) {$/;"	f	namespace:__sanitizer
DTLS_Destroy	sanitizer_common/sanitizer_tls_get_addr.cpp	/^void DTLS_Destroy() {$/;"	f	namespace:__sanitizer
DTLS_Get	sanitizer_common/sanitizer_tls_get_addr.cpp	/^DTLS *DTLS_Get() { return &dtls; }$/;"	f	namespace:__sanitizer
DTLS_Resize	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static inline void DTLS_Resize(uptr new_size) {$/;"	f	namespace:__sanitizer
DTLS_on_libc_memalign	sanitizer_common/sanitizer_tls_get_addr.cpp	/^void DTLS_on_libc_memalign(void *ptr, uptr size) {$/;"	f	namespace:__sanitizer
DTLS_on_tls_get_addr	sanitizer_common/sanitizer_tls_get_addr.cpp	/^DTLS::DTV *DTLS_on_tls_get_addr(void *arg_void, void *res,$/;"	f	namespace:__sanitizer
DTV	sanitizer_common/sanitizer_tls_get_addr.h	/^  struct DTV {$/;"	s	struct:__sanitizer::DTLS
DUMPREG	sanitizer_common/sanitizer_mac.cpp	1252;"	d
DUMPREG	sanitizer_common/sanitizer_mac.cpp	1286;"	d
DUMPREG32	sanitizer_common/sanitizer_mac.cpp	1245;"	d
DUMPREG32	sanitizer_common/sanitizer_mac.cpp	1282;"	d
DUMPREG64	sanitizer_common/sanitizer_mac.cpp	1241;"	d
DUMPREG64	sanitizer_common/sanitizer_mac.cpp	1281;"	d
DUMPREGA64	sanitizer_common/sanitizer_mac.cpp	1243;"	d
DUMPREG_	sanitizer_common/sanitizer_mac.cpp	1247;"	d
DUMPREG_	sanitizer_common/sanitizer_mac.cpp	1283;"	d
DUMPREG__	sanitizer_common/sanitizer_mac.cpp	1248;"	d
DUMPREG__	sanitizer_common/sanitizer_mac.cpp	1284;"	d
DUMPREG___	sanitizer_common/sanitizer_mac.cpp	1249;"	d
DUMPREG___	sanitizer_common/sanitizer_mac.cpp	1285;"	d
DWORD	asan/asan_malloc_win.cpp	/^typedef unsigned long DWORD;$/;"	t
DWORD	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long DWORD;$/;"	t
DarwinKernelVersion	sanitizer_common/sanitizer_mac.h	/^  DarwinKernelVersion(u16 major, u16 minor) : VersionBase(major, minor) {}$/;"	f	struct:__sanitizer::DarwinKernelVersion
DarwinKernelVersion	sanitizer_common/sanitizer_mac.h	/^struct DarwinKernelVersion : VersionBase<DarwinKernelVersion> {$/;"	s	namespace:__sanitizer
DataDigest	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int DataDigest : 1;$/;"	m	struct:__anon31::__anon32
DataDigest	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  iscsi_digest_t DataDigest;$/;"	m	struct:__anon31
DataInfo	sanitizer_common/sanitizer_symbolizer.cpp	/^DataInfo::DataInfo() {$/;"	f	class:__sanitizer::DataInfo
DataInfo	sanitizer_common/sanitizer_symbolizer.h	/^struct DataInfo {$/;"	s	namespace:__sanitizer
DataSize	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  size_t DataSize() const { return next_index_ * sizeof(uintptr_t); }$/;"	f	class:__sancov::__anon45::final
DeadlockDetector	sanitizer_common/sanitizer_deadlock_detector.h	/^class DeadlockDetector {$/;"	c	namespace:__sanitizer
DeadlockDetectorTLS	sanitizer_common/sanitizer_deadlock_detector.h	/^class DeadlockDetectorTLS {$/;"	c	namespace:__sanitizer
Deallocate	asan/asan_allocator.cpp	/^  void Deallocate(void *p) {$/;"	f	struct:__asan::QuarantineCallback
Deallocate	asan/asan_allocator.cpp	/^  void Deallocate(void *ptr, uptr delete_size, uptr delete_alignment,$/;"	f	struct:__asan::Allocator
Deallocate	asan/asan_fake_stack.h	/^  static void Deallocate(uptr x, uptr class_id) {$/;"	f	class:__asan::FakeStack
Deallocate	lsan/lsan_allocator.cpp	/^void Deallocate(void *p) {$/;"	f	namespace:__lsan
Deallocate	sanitizer_common/sanitizer_allocator_combined.h	/^  void Deallocate(AllocatorCache *cache, void *p) {$/;"	f	class:CombinedAllocator
Deallocate	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Deallocate(SizeClassAllocator *allocator, uptr class_id, void *p) {$/;"	f	struct:SizeClassAllocator32LocalCache
Deallocate	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Deallocate(SizeClassAllocator *allocator, uptr class_id, void *p) {$/;"	f	struct:SizeClassAllocator64LocalCache
Deallocate	sanitizer_common/sanitizer_allocator_secondary.h	/^  void Deallocate(AllocatorStats *stat, void *p) {$/;"	f	class:LargeMmapAllocator
DeallocateBatch	sanitizer_common/sanitizer_allocator_primary32.h	/^  NOINLINE void DeallocateBatch(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator32
DeallocateFromLocalPool	asan/asan_malloc_linux.cpp	/^static void DeallocateFromLocalPool(const void *ptr) {$/;"	f
DebugDump	tsan/tsan_clock.cpp	/^void SyncClock::DebugDump(int(*printf)(const char *s, ...)) {$/;"	f	class:__tsan::SyncClock
DebugDump	tsan/tsan_clock.cpp	/^void ThreadClock::DebugDump(int(*printf)(const char *s, ...)) {$/;"	f	class:__tsan::ThreadClock
DecorateMapping	sanitizer_common/sanitizer_posix.cpp	/^void DecorateMapping(uptr addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
Decorator	asan/asan_descriptions.h	/^  Decorator() : SanitizerCommonDecorator() {}$/;"	f	class:__asan::Decorator
Decorator	asan/asan_descriptions.h	/^class Decorator : public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__asan
Decorator	hwasan/hwasan_report.cpp	/^  Decorator() : SanitizerCommonDecorator() { }$/;"	f	class:__hwasan::Decorator
Decorator	hwasan/hwasan_report.cpp	/^class Decorator: public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__hwasan
Decorator	lsan/lsan_common.cpp	/^  Decorator() : SanitizerCommonDecorator() { }$/;"	f	class:__lsan::Decorator
Decorator	lsan/lsan_common.cpp	/^class Decorator: public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__lsan
Decorator	tsan/tsan_report.cpp	/^  Decorator() : SanitizerCommonDecorator() { }$/;"	f	class:__tsan::Decorator
Decorator	tsan/tsan_report.cpp	/^class Decorator: public __sanitizer::SanitizerCommonDecorator {$/;"	c	namespace:__tsan
Decorator	ubsan/ubsan_diag.cpp	/^  Decorator() : SanitizerCommonDecorator() {}$/;"	f	class:__anon5::Decorator
Decorator	ubsan/ubsan_diag.cpp	/^class Decorator : public SanitizerCommonDecorator {$/;"	c	namespace:__anon5
DecreaseTotalMmap	sanitizer_common/sanitizer_common.cpp	/^void DecreaseTotalMmap(uptr size) {$/;"	f	namespace:__sanitizer
Default	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Default() const { return ansi_ ? "\\033[1m\\033[0m"  : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
DefaultLargeMmapAllocatorPtrArray	sanitizer_common/sanitizer_allocator_secondary.h	/^typedef LargeMmapAllocatorPtrArrayDynamic DefaultLargeMmapAllocatorPtrArray;$/;"	t
DefaultLargeMmapAllocatorPtrArray	sanitizer_common/sanitizer_allocator_secondary.h	/^typedef LargeMmapAllocatorPtrArrayStatic DefaultLargeMmapAllocatorPtrArray;$/;"	t
DefaultSizeClassMap	sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<3, 4, 8, 17, 128, 16> DefaultSizeClassMap;$/;"	t
DefaultTime2Retain	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int DefaultTime2Retain : 1;$/;"	m	struct:__anon31::__anon32
DefaultTime2Retain	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint16_t DefaultTime2Retain;$/;"	m	struct:__anon31
DefaultTime2Wait	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int DefaultTime2Wait : 1;$/;"	m	struct:__anon31::__anon32
DefaultTime2Wait	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint16_t DefaultTime2Wait;$/;"	m	struct:__anon31
Del	tsan/tsan_mutexset.cpp	/^void MutexSet::Del(u64 id, bool write) {$/;"	f	class:__tsan::MutexSet
Del	tsan/tsan_mutexset.h	/^void MutexSet::Del(u64 id, bool write) {}$/;"	f	class:__tsan::MutexSet
Delete	sanitizer_common/sanitizer_ring_buffer.h	/^  void Delete() {$/;"	f	class:__sanitizer::RingBuffer
DeleteFakeStack	asan/asan_thread.h	/^  void DeleteFakeStack(int tid) {$/;"	f	class:__asan::AsanThread
Demangle	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual const char *Demangle(const char *name) {$/;"	f	class:__sanitizer::SymbolizerTool
Demangle	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^const char *LibbacktraceSymbolizer::Demangle(const char *name) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
Demangle	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *Symbolizer::Demangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
Demangle	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^const char *Symbolizer::Demangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
Demangle	sanitizer_common/sanitizer_symbolizer_win.cpp	/^const char *WinSymbolizerTool::Demangle(const char *name) {$/;"	f	class:__sanitizer::WinSymbolizerTool
DemangleAlloc	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^static char *DemangleAlloc(const char *name, bool always_alloc) {$/;"	f	namespace:__sanitizer
DemangleCXXABI	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^const char *DemangleCXXABI(const char *name) {$/;"	f	namespace:__sanitizer
DemangleFunctionName	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^static const char *DemangleFunctionName(const char *function) {$/;"	f	namespace:__sanitizer
DemangleSwift	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^const char *DemangleSwift(const char *name) {$/;"	f	namespace:__sanitizer
DemangleSwiftAndCXX	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^const char *DemangleSwiftAndCXX(const char *name) {$/;"	f	namespace:__sanitizer
DenseSizeClassMap	sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<3, 4, 8, 17, 8, 10> DenseSizeClassMap;$/;"	t
DenseSlabAlloc	tsan/tsan_dense_alloc.h	/^  explicit DenseSlabAlloc(const char *name) {$/;"	f	class:__tsan::DenseSlabAlloc
DenseSlabAlloc	tsan/tsan_dense_alloc.h	/^class DenseSlabAlloc {$/;"	c	namespace:__tsan
DenseSlabAllocCache	tsan/tsan_dense_alloc.h	/^class DenseSlabAllocCache {$/;"	c	namespace:__tsan
DequeueBatch	sanitizer_common/sanitizer_quarantine.h	/^  QuarantineBatch *DequeueBatch() {$/;"	f	class:__sanitizer::QuarantineCache
Desc	tsan/tsan_mutexset.h	/^  struct Desc {$/;"	s	class:__tsan::MutexSet
Describe	sanitizer_common/sanitizer_fuchsia.cpp	/^const char *SignalContext::Describe() const { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SignalContext
Describe	sanitizer_common/sanitizer_posix.cpp	/^const char *SignalContext::Describe() const {$/;"	f	class:__sanitizer::SignalContext
Describe	sanitizer_common/sanitizer_win.cpp	/^const char *SignalContext::Describe() const {$/;"	f	class:__sanitizer::SignalContext
DescribeAddressIfGlobal	asan/asan_descriptions.cpp	/^bool DescribeAddressIfGlobal(uptr addr, uptr access_size,$/;"	f	namespace:__asan
DescribeAddressIfHeap	asan/asan_descriptions.cpp	/^bool DescribeAddressIfHeap(uptr addr, uptr access_size) {$/;"	f	namespace:__asan
DescribeAddressIfShadow	asan/asan_descriptions.cpp	/^bool DescribeAddressIfShadow(uptr addr) {$/;"	f	namespace:__asan
DescribeAddressIfStack	asan/asan_descriptions.cpp	/^bool DescribeAddressIfStack(uptr addr, uptr access_size) {$/;"	f	namespace:__asan
DescribeAddressRelativeToGlobal	asan/asan_descriptions.cpp	/^static void DescribeAddressRelativeToGlobal(uptr addr, uptr access_size,$/;"	f	namespace:__asan
DescribeSignalOrException	sanitizer_common/sanitizer_rtems.cpp	/^const char *DescribeSignalOrException(int signo) { UNIMPLEMENTED(); }$/;"	f	namespace:__sanitizer
DescribeThread	asan/asan_descriptions.cpp	/^void DescribeThread(AsanThreadContext *context) {$/;"	f	namespace:__asan
DescribeThread	asan/asan_descriptions.h	/^static inline void DescribeThread(AsanThread *t) {$/;"	f	namespace:__asan
Destroy	asan/asan_fake_stack.cpp	/^void FakeStack::Destroy(int tid) {$/;"	f	class:__asan::FakeStack
Destroy	asan/asan_thread.cpp	/^void AsanThread::Destroy() {$/;"	f	class:__asan::AsanThread
Destroy	hwasan/hwasan_thread.cpp	/^void Thread::Destroy() {$/;"	f	class:__hwasan::Thread
Destroy	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Destroy(SizeClassAllocator *allocator, AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator32LocalCache
Destroy	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Destroy(SizeClassAllocator *allocator, AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator64LocalCache
Destroy	sanitizer_common/sanitizer_common.h	/^  void Destroy() { UnmapOrDie(data_, capacity_bytes_); }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
DestroyAndFree	tsan/tsan_mman.h	/^void DestroyAndFree(T *p) {$/;"	f	namespace:__tsan
DestroyBatch	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void DestroyBatch(uptr class_id, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
DestroyCache	sanitizer_common/sanitizer_allocator_combined.h	/^  void DestroyCache(AllocatorCache *cache) {$/;"	f	class:CombinedAllocator
DestroyLogicalThread	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::DestroyLogicalThread(DDLogicalThread *lt) {$/;"	f	class:__sanitizer::DD
DestroyLogicalThread	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::DestroyLogicalThread(DDLogicalThread *lt) {$/;"	f	class:__sanitizer::DD
DestroyLogicalThread	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void DestroyLogicalThread(DDLogicalThread *lt) {}$/;"	f	struct:__sanitizer::DDetector
DestroyPhysicalThread	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::DestroyPhysicalThread(DDPhysicalThread *pt) {$/;"	f	class:__sanitizer::DD
DestroyPhysicalThread	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::DestroyPhysicalThread(DDPhysicalThread *pt) {$/;"	f	class:__sanitizer::DD
DestroyPhysicalThread	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void DestroyPhysicalThread(DDPhysicalThread *pt) {}$/;"	f	struct:__sanitizer::DDetector
DestroyThreadState	tsan/tsan_interceptors_posix.cpp	/^void DestroyThreadState() {$/;"	f	namespace:__tsan
DetachThread	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::DetachThread(u32 tid, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
Diag	ubsan/ubsan_diag.h	/^  Diag(Location Loc, DiagLevel Level, ErrorType ET, const char *Message)$/;"	f	class:__ubsan::Diag
Diag	ubsan/ubsan_diag.h	/^class Diag {$/;"	c	namespace:__ubsan
DiagLevel	ubsan/ubsan_diag.h	/^enum DiagLevel {$/;"	g	namespace:__ubsan
Die	sanitizer_common/sanitizer_termination.cpp	/^void NORETURN Die() {$/;"	f	namespace:__sanitizer
DieCallbackType	sanitizer_common/sanitizer_common.h	/^typedef void (*DieCallbackType)(void);$/;"	t	namespace:__sanitizer
Dir2addr	tsan/tsan_fd.cpp	/^uptr Dir2addr(const char *path) {$/;"	f	namespace:__tsan
DisableCoreDumperIfNecessary	sanitizer_common/sanitizer_fuchsia.cpp	/^void DisableCoreDumperIfNecessary() {}$/;"	f	namespace:__sanitizer
DisableCoreDumperIfNecessary	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void DisableCoreDumperIfNecessary() {$/;"	f	namespace:__sanitizer
DisableCoreDumperIfNecessary	sanitizer_common/sanitizer_rtems.cpp	/^void DisableCoreDumperIfNecessary() {}$/;"	f	namespace:__sanitizer
DisableCoreDumperIfNecessary	sanitizer_common/sanitizer_win.cpp	/^void DisableCoreDumperIfNecessary() {$/;"	f	namespace:__sanitizer
DisableCounterUnderflow	lsan/lsan_common.cpp	/^void DisableCounterUnderflow() {$/;"	f	namespace:__lsan
DisableIgnores	tsan/tsan_interceptors_posix.cpp	/^void ScopedInterceptor::DisableIgnores() {$/;"	f	class:ScopedInterceptor
DisableInThisThread	lsan/lsan_common_fuchsia.cpp	/^void DisableInThisThread() { disable_counter++; }$/;"	f	namespace:__lsan
DisableInThisThread	lsan/lsan_common_linux.cpp	/^void DisableInThisThread() { disable_counter++; }$/;"	f	namespace:__lsan
DisableInThisThread	lsan/lsan_common_mac.cpp	/^void DisableInThisThread() { ++get_tls_val(true)->disable_counter; }$/;"	f	namespace:__lsan
DisableMmapExcGuardExceptions	sanitizer_common/sanitizer_mac.cpp	/^static void DisableMmapExcGuardExceptions() {$/;"	f	namespace:__sanitizer
DisableTagging	hwasan/hwasan_thread.h	/^  void DisableTagging() { tagging_disabled_++; }$/;"	f	class:__hwasan::Thread
DisabledInThisThread	lsan/lsan_common_fuchsia.cpp	/^bool DisabledInThisThread() { return disable_counter > 0; }$/;"	f	namespace:__lsan
DisabledInThisThread	lsan/lsan_common_linux.cpp	/^bool DisabledInThisThread() { return disable_counter > 0; }$/;"	f	namespace:__lsan
DisabledInThisThread	lsan/lsan_common_mac.cpp	/^bool DisabledInThisThread() {$/;"	f	namespace:__lsan
Distance	sanitizer_common/sanitizer_stacktrace.cpp	/^static uptr Distance(uptr a, uptr b) { return a < b ? b - a : a - b; }$/;"	f	namespace:__sanitizer
DistanceIsWithin2Gig	interception/interception_win.cpp	/^static bool DistanceIsWithin2Gig(uptr from, uptr target) {$/;"	f	namespace:__interception
DlIteratePhdrData	sanitizer_common/sanitizer_linux_libcdep.cpp	/^struct DlIteratePhdrData {$/;"	s	namespace:__sanitizer
DllThunkCB	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^typedef void (*DllThunkCB)();$/;"	t
Do	tsan/tsan_mutex.cpp	/^  bool Do() {$/;"	f	class:__tsan::Backoff
DoAnonymousMmapOrDie	sanitizer_common/sanitizer_fuchsia.cpp	/^static void *DoAnonymousMmapOrDie(uptr size, const char *mem_type,$/;"	f	namespace:__sanitizer
DoLeakCheck	lsan/lsan_common.cpp	/^void DoLeakCheck() {$/;"	f	namespace:__lsan
DoMmapFixedOrDie	sanitizer_common/sanitizer_fuchsia.cpp	/^static uptr DoMmapFixedOrDie(zx_handle_t vmar, uptr fixed_addr, uptr map_size,$/;"	f	namespace:__sanitizer
DoRecoverableLeakCheck	lsan/lsan_common.cpp	/^static int DoRecoverableLeakCheck() {$/;"	f	namespace:__lsan
DoRecoverableLeakCheckVoid	lsan/lsan_common.cpp	/^void DoRecoverableLeakCheckVoid() { DoRecoverableLeakCheck(); }$/;"	f	namespace:__lsan
DoRecycle	sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE DoRecycle(Cache *c, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
DoStopTheWorldParam	lsan/lsan_common_linux.cpp	/^struct DoStopTheWorldParam {$/;"	s	namespace:__lsan
Done	sanitizer_common/sanitizer_allocator_primary64.h	/^    void Done() {$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
DontDumpShadow	tsan/tsan_platform_posix.cpp	/^static void DontDumpShadow(uptr addr, uptr size) {$/;"	f	namespace:__tsan
DontDumpShadowMemory	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool DontDumpShadowMemory(uptr addr, uptr length) {$/;"	f	namespace:__sanitizer
DontDumpShadowMemory	sanitizer_common/sanitizer_win.cpp	/^bool DontDumpShadowMemory(uptr addr, uptr length) {$/;"	f	namespace:__sanitizer
DontNeedShadowFor	tsan/tsan_rtl.cpp	/^void DontNeedShadowFor(uptr addr, uptr size) {$/;"	f	namespace:__tsan
DontNeedThread	hwasan/hwasan_thread_list.h	/^  void DontNeedThread(Thread *t) {$/;"	f	class:__hwasan::HwasanThreadList
Drain	sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE void Drain(PerClass *c, SizeClassAllocator *allocator, uptr class_id,$/;"	f	struct:SizeClassAllocator64LocalCache
Drain	sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE void Drain(PerClass *c, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
Drain	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Drain(SizeClassAllocator *allocator) {$/;"	f	struct:SizeClassAllocator32LocalCache
Drain	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Drain(SizeClassAllocator *allocator) {$/;"	f	struct:SizeClassAllocator64LocalCache
Drain	sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE Drain(Cache *c, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
Drain	tsan/tsan_dense_alloc.h	/^  void Drain(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
DrainAndRecycle	sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE DrainAndRecycle(Cache *c, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
Dump	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  void Dump() {$/;"	f	class:__sancov::__anon45::final
Dump	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^  void Dump() {$/;"	f	class:__sancov::__anon40::TracePcGuardController
DumpAllRegisters	sanitizer_common/sanitizer_fuchsia.cpp	/^void SignalContext::DumpAllRegisters(void *context) { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	sanitizer_common/sanitizer_linux.cpp	/^void SignalContext::DumpAllRegisters(void *context) {$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	sanitizer_common/sanitizer_mac.cpp	/^void SignalContext::DumpAllRegisters(void *context) {$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	sanitizer_common/sanitizer_rtems.cpp	/^void SignalContext::DumpAllRegisters(void *context) {}$/;"	f	class:__sanitizer::SignalContext
DumpAllRegisters	sanitizer_common/sanitizer_win.cpp	/^void SignalContext::DumpAllRegisters(void *context) {$/;"	f	class:__sanitizer::SignalContext
DumpListOfModules	sanitizer_common/sanitizer_procmaps_common.cpp	/^void MemoryMappingLayout::DumpListOfModules($/;"	f	class:__sanitizer::MemoryMappingLayout
DumpListOfModules	sanitizer_common/sanitizer_procmaps_mac.cpp	/^void MemoryMappingLayout::DumpListOfModules($/;"	f	class:__sanitizer::MemoryMappingLayout
DumpProcessMap	sanitizer_common/sanitizer_fuchsia.cpp	/^void DumpProcessMap() {$/;"	f	namespace:__sanitizer
DumpProcessMap	sanitizer_common/sanitizer_mac.cpp	/^void DumpProcessMap() {$/;"	f	namespace:__sanitizer
DumpProcessMap	sanitizer_common/sanitizer_posix.cpp	/^void DumpProcessMap() {$/;"	f	namespace:__sanitizer
DumpProcessMap	sanitizer_common/sanitizer_rtems.cpp	/^void DumpProcessMap() {}$/;"	f	namespace:__sanitizer
DumpProcessMap	sanitizer_common/sanitizer_win.cpp	/^void DumpProcessMap() {$/;"	f	namespace:__sanitizer
DyldNeedsEnvVariable	sanitizer_common/sanitizer_mac.cpp	/^static bool DyldNeedsEnvVariable() {$/;"	f	namespace:__sanitizer
DynInitGlobal	asan/asan_globals.cpp	/^struct DynInitGlobal {$/;"	s	namespace:__asan
DynamicAnnContext	tsan/tsan_interface_ann.cpp	/^  DynamicAnnContext()$/;"	f	struct:__tsan::DynamicAnnContext
DynamicAnnContext	tsan/tsan_interface_ann.cpp	/^struct DynamicAnnContext {$/;"	s	namespace:__tsan
DynamicTypeCacheMissData	ubsan/ubsan_handlers_cxx.h	/^struct DynamicTypeCacheMissData {$/;"	s	namespace:__ubsan
DynamicTypeInfo	ubsan/ubsan_type_hash.h	/^  DynamicTypeInfo(const char *MDTN, sptr Offset, const char *STN)$/;"	f	class:__ubsan::DynamicTypeInfo
DynamicTypeInfo	ubsan/ubsan_type_hash.h	/^class DynamicTypeInfo {$/;"	c	namespace:__ubsan
ENABLE_FRAME_POINTER	sanitizer_common/sanitizer_internal_defs.h	405;"	d
END_COMPILERRT_FUNCTION	builtins/assembly.h	194;"	d
END_COMPILERRT_FUNCTION	builtins/assembly.h	197;"	d
ENSURE_ASAN_INITED	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	27;"	d
ENSURE_ASAN_INITED	asan/asan_interceptors.h	27;"	d
ENSURE_HWASAN_INITED	hwasan/hwasan_interceptors.cpp	64;"	d
ENSURE_LSAN_INITED	lsan/lsan.h	43;"	d
ENSURE_LSAN_INITED	lsan/lsan_interceptors.cpp	/^  ENSURE_LSAN_INITED;$/;"	m	class:std::align_val_t
EPOLL_CTL_ADD	tsan/tsan_interceptors_posix.cpp	/^const int EPOLL_CTL_ADD = 1;$/;"	v
ET	ubsan/ubsan_diag.h	/^  ErrorType ET;$/;"	m	class:__ubsan::Diag
EVIOC_ABS_MAX	sanitizer_common/sanitizer_platform_limits_freebsd.h	428;"	d
EVIOC_ABS_MAX	sanitizer_common/sanitizer_platform_limits_netbsd.h	543;"	d
EVIOC_ABS_MAX	sanitizer_common/sanitizer_platform_limits_posix.h	918;"	d
EVIOC_EV_MAX	sanitizer_common/sanitizer_platform_limits_freebsd.h	427;"	d
EVIOC_EV_MAX	sanitizer_common/sanitizer_platform_limits_netbsd.h	542;"	d
EVIOC_EV_MAX	sanitizer_common/sanitizer_platform_limits_posix.h	917;"	d
EarlyInit	asan/asan_rtems.cpp	/^void EarlyInit() {$/;"	f	namespace:__asan
EarlyMalloc	asan/asan_malloc_local.h	/^static inline bool EarlyMalloc() {$/;"	f
Edge	sanitizer_common/sanitizer_deadlock_detector.h	/^  struct Edge {$/;"	s	class:__sanitizer::DeadlockDetector
ElfW	sanitizer_common/sanitizer_linux_libcdep.cpp	43;"	d
Elf_Phdr	sanitizer_common/sanitizer_linux_libcdep.cpp	/^typedef ElfW(Phdr) Elf_Phdr;$/;"	t	namespace:__sanitizer
Elf_Phdr	sanitizer_common/sanitizer_linux_libcdep.cpp	562;"	d
Empty	sanitizer_common/sanitizer_lfstack.h	/^  bool Empty() const {$/;"	f	struct:__sanitizer::LFStack
EnableIgnores	tsan/tsan_interceptors_posix.cpp	/^void ScopedInterceptor::EnableIgnores() {$/;"	f	class:ScopedInterceptor
EnableInThisThread	lsan/lsan_common_fuchsia.cpp	/^void EnableInThisThread() {$/;"	f	namespace:__lsan
EnableInThisThread	lsan/lsan_common_linux.cpp	/^void EnableInThisThread() {$/;"	f	namespace:__lsan
EnableInThisThread	lsan/lsan_common_mac.cpp	/^void EnableInThisThread() {$/;"	f	namespace:__lsan
EnableTagging	hwasan/hwasan_thread.h	/^  void EnableTagging() { tagging_disabled_--; }$/;"	f	class:__hwasan::Thread
End	asan/asan_allocator.cpp	/^uptr AsanChunkView::End() const { return Beg() + UsedSize(); }$/;"	f	class:__asan::AsanChunkView
End	hwasan/hwasan_allocator.cpp	/^uptr HwasanChunkView::End() const {$/;"	f	class:__hwasan::HwasanChunkView
End	ubsan/ubsan_diag.h	/^  Location Start, End;$/;"	m	class:__ubsan::Range
EndOfStorage	sanitizer_common/sanitizer_ring_buffer.h	/^  void *EndOfStorage() const {$/;"	f	class:__sanitizer::CompactRingBuffer
EndSymbolizationHook	sanitizer_common/sanitizer_symbolizer.h	/^  typedef void (*EndSymbolizationHook)();$/;"	t	class:__sanitizer::final
Enqueue	sanitizer_common/sanitizer_quarantine.h	/^  void Enqueue(Callback cb, void *ptr, uptr size) {$/;"	f	class:__sanitizer::QuarantineCache
EnqueueBatch	sanitizer_common/sanitizer_quarantine.h	/^  void EnqueueBatch(QuarantineBatch *b) {$/;"	f	class:__sanitizer::QuarantineCache
EnsureFreeArraySpace	sanitizer_common/sanitizer_allocator_primary64.h	/^  bool EnsureFreeArraySpace(RegionInfo *region, uptr region_beg,$/;"	f	class:SizeClassAllocator64
EnsureMainThreadIDIsCorrect	asan/asan_thread.cpp	/^void EnsureMainThreadIDIsCorrect() {$/;"	f	namespace:__asan
EnsureMainThreadIDIsCorrect	asan/asan_thread.cpp	/^void EnsureMainThreadIDIsCorrect() {$/;"	f	namespace:__lsan
EnsureMainThreadIDIsCorrect	lsan/lsan_thread.cpp	/^void EnsureMainThreadIDIsCorrect() {$/;"	f	namespace:__lsan
EnsureSize	sanitizer_common/sanitizer_vector.h	/^  void EnsureSize(uptr size) {$/;"	f	class:__sanitizer::Vector
EnsureSortedChunks	sanitizer_common/sanitizer_allocator_secondary.h	/^  void EnsureSortedChunks() {$/;"	f	class:LargeMmapAllocator
EnsureSpace	sanitizer_common/sanitizer_allocator_secondary.h	/^  inline void EnsureSpace(uptr n) { CHECK_LT(n, kMaxNumChunks); }$/;"	f	class:LargeMmapAllocatorPtrArrayStatic
EnsureSpace	sanitizer_common/sanitizer_allocator_secondary.h	/^  inline void EnsureSpace(uptr n) {$/;"	f	class:LargeMmapAllocatorPtrArrayDynamic
EnterSymbolizer	tsan/tsan_symbolize.cpp	/^void EnterSymbolizer() {$/;"	f	namespace:__tsan
EnvVariable	sanitizer_common/sanitizer_win.cpp	/^struct EnvVariable {$/;"	s	namespace:__sanitizer::__anon42
Eq	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  bool Eq(const AsanChunkView &c) const { return chunk_ == c.chunk_; }$/;"	f	class:__asan::AsanChunkView
Eq	asan/asan_allocator.h	/^  bool Eq(const AsanChunkView &c) const { return chunk_ == c.chunk_; }$/;"	f	class:__asan::AsanChunkView
Error	lsan/lsan_common.cpp	/^  const char *Error() { return Red(); }$/;"	f	class:__lsan::Decorator
Error	sanitizer_common/sanitizer_linux.h	/^    Error,$/;"	e	enum:__sanitizer::ThreadLister::Result
Error	sanitizer_common/sanitizer_procmaps_common.cpp	/^bool MemoryMappingLayout::Error() const {$/;"	f	class:__sanitizer::MemoryMappingLayout
Error	sanitizer_common/sanitizer_procmaps_fuchsia.cpp	/^bool MemoryMappingLayout::Error() const { return data_.data.empty(); }$/;"	f	class:__sanitizer::MemoryMappingLayout
Error	sanitizer_common/sanitizer_procmaps_mac.cpp	/^bool MemoryMappingLayout::Error() const {$/;"	f	class:__sanitizer::MemoryMappingLayout
Error	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Error() const { return Red(); }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
ErrorAction	hwasan/hwasan_checks.h	/^enum class ErrorAction { Abort, Recover };$/;"	c	namespace:__hwasan
ErrorAllocTypeMismatch	asan/asan_errors.h	/^  ErrorAllocTypeMismatch(u32 tid, BufferedStackTrace *stack, uptr addr,$/;"	f	struct:__asan::ErrorAllocTypeMismatch
ErrorAllocTypeMismatch	asan/asan_errors.h	/^struct ErrorAllocTypeMismatch : ErrorBase {$/;"	s	namespace:__asan
ErrorAllocationSizeTooBig	asan/asan_errors.h	/^  ErrorAllocationSizeTooBig(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorAllocationSizeTooBig
ErrorAllocationSizeTooBig	asan/asan_errors.h	/^struct ErrorAllocationSizeTooBig : ErrorBase {$/;"	s	namespace:__asan
ErrorBadParamsToAnnotateContiguousContainer	asan/asan_errors.h	/^  ErrorBadParamsToAnnotateContiguousContainer(u32 tid,$/;"	f	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
ErrorBadParamsToAnnotateContiguousContainer	asan/asan_errors.h	/^struct ErrorBadParamsToAnnotateContiguousContainer : ErrorBase {$/;"	s	namespace:__asan
ErrorBase	asan/asan_errors.h	/^  ErrorBase(u32 tid_, int initial_score, const char *reason) : tid(tid_) {$/;"	f	struct:__asan::ErrorBase
ErrorBase	asan/asan_errors.h	/^  explicit ErrorBase(u32 tid_) : tid(tid_) {}$/;"	f	struct:__asan::ErrorBase
ErrorBase	asan/asan_errors.h	/^struct ErrorBase {$/;"	s	namespace:__asan
ErrorCallback	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^static void ErrorCallback(void *, const char *, int) {}$/;"	f
ErrorCallocOverflow	asan/asan_errors.h	/^  ErrorCallocOverflow(u32 tid, BufferedStackTrace *stack_, uptr count_,$/;"	f	struct:__asan::ErrorCallocOverflow
ErrorCallocOverflow	asan/asan_errors.h	/^struct ErrorCallocOverflow : ErrorBase {$/;"	s	namespace:__asan
ErrorDeadlySignal	asan/asan_errors.h	/^  ErrorDeadlySignal(u32 tid, const SignalContext &sig)$/;"	f	struct:__asan::ErrorDeadlySignal
ErrorDeadlySignal	asan/asan_errors.h	/^struct ErrorDeadlySignal : ErrorBase {$/;"	s	namespace:__asan
ErrorDescription	asan/asan_errors.h	/^  ErrorDescription() { internal_memset(this, 0, sizeof(*this)); }$/;"	f	struct:__asan::ErrorDescription
ErrorDescription	asan/asan_errors.h	/^  explicit ErrorDescription(LinkerInitialized) {}$/;"	f	struct:__asan::ErrorDescription
ErrorDescription	asan/asan_errors.h	/^struct ErrorDescription {$/;"	s	namespace:__asan
ErrorDoubleFree	asan/asan_errors.h	/^  ErrorDoubleFree(u32 tid, BufferedStackTrace *stack, uptr addr)$/;"	f	struct:__asan::ErrorDoubleFree
ErrorDoubleFree	asan/asan_errors.h	/^struct ErrorDoubleFree : ErrorBase {$/;"	s	namespace:__asan
ErrorFreeNotMalloced	asan/asan_errors.h	/^  ErrorFreeNotMalloced(u32 tid, BufferedStackTrace *stack, uptr addr)$/;"	f	struct:__asan::ErrorFreeNotMalloced
ErrorFreeNotMalloced	asan/asan_errors.h	/^struct ErrorFreeNotMalloced : ErrorBase {$/;"	s	namespace:__asan
ErrorGeneric	asan/asan_errors.cpp	/^ErrorGeneric::ErrorGeneric(u32 tid, uptr pc_, uptr bp_, uptr sp_, uptr addr,$/;"	f	class:__asan::ErrorGeneric
ErrorGeneric	asan/asan_errors.h	/^struct ErrorGeneric : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidAlignedAllocAlignment	asan/asan_errors.h	/^  ErrorInvalidAlignedAllocAlignment(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorInvalidAlignedAllocAlignment
ErrorInvalidAlignedAllocAlignment	asan/asan_errors.h	/^struct ErrorInvalidAlignedAllocAlignment : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidAllocationAlignment	asan/asan_errors.h	/^  ErrorInvalidAllocationAlignment(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorInvalidAllocationAlignment
ErrorInvalidAllocationAlignment	asan/asan_errors.h	/^struct ErrorInvalidAllocationAlignment : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidPointerPair	asan/asan_errors.h	/^  ErrorInvalidPointerPair(u32 tid, uptr pc_, uptr bp_, uptr sp_, uptr p1,$/;"	f	struct:__asan::ErrorInvalidPointerPair
ErrorInvalidPointerPair	asan/asan_errors.h	/^struct ErrorInvalidPointerPair : ErrorBase {$/;"	s	namespace:__asan
ErrorInvalidPosixMemalignAlignment	asan/asan_errors.h	/^  ErrorInvalidPosixMemalignAlignment(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorInvalidPosixMemalignAlignment
ErrorInvalidPosixMemalignAlignment	asan/asan_errors.h	/^struct ErrorInvalidPosixMemalignAlignment : ErrorBase {$/;"	s	namespace:__asan
ErrorKind	asan/asan_errors.h	/^enum ErrorKind {$/;"	g	namespace:__asan
ErrorMallocUsableSizeNotOwned	asan/asan_errors.h	/^  ErrorMallocUsableSizeNotOwned(u32 tid, BufferedStackTrace *stack_, uptr addr)$/;"	f	struct:__asan::ErrorMallocUsableSizeNotOwned
ErrorMallocUsableSizeNotOwned	asan/asan_errors.h	/^struct ErrorMallocUsableSizeNotOwned : ErrorBase {$/;"	s	namespace:__asan
ErrorNewDeleteTypeMismatch	asan/asan_errors.h	/^  ErrorNewDeleteTypeMismatch(u32 tid, BufferedStackTrace *stack, uptr addr,$/;"	f	struct:__asan::ErrorNewDeleteTypeMismatch
ErrorNewDeleteTypeMismatch	asan/asan_errors.h	/^struct ErrorNewDeleteTypeMismatch : ErrorBase {$/;"	s	namespace:__asan
ErrorODRViolation	asan/asan_errors.h	/^  ErrorODRViolation(u32 tid, const __asan_global *g1, u32 stack_id1_,$/;"	f	struct:__asan::ErrorODRViolation
ErrorODRViolation	asan/asan_errors.h	/^struct ErrorODRViolation : ErrorBase {$/;"	s	namespace:__asan
ErrorOutOfMemory	asan/asan_errors.h	/^  ErrorOutOfMemory(u32 tid, BufferedStackTrace *stack_, uptr requested_size_)$/;"	f	struct:__asan::ErrorOutOfMemory
ErrorOutOfMemory	asan/asan_errors.h	/^struct ErrorOutOfMemory : ErrorBase {$/;"	s	namespace:__asan
ErrorPvallocOverflow	asan/asan_errors.h	/^  ErrorPvallocOverflow(u32 tid, BufferedStackTrace *stack_, uptr size_)$/;"	f	struct:__asan::ErrorPvallocOverflow
ErrorPvallocOverflow	asan/asan_errors.h	/^struct ErrorPvallocOverflow : ErrorBase {$/;"	s	namespace:__asan
ErrorReallocArrayOverflow	asan/asan_errors.h	/^  ErrorReallocArrayOverflow(u32 tid, BufferedStackTrace *stack_, uptr count_,$/;"	f	struct:__asan::ErrorReallocArrayOverflow
ErrorReallocArrayOverflow	asan/asan_errors.h	/^struct ErrorReallocArrayOverflow : ErrorBase {$/;"	s	namespace:__asan
ErrorRecoveryLevel	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int ErrorRecoveryLevel : 1;$/;"	m	struct:__anon31::__anon32
ErrorRecoveryLevel	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint16_t ErrorRecoveryLevel;$/;"	m	struct:__anon31
ErrorRssLimitExceeded	asan/asan_errors.h	/^  ErrorRssLimitExceeded(u32 tid, BufferedStackTrace *stack_)$/;"	f	struct:__asan::ErrorRssLimitExceeded
ErrorRssLimitExceeded	asan/asan_errors.h	/^struct ErrorRssLimitExceeded : ErrorBase {$/;"	s	namespace:__asan
ErrorSanitizerGetAllocatedSizeNotOwned	asan/asan_errors.h	/^  ErrorSanitizerGetAllocatedSizeNotOwned(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
ErrorSanitizerGetAllocatedSizeNotOwned	asan/asan_errors.h	/^struct ErrorSanitizerGetAllocatedSizeNotOwned : ErrorBase {$/;"	s	namespace:__asan
ErrorStringFunctionMemoryRangesOverlap	asan/asan_errors.h	/^  ErrorStringFunctionMemoryRangesOverlap(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
ErrorStringFunctionMemoryRangesOverlap	asan/asan_errors.h	/^struct ErrorStringFunctionMemoryRangesOverlap : ErrorBase {$/;"	s	namespace:__asan
ErrorStringFunctionSizeOverflow	asan/asan_errors.h	/^  ErrorStringFunctionSizeOverflow(u32 tid, BufferedStackTrace *stack_,$/;"	f	struct:__asan::ErrorStringFunctionSizeOverflow
ErrorStringFunctionSizeOverflow	asan/asan_errors.h	/^struct ErrorStringFunctionSizeOverflow : ErrorBase {$/;"	s	namespace:__asan
ErrorType	ubsan/ubsan_diag.h	/^enum class ErrorType {$/;"	c	namespace:__ubsan
Event	tsan/tsan_trace.h	/^typedef u64 Event;$/;"	t	namespace:__tsan
EventType	tsan/tsan_trace.h	/^enum EventType {$/;"	g	namespace:__tsan
EventTypeFuncEnter	tsan/tsan_trace.h	/^  EventTypeFuncEnter,$/;"	e	enum:__tsan::EventType
EventTypeFuncExit	tsan/tsan_trace.h	/^  EventTypeFuncExit,$/;"	e	enum:__tsan::EventType
EventTypeLock	tsan/tsan_trace.h	/^  EventTypeLock,$/;"	e	enum:__tsan::EventType
EventTypeMop	tsan/tsan_trace.h	/^  EventTypeMop,$/;"	e	enum:__tsan::EventType
EventTypeRLock	tsan/tsan_trace.h	/^  EventTypeRLock,$/;"	e	enum:__tsan::EventType
EventTypeRUnlock	tsan/tsan_trace.h	/^  EventTypeRUnlock$/;"	e	enum:__tsan::EventType
EventTypeUnlock	tsan/tsan_trace.h	/^  EventTypeUnlock,$/;"	e	enum:__tsan::EventType
ExitHook	lsan/lsan_common_fuchsia.cpp	/^int ExitHook(int status) {$/;"	f	namespace:__lsan
ExitSymbolizer	tsan/tsan_symbolize.cpp	/^void ExitSymbolizer() {$/;"	f	namespace:__tsan
ExpectRace	tsan/tsan_interface_ann.cpp	/^struct ExpectRace {$/;"	s	namespace:__tsan
ExpectedType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ExpectedType;$/;"	m	struct:__ubsan::InvalidObjCCast
ExternalAccess	tsan/tsan_external.cpp	/^void ExternalAccess(void *addr, uptr caller_pc, void *tag, AccessFunc access) {$/;"	f	namespace:__tsan
ExternalMopDesc	tsan/tsan_report.cpp	/^static const char *ExternalMopDesc(bool first, bool write) {$/;"	f	namespace:__tsan
ExtractInt	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *ExtractInt(const char *str, const char *delims, int *result) {$/;"	f	namespace:__sanitizer
ExtractLongJmpSp	tsan/tsan_platform_linux.cpp	/^uptr ExtractLongJmpSp(uptr *env) {$/;"	f	namespace:__tsan
ExtractLongJmpSp	tsan/tsan_platform_mac.cpp	/^uptr ExtractLongJmpSp(uptr *env) {$/;"	f	namespace:__tsan
ExtractRecvmsgFDs	tsan/tsan_platform_linux.cpp	/^int ExtractRecvmsgFDs(void *msgp, int *fds, int nfd) {$/;"	f	namespace:__tsan
ExtractResolvFDs	tsan/tsan_platform_linux.cpp	/^int ExtractResolvFDs(void *state, int *fds, int nfd) {$/;"	f	namespace:__tsan
ExtractSptr	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *ExtractSptr(const char *str, const char *delims, sptr *result) {$/;"	f	namespace:__sanitizer
ExtractTagFromStack	tsan/tsan_rtl.h	/^void ExtractTagFromStack(StackTraceTy *stack, uptr *tag = nullptr) {$/;"	f	namespace:__tsan
ExtractToken	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *ExtractToken(const char *str, const char *delims, char **result) {$/;"	f	namespace:__sanitizer
ExtractTokenUpToDelimiter	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *ExtractTokenUpToDelimiter(const char *str, const char *delimiter,$/;"	f	namespace:__sanitizer
ExtractUptr	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *ExtractUptr(const char *str, const char *delims, uptr *result) {$/;"	f	namespace:__sanitizer
F	tsan/tsan_md5.cpp	141;"	d
F	tsan/tsan_md5.cpp	16;"	d
FILEMON_SET_FD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	127;"	d
FILEMON_SET_PID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	128;"	d
FILE_LEVEL_DIRECTIVE	builtins/assembly.h	27;"	d
FILE_LEVEL_DIRECTIVE	builtins/assembly.h	37;"	d
FILE_LEVEL_DIRECTIVE	builtins/assembly.h	56;"	d
FIRST_32_SECOND_64	sanitizer_common/sanitizer_platform.h	118;"	d
FIRST_32_SECOND_64	sanitizer_common/sanitizer_platform.h	120;"	d
FORMAT	sanitizer_common/sanitizer_internal_defs.h	210;"	d
FORMAT	sanitizer_common/sanitizer_internal_defs.h	224;"	d
FORMAT_DUMPFILE	sanitizer_common/sanitizer_symbolizer_fuchsia.h	38;"	d
FRAME_SIZE	sanitizer_common/sanitizer_linux.cpp	1449;"	d
FRAME_TOC_SAVE_OFFSET	sanitizer_common/sanitizer_linux.cpp	1450;"	d
FROM_MALLOC	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  FROM_MALLOC = 1,  \/\/ Memory block came from malloc, calloc, realloc, etc.$/;"	e	enum:__asan::AllocType
FROM_MALLOC	asan/asan_allocator.h	/^  FROM_MALLOC = 1,  \/\/ Memory block came from malloc, calloc, realloc, etc.$/;"	e	enum:__asan::AllocType
FROM_NEW	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  FROM_NEW = 2,     \/\/ Memory block came from operator new.$/;"	e	enum:__asan::AllocType
FROM_NEW	asan/asan_allocator.h	/^  FROM_NEW = 2,     \/\/ Memory block came from operator new.$/;"	e	enum:__asan::AllocType
FROM_NEW_BR	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  FROM_NEW_BR = 3   \/\/ Memory block came from operator new [ ]$/;"	e	enum:__asan::AllocType
FROM_NEW_BR	asan/asan_allocator.h	/^  FROM_NEW_BR = 3   \/\/ Memory block came from operator new [ ]$/;"	e	enum:__asan::AllocType
FUNC_TYPE	interception/interception.h	172;"	d
FUTEX_PRIVATE_FLAG	sanitizer_common/sanitizer_linux.cpp	/^const int FUTEX_PRIVATE_FLAG = 128;$/;"	v
FUTEX_WAIT	sanitizer_common/sanitizer_linux.cpp	/^const int FUTEX_WAIT = 0;$/;"	v
FUTEX_WAIT_PRIVATE	sanitizer_common/sanitizer_linux.cpp	/^const int FUTEX_WAIT_PRIVATE = FUTEX_WAIT | FUTEX_PRIVATE_FLAG;$/;"	v
FUTEX_WAKE	sanitizer_common/sanitizer_linux.cpp	/^const int FUTEX_WAKE = 1;$/;"	v
FUTEX_WAKE_PRIVATE	sanitizer_common/sanitizer_linux.cpp	/^const int FUTEX_WAKE_PRIVATE = FUTEX_WAKE | FUTEX_PRIVATE_FLAG;$/;"	v
F_LOCK	tsan/tsan_interceptors_posix.cpp	146;"	d
F_TEST	tsan/tsan_interceptors_posix.cpp	148;"	d
F_TLOCK	tsan/tsan_interceptors_posix.cpp	147;"	d
F_ULOCK	tsan/tsan_interceptors_posix.cpp	145;"	d
FakeFrame	asan/asan_fake_stack.h	/^struct FakeFrame {$/;"	s	namespace:__asan
FakeStack	asan/asan_fake_stack.h	/^  FakeStack() { }$/;"	f	class:__asan::FakeStack
FakeStack	asan/asan_fake_stack.h	/^class FakeStack {$/;"	c	namespace:__asan
FastPoisonShadow	asan/asan_poisoning.h	/^ALWAYS_INLINE void FastPoisonShadow(uptr aligned_beg, uptr aligned_size,$/;"	f	namespace:__asan
FastPoisonShadowPartialRightRedzone	asan/asan_poisoning.h	/^ALWAYS_INLINE void FastPoisonShadowPartialRightRedzone($/;"	f	namespace:__asan
FastState	tsan/tsan_rtl.h	/^  FastState(u64 tid, u64 epoch) {$/;"	f	class:__tsan::FastState
FastState	tsan/tsan_rtl.h	/^  explicit FastState(u64 x)$/;"	f	class:__tsan::FastState
FastState	tsan/tsan_rtl.h	/^class FastState {$/;"	c	namespace:__tsan
FdAccess	tsan/tsan_fd.cpp	/^void FdAccess(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdAcquire	tsan/tsan_fd.cpp	/^void FdAcquire(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdClose	tsan/tsan_fd.cpp	/^void FdClose(ThreadState *thr, uptr pc, int fd, bool write) {$/;"	f	namespace:__tsan
FdContext	tsan/tsan_fd.cpp	/^struct FdContext {$/;"	s	namespace:__tsan
FdDesc	tsan/tsan_fd.cpp	/^struct FdDesc {$/;"	s	namespace:__tsan
FdDup	tsan/tsan_fd.cpp	/^void FdDup(ThreadState *thr, uptr pc, int oldfd, int newfd, bool write) {$/;"	f	namespace:__tsan
FdEventCreate	tsan/tsan_fd.cpp	/^void FdEventCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdFileCreate	tsan/tsan_fd.cpp	/^void FdFileCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdInit	tsan/tsan_fd.cpp	/^void FdInit() {$/;"	f	namespace:__tsan
FdInotifyCreate	tsan/tsan_fd.cpp	/^void FdInotifyCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdLocation	tsan/tsan_fd.cpp	/^bool FdLocation(uptr addr, int *fd, int *tid, u32 *stack) {$/;"	f	namespace:__tsan
FdOnFork	tsan/tsan_fd.cpp	/^void FdOnFork(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
FdPipeCreate	tsan/tsan_fd.cpp	/^void FdPipeCreate(ThreadState *thr, uptr pc, int rfd, int wfd) {$/;"	f	namespace:__tsan
FdPollCreate	tsan/tsan_fd.cpp	/^void FdPollCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdRelease	tsan/tsan_fd.cpp	/^void FdRelease(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSignalCreate	tsan/tsan_fd.cpp	/^void FdSignalCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSocketAccept	tsan/tsan_fd.cpp	/^void FdSocketAccept(ThreadState *thr, uptr pc, int fd, int newfd) {$/;"	f	namespace:__tsan
FdSocketConnect	tsan/tsan_fd.cpp	/^void FdSocketConnect(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSocketConnecting	tsan/tsan_fd.cpp	/^void FdSocketConnecting(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSocketCreate	tsan/tsan_fd.cpp	/^void FdSocketCreate(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
FdSync	tsan/tsan_fd.cpp	/^struct FdSync {$/;"	s	namespace:__tsan
Fiber	sanitizer_common/sanitizer_thread_registry.h	/^  Fiber,   \/\/ Fiber$/;"	m	class:__sanitizer::ThreadType
FiberCreate	tsan/tsan_rtl_thread.cpp	/^ThreadState *FiberCreate(ThreadState *thr, uptr pc, unsigned flags) {$/;"	f	namespace:__tsan
FiberDestroy	tsan/tsan_rtl_thread.cpp	/^void FiberDestroy(ThreadState *thr, uptr pc, ThreadState *fiber) {$/;"	f	namespace:__tsan
FiberSwitch	tsan/tsan_rtl_thread.cpp	/^void FiberSwitch(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
FiberSwitchFlagNoSync	tsan/tsan_rtl.h	/^  FiberSwitchFlagNoSync = 1 << 0, \/\/ __tsan_switch_to_fiber_no_sync$/;"	e	enum:__tsan::FiberSwitchFlags
FiberSwitchFlags	tsan/tsan_rtl.h	/^enum FiberSwitchFlags {$/;"	g	namespace:__tsan
FiberSwitchImpl	tsan/tsan_rtl_thread.cpp	/^void FiberSwitchImpl(ThreadState *from, ThreadState *to) {$/;"	f	namespace:__tsan
File2addr	tsan/tsan_fd.cpp	/^uptr File2addr(const char *path) {$/;"	f	namespace:__tsan
FileAccessMode	sanitizer_common/sanitizer_file.h	/^enum FileAccessMode {$/;"	g	namespace:__sanitizer
FileCloser	sanitizer_common/sanitizer_file.h	/^  explicit FileCloser(fd_t fd) : fd(fd) {}$/;"	f	struct:__sanitizer::FileCloser
FileCloser	sanitizer_common/sanitizer_file.h	/^struct FileCloser {$/;"	s	namespace:__sanitizer
FileExists	sanitizer_common/sanitizer_linux.cpp	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
FileExists	sanitizer_common/sanitizer_mac.cpp	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
FileExists	sanitizer_common/sanitizer_rtems.cpp	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
FileExists	sanitizer_common/sanitizer_win.cpp	/^bool FileExists(const char *filename) {$/;"	f	namespace:__sanitizer
Filename	ubsan/ubsan_value.h	/^  const char *Filename;$/;"	m	class:__ubsan::SourceLocation
FillMallocStatistics	asan/asan_stats.cpp	/^void FillMallocStatistics(AsanMallocStats *malloc_stats) {$/;"	f	namespace:__asan
FillMemoryProfile	sanitizer_common/sanitizer_allocator_primary64.h	/^  static void FillMemoryProfile(uptr start, uptr rss, bool file, uptr *stats,$/;"	f	class:SizeClassAllocator64
FillModuleInfo	sanitizer_common/sanitizer_symbolizer.cpp	/^void AddressInfo::FillModuleInfo(const char *mod_name, uptr mod_offset,$/;"	f	class:__sanitizer::AddressInfo
FillProfileCallback	tsan/tsan_platform_linux.cpp	/^void FillProfileCallback(uptr p, uptr rss, bool file,$/;"	f	namespace:__tsan
Finalize	tsan/tsan_rtl.cpp	/^int Finalize(ThreadState *thr) {$/;"	f	namespace:__tsan
FindAvailableMemoryRange	sanitizer_common/sanitizer_linux.cpp	/^uptr FindAvailableMemoryRange(uptr size, uptr alignment, uptr left_padding,$/;"	f	namespace:__sanitizer
FindAvailableMemoryRange	sanitizer_common/sanitizer_mac.cpp	/^uptr FindAvailableMemoryRange(uptr size, uptr alignment, uptr left_padding,$/;"	f	namespace:__sanitizer
FindAvailableMemoryRange	sanitizer_common/sanitizer_win.cpp	/^uptr FindAvailableMemoryRange(uptr size, uptr alignment, uptr left_padding,$/;"	f	namespace:__sanitizer
FindDynamicShadowStart	asan/asan_linux.cpp	/^uptr FindDynamicShadowStart() {$/;"	f	namespace:__asan
FindDynamicShadowStart	asan/asan_mac.cpp	/^uptr FindDynamicShadowStart() {$/;"	f	namespace:__asan
FindDynamicShadowStart	asan/asan_win.cpp	/^uptr FindDynamicShadowStart() {$/;"	f	namespace:__asan
FindDynamicShadowStart	hwasan/hwasan_dynamic_shadow.cpp	/^uptr FindDynamicShadowStart(uptr shadow_size_bytes) {$/;"	f	namespace:__hwasan
FindFile	sanitizer_common/sanitizer_suppressions.cpp	/^static const char *FindFile(const char *file_path, char *, uptr) {$/;"	f	namespace:__sanitizer
FindFile	sanitizer_common/sanitizer_suppressions.cpp	/^static const char *FindFile(const char *file_path,$/;"	f	namespace:__sanitizer
FindFirstDSOCallback	asan/asan_linux.cpp	/^static int FindFirstDSOCallback(struct dl_phdr_info *info, size_t size,$/;"	f	namespace:__asan
FindHeapAllocation	hwasan/hwasan_report.cpp	/^static bool FindHeapAllocation(HeapAllocationsRingBuffer *rb, uptr tagged_addr,$/;"	f	namespace:__hwasan
FindHeapChunkByAddress	asan/asan_allocator.cpp	/^  AsanChunkView FindHeapChunkByAddress(uptr addr) {$/;"	f	struct:__asan::Allocator
FindHeapChunkByAddress	asan/asan_allocator.cpp	/^AsanChunkView FindHeapChunkByAddress(uptr addr) {$/;"	f	namespace:__asan
FindHeapChunkByAddress	hwasan/hwasan_allocator.cpp	/^HwasanChunkView FindHeapChunkByAddress(uptr address) {$/;"	f	namespace:__hwasan
FindHeapChunkByAllocBeg	asan/asan_allocator.cpp	/^AsanChunkView FindHeapChunkByAllocBeg(uptr addr) {$/;"	f	namespace:__asan
FindInfoForStackVar	asan/asan_debugging.cpp	/^static void FindInfoForStackVar(uptr addr, const char *frame_descr, uptr offset,$/;"	f	namespace:__anon68
FindModuleForAddress	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const LoadedModule *Symbolizer::FindModuleForAddress(uptr address) {$/;"	f	class:__sanitizer::Symbolizer
FindModuleNameAndOffsetForAddress	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool Symbolizer::FindModuleNameAndOffsetForAddress(uptr address,$/;"	f	class:__sanitizer::Symbolizer
FindPathToBinary	sanitizer_common/sanitizer_file.cpp	/^char *FindPathToBinary(const char *name) {$/;"	f	namespace:__sanitizer
FindPremappedShadowStart	asan/asan_linux.cpp	/^uptr FindPremappedShadowStart(uptr shadow_size_bytes) {$/;"	f	namespace:__asan
FindPremappedShadowStart	hwasan/hwasan_dynamic_shadow.cpp	/^static uptr FindPremappedShadowStart(uptr shadow_size_bytes) {$/;"	f	namespace:__hwasan
FindRace	tsan/tsan_interface_ann.cpp	/^static ExpectRace *FindRace(ExpectRace *list, uptr addr, uptr size) {$/;"	f	namespace:__tsan
FindRacyAddress	tsan/tsan_rtl_report.cpp	/^static bool FindRacyAddress(const RacyAddress &ra0) {$/;"	f	namespace:__tsan
FindRacyStacks	tsan/tsan_rtl_report.cpp	/^static bool FindRacyStacks(const RacyStacks &hash) {$/;"	f	namespace:__tsan
FindRegistrationSite	asan/asan_globals.cpp	/^static u32 FindRegistrationSite(const Global *g) {$/;"	f	namespace:__asan
FindThread	sanitizer_common/sanitizer_thread_registry.cpp	/^u32 ThreadRegistry::FindThread(FindThreadCallback cb, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
FindThreadByStackAddress	asan/asan_thread.cpp	/^AsanThread *FindThreadByStackAddress(uptr addr) {$/;"	f	namespace:__asan
FindThreadByTidLocked	tsan/tsan_rtl_report.cpp	/^static ThreadContext *FindThreadByTidLocked(int tid) {$/;"	f	namespace:__tsan
FindThreadByUid	lsan/lsan_thread.cpp	/^static bool FindThreadByUid(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__lsan
FindThreadByUidLocked	tsan/tsan_rtl_report.cpp	/^static ThreadContext *FindThreadByUidLocked(int unique_id) {$/;"	f	namespace:__tsan
FindThreadByUidLockedCallback	tsan/tsan_rtl_report.cpp	/^static bool FindThreadByUidLockedCallback(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__tsan
FindThreadCallback	sanitizer_common/sanitizer_thread_registry.h	/^  typedef bool (*FindThreadCallback)(ThreadContextBase *tctx, void *arg);$/;"	t	class:__sanitizer::ThreadRegistry
FindThreadContextByOsIDLocked	sanitizer_common/sanitizer_thread_registry.cpp	/^ThreadContextBase *ThreadRegistry::FindThreadContextByOsIDLocked(tid_t os_id) {$/;"	f	class:__sanitizer::ThreadRegistry
FindThreadContextByOsIdCallback	sanitizer_common/sanitizer_thread_registry.cpp	/^static bool FindThreadContextByOsIdCallback(ThreadContextBase *tctx,$/;"	f	namespace:__sanitizer
FindThreadContextLocked	sanitizer_common/sanitizer_thread_registry.cpp	/^ThreadRegistry::FindThreadContextLocked(FindThreadCallback cb, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
FindUUID	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static void FindUUID(const load_command *first_lc, u8 *uuid_output) {$/;"	f	namespace:__sanitizer
FinishSwitchFiber	asan/asan_thread.cpp	/^void AsanThread::FinishSwitchFiber(FakeStack *fake_stack_save,$/;"	f	class:__asan::AsanThread
FinishThread	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::FinishThread(u32 tid) {$/;"	f	class:__sanitizer::ThreadRegistry
FiredSuppression	tsan/tsan_rtl.h	/^struct FiredSuppression {$/;"	s	namespace:__tsan
FixedCVE_2016_2143	sanitizer_common/sanitizer_linux_s390.cpp	/^static bool FixedCVE_2016_2143() {$/;"	f	namespace:__sanitizer
Flag	sanitizer_common/sanitizer_flag_parser.h	/^  struct Flag {$/;"	s	class:__sanitizer::FlagParser
FlagHandler	sanitizer_common/sanitizer_flag_parser.h	/^  explicit FlagHandler(T *t) : t_(t) {}$/;"	f	class:__sanitizer::final
FlagHandlerBase	sanitizer_common/sanitizer_flag_parser.h	/^class FlagHandlerBase {$/;"	c	namespace:__sanitizer
FlagHandlerInclude	sanitizer_common/sanitizer_flags.cpp	/^  explicit FlagHandlerInclude(FlagParser *parser, bool ignore_missing)$/;"	f	class:__sanitizer::final
FlagParser	sanitizer_common/sanitizer_flag_parser.cpp	/^FlagParser::FlagParser() : n_flags_(0), buf_(nullptr), pos_(0) {$/;"	f	class:__sanitizer::FlagParser
FlagParser	sanitizer_common/sanitizer_flag_parser.h	/^class FlagParser {$/;"	c	namespace:__sanitizer
Flags	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_flags.h	/^struct Flags {$/;"	s	namespace:__asan
Flags	asan/asan_flags.h	/^struct Flags {$/;"	s	namespace:__asan
Flags	hwasan/hwasan_flags.h	/^struct Flags {$/;"	s	namespace:__hwasan
Flags	lsan/lsan_common.h	/^struct Flags {$/;"	s	namespace:__lsan
Flags	tsan/tsan_flags.h	/^struct Flags : DDFlags {$/;"	s	namespace:__tsan
Flags	ubsan/ubsan_flags.h	/^struct Flags {$/;"	s	namespace:__ubsan
FlagsOffset	asan/asan_fake_stack.h	/^  static uptr FlagsOffset(uptr stack_size_log, uptr class_id) {$/;"	f	class:__asan::FakeStack
FlatByteMap	sanitizer_common/sanitizer_allocator_bytemap.h	/^class FlatByteMap {$/;"	c
Float	ubsan/ubsan_diag.h	/^      FloatMax Float;$/;"	m	union:__ubsan::Diag::Arg::__anon3
FloatCastOverflowData	ubsan/ubsan_handlers.h	/^struct FloatCastOverflowData {$/;"	s	namespace:__ubsan
FloatCastOverflowDataV2	ubsan/ubsan_handlers.h	/^struct FloatCastOverflowDataV2 {$/;"	s	namespace:__ubsan
FloatMax	ubsan/ubsan_value.h	/^typedef long double FloatMax;$/;"	t	namespace:__ubsan
FloodFillTag	lsan/lsan_common.cpp	/^static void FloodFillTag(Frontier *frontier, ChunkTag tag) {$/;"	f	namespace:__lsan
Flush	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual void Flush() {}$/;"	f	class:__sanitizer::SymbolizerTool
Flush	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^void Symbolizer::Flush() {$/;"	f	class:__sanitizer::Symbolizer
FlushCache	tsan/tsan_dense_alloc.h	/^  void FlushCache(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
FlushDirty	tsan/tsan_clock.cpp	/^void SyncClock::FlushDirty() {$/;"	f	class:__tsan::SyncClock
FlushShadowMemory	tsan/tsan_platform_linux.cpp	/^void FlushShadowMemory() {$/;"	f	namespace:__tsan
FlushShadowMemory	tsan/tsan_platform_mac.cpp	/^void FlushShadowMemory() {$/;"	f	namespace:__tsan
FlushShadowMemory	tsan/tsan_platform_windows.cpp	/^void FlushShadowMemory() {$/;"	f	namespace:__tsan
FlushShadowMemoryCallback	tsan/tsan_platform_linux.cpp	/^void FlushShadowMemoryCallback($/;"	f	namespace:__tsan
FlushStreams	tsan/tsan_interceptors_posix.cpp	/^static void FlushStreams() {$/;"	f
FlushToDeadThreadStats	asan/asan_stats.cpp	/^void FlushToDeadThreadStats(AsanStats *stats) {$/;"	f	namespace:__asan
FlushUnneededASanShadowMemory	asan/asan_fuchsia.cpp	/^void FlushUnneededASanShadowMemory(uptr p, uptr size) {$/;"	f	namespace:__asan
FlushUnneededASanShadowMemory	asan/asan_linux.cpp	/^void FlushUnneededASanShadowMemory(uptr p, uptr size) {$/;"	f	namespace:__asan
FlushUnneededASanShadowMemory	asan/asan_mac.cpp	/^void FlushUnneededASanShadowMemory(uptr p, uptr size) {$/;"	f	namespace:__asan
FlushUnneededASanShadowMemory	asan/asan_rtems.cpp	/^void FlushUnneededASanShadowMemory(uptr p, uptr size) {$/;"	f	namespace:__asan
FlushUnneededASanShadowMemory	asan/asan_win.cpp	/^void FlushUnneededASanShadowMemory(uptr p, uptr size) {$/;"	f	namespace:__asan
ForEach	hwasan/hwasan_thread_list.h	/^  void ForEach(CB cb) {$/;"	f	struct:__hwasan::ThreadListHead
ForEachChunk	asan/asan_allocator.cpp	/^void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	namespace:__lsan
ForEachChunk	lsan/lsan_allocator.cpp	/^void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	namespace:__lsan
ForEachChunk	sanitizer_common/sanitizer_allocator_combined.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:CombinedAllocator
ForEachChunk	sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:SizeClassAllocator32
ForEachChunk	sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:SizeClassAllocator64
ForEachChunk	sanitizer_common/sanitizer_allocator_secondary.h	/^  void ForEachChunk(ForEachChunkCallback callback, void *arg) {$/;"	f	class:LargeMmapAllocator
ForEachChunkCallback	sanitizer_common/sanitizer_allocator.h	/^typedef void (*ForEachChunkCallback)(uptr chunk, void *arg);$/;"	t	namespace:__sanitizer
ForEachExtraStackRange	asan/asan_thread.cpp	/^void ForEachExtraStackRange(tid_t os_id, RangeIteratorCallback callback,$/;"	f	namespace:__lsan
ForEachExtraStackRange	lsan/lsan_thread.cpp	/^void ForEachExtraStackRange(tid_t os_id, RangeIteratorCallback callback,$/;"	f	namespace:__lsan
ForEachExtraStackRangeCb	lsan/lsan_common.cpp	/^void ForEachExtraStackRangeCb(uptr begin, uptr end, void* arg) {$/;"	f	namespace:__lsan
ForEachFakeFrame	asan/asan_fake_stack.cpp	/^void FakeStack::ForEachFakeFrame(RangeIteratorCallback callback, void *arg) {$/;"	f	class:__asan::FakeStack
ForEachMappedRegion	sanitizer_common/sanitizer_linux.cpp	/^void ForEachMappedRegion(link_map *map, void (*cb)(const void *, uptr)) {$/;"	f	namespace:__sanitizer
ForceLock	asan/asan_allocator.cpp	/^  void ForceLock() {$/;"	f	struct:__asan::Allocator
ForceLock	sanitizer_common/sanitizer_allocator_combined.h	/^  void ForceLock() {$/;"	f	class:CombinedAllocator
ForceLock	sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForceLock() {$/;"	f	class:SizeClassAllocator32
ForceLock	sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForceLock() {$/;"	f	class:SizeClassAllocator64
ForceLock	sanitizer_common/sanitizer_allocator_secondary.h	/^  void ForceLock() {$/;"	f	class:LargeMmapAllocator
ForceReleaseToOS	sanitizer_common/sanitizer_allocator_combined.h	/^  void ForceReleaseToOS() {$/;"	f	class:CombinedAllocator
ForceReleaseToOS	sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForceReleaseToOS() {$/;"	f	class:SizeClassAllocator32
ForceReleaseToOS	sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForceReleaseToOS() {$/;"	f	class:SizeClassAllocator64
ForceUnlock	asan/asan_allocator.cpp	/^  void ForceUnlock() {$/;"	f	struct:__asan::Allocator
ForceUnlock	sanitizer_common/sanitizer_allocator_combined.h	/^  void ForceUnlock() {$/;"	f	class:CombinedAllocator
ForceUnlock	sanitizer_common/sanitizer_allocator_primary32.h	/^  void ForceUnlock() {$/;"	f	class:SizeClassAllocator32
ForceUnlock	sanitizer_common/sanitizer_allocator_primary64.h	/^  void ForceUnlock() {$/;"	f	class:SizeClassAllocator64
ForceUnlock	sanitizer_common/sanitizer_allocator_secondary.h	/^  void ForceUnlock() {$/;"	f	class:LargeMmapAllocator
ForceWholeArchiveIncludeForSanCov	sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cpp	/^void ForceWholeArchiveIncludeForSanCov() {}$/;"	f	namespace:__sanitizer
ForceWholeArchiveIncludeForSanitizerCommon	sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cpp	/^void ForceWholeArchiveIncludeForSanitizerCommon() {}$/;"	f	namespace:__sanitizer
ForkBefore	tsan/tsan_rtl.cpp	/^void ForkBefore(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ForkChildAfter	tsan/tsan_rtl.cpp	/^void ForkChildAfter(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ForkParentAfter	tsan/tsan_rtl.cpp	/^void ForkParentAfter(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
Format	sanitizer_common/sanitizer_flag_parser.h	/^  virtual bool Format(char *buffer, uptr size) {$/;"	f	class:__sanitizer::FlagHandlerBase
Format	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<HandleSignalMode>::Format(char *buffer, uptr size) {$/;"	f	class:__sanitizer::FlagHandler
Format	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<bool>::Format(char *buffer, uptr size) {$/;"	f	class:__sanitizer::FlagHandler
Format	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<const char *>::Format(char *buffer, uptr size) {$/;"	f	class:__sanitizer::FlagHandler
Format	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<int>::Format(char *buffer, uptr size) {$/;"	f	class:__sanitizer::FlagHandler
Format	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<s64>::Format(char *buffer, uptr size) {$/;"	f	class:__sanitizer::FlagHandler
Format	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<uptr>::Format(char *buffer, uptr size) {$/;"	f	class:__sanitizer::FlagHandler
FormatAndSendCommand	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *LLVMSymbolizer::FormatAndSendCommand(const char *command_prefix,$/;"	f	class:__sanitizer::LLVMSymbolizer
FormatString	sanitizer_common/sanitizer_flag_parser.h	/^  inline bool FormatString(char *buffer, uptr size, const char *str_to_use) {$/;"	f	class:__sanitizer::FlagHandlerBase
FormatUUID	sanitizer_common/sanitizer_mac.cpp	/^void FormatUUID(char *out, uptr size, const u8 *uuid) {$/;"	f	namespace:__sanitizer
FrameInfo	sanitizer_common/sanitizer_symbolizer.h	/^struct FrameInfo {$/;"	s	namespace:__sanitizer
FrameIsInternal	tsan/tsan_report.cpp	/^static bool FrameIsInternal(const SymbolizedStack *frame) {$/;"	f	namespace:__tsan
Free	tsan/tsan_dense_alloc.h	/^  void Free(Cache *c, IndexT idx) {$/;"	f	class:__tsan::DenseSlabAlloc
FreeBlock	tsan/tsan_sync.cpp	/^uptr MetaMap::FreeBlock(Processor *proc, uptr p) {$/;"	f	class:__tsan::MetaMap
FreePagesRangeTracker	sanitizer_common/sanitizer_allocator_primary64.h	/^    explicit FreePagesRangeTracker(MemoryMapperT* mapper)$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
FreePagesRangeTracker	sanitizer_common/sanitizer_allocator_primary64.h	/^  class FreePagesRangeTracker {$/;"	c	class:SizeClassAllocator64
FreeRange	tsan/tsan_sync.cpp	/^bool MetaMap::FreeRange(Processor *proc, uptr p, uptr sz) {$/;"	f	class:__tsan::MetaMap
FreeTid	asan/asan_allocator.cpp	/^uptr AsanChunkView::FreeTid() const {$/;"	f	class:__asan::AsanChunkView
FromPrimary	sanitizer_common/sanitizer_allocator_combined.h	/^  bool FromPrimary(void *p) {$/;"	f	class:CombinedAllocator
FromSmallHeap	hwasan/hwasan_allocator.cpp	/^bool HwasanChunkView::FromSmallHeap() const {$/;"	f	class:__hwasan::HwasanChunkView
FromType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &FromType;$/;"	m	struct:__ubsan::FloatCastOverflowData
FromType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &FromType;$/;"	m	struct:__ubsan::FloatCastOverflowDataV2
FromType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &FromType;$/;"	m	struct:__ubsan::ImplicitConversionData
FromUnrecoverableHandler	ubsan/ubsan_diag.h	/^  bool FromUnrecoverableHandler;$/;"	m	struct:__ubsan::ReportOptions
Frontier	lsan/lsan_common.h	/^typedef InternalMmapVector<uptr> Frontier;$/;"	t	namespace:__lsan
FuncEntry	tsan/tsan_rtl.cpp	/^void FuncEntry(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
FuncExit	tsan/tsan_rtl.cpp	/^void FuncExit(ThreadState *thr) {$/;"	f	namespace:__tsan
FunctionHasPadding	interception/interception_win.cpp	/^static bool FunctionHasPadding(uptr address, uptr size) {$/;"	f	namespace:__interception
FunctionHasPrefix	interception/interception_win.cpp	/^static bool FunctionHasPrefix(uptr address, const T &pattern) {$/;"	f	namespace:__interception
FunctionTypeMismatchData	ubsan/ubsan_handlers_cxx.h	/^struct FunctionTypeMismatchData {$/;"	s	namespace:__ubsan
G	tsan/tsan_md5.cpp	142;"	d
G	tsan/tsan_md5.cpp	17;"	d
GC	asan/asan_fake_stack.cpp	/^NOINLINE void FakeStack::GC(uptr real_stack) {$/;"	f	class:__asan::FakeStack
GET	tsan/tsan_md5.cpp	147;"	d
GET	tsan/tsan_md5.cpp	28;"	d
GET_ASAN_BLOCK	asan/asan_mac.cpp	250;"	d
GET_CALLER_PC	sanitizer_common/sanitizer_internal_defs.h	370;"	d
GET_CALLER_PC	sanitizer_common/sanitizer_internal_defs.h	373;"	d
GET_CALLER_PC	sanitizer_common/sanitizer_internal_defs.h	384;"	d
GET_CALLER_PC_BP	sanitizer_common/sanitizer_stacktrace.h	170;"	d
GET_CALLER_PC_BP_SP	sanitizer_common/sanitizer_stacktrace.h	174;"	d
GET_CURRENT_FRAME	sanitizer_common/sanitizer_internal_defs.h	375;"	d
GET_CURRENT_FRAME	sanitizer_common/sanitizer_internal_defs.h	386;"	d
GET_CURRENT_PC_BP	sanitizer_common/sanitizer_stacktrace.h	181;"	d
GET_CURRENT_PC_BP_SP	sanitizer_common/sanitizer_stacktrace.h	185;"	d
GET_FATAL_STACK_TRACE_HERE	hwasan/hwasan.h	108;"	d
GET_FATAL_STACK_TRACE_PC_BP	hwasan/hwasan.h	103;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	sanitizer_common/sanitizer_platform_limits_freebsd.h	29;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	sanitizer_common/sanitizer_platform_limits_netbsd.h	24;"	d
GET_LINK_MAP_BY_DLOPEN_HANDLE	sanitizer_common/sanitizer_platform_limits_posix.h	27;"	d
GET_LSAN_BLOCK	lsan/lsan_mac.cpp	149;"	d
GET_MALLOC_STACK_TRACE	hwasan/hwasan.h	96;"	d
GET_QUEUE_SYNC_VARS	tsan/tsan_interceptors_libdispatch.cpp	96;"	d
GET_REPORT_OPTIONS	ubsan/ubsan_diag.h	233;"	d
GET_STACK_TRACE	asan/asan_stack.h	35;"	d
GET_STACK_TRACE	lsan/lsan.h	23;"	d
GET_STACK_TRACE_CHECK_HERE	asan/asan_stack.h	57;"	d
GET_STACK_TRACE_FATAL	asan/asan_stack.h	49;"	d
GET_STACK_TRACE_FATAL	lsan/lsan.h	28;"	d
GET_STACK_TRACE_FATAL	tsan/tsan_rtl.h	659;"	d
GET_STACK_TRACE_FATAL_HERE	asan/asan_stack.h	54;"	d
GET_STACK_TRACE_FREE	asan/asan_stack.h	66;"	d
GET_STACK_TRACE_MALLOC	asan/asan_stack.h	63;"	d
GET_STACK_TRACE_MALLOC	lsan/lsan.h	31;"	d
GET_STACK_TRACE_MALLOC	lsan/lsan_interceptors.cpp	/^  GET_STACK_TRACE_MALLOC;$/;"	m	class:std::align_val_t
GET_STACK_TRACE_THREAD	asan/asan_stack.h	60;"	d
GET_STACK_TRACE_THREAD	lsan/lsan.h	35;"	d
GLUE	builtins/assembly.h	135;"	d
GLUE2	builtins/assembly.h	134;"	d
GRND_NONBLOCK	sanitizer_common/sanitizer_linux.cpp	138;"	d
GenerateRandomTag	hwasan/hwasan_thread.cpp	/^tag_t Thread::GenerateRandomTag() {$/;"	f	class:__hwasan::Thread
GenericScopedLock	sanitizer_common/sanitizer_mutex.h	/^  explicit GenericScopedLock(MutexType *mu)$/;"	f	class:__sanitizer::GenericScopedLock
GenericScopedLock	sanitizer_common/sanitizer_mutex.h	/^class GenericScopedLock {$/;"	c	namespace:__sanitizer
GenericScopedReadLock	sanitizer_common/sanitizer_mutex.h	/^  explicit GenericScopedReadLock(MutexType *mu)$/;"	f	class:__sanitizer::GenericScopedReadLock
GenericScopedReadLock	sanitizer_common/sanitizer_mutex.h	/^class GenericScopedReadLock {$/;"	c	namespace:__sanitizer
Get	asan/asan_allocator.cpp	/^  AsanChunk *Get() const {$/;"	f	class:__asan::LargeChunkHeader
Get	sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 *Get(uptr idx) const {$/;"	f	class:TwoLevelByteMap
Get	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr Get(uptr i) const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
Get	sanitizer_common/sanitizer_allocator_stats.h	/^  uptr Get(AllocatorStat i) const {$/;"	f	class:AllocatorStats
Get	sanitizer_common/sanitizer_allocator_stats.h	/^  void Get(AllocatorStatCounters s) const {$/;"	f	class:AllocatorGlobalStats
Get	sanitizer_common/sanitizer_stackdepot.cpp	/^StackTrace StackDepotReverseMap::Get(u32 id) {$/;"	f	class:__sanitizer::StackDepotReverseMap
Get	sanitizer_common/sanitizer_stackdepotbase.h	/^StackDepotBase<Node, kReservedBits, kTabSizeLog>::Get(u32 id) {$/;"	f	class:__sanitizer::StackDepotBase
Get	tsan/tsan_mutexset.cpp	/^MutexSet::Desc MutexSet::Get(uptr i) const {$/;"	f	class:__tsan::MutexSet
Get	tsan/tsan_mutexset.h	/^MutexSet::Desc MutexSet::Get(uptr i) const { return Desc(); }$/;"	f	class:__tsan::MutexSet
GetAccessInfo	hwasan/hwasan_linux.cpp	/^static AccessInfo GetAccessInfo(siginfo_t *info, ucontext_t *uc) {$/;"	f	namespace:__hwasan
GetAccessToHeapChunkInformation	asan/asan_descriptions.cpp	/^static void GetAccessToHeapChunkInformation(ChunkAccess *descr,$/;"	f	namespace:__asan
GetAccumulatedStats	asan/asan_stats.cpp	/^static void GetAccumulatedStats(AsanStats *stats) {$/;"	f	namespace:__asan
GetActuallyAllocatedSize	sanitizer_common/sanitizer_allocator_combined.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:CombinedAllocator
GetActuallyAllocatedSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:SizeClassAllocator32
GetActuallyAllocatedSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:SizeClassAllocator64
GetActuallyAllocatedSize	sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr GetActuallyAllocatedSize(void *p) {$/;"	f	class:LargeMmapAllocator
GetAddress	sanitizer_common/sanitizer_posix.cpp	/^uptr SignalContext::GetAddress() const {$/;"	f	class:__sanitizer::SignalContext
GetAddress	sanitizer_common/sanitizer_win.cpp	/^uptr SignalContext::GetAddress() const {$/;"	f	class:__sanitizer::SignalContext
GetAllThreadAllocatorCachesLocked	asan/asan_thread.cpp	/^void GetAllThreadAllocatorCachesLocked(InternalMmapVector<uptr> *caches) {}$/;"	f	namespace:__lsan
GetAllThreadAllocatorCachesLocked	lsan/lsan_fuchsia.cpp	/^void GetAllThreadAllocatorCachesLocked(InternalMmapVector<uptr> *caches) {$/;"	f	namespace:__lsan
GetAllocContext	asan/asan_allocator.cpp	/^  void GetAllocContext(u32 &tid, u32 &stack) const {$/;"	f	class:__asan::ChunkHeader
GetAllocStack	asan/asan_allocator.cpp	/^StackTrace AsanChunkView::GetAllocStack() const {$/;"	f	class:__asan::AsanChunkView
GetAllocStackId	asan/asan_allocator.cpp	/^u32 AsanChunkView::GetAllocStackId() const {$/;"	f	class:__asan::AsanChunkView
GetAllocStackId	hwasan/hwasan_allocator.cpp	/^u32 HwasanChunkView::GetAllocStackId() const {$/;"	f	class:__hwasan::HwasanChunkView
GetAllocType	asan/asan_allocator.cpp	/^AllocType AsanChunkView::GetAllocType() const {$/;"	f	class:__asan::AsanChunkView
GetAllocatorCache	asan/asan_allocator.cpp	/^AllocatorCache *GetAllocatorCache(AsanThreadLocalMallocStorage *ms) {$/;"	f	namespace:__asan
GetAllocatorCache	lsan/lsan_common_mac.cpp	/^AllocatorCache *GetAllocatorCache() { return &get_tls_val(true)->cache; }$/;"	f	namespace:__lsan
GetAllocatorCache	lsan/lsan_linux.cpp	/^AllocatorCache *GetAllocatorCache() { return &allocator_cache; }$/;"	f	namespace:__lsan
GetAllocatorCacheRange	lsan/lsan_allocator.cpp	/^void GetAllocatorCacheRange(uptr *begin, uptr *end) {$/;"	f	namespace:__lsan
GetAllocatorGlobalRange	asan/asan_allocator.cpp	/^void GetAllocatorGlobalRange(uptr *begin, uptr *end) {$/;"	f	namespace:__lsan
GetAllocatorGlobalRange	lsan/lsan_allocator.cpp	/^void GetAllocatorGlobalRange(uptr *begin, uptr *end) {$/;"	f	namespace:__lsan
GetAllocatorOptions	asan/asan_allocator.cpp	/^void GetAllocatorOptions(AllocatorOptions *options) {$/;"	f	namespace:__asan
GetAllocatorStats	hwasan/hwasan_allocator.cpp	/^void GetAllocatorStats(AllocatorStatCounters s) {$/;"	f	namespace:__hwasan
GetAltStackSize	sanitizer_common/sanitizer_posix_libcdep.cpp	/^static uptr GetAltStackSize() {$/;"	f	namespace:__sanitizer
GetAndLock	tsan/tsan_sync.cpp	/^SyncVar* MetaMap::GetAndLock(ThreadState *thr, uptr pc,$/;"	f	class:__tsan::MetaMap
GetArgV	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual void GetArgV(const char *path_to_binary,$/;"	f	class:__sanitizer::SymbolizerProcess
GetArgsAndEnv	sanitizer_common/sanitizer_linux.cpp	/^static void GetArgsAndEnv(char ***argv, char ***envp) {$/;"	f	namespace:__sanitizer
GetArgv	sanitizer_common/sanitizer_fuchsia.cpp	/^char **GetArgv() { return StoredArgv; }$/;"	f	namespace:__sanitizer
GetArgv	sanitizer_common/sanitizer_linux.cpp	/^char **GetArgv() {$/;"	f	namespace:__sanitizer
GetArgv	sanitizer_common/sanitizer_mac.cpp	/^char **GetArgv() {$/;"	f	namespace:__sanitizer
GetArgv	sanitizer_common/sanitizer_rtems.cpp	/^char **GetArgv() { return nullptr; }$/;"	f	namespace:__sanitizer
GetArgv	sanitizer_common/sanitizer_win.cpp	/^char **GetArgv() {$/;"	f	namespace:__sanitizer
GetAsanChunk	asan/asan_allocator.cpp	/^  AsanChunk *GetAsanChunk(void *alloc_beg) {$/;"	f	struct:__asan::Allocator
GetAsanChunkByAddr	asan/asan_allocator.cpp	/^  AsanChunk *GetAsanChunkByAddr(uptr p) {$/;"	f	struct:__asan::Allocator
GetAsanChunkByAddrFastLocked	asan/asan_allocator.cpp	/^  AsanChunk *GetAsanChunkByAddrFastLocked(uptr p) {$/;"	f	struct:__asan::Allocator
GetAsanThreadByOsIDLocked	asan/asan_thread.cpp	/^__asan::AsanThread *GetAsanThreadByOsIDLocked(tid_t os_id) {$/;"	f	namespace:__asan
GetAsanThreadContext	asan/asan_thread.cpp	/^static ThreadContextBase *GetAsanThreadContext(u32 tid) {$/;"	f	namespace:__asan
GetBlock	tsan/tsan_sync.cpp	/^MBlock* MetaMap::GetBlock(uptr p) {$/;"	f	class:__tsan::MetaMap
GetBlockBegin	sanitizer_common/sanitizer_allocator_combined.h	/^  void *GetBlockBegin(const void *p) {$/;"	f	class:CombinedAllocator
GetBlockBegin	sanitizer_common/sanitizer_allocator_primary32.h	/^  void *GetBlockBegin(const void *p) {$/;"	f	class:SizeClassAllocator32
GetBlockBegin	sanitizer_common/sanitizer_allocator_primary64.h	/^  void *GetBlockBegin(const void *p) {$/;"	f	class:SizeClassAllocator64
GetBlockBegin	sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetBlockBegin(const void *ptr) {$/;"	f	class:LargeMmapAllocator
GetBlockBeginFastLocked	sanitizer_common/sanitizer_allocator_combined.h	/^  void *GetBlockBeginFastLocked(void *p) {$/;"	f	class:CombinedAllocator
GetBlockBeginFastLocked	sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetBlockBeginFastLocked(void *ptr) {$/;"	f	class:LargeMmapAllocator
GetCFAFn	hwasan/hwasan_exceptions.cpp	/^typedef _Unwind_Word GetCFAFn(_Unwind_Context* context);$/;"	t
GetCacheSize	sanitizer_common/sanitizer_quarantine.h	/^  uptr GetCacheSize() const {$/;"	f	class:__sanitizer::Quarantine
GetCallerPC	lsan/lsan_common.cpp	/^static uptr GetCallerPC(u32 stack_id, StackDepotReverseMap *map) {$/;"	f	namespace:__lsan
GetCanonicFrame	sanitizer_common/sanitizer_stacktrace.cpp	/^static inline uhwptr *GetCanonicFrame(uptr bp,$/;"	f	namespace:__sanitizer
GetChunkIdx	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetChunkIdx(uptr chunk, uptr size) const {$/;"	f	class:SizeClassAllocator64
GetCodeRangeForFile	sanitizer_common/sanitizer_posix.cpp	/^bool GetCodeRangeForFile(const char *module, uptr *start, uptr *end) {$/;"	f	namespace:__sanitizer
GetCount	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 GetCount() const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
GetCoverageFilename	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static void GetCoverageFilename(char* path, const char* name,$/;"	f	namespace:__sancov::__anon40
GetCurrentPc	sanitizer_common/sanitizer_stacktrace.cpp	/^uptr StackTrace::GetCurrentPc() {$/;"	f	class:__sanitizer::StackTrace
GetCurrentThread	asan/asan_thread.cpp	/^AsanThread *GetCurrentThread() {$/;"	f	namespace:__asan
GetCurrentThread	hwasan/hwasan_linux.cpp	/^Thread *GetCurrentThread() {$/;"	f	namespace:__hwasan
GetCurrentThread	lsan/lsan_common_mac.cpp	/^u32 GetCurrentThread() {$/;"	f	namespace:__lsan
GetCurrentThread	lsan/lsan_linux.cpp	/^u32 GetCurrentThread() { return current_thread_tid; }$/;"	f	namespace:__lsan
GetCurrentThreadLongPtr	hwasan/hwasan_linux.cpp	/^uptr *GetCurrentThreadLongPtr() {$/;"	f	namespace:__hwasan
GetCurrentThreadStats	asan/asan_stats.cpp	/^AsanStats &GetCurrentThreadStats() {$/;"	f	namespace:__asan
GetCurrentTidOrInvalid	asan/asan_thread.cpp	/^u32 GetCurrentTidOrInvalid() {$/;"	f	namespace:__asan
GetDarwinKernelVersion	sanitizer_common/sanitizer_mac.cpp	/^DarwinKernelVersion GetDarwinKernelVersion() {$/;"	f	namespace:__sanitizer
GetDescription	asan/asan_scariness_score.h	/^  const char *GetDescription() const { return descr; }$/;"	f	struct:__asan::ScarinessScoreBase
GetDestroyed	sanitizer_common/sanitizer_thread_registry.cpp	/^bool ThreadContextBase::GetDestroyed() {$/;"	f	class:__sanitizer::ThreadContextBase
GetEnv	sanitizer_common/sanitizer_fuchsia.cpp	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	sanitizer_common/sanitizer_linux.cpp	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	sanitizer_common/sanitizer_mac.cpp	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	sanitizer_common/sanitizer_rtems.cpp	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnv	sanitizer_common/sanitizer_win.cpp	/^const char *GetEnv(const char *name) {$/;"	f	namespace:__sanitizer
GetEnvP	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual char **GetEnvP() { return GetEnviron(); }$/;"	f	class:__sanitizer::SymbolizerProcess
GetEnviron	sanitizer_common/sanitizer_fuchsia.cpp	/^char **GetEnviron() { return StoredEnviron; }$/;"	f	namespace:__sanitizer
GetEnviron	sanitizer_common/sanitizer_linux.cpp	/^char **GetEnviron() {$/;"	f	namespace:__sanitizer
GetEnviron	sanitizer_common/sanitizer_mac.cpp	/^char **GetEnviron() {$/;"	f	namespace:__sanitizer
GetEnviron	sanitizer_common/sanitizer_rtems.cpp	/^char **GetEnviron() { return nullptr; }$/;"	f	namespace:__sanitizer
GetEnviron	sanitizer_common/sanitizer_win.cpp	/^char **GetEnviron() {$/;"	f	namespace:__sanitizer
GetFakeStack	asan/asan_fake_stack.cpp	/^static FakeStack *GetFakeStack() {$/;"	f	namespace:__asan
GetFakeStackFast	asan/asan_fake_stack.cpp	/^static FakeStack *GetFakeStackFast() {$/;"	f	namespace:__asan
GetFlag	ubsan/ubsan_flags.cpp	/^static const char *GetFlag(const char *flag) {$/;"	f	namespace:__ubsan
GetFlags	asan/asan_fake_stack.h	/^  u8 *GetFlags(uptr stack_size_log, uptr class_id) {$/;"	f	class:__asan::FakeStack
GetFrame	asan/asan_fake_stack.h	/^  u8 *GetFrame(uptr stack_size_log, uptr class_id, uptr pos) {$/;"	f	class:__asan::FakeStack
GetFreeArray	sanitizer_common/sanitizer_allocator_primary64.h	/^  CompactPtrT *GetFreeArray(uptr region_beg) const {$/;"	f	class:SizeClassAllocator64
GetFreeContext	asan/asan_allocator.cpp	/^  void GetFreeContext(u32 &tid, u32 &stack) const {$/;"	f	class:__asan::ChunkBase
GetFreeStack	asan/asan_allocator.cpp	/^StackTrace AsanChunkView::GetFreeStack() const {$/;"	f	class:__asan::AsanChunkView
GetFreeStackId	asan/asan_allocator.cpp	/^u32 AsanChunkView::GetFreeStackId() const {$/;"	f	class:__asan::AsanChunkView
GetFreedAndReset	tsan/tsan_rtl.h	/^  bool GetFreedAndReset() {$/;"	f	class:__tsan::Shadow
GetFromAllocator	sanitizer_common/sanitizer_allocator_primary64.h	/^  NOINLINE bool GetFromAllocator(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator64
GetFuncAddr	interception/interception_linux.cpp	/^static void *GetFuncAddr(const char *name, const char *ver) {$/;"	f	namespace:__interception
GetFuncAddr	interception/interception_linux.cpp	/^static void *GetFuncAddr(const char *name, uptr wrapper_addr) {$/;"	f	namespace:__interception
GetGRFn	hwasan/hwasan_exceptions.cpp	/^typedef _Unwind_Word GetGRFn(_Unwind_Context* context, int index);$/;"	t
GetGlobalAddressInformation	asan/asan_descriptions.cpp	/^bool GetGlobalAddressInformation(uptr addr, uptr access_size,$/;"	f	namespace:__asan
GetGlobalSizeFromDescriptor	hwasan/hwasan_report.cpp	/^static uptr GetGlobalSizeFromDescriptor(uptr ptr) {$/;"	f	namespace:__hwasan
GetGlobalsForAddress	asan/asan_globals.cpp	/^int GetGlobalsForAddress(uptr addr, Global *globals, u32 *reg_sites,$/;"	f	namespace:__asan
GetHandleSignalMode	sanitizer_common/sanitizer_linux.cpp	/^HandleSignalMode GetHandleSignalMode(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalMode	sanitizer_common/sanitizer_mac.cpp	/^HandleSignalMode GetHandleSignalMode(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalMode	sanitizer_common/sanitizer_win.cpp	/^HandleSignalMode GetHandleSignalMode(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalModeImpl	sanitizer_common/sanitizer_linux.cpp	/^static HandleSignalMode GetHandleSignalModeImpl(int signum) {$/;"	f	namespace:__sanitizer
GetHandleSignalModeImpl	sanitizer_common/sanitizer_mac.cpp	/^static HandleSignalMode GetHandleSignalModeImpl(int signum) {$/;"	f	namespace:__sanitizer
GetHeader	sanitizer_common/sanitizer_allocator_secondary.h	/^  Header *GetHeader(const void *p) {$/;"	f	class:LargeMmapAllocator
GetHeader	sanitizer_common/sanitizer_allocator_secondary.h	/^  Header *GetHeader(uptr p) {$/;"	f	class:LargeMmapAllocator
GetHeapAddressInformation	asan/asan_descriptions.cpp	/^bool GetHeapAddressInformation(uptr addr, uptr access_size,$/;"	f	namespace:__asan
GetHighMemEnd	hwasan/hwasan_linux.cpp	/^static uptr GetHighMemEnd() {$/;"	f	namespace:__hwasan
GetHistorySize	tsan/tsan_rtl.h	/^  int GetHistorySize() const {$/;"	f	class:__tsan::FastState
GetId	tsan/tsan_sync.h	/^  u64 GetId() const {$/;"	f	struct:__tsan::SyncVar
GetIfExistsAndLock	tsan/tsan_sync.cpp	/^SyncVar* MetaMap::GetIfExistsAndLock(uptr addr, bool write_lock) {$/;"	f	class:__tsan::MetaMap
GetIgnoreBit	tsan/tsan_rtl.h	/^  bool GetIgnoreBit() const { return (s64)x_ < 0; }$/;"	f	class:__tsan::FastState
GetInstructionSize	interception/interception_win.cpp	/^static size_t GetInstructionSize(uptr address, size_t* rel_offset = nullptr) {$/;"	f	namespace:__interception
GetKernelAreaSize	sanitizer_common/sanitizer_linux.cpp	/^static uptr GetKernelAreaSize() {$/;"	f	namespace:__sanitizer
GetLibcVersion	sanitizer_common/sanitizer_linux_libcdep.cpp	/^__attribute__((unused)) static bool GetLibcVersion(int *major, int *minor,$/;"	f	namespace:__sanitizer
GetLinker	lsan/lsan_common_fuchsia.cpp	/^LoadedModule *GetLinker() { return nullptr; }$/;"	f	namespace:__lsan
GetLinker	lsan/lsan_common_linux.cpp	/^LoadedModule *GetLinker() { return linker; }$/;"	f	namespace:__lsan
GetLinker	lsan/lsan_common_mac.cpp	/^LoadedModule *GetLinker() { return nullptr; }$/;"	f	namespace:__lsan
GetLsb	tsan/tsan_defs.h	/^T GetLsb(T v, int bits) {$/;"	f	namespace:__tsan
GetMacosAlignedVersion	sanitizer_common/sanitizer_mac.cpp	/^MacosVersion GetMacosAlignedVersion() {$/;"	f	namespace:__sanitizer
GetMacosAlignedVersionInternal	sanitizer_common/sanitizer_mac.cpp	/^static MacosVersion GetMacosAlignedVersionInternal() {$/;"	f	namespace:__sanitizer
GetMallocContextSize	asan/asan_stack.cpp	/^u32 GetMallocContextSize() {$/;"	f	namespace:__asan
GetMallocUsableSize	lsan/lsan_allocator.cpp	/^uptr GetMallocUsableSize(const void *p) {$/;"	f	namespace:__lsan
GetMatched	sanitizer_common/sanitizer_suppressions.cpp	/^void SuppressionContext::GetMatched($/;"	f	class:__sanitizer::SuppressionContext
GetMaxAliveThreads	sanitizer_common/sanitizer_thread_registry.cpp	/^uptr ThreadRegistry::GetMaxAliveThreads() {$/;"	f	class:__sanitizer::ThreadRegistry
GetMaxUserVirtualAddress	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxUserVirtualAddress	sanitizer_common/sanitizer_linux.cpp	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxUserVirtualAddress	sanitizer_common/sanitizer_mac.cpp	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxUserVirtualAddress	sanitizer_common/sanitizer_win.cpp	/^uptr GetMaxUserVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr GetMaxVirtualAddress() { return GetMaxUserVirtualAddress(); }$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	sanitizer_common/sanitizer_linux.cpp	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	sanitizer_common/sanitizer_mac.cpp	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	sanitizer_common/sanitizer_rtems.cpp	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMaxVirtualAddress	sanitizer_common/sanitizer_win.cpp	/^uptr GetMaxVirtualAddress() {$/;"	f	namespace:__sanitizer
GetMemoryProfile	sanitizer_common/sanitizer_fuchsia.cpp	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) {}$/;"	f	namespace:__sanitizer
GetMemoryProfile	sanitizer_common/sanitizer_mac.cpp	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) { }$/;"	f	namespace:__sanitizer
GetMemoryProfile	sanitizer_common/sanitizer_procmaps_common.cpp	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) {$/;"	f	namespace:__sanitizer
GetMemoryProfile	sanitizer_common/sanitizer_win.cpp	/^void GetMemoryProfile(fill_profile_f cb, uptr *stats, uptr stats_size) { }$/;"	f	namespace:__sanitizer
GetMetaData	sanitizer_common/sanitizer_allocator_combined.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:CombinedAllocator
GetMetaData	sanitizer_common/sanitizer_allocator_primary32.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:SizeClassAllocator32
GetMetaData	sanitizer_common/sanitizer_allocator_primary64.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:SizeClassAllocator64
GetMetaData	sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetMetaData(const void *p) {$/;"	f	class:LargeMmapAllocator
GetMetadataEnd	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetMetadataEnd(uptr region_beg) const {$/;"	f	class:SizeClassAllocator64
GetMmapGranularity	interception/interception_win.cpp	/^static uptr GetMmapGranularity() {$/;"	f	namespace:__interception
GetMmapGranularity	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr GetMmapGranularity() { return PAGE_SIZE; }$/;"	f	namespace:__sanitizer
GetMmapGranularity	sanitizer_common/sanitizer_posix.cpp	/^uptr GetMmapGranularity() {$/;"	f	namespace:__sanitizer
GetMmapGranularity	sanitizer_common/sanitizer_rtems.cpp	/^uptr GetMmapGranularity() { return GetPageSize(); }$/;"	f	namespace:__sanitizer
GetMmapGranularity	sanitizer_common/sanitizer_win.cpp	/^uptr GetMmapGranularity() {$/;"	f	namespace:__sanitizer
GetModuleAndOffsetForPc	sanitizer_common/sanitizer_stacktrace_libcdep.cpp	/^static int GetModuleAndOffsetForPc(uptr pc, char *module_name,$/;"	f	namespace:__sanitizer
GetModuleNameAndOffsetForPC	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool Symbolizer::GetModuleNameAndOffsetForPC(uptr pc, const char **module_name,$/;"	f	class:__sanitizer::Symbolizer
GetModuleNameAndOffsetForPC	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^bool Symbolizer::GetModuleNameAndOffsetForPC(uptr pc, const char **module_name,$/;"	f	class:__sanitizer::Symbolizer
GetModuleNameForPc	sanitizer_common/sanitizer_symbolizer.h	/^  const char *GetModuleNameForPc(uptr pc) {$/;"	f	class:__sanitizer::final
GetNamedMappingFd	sanitizer_common/sanitizer_posix.cpp	/^int GetNamedMappingFd(const char *name, uptr size, int *flags) {$/;"	f	namespace:__sanitizer
GetNextInstructionPc	sanitizer_common/sanitizer_stacktrace.cpp	/^uptr StackTrace::GetNextInstructionPc(uptr pc) {$/;"	f	class:__sanitizer::StackTrace
GetNumberOfCPUs	sanitizer_common/sanitizer_fuchsia.cpp	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUs	sanitizer_common/sanitizer_linux_libcdep.cpp	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUs	sanitizer_common/sanitizer_mac.cpp	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUs	sanitizer_common/sanitizer_win.cpp	/^u32 GetNumberOfCPUs() {$/;"	f	namespace:__sanitizer
GetNumberOfCPUsCached	sanitizer_common/sanitizer_common.h	/^inline u32 GetNumberOfCPUsCached() {$/;"	f	namespace:__sanitizer
GetNumberOfThreads	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::GetNumberOfThreads(uptr *total, uptr *running,$/;"	f	class:__sanitizer::ThreadRegistry
GetOSMajorKernelOffset	sanitizer_common/sanitizer_mac.cpp	/^constexpr u16 GetOSMajorKernelOffset() {$/;"	f	namespace:__sanitizer
GetOSVersion	sanitizer_common/sanitizer_mac.cpp	/^static void GetOSVersion(VersStr vers) {$/;"	f	namespace:__sanitizer
GetObjectTypeFromTag	tsan/tsan_external.cpp	/^const char *GetObjectTypeFromTag(uptr tag) {$/;"	f	namespace:__tsan
GetOptions	asan/asan_allocator.cpp	/^  void GetOptions(AllocatorOptions *options) const {$/;"	f	struct:__asan::Allocator
GetOrCreate	sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 *GetOrCreate(uptr idx) {$/;"	f	class:TwoLevelByteMap
GetOrCreateAndLock	tsan/tsan_sync.cpp	/^SyncVar* MetaMap::GetOrCreateAndLock(ThreadState *thr, uptr pc,$/;"	f	class:__tsan::MetaMap
GetOrCreateSyncAddress	tsan/tsan_interceptors_mac.cpp	/^static uptr GetOrCreateSyncAddress(uptr addr, ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
GetOrInit	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^Symbolizer *Symbolizer::GetOrInit() {$/;"	f	class:__sanitizer::Symbolizer
GetOwnedCopy	sanitizer_common/sanitizer_symbolizer.cpp	/^const char *Symbolizer::ModuleNameOwner::GetOwnedCopy(const char *str) {$/;"	f	class:__sanitizer::Symbolizer::ModuleNameOwner
GetPageSize	sanitizer_common/sanitizer_common.h	/^inline uptr GetPageSize() {$/;"	f	namespace:__sanitizer
GetPageSize	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr GetPageSize() { return PAGE_SIZE; }$/;"	f	namespace:__sanitizer
GetPageSize	sanitizer_common/sanitizer_linux.cpp	/^uptr GetPageSize() {$/;"	f	namespace:__sanitizer
GetPageSize	sanitizer_common/sanitizer_mac.cpp	/^uptr GetPageSize() {$/;"	f	namespace:__sanitizer
GetPageSize	sanitizer_common/sanitizer_rtems.cpp	/^uptr GetPageSize() { return getpagesize(); }$/;"	f	namespace:__sanitizer
GetPageSize	sanitizer_common/sanitizer_win.cpp	/^uptr GetPageSize() {$/;"	f	namespace:__sanitizer
GetPageSizeCached	sanitizer_common/sanitizer_common.h	/^inline uptr GetPageSizeCached() {$/;"	f	namespace:__sanitizer
GetPathAssumingFileIsRelativeToExec	sanitizer_common/sanitizer_suppressions.cpp	/^static bool GetPathAssumingFileIsRelativeToExec(const char *file_path,$/;"	f	namespace:__sanitizer
GetPcSpBp	sanitizer_common/sanitizer_linux.cpp	/^static void GetPcSpBp(void *context, uptr *pc, uptr *sp, uptr *bp) {$/;"	f	namespace:__sanitizer
GetPcSpBp	sanitizer_common/sanitizer_mac.cpp	/^static void GetPcSpBp(void *context, uptr *pc, uptr *sp, uptr *bp) {$/;"	f	namespace:__sanitizer
GetPreferredBase	sanitizer_common/sanitizer_win.cpp	/^static uptr GetPreferredBase(const char *modname) {$/;"	f	namespace:__sanitizer
GetPreviousInstructionPc	sanitizer_common/sanitizer_stacktrace.h	/^uptr StackTrace::GetPreviousInstructionPc(uptr pc) {$/;"	f	class:__sanitizer::StackTrace
GetProcessName	sanitizer_common/sanitizer_common.cpp	/^const char *GetProcessName() {$/;"	f	namespace:__sanitizer
GetPthreadDestructorIterations	sanitizer_common/sanitizer_common.h	/^inline uptr GetPthreadDestructorIterations() {$/;"	f	namespace:__sanitizer
GetPwd	sanitizer_common/sanitizer_posix.cpp	/^const char *GetPwd() {$/;"	f	namespace:__sanitizer
GetPwd	sanitizer_common/sanitizer_win.cpp	/^const char *GetPwd() {$/;"	f	namespace:__sanitizer
GetQuarantineCache	asan/asan_allocator.cpp	/^QuarantineCache *GetQuarantineCache(AsanThreadLocalMallocStorage *ms) {$/;"	f	namespace:__asan
GetRSS	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr GetRSS() { UNIMPLEMENTED(); }$/;"	f	namespace:__sanitizer
GetRSS	sanitizer_common/sanitizer_linux_libcdep.cpp	/^uptr GetRSS() {$/;"	f	namespace:__sanitizer
GetRSS	sanitizer_common/sanitizer_mac.cpp	/^uptr GetRSS() {$/;"	f	namespace:__sanitizer
GetRSS	sanitizer_common/sanitizer_win.cpp	/^uptr GetRSS() {$/;"	f	namespace:__sanitizer
GetRSSFromGetrusage	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static uptr GetRSSFromGetrusage() {$/;"	f	namespace:__sanitizer
GetRandom	sanitizer_common/sanitizer_fuchsia.cpp	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRandom	sanitizer_common/sanitizer_linux.cpp	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRandom	sanitizer_common/sanitizer_mac.cpp	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRandom	sanitizer_common/sanitizer_win.cpp	/^bool GetRandom(void *buffer, uptr length, bool blocking) {$/;"	f	namespace:__sanitizer
GetRealLibcAddress	sanitizer_common/sanitizer_netbsd.cpp	/^static void *GetRealLibcAddress(const char *symbol) {$/;"	f	namespace:__sanitizer
GetRegionBegin	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetRegionBegin(const void *p) {$/;"	f	class:SizeClassAllocator64
GetRegionBeginBySizeClass	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetRegionBeginBySizeClass(uptr class_id) const {$/;"	f	class:SizeClassAllocator64
GetRegionInfo	sanitizer_common/sanitizer_allocator_primary64.h	/^  RegionInfo *GetRegionInfo(uptr class_id) const {$/;"	f	class:SizeClassAllocator64
GetRegistersAndSP	sanitizer_common/sanitizer_stoptheworld.h	/^  virtual PtraceRegistersStatus GetRegistersAndSP($/;"	f	class:__sanitizer::SuspendedThreadsList
GetRegistersAndSP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^PtraceRegistersStatus SuspendedThreadsListLinux::GetRegistersAndSP($/;"	f	class:__sanitizer::SuspendedThreadsListLinux
GetRegistersAndSP	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^PtraceRegistersStatus SuspendedThreadsListMac::GetRegistersAndSP($/;"	f	class:__sanitizer::SuspendedThreadsListMac
GetRegistersAndSP	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^PtraceRegistersStatus SuspendedThreadsListNetBSD::GetRegistersAndSP($/;"	f	class:__sanitizer::SuspendedThreadsListNetBSD
GetReleasedBytes	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr GetReleasedBytes() const {$/;"	f	class:SizeClassAllocator64::MemoryMapper
GetReleasedRangesCount	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr GetReleasedRangesCount() const {$/;"	f	class:SizeClassAllocator64::MemoryMapper
GetReport	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^DDReport *DD::GetReport(DDCallback *cb) {$/;"	f	class:__sanitizer::DD
GetReport	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^DDReport *DD::GetReport(DDCallback *cb) {$/;"	f	class:__sanitizer::DD
GetReport	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual DDReport *GetReport(DDCallback *cb) { return nullptr; }$/;"	f	struct:__sanitizer::DDetector
GetReport	tsan/tsan_rtl_report.cpp	/^const ReportDesc *ScopedReportBase::GetReport() const { return rep_; }$/;"	f	class:__tsan::ScopedReportBase
GetReportHeaderFromTag	tsan/tsan_external.cpp	/^const char *GetReportHeaderFromTag(uptr tag) {$/;"	f	namespace:__tsan
GetRootRegions	lsan/lsan_common.cpp	/^InternalMmapVector<RootRegion> const *GetRootRegions() { return root_regions; }$/;"	f	namespace:__lsan
GetSanititizerToolName	ubsan/ubsan_init.cpp	/^const char *__ubsan::GetSanititizerToolName() {$/;"	f	class:__ubsan
GetScore	asan/asan_scariness_score.h	/^  int GetScore() const { return score; }$/;"	f	struct:__asan::ScarinessScoreBase
GetShadowAddressInformation	asan/asan_descriptions.cpp	/^bool GetShadowAddressInformation(uptr addr, ShadowAddressDescription *descr) {$/;"	f	namespace:__asan
GetShadowKind	asan/asan_descriptions.cpp	/^static bool GetShadowKind(uptr addr, ShadowKind *shadow_kind) {$/;"	f	namespace:__asan
GetSize	sanitizer_common/sanitizer_quarantine.h	/^  uptr GetSize() const { return atomic_load_relaxed(&max_size_); }$/;"	f	class:__sanitizer::Quarantine
GetSizeClass	sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr GetSizeClass(const void *p) {$/;"	f	class:SizeClassAllocator32
GetSizeClass	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr GetSizeClass(const void *p) {$/;"	f	class:SizeClassAllocator64
GetSizeClassInfo	sanitizer_common/sanitizer_allocator_primary32.h	/^  SizeClassInfo *GetSizeClassInfo(uptr class_id) {$/;"	f	class:SizeClassAllocator32
GetSizeFromHdr	sanitizer_common/sanitizer_linux_libcdep.cpp	/^int GetSizeFromHdr(struct dl_phdr_info *info, size_t size, void *data) {$/;"	f	namespace:__sanitizer
GetStackAddressInformation	asan/asan_descriptions.cpp	/^bool GetStackAddressInformation(uptr addr, uptr access_size,$/;"	f	namespace:__asan
GetStackBounds	asan/asan_thread.cpp	/^inline AsanThread::StackBounds AsanThread::GetStackBounds() const {$/;"	f	class:__asan::AsanThread
GetStackFrameAccessByAddr	asan/asan_thread.cpp	/^bool AsanThread::GetStackFrameAccessByAddr(uptr addr,$/;"	f	class:__asan::AsanThread
GetStackTraceFromId	asan/asan_allocator.cpp	/^static StackTrace GetStackTraceFromId(u32 id) {$/;"	f	namespace:__asan
GetStackTraceFromId	asan/asan_descriptions.cpp	/^static StackTrace GetStackTraceFromId(u32 id) {$/;"	f	namespace:__asan
GetStackTraceFromId	hwasan/hwasan_report.cpp	/^static StackTrace GetStackTraceFromId(u32 id) {$/;"	f	namespace:__hwasan
GetStackVariableShadowStart	asan/asan_thread.cpp	/^uptr AsanThread::GetStackVariableShadowStart(uptr addr) {$/;"	f	class:__asan::AsanThread
GetStats	sanitizer_common/sanitizer_allocator_combined.h	/^  void GetStats(AllocatorStatCounters s) const {$/;"	f	class:CombinedAllocator
GetStats	sanitizer_common/sanitizer_stackdepotbase.h	/^  StackDepotStats *GetStats() { return &stats; }$/;"	f	class:__sanitizer::StackDepotBase
GetStorageSize	sanitizer_common/sanitizer_ring_buffer.h	/^  uptr GetStorageSize() const { return (long_ >> kSizeShift) << kPageSizeBits; }$/;"	f	class:__sanitizer::CompactRingBuffer
GetSuppressionContext	lsan/lsan_common.cpp	/^static SuppressionContext *GetSuppressionContext() {$/;"	f	namespace:__lsan
GetSuppressionForAddr	lsan/lsan_common.cpp	/^static Suppression *GetSuppressionForAddr(uptr addr) {$/;"	f	namespace:__lsan
GetSuppressionForStack	lsan/lsan_common.cpp	/^static Suppression *GetSuppressionForStack(u32 stack_trace_id) {$/;"	f	namespace:__lsan
GetTLSFakeStack	asan/asan_fake_stack.cpp	/^FakeStack *GetTLSFakeStack() { return 0; }$/;"	f	namespace:__asan
GetTLSFakeStack	asan/asan_fake_stack.cpp	/^FakeStack *GetTLSFakeStack() {$/;"	f	namespace:__asan
GetTagData	tsan/tsan_external.cpp	/^static TagData *GetTagData(uptr tag) {$/;"	f	namespace:__tsan
GetTagFromPointer	hwasan/hwasan.h	/^static inline tag_t GetTagFromPointer(uptr p) {$/;"	f
GetTargetQueueFromQueue	tsan/tsan_interceptors_libdispatch.cpp	/^static dispatch_queue_t GetTargetQueueFromQueue(dispatch_queue_t q) {$/;"	f	namespace:__tsan
GetTargetQueueFromSource	tsan/tsan_interceptors_libdispatch.cpp	/^static dispatch_queue_t GetTargetQueueFromSource(dispatch_source_t source) {$/;"	f	namespace:__tsan
GetTaskInfoMaxAddress	sanitizer_common/sanitizer_mac.cpp	/^static uptr GetTaskInfoMaxAddress() {$/;"	f	namespace:__sanitizer
GetThread	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^thread_t SuspendedThreadsListMac::GetThread(uptr index) const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
GetThreadByBufferAddress	hwasan/hwasan_thread_list.h	/^  Thread *GetThreadByBufferAddress(uptr p) {$/;"	f	class:__hwasan::HwasanThreadList
GetThreadContextByTidLocked	asan/asan_thread.cpp	/^AsanThreadContext *GetThreadContextByTidLocked(u32 tid) {$/;"	f	namespace:__asan
GetThreadID	sanitizer_common/sanitizer_stoptheworld.h	/^  virtual tid_t GetThreadID(uptr index) const { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SuspendedThreadsList
GetThreadID	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^tid_t SuspendedThreadsListLinux::GetThreadID(uptr index) const {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
GetThreadID	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^tid_t SuspendedThreadsListMac::GetThreadID(uptr index) const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
GetThreadID	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^tid_t SuspendedThreadsListNetBSD::GetThreadID(uptr index) const {$/;"	f	class:__sanitizer::SuspendedThreadsListNetBSD
GetThreadLocked	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadContextBase *GetThreadLocked(u32 tid) {$/;"	f	class:__sanitizer::ThreadRegistry
GetThreadRangesLocked	asan/asan_thread.cpp	/^bool GetThreadRangesLocked(tid_t os_id, uptr *stack_begin, uptr *stack_end,$/;"	f	namespace:__lsan
GetThreadRangesLocked	lsan/lsan_posix.cpp	/^bool GetThreadRangesLocked(tid_t os_id, uptr *stack_begin, uptr *stack_end,$/;"	f	namespace:__lsan
GetThreadRegistryLocked	asan/asan_thread.cpp	/^ThreadRegistry *GetThreadRegistryLocked() {$/;"	f	namespace:__lsan
GetThreadRegistryLocked	lsan/lsan_thread.cpp	/^ThreadRegistry *GetThreadRegistryLocked() {$/;"	f	namespace:__lsan
GetThreadSelf	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr GetThreadSelf() { return reinterpret_cast<uptr>(thrd_current()); }$/;"	f	namespace:__sanitizer
GetThreadSelf	sanitizer_common/sanitizer_posix_libcdep.cpp	/^uptr GetThreadSelf() {$/;"	f	namespace:__sanitizer
GetThreadSelf	sanitizer_common/sanitizer_rtems.cpp	/^uptr GetThreadSelf() { return static_cast<uptr>(pthread_self()); }$/;"	f	namespace:__sanitizer
GetThreadSelf	sanitizer_common/sanitizer_win.cpp	/^uptr GetThreadSelf() {$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	sanitizer_common/sanitizer_mac.cpp	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	sanitizer_common/sanitizer_rtems.cpp	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackAndTls	sanitizer_common/sanitizer_win.cpp	/^void GetThreadStackAndTls(bool main, uptr *stk_addr, uptr *stk_size,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	sanitizer_common/sanitizer_fuchsia.cpp	/^void GetThreadStackTopAndBottom(bool, uptr *stack_top, uptr *stack_bottom) {$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void GetThreadStackTopAndBottom(bool at_initialization, uptr *stack_top,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	sanitizer_common/sanitizer_mac.cpp	/^void GetThreadStackTopAndBottom(bool at_initialization, uptr *stack_top,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	sanitizer_common/sanitizer_rtems.cpp	/^void GetThreadStackTopAndBottom(bool at_initialization,$/;"	f	namespace:__sanitizer
GetThreadStackTopAndBottom	sanitizer_common/sanitizer_win.cpp	/^void GetThreadStackTopAndBottom(bool at_initialization, uptr *stack_top,$/;"	f	namespace:__sanitizer
GetThreadStats	hwasan/hwasan_thread_list.h	/^  ThreadStats GetThreadStats() {$/;"	f	class:__hwasan::HwasanThreadList
GetThreadTrace	tsan/tsan_platform.h	/^uptr GetThreadTrace(int tid) {$/;"	f	namespace:__tsan
GetThreadTraceHeader	tsan/tsan_platform.h	/^uptr GetThreadTraceHeader(int tid) {$/;"	f	namespace:__tsan
GetThreadTraceHeaderImpl	tsan/tsan_platform.h	/^uptr GetThreadTraceHeaderImpl(int tid) {$/;"	f	namespace:__tsan
GetThreadTraceImpl	tsan/tsan_platform.h	/^uptr GetThreadTraceImpl(int tid) {$/;"	f	namespace:__tsan
GetTid	sanitizer_common/sanitizer_fuchsia.cpp	/^tid_t GetTid() { return GetThreadSelf(); }$/;"	f	namespace:__sanitizer
GetTid	sanitizer_common/sanitizer_linux.cpp	/^tid_t GetTid() {$/;"	f	namespace:__sanitizer
GetTid	sanitizer_common/sanitizer_mac.cpp	/^tid_t GetTid() {$/;"	f	namespace:__sanitizer
GetTid	sanitizer_common/sanitizer_netbsd.cpp	/^tid_t GetTid() {$/;"	f	namespace:__sanitizer
GetTid	sanitizer_common/sanitizer_rtems.cpp	/^tid_t GetTid() { return GetThreadSelf(); }$/;"	f	namespace:__sanitizer
GetTid	sanitizer_common/sanitizer_win.cpp	/^tid_t GetTid() {$/;"	f	namespace:__sanitizer
GetTls	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static void GetTls(uptr *addr, uptr *size) {$/;"	f	namespace:__sanitizer
GetTlsSize	sanitizer_common/sanitizer_linux_libcdep.cpp	/^uptr GetTlsSize() {$/;"	f	namespace:__sanitizer
GetTlsSize	sanitizer_common/sanitizer_mac.cpp	/^uptr GetTlsSize() {$/;"	f	namespace:__sanitizer
GetTlsSize	sanitizer_common/sanitizer_win.cpp	/^uptr GetTlsSize() {$/;"	f	namespace:__sanitizer
GetTlsStaticInfoCall	sanitizer_common/sanitizer_linux_libcdep.cpp	/^struct GetTlsStaticInfoCall {$/;"	s	namespace:__sanitizer::__anon7
GetTlsStaticInfoRegparmCall	sanitizer_common/sanitizer_linux_libcdep.cpp	/^struct GetTlsStaticInfoRegparmCall {$/;"	s	namespace:__sanitizer::__anon7
GetTracePos	tsan/tsan_rtl.h	/^  u64 GetTracePos() const {$/;"	f	class:__tsan::FastState
GetType	sanitizer_common/sanitizer_posix.cpp	/^int SignalContext::GetType() const {$/;"	f	class:__sanitizer::SignalContext
GetType	sanitizer_common/sanitizer_win.cpp	/^int SignalContext::GetType() const {$/;"	f	class:__sanitizer::SignalContext
GetUid	sanitizer_common/sanitizer_posix_libcdep.cpp	/^u32 GetUid() {$/;"	f	namespace:__sanitizer
GetUid	sanitizer_common/sanitizer_win.cpp	/^u32 GetUid() {$/;"	f	namespace:__sanitizer
GetUser	sanitizer_common/sanitizer_allocator_secondary.h	/^  void *GetUser(const Header *h) {$/;"	f	class:LargeMmapAllocator
GetUserBegin	asan/asan_allocator.cpp	/^uptr GetUserBegin(uptr chunk) {$/;"	f	namespace:__lsan
GetUserBegin	lsan/lsan_allocator.cpp	/^uptr GetUserBegin(uptr chunk) {$/;"	f	namespace:__lsan
GetUserRegion	tsan/tsan_platform.h	/^bool GetUserRegion(int i, uptr *start, uptr *end) {$/;"	f	namespace:__tsan
GetWriteFlag	sanitizer_common/sanitizer_linux.cpp	/^SignalContext::WriteFlag SignalContext::GetWriteFlag() const {$/;"	f	class:__sanitizer::SignalContext
GetWriteFlag	sanitizer_common/sanitizer_mac.cpp	/^SignalContext::WriteFlag SignalContext::GetWriteFlag() const {$/;"	f	class:__sanitizer::SignalContext
GetWriteFlag	sanitizer_common/sanitizer_win.cpp	/^SignalContext::WriteFlag SignalContext::GetWriteFlag() const {$/;"	f	class:__sanitizer::SignalContext
Glibc_2_19_tls_header	sanitizer_common/sanitizer_tls_get_addr.cpp	/^struct Glibc_2_19_tls_header {$/;"	s	namespace:__sanitizer
Global	asan/asan_globals.cpp	/^typedef __asan_global Global;$/;"	t	namespace:__asan
GlobalAddressDescription	asan/asan_descriptions.h	/^struct GlobalAddressDescription {$/;"	s	namespace:__asan
GlobalFilename	asan/asan_globals.cpp	/^static const char *GlobalFilename(const __asan_global &g) {$/;"	f	namespace:__asan
GlobalProc	tsan/tsan_mman.cpp	/^  GlobalProc()$/;"	f	struct:__tsan::GlobalProc
GlobalProc	tsan/tsan_mman.cpp	/^struct GlobalProc {$/;"	s	namespace:__tsan
GlobalRegistrationSite	asan/asan_globals.cpp	/^struct GlobalRegistrationSite {$/;"	s	namespace:__asan
GlobalRegistrationSiteVector	asan/asan_globals.cpp	/^typedef InternalMmapVector<GlobalRegistrationSite> GlobalRegistrationSiteVector;$/;"	t	namespace:__asan
GlobalSymbolState	asan/asan_globals.cpp	/^enum GlobalSymbolState {$/;"	g	namespace:__asan
Green	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Green()   const { return ansi_ ? "\\033[1m\\033[32m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
GrowShadowStack	tsan/tsan_rtl.cpp	/^void GrowShadowStack(ThreadState *thr) {$/;"	f	namespace:__tsan
H	tsan/tsan_md5.cpp	143;"	d
H	tsan/tsan_md5.cpp	18;"	d
HACKY_CALL	tsan/tsan_rtl.h	834;"	d
HACKY_CALL	tsan/tsan_rtl.h	843;"	d
HANDLE	asan/asan_malloc_win.cpp	/^typedef void *HANDLE;$/;"	t
HANDLE_EINTR	sanitizer_common/sanitizer_internal_defs.h	396;"	d
HAVE_INT128_T	ubsan/ubsan_value.h	23;"	d
HAVE_INT128_T	ubsan/ubsan_value.h	25;"	d
HEAP_ALLOCATE_SUPPORTED_FLAGS	asan/asan_malloc_win.cpp	/^constexpr unsigned long HEAP_ALLOCATE_SUPPORTED_FLAGS = (HEAP_ZERO_MEMORY);$/;"	v
HEAP_ALLOCATE_UNSUPPORTED_FLAGS	asan/asan_malloc_win.cpp	/^constexpr unsigned long HEAP_ALLOCATE_UNSUPPORTED_FLAGS =$/;"	v
HEAP_FREE_UNSUPPORTED_FLAGS	asan/asan_malloc_win.cpp	/^constexpr unsigned long HEAP_FREE_UNSUPPORTED_FLAGS =$/;"	v
HEAP_REALLOC_IN_PLACE_ONLY	asan/asan_malloc_win.cpp	/^constexpr unsigned long HEAP_REALLOC_IN_PLACE_ONLY = 0x00000010;$/;"	v
HEAP_REALLOC_UNSUPPORTED_FLAGS	asan/asan_malloc_win.cpp	/^constexpr unsigned long HEAP_REALLOC_UNSUPPORTED_FLAGS =$/;"	v
HEAP_ZERO_MEMORY	asan/asan_malloc_win.cpp	/^constexpr unsigned long HEAP_ZERO_MEMORY = 0x00000008;$/;"	v
HIDDEN	builtins/assembly.h	24;"	d
HIDDEN	builtins/assembly.h	35;"	d
HIDDEN	builtins/assembly.h	54;"	d
HIGH_BITS	asan/asan_mapping_sparc64.h	23;"	d
HWASAN_ALLOCATOR_H	hwasan/hwasan_allocator.h	14;"	d
HWASAN_CHECKS_H	hwasan/hwasan_checks.h	14;"	d
HWASAN_CONTAINS_UBSAN	hwasan/hwasan.h	25;"	d
HWASAN_FLAG	hwasan/hwasan.cpp	54;"	d
HWASAN_FLAG	hwasan/hwasan.cpp	56;"	d
HWASAN_FLAG	hwasan/hwasan.cpp	60;"	d
HWASAN_FLAG	hwasan/hwasan.cpp	63;"	d
HWASAN_FLAG	hwasan/hwasan_flags.h	18;"	d
HWASAN_FLAG	hwasan/hwasan_flags.h	20;"	d
HWASAN_FLAGS_H	hwasan/hwasan_flags.h	13;"	d
HWASAN_FREE_HOOK	hwasan/hwasan.h	137;"	d
HWASAN_GLOBALS_H	hwasan/hwasan_globals.h	15;"	d
HWASAN_H	hwasan/hwasan.h	15;"	d
HWASAN_INTERFACE_INTERNAL_H	hwasan/hwasan_interface_internal.h	15;"	d
HWASAN_MALLOC_HOOK	hwasan/hwasan.h	130;"	d
HWASAN_MAPPING_H	hwasan/hwasan_mapping.h	15;"	d
HWASAN_POISONING_H	hwasan/hwasan_poisoning.h	14;"	d
HWASAN_PREMAP_SHADOW_H	hwasan/hwasan_dynamic_shadow.h	16;"	d
HWASAN_REPLACE_OPERATORS_NEW_AND_DELETE	hwasan/hwasan.h	33;"	d
HWASAN_REPORT_H	hwasan/hwasan_report.h	16;"	d
HWASAN_THREAD_H	hwasan/hwasan_thread.h	14;"	d
HWASAN_WITH_INTERCEPTORS	hwasan/hwasan.h	29;"	d
HWAsanCheckFailed	hwasan/hwasan.cpp	/^static void HWAsanCheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__hwasan
Handle	sanitizer_common/sanitizer_addrhashmap.h	/^  class Handle {$/;"	c	class:__sanitizer::AddrHashMap
Handle	sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::Handle::Handle(AddrHashMap<T, kSize> *map, uptr addr) {$/;"	f	class:__sanitizer::AddrHashMap::Handle
Handle	sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::Handle::Handle(AddrHashMap<T, kSize> *map, uptr addr,$/;"	f	class:__sanitizer::AddrHashMap::Handle
HandleDeadlySignal	sanitizer_common/sanitizer_symbolizer_report.cpp	/^void HandleDeadlySignal(void *siginfo, void *context, u32 tid,$/;"	f	namespace:__sanitizer
HandleDlopenInit	asan/asan_fuchsia.cpp	/^bool HandleDlopenInit() {$/;"	f	namespace:__asan
HandleDlopenInit	asan/asan_linux.cpp	/^bool HandleDlopenInit() {$/;"	f	namespace:__asan
HandleDlopenInit	asan/asan_malloc_mac.cpp	/^bool HandleDlopenInit() {$/;"	f	namespace:COMMON_MALLOC_NAMESPACE
HandleDlopenInit	asan/asan_rtems.cpp	/^bool HandleDlopenInit() {$/;"	f	namespace:__asan
HandleDlopenInit	asan/asan_win.cpp	/^bool HandleDlopenInit() {$/;"	f	namespace:__asan
HandleDynamicTypeCacheMiss	ubsan/ubsan_handlers_cxx.cpp	/^static bool HandleDynamicTypeCacheMiss($/;"	f
HandleExit	asan/asan_rtems.cpp	/^static void HandleExit() {$/;"	f	namespace:__asan
HandleLeaks	lsan/lsan_common_fuchsia.cpp	/^void HandleLeaks() {}$/;"	f	namespace:__lsan
HandleLeaks	lsan/lsan_common_linux.cpp	/^void HandleLeaks() {$/;"	f	namespace:__lsan
HandleLeaks	lsan/lsan_common_mac.cpp	/^void HandleLeaks() {}$/;"	f	namespace:__lsan
HandleNoReturn	asan/asan_fake_stack.cpp	/^void FakeStack::HandleNoReturn() {$/;"	f	class:__asan::FakeStack
HandleRace	tsan/tsan_rtl.cpp	/^void HandleRace(ThreadState *thr, u64 *shadow_mem,$/;"	f	namespace:__tsan
HandleRacyAddress	tsan/tsan_rtl_report.cpp	/^static bool HandleRacyAddress(ThreadState *thr, uptr addr_min, uptr addr_max) {$/;"	f	namespace:__tsan
HandleRacyStacks	tsan/tsan_rtl_report.cpp	/^static bool HandleRacyStacks(ThreadState *thr, VarSizeStackTrace traces[2]) {$/;"	f	namespace:__tsan
HandleRecvmsg	tsan/tsan_interceptors_posix.cpp	/^static void HandleRecvmsg(ThreadState *thr, uptr pc,$/;"	f
HandleSignalMode	sanitizer_common/sanitizer_flags.h	/^enum HandleSignalMode {$/;"	g	namespace:__sanitizer
HandleTagMismatch	hwasan/hwasan_linux.cpp	/^static void HandleTagMismatch(AccessInfo ai, uptr pc, uptr frame,$/;"	f	namespace:__hwasan
HappensBefore	tsan/tsan_rtl.cpp	/^static inline bool HappensBefore(Shadow old, ThreadState *thr) {$/;"	f	namespace:__tsan
HasAcquiredAfterRelease	tsan/tsan_clock.cpp	/^bool ThreadClock::HasAcquiredAfterRelease(const SyncClock *dst) const {$/;"	f	class:__tsan::ThreadClock
HasReportedLeaks	lsan/lsan_common.cpp	/^bool HasReportedLeaks() { return has_reported_leaks; }$/;"	f	namespace:__lsan
HasSuppressionType	sanitizer_common/sanitizer_suppressions.cpp	/^bool SuppressionContext::HasSuppressionType(const char *type) const {$/;"	f	class:__sanitizer::SuppressionContext
HashValue	ubsan/ubsan_type_hash.h	/^typedef uptr HashValue;$/;"	t	namespace:__ubsan
HaveStackTraceBasedSuppressions	asan/asan_suppressions.cpp	/^bool HaveStackTraceBasedSuppressions() {$/;"	f	namespace:__asan
Header	sanitizer_common/sanitizer_allocator_secondary.h	/^  struct Header {$/;"	s	class:LargeMmapAllocator
HeaderDigest	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int HeaderDigest : 1;$/;"	m	struct:__anon31::__anon32
HeaderDigest	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  iscsi_digest_t HeaderDigest;$/;"	m	struct:__anon31
HeapAddressDescription	asan/asan_descriptions.h	/^struct HeapAddressDescription {$/;"	s	namespace:__asan
HeapAllocationRecord	hwasan/hwasan_allocator.h	/^struct HeapAllocationRecord {$/;"	s	namespace:__hwasan
HeapAllocationsRingBuffer	hwasan/hwasan_allocator.h	/^typedef RingBuffer<HeapAllocationRecord> HeapAllocationsRingBuffer;$/;"	t	namespace:__hwasan
HeapEnd	tsan/tsan_rtl.h	/^uptr ALWAYS_INLINE HeapEnd() {$/;"	f	namespace:__tsan
HeapMemBeg	tsan/tsan_platform.h	/^uptr HeapMemBeg(void) {$/;"	f	namespace:__tsan
HeapMemEnd	tsan/tsan_platform.h	/^uptr HeapMemEnd(void) {$/;"	f	namespace:__tsan
HeapProfile	asan/asan_memory_profile.cpp	/^  HeapProfile() { allocations_.reserve(1024); }$/;"	f	class:__asan::HeapProfile
HeapProfile	asan/asan_memory_profile.cpp	/^class HeapProfile {$/;"	c	namespace:__asan
HiAppMemBeg	tsan/tsan_platform.h	/^uptr HiAppMemBeg(void) {$/;"	f	namespace:__tsan
HiAppMemEnd	tsan/tsan_platform.h	/^uptr HiAppMemEnd(void) {$/;"	f	namespace:__tsan
Highlight	ubsan/ubsan_diag.cpp	/^  const char *Highlight() const { return Green(); }$/;"	f	class:__anon5::Decorator
HwasanAllocate	hwasan/hwasan_allocator.cpp	/^static void *HwasanAllocate(StackTrace *stack, uptr orig_size, uptr alignment,$/;"	f	namespace:__hwasan
HwasanAllocatorInit	hwasan/hwasan_allocator.cpp	/^void HwasanAllocatorInit() {$/;"	f	namespace:__hwasan
HwasanAtExit	hwasan/hwasan_linux.cpp	/^static void HwasanAtExit(void) {$/;"	f	namespace:__hwasan
HwasanCalloc	hwasan/hwasan_allocator.cpp	/^static void *HwasanCalloc(StackTrace *stack, uptr nmemb, uptr size) {$/;"	f	namespace:__hwasan
HwasanChunkView	hwasan/hwasan_allocator.h	/^  HwasanChunkView() : block_(0), metadata_(nullptr) {}$/;"	f	class:__hwasan::HwasanChunkView
HwasanChunkView	hwasan/hwasan_allocator.h	/^  HwasanChunkView(uptr block, Metadata *metadata)$/;"	f	class:__hwasan::HwasanChunkView
HwasanChunkView	hwasan/hwasan_allocator.h	/^class HwasanChunkView {$/;"	c	namespace:__hwasan
HwasanDeallocate	hwasan/hwasan_allocator.cpp	/^static void HwasanDeallocate(StackTrace *stack, void *tagged_ptr) {$/;"	f	namespace:__hwasan
HwasanFormatMemoryUsage	hwasan/hwasan.cpp	/^static void HwasanFormatMemoryUsage(InternalScopedString &s) {$/;"	f	namespace:__hwasan
HwasanMapUnmapCallback	hwasan/hwasan_allocator.h	/^struct HwasanMapUnmapCallback {$/;"	s	namespace:__hwasan
HwasanOnDeadlySignal	hwasan/hwasan_linux.cpp	/^void HwasanOnDeadlySignal(int signo, void *info, void *context) {$/;"	f	namespace:__hwasan
HwasanOnSIGTRAP	hwasan/hwasan_linux.cpp	/^static bool HwasanOnSIGTRAP(int signo, siginfo_t *info, ucontext_t *uc) {$/;"	f	namespace:__hwasan
HwasanReallocate	hwasan/hwasan_allocator.cpp	/^static void *HwasanReallocate(StackTrace *stack, void *tagged_ptr_old,$/;"	f	namespace:__hwasan
HwasanTSDDtor	hwasan/hwasan_linux.cpp	/^void HwasanTSDDtor(void *tsd) {$/;"	f	namespace:__hwasan
HwasanTSDInit	hwasan/hwasan_linux.cpp	/^void HwasanTSDInit() {$/;"	f	namespace:__hwasan
HwasanTSDInit	hwasan/hwasan_linux.cpp	/^void HwasanTSDInit() {}$/;"	f	namespace:__hwasan
HwasanTSDThreadInit	hwasan/hwasan_linux.cpp	/^void HwasanTSDThreadInit() {$/;"	f	namespace:__hwasan
HwasanTSDThreadInit	hwasan/hwasan_linux.cpp	/^void HwasanTSDThreadInit() {}$/;"	f	namespace:__hwasan
HwasanThreadList	hwasan/hwasan_thread_list.h	/^  HwasanThreadList(uptr storage, uptr size)$/;"	f	class:__hwasan::HwasanThreadList
HwasanThreadList	hwasan/hwasan_thread_list.h	/^class HwasanThreadList {$/;"	c	namespace:__hwasan
HwasanThreadStartFunc	hwasan/hwasan_interceptors.cpp	/^static void *HwasanThreadStartFunc(void *arg) {$/;"	f
I	tsan/tsan_md5.cpp	144;"	d
I	tsan/tsan_md5.cpp	19;"	d
INCLUDED_FROM_INTERCEPTION_LIB	interception/interception.h	281;"	d
INCLUDED_FROM_INTERCEPTION_LIB	interception/interception.h	302;"	d
INIT_LONGJMP_XOR_KEY	tsan/tsan_platform_linux.cpp	70;"	d
INIT_LONGJMP_XOR_KEY	tsan/tsan_platform_linux.cpp	72;"	d
INT32_MAX	sanitizer_common/sanitizer_internal_defs.h	349;"	d
INT32_MAX	sanitizer_common/sanitizer_internal_defs.h	350;"	d
INT32_MIN	sanitizer_common/sanitizer_internal_defs.h	347;"	d
INT32_MIN	sanitizer_common/sanitizer_internal_defs.h	348;"	d
INT64_MAX	sanitizer_common/sanitizer_internal_defs.h	355;"	d
INT64_MAX	sanitizer_common/sanitizer_internal_defs.h	356;"	d
INT64_MIN	sanitizer_common/sanitizer_internal_defs.h	353;"	d
INT64_MIN	sanitizer_common/sanitizer_internal_defs.h	354;"	d
INTERCEPTION_H	interception/interception.h	15;"	d
INTERCEPTION_LINUX_H	interception/interception_linux.h	22;"	d
INTERCEPTION_MAC_H	interception/interception_mac.h	21;"	d
INTERCEPTION_WIN_H	interception/interception_win.h	21;"	d
INTERCEPTOR	asan/asan_interceptors.cpp	/^  INTERCEPTOR(char *, strcat, char *to, const char *from) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(_Unwind_Reason_Code, _Unwind_RaiseException,$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(_Unwind_Reason_Code, _Unwind_SjLj_RaiseException,$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(char *, strcpy, char *to, const char *from) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(char*, strncat, char *to, const char *from, uptr size) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(char*, strncpy, char *to, const char *from, uptr size) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(int, __cxa_atexit, void (*func)(void *), void *arg,$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(int, atexit, void (*func)()) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(int, atoi, const char *nptr) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(int, pthread_atfork, void (*prepare)(), void (*parent)(),$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(int, pthread_create, void *thread,$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(int, pthread_join, void *t, void **arg) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(int, swapcontext, struct ucontext_t *oucp,$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(long long, atoll, const char *nptr) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(long long, strtoll, const char *nptr, char **endptr, int base) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(long, atol, const char *nptr) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(long, strtol, const char *nptr, char **endptr, int base) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(void, __cxa_rethrow_primary_exception, void *a) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(void, __cxa_throw, void *a, void *b, void *c) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(void, __longjmp_chk, void *env, int val) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(void, _longjmp, void *env, int val) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(void, longjmp, void *env, int val) {$/;"	f
INTERCEPTOR	asan/asan_interceptors.cpp	/^INTERCEPTOR(void, siglongjmp, void *env, int val) {$/;"	f
INTERCEPTOR	asan/asan_mac.cpp	/^INTERCEPTOR(void, dispatch_after,$/;"	f
INTERCEPTOR	asan/asan_mac.cpp	/^INTERCEPTOR(void, dispatch_after_f, dispatch_time_t when,$/;"	f
INTERCEPTOR	asan/asan_mac.cpp	/^INTERCEPTOR(void, dispatch_async,$/;"	f
INTERCEPTOR	asan/asan_mac.cpp	/^INTERCEPTOR(void, dispatch_group_async,$/;"	f
INTERCEPTOR	asan/asan_mac.cpp	/^INTERCEPTOR(void, dispatch_group_async_f, dispatch_group_t group,$/;"	f
INTERCEPTOR	asan/asan_mac.cpp	/^INTERCEPTOR(void, dispatch_source_set_cancel_handler,$/;"	f
INTERCEPTOR	asan/asan_mac.cpp	/^INTERCEPTOR(void, dispatch_source_set_event_handler,$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(int, mallopt, int cmd, int value) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(int, posix_memalign, void **memptr, uptr alignment, uptr size) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(struct fake_mallinfo, mallinfo, void) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(uptr, malloc_usable_size, void *ptr) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(void*, __libc_memalign, uptr boundary, uptr size) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(void*, aligned_alloc, uptr boundary, uptr size) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(void*, fir_malloc, uptr size) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(void*, memalign, uptr boundary, uptr size) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(void, cfree, void *ptr) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(void, fir_free, void *ptr) {$/;"	f
INTERCEPTOR	asan/asan_malloc_linux.cpp	/^INTERCEPTOR(void, malloc_stats, void) {$/;"	f
INTERCEPTOR	asan/asan_win.cpp	/^INTERCEPTOR(int, _except_handler3, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR	asan/asan_win.cpp	/^INTERCEPTOR(int, _except_handler4, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR	asan/asan_win_dll_thunk.cpp	/^INTERCEPTOR(int, _except_handler4, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR	hwasan/hwasan_interceptors.cpp	/^INTERCEPTOR(int, fork, void) {$/;"	f
INTERCEPTOR	hwasan/hwasan_interceptors.cpp	/^INTERCEPTOR(int, pthread_create, void *th, void *attr, void *(*callback)(void*),$/;"	f
INTERCEPTOR	hwasan/hwasan_interceptors.cpp	/^INTERCEPTOR(void, __libc_longjmp, __hw_jmp_buf env, int val) {$/;"	f
INTERCEPTOR	hwasan/hwasan_interceptors.cpp	/^INTERCEPTOR(void, longjmp, __hw_jmp_buf env, int val) {$/;"	f
INTERCEPTOR	hwasan/hwasan_interceptors.cpp	/^INTERCEPTOR(void, siglongjmp, __hw_sigjmp_buf env, int val) {$/;"	f
INTERCEPTOR	interception/interception.h	220;"	d
INTERCEPTOR	interception/interception.h	227;"	d
INTERCEPTOR	interception/interception.h	246;"	d
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(char *, strerror, int errnum) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, __cxa_atexit, void (*func)(void *), void *arg,$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, atexit, void (*f)()) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, mallopt, int cmd, int value) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, mcheck, void (*abortfunc)(int mstatus)) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, mcheck_pedantic, void (*abortfunc)(int mstatus)) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, mprobe, void *ptr) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, posix_memalign, void **memptr, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, pthread_atfork, void (*prepare)(), void (*parent)(),$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, pthread_create, void *th, void *attr,$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, pthread_detach, void *th) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(int, pthread_join, void *th, void **ret) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(struct fake_mallinfo, mallinfo, void) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(uptr, malloc_usable_size, void *ptr) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void *, _Znam, size_t size)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void *, _ZnamRKSt9nothrow_t, size_t size, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void *, _Znwm, size_t size)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void *, _ZnwmRKSt9nothrow_t, size_t size, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void *, __libc_memalign, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void*, aligned_alloc, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void*, memalign, uptr alignment, uptr size) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, _ZdaPv, void *ptr)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, _ZdaPvRKSt9nothrow_t, void *ptr, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, _ZdlPv, void *ptr)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, _ZdlPvRKSt9nothrow_t, void *ptr, std::nothrow_t const&)$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, _exit, int status) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, _lwp_exit) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, fir_free, void *p) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_interceptors.cpp	/^INTERCEPTOR(void, thr_exit, tid_t *state) {$/;"	f	namespace:std
INTERCEPTOR	lsan/lsan_mac.cpp	/^INTERCEPTOR(void, dispatch_after, dispatch_time_t when, dispatch_queue_t queue,$/;"	f
INTERCEPTOR	lsan/lsan_mac.cpp	/^INTERCEPTOR(void, dispatch_after_f, dispatch_time_t when, dispatch_queue_t dq,$/;"	f
INTERCEPTOR	lsan/lsan_mac.cpp	/^INTERCEPTOR(void, dispatch_async, dispatch_queue_t dq, void (^work)(void)) {$/;"	f
INTERCEPTOR	lsan/lsan_mac.cpp	/^INTERCEPTOR(void, dispatch_group_async, dispatch_group_t dg,$/;"	f
INTERCEPTOR	lsan/lsan_mac.cpp	/^INTERCEPTOR(void, dispatch_group_async_f, dispatch_group_t group,$/;"	f
INTERCEPTOR	lsan/lsan_mac.cpp	/^INTERCEPTOR(void, dispatch_source_set_cancel_handler, dispatch_source_t ds,$/;"	f
INTERCEPTOR	lsan/lsan_mac.cpp	/^INTERCEPTOR(void, dispatch_source_set_event_handler, dispatch_source_t ds,$/;"	f
INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^INTERCEPTOR(int, pthread_cond_broadcast, void *c) {$/;"	f
INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^INTERCEPTOR(int, pthread_cond_destroy, void *c) {$/;"	f
INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^INTERCEPTOR(int, pthread_cond_init, void *c, void *a) {$/;"	f
INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^INTERCEPTOR(int, pthread_cond_signal, void *c) {$/;"	f
INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^INTERCEPTOR(int, pthread_cond_timedwait, void *c, void *m, void *abstime) {$/;"	f
INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^INTERCEPTOR(int, pthread_cond_timedwait_relative_np, void *c, void *m,$/;"	f
INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^INTERCEPTOR(int, pthread_cond_wait, void *c, void *m) {$/;"	f
INTERCEPTOR_ALIAS	hwasan/hwasan_interceptors.cpp	179;"	d
INTERCEPTOR_ATTRIBUTE	interception/interception.h	122;"	d
INTERCEPTOR_ATTRIBUTE	interception/interception.h	128;"	d
INTERCEPTOR_ATTRIBUTE	interception/interception.h	136;"	d
INTERCEPTOR_ATTRIBUTE	interception/interception.h	141;"	d
INTERCEPTOR_ATTRIBUTE	interception/interception.h	151;"	d
INTERCEPTOR_ATTRIBUTE	interception/interception.h	162;"	d
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(BOOL, HeapFree, HANDLE hHeap, DWORD dwFlags, LPVOID lpMem) {$/;"	f
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(BOOL, RtlFreeHeap, HANDLE HeapHandle, DWORD Flags,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(LPVOID, HeapAlloc, HANDLE hHeap, DWORD dwFlags,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(LPVOID, HeapReAlloc, HANDLE hHeap, DWORD dwFlags,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(size_t, HeapSize, HANDLE hHeap, DWORD dwFlags,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(size_t, RtlSizeHeap, HANDLE HeapHandle, DWORD Flags,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(void*, RtlAllocateHeap, HANDLE HeapHandle, DWORD Flags,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_malloc_win.cpp	/^INTERCEPTOR_WINAPI(void*, RtlReAllocateHeap, HANDLE HeapHandle, DWORD Flags,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_win.cpp	/^INTERCEPTOR_WINAPI(EXCEPTION_DISPOSITION, __C_specific_handler,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_win.cpp	/^INTERCEPTOR_WINAPI(HANDLE, CreateThread, LPSECURITY_ATTRIBUTES security,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_win.cpp	/^INTERCEPTOR_WINAPI(LPTOP_LEVEL_EXCEPTION_FILTER, SetUnhandledExceptionFilter,$/;"	f
INTERCEPTOR_WINAPI	asan/asan_win.cpp	/^INTERCEPTOR_WINAPI(void, RaiseException, void *a, void *b, void *c, void *d) {$/;"	f
INTERCEPTOR_WINAPI	asan/asan_win.cpp	/^INTERCEPTOR_WINAPI(void, RtlRaiseException, EXCEPTION_RECORD *ExceptionRecord) {$/;"	f
INTERCEPTOR_WINAPI	interception/interception.h	258;"	d
INTERCEPTOR_WITH_SUFFIX	interception/interception.h	235;"	d
INTERCEPTOR_WITH_SUFFIX	interception/interception.h	249;"	d
INTERCEPTOR_ZZZ	interception/interception.h	240;"	d
INTERCEPT_DISPATCH_X_F_3	asan/asan_mac.cpp	193;"	d
INTERCEPT_DISPATCH_X_F_3	lsan/lsan_mac.cpp	110;"	d
INTERCEPT_FUNCTION	interception/interception.h	287;"	d
INTERCEPT_FUNCTION_DLLIMPORT	interception/interception_win.h	77;"	d
INTERCEPT_FUNCTION_LINUX_OR_FREEBSD	interception/interception_linux.h	31;"	d
INTERCEPT_FUNCTION_MAC	interception/interception_mac.h	23;"	d
INTERCEPT_FUNCTION_VER	interception/interception.h	288;"	d
INTERCEPT_FUNCTION_VER_LINUX_OR_FREEBSD	interception/interception_linux.h	40;"	d
INTERCEPT_FUNCTION_VER_MAC	interception/interception_mac.h	24;"	d
INTERCEPT_FUNCTION_VER_WIN	interception/interception_win.h	75;"	d
INTERCEPT_FUNCTION_WIN	interception/interception_win.h	64;"	d
INTERCEPT_LIBRARY_FUNCTION	sanitizer_common/sanitizer_win_dll_thunk.h	85;"	d
INTERCEPT_OR_DIE	sanitizer_common/sanitizer_win_dll_thunk.h	30;"	d
INTERCEPT_SANITIZER_FUNCTION	sanitizer_common/sanitizer_win_dll_thunk.h	53;"	d
INTERCEPT_SANITIZER_WEAK_FUNCTION	sanitizer_common/sanitizer_win_dll_thunk.h	68;"	d
INTERCEPT_SANITIZER_WEAK_FUNCTION	sanitizer_common/sanitizer_win_weak_interception.h	24;"	d
INTERCEPT_UCRT_FUNCTION	asan/asan_malloc_win.cpp	528;"	d
INTERCEPT_UCRT_FUNCTION	asan/asan_malloc_win.cpp	537;"	d
INTERCEPT_WEAK	sanitizer_common/sanitizer_win_weak_interception.h	22;"	d
INTERCEPT_WHEN_POSSIBLE	sanitizer_common/sanitizer_win_dll_thunk.h	41;"	d
INTERCEPT_WRAP_V_V	sanitizer_common/sanitizer_win_dll_thunk.h	91;"	d
INTERCEPT_WRAP_V_W	sanitizer_common/sanitizer_win_dll_thunk.h	99;"	d
INTERCEPT_WRAP_V_WW	sanitizer_common/sanitizer_win_dll_thunk.h	107;"	d
INTERCEPT_WRAP_V_WWW	sanitizer_common/sanitizer_win_dll_thunk.h	115;"	d
INTERCEPT_WRAP_W_V	sanitizer_common/sanitizer_win_dll_thunk.h	123;"	d
INTERCEPT_WRAP_W_W	sanitizer_common/sanitizer_win_dll_thunk.h	131;"	d
INTERCEPT_WRAP_W_WW	sanitizer_common/sanitizer_win_dll_thunk.h	139;"	d
INTERCEPT_WRAP_W_WWW	sanitizer_common/sanitizer_win_dll_thunk.h	147;"	d
INTERCEPT_WRAP_W_WWWW	sanitizer_common/sanitizer_win_dll_thunk.h	155;"	d
INTERCEPT_WRAP_W_WWWWW	sanitizer_common/sanitizer_win_dll_thunk.h	163;"	d
INTERCEPT_WRAP_W_WWWWWW	sanitizer_common/sanitizer_win_dll_thunk.h	172;"	d
INTERFACE_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	198;"	d
INTERFACE_ATTRIBUTE	tsan/tsan_interface_java.h	27;"	d
INTERFACE_ATTRIBUTE	tsan/tsan_interface_java.h	97;"	d
INTERFACE_FUNCTION	asan/asan_win_dll_thunk.cpp	25;"	d
INTERFACE_FUNCTION	asan/asan_win_dynamic_runtime_thunk.cpp	30;"	d
INTERFACE_FUNCTION	asan/asan_win_weak_interception.cpp	19;"	d
INTERFACE_FUNCTION	sanitizer_common/sanitizer_coverage_win_dll_thunk.cpp	17;"	d
INTERFACE_FUNCTION	sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cpp	17;"	d
INTERFACE_FUNCTION	sanitizer_common/sanitizer_coverage_win_weak_interception.cpp	20;"	d
INTERFACE_FUNCTION	sanitizer_common/sanitizer_win_dll_thunk.cpp	53;"	d
INTERFACE_FUNCTION	sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cpp	17;"	d
INTERFACE_FUNCTION	sanitizer_common/sanitizer_win_weak_interception.cpp	53;"	d
INTERFACE_FUNCTION	ubsan/ubsan_win_dll_thunk.cpp	17;"	d
INTERFACE_FUNCTION	ubsan/ubsan_win_dynamic_runtime_thunk.cpp	17;"	d
INTERFACE_FUNCTION	ubsan/ubsan_win_weak_interception.cpp	20;"	d
INTERFACE_WEAK_FUNCTION	asan/asan_win_dll_thunk.cpp	26;"	d
INTERFACE_WEAK_FUNCTION	asan/asan_win_dynamic_runtime_thunk.cpp	31;"	d
INTERFACE_WEAK_FUNCTION	asan/asan_win_weak_interception.cpp	20;"	d
INTERFACE_WEAK_FUNCTION	sanitizer_common/sanitizer_coverage_win_dll_thunk.cpp	18;"	d
INTERFACE_WEAK_FUNCTION	sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cpp	18;"	d
INTERFACE_WEAK_FUNCTION	sanitizer_common/sanitizer_coverage_win_weak_interception.cpp	21;"	d
INTERFACE_WEAK_FUNCTION	sanitizer_common/sanitizer_win_dll_thunk.cpp	54;"	d
INTERFACE_WEAK_FUNCTION	sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cpp	18;"	d
INTERFACE_WEAK_FUNCTION	sanitizer_common/sanitizer_win_weak_interception.cpp	54;"	d
INTERFACE_WEAK_FUNCTION	ubsan/ubsan_win_dll_thunk.cpp	18;"	d
INTERFACE_WEAK_FUNCTION	ubsan/ubsan_win_dynamic_runtime_thunk.cpp	18;"	d
INTERFACE_WEAK_FUNCTION	ubsan/ubsan_win_weak_interception.cpp	21;"	d
INTERPOSER	interception/interception.h	103;"	d
INTERPOSER_2	interception/interception.h	113;"	d
INTMAX_T	interception/interception.h	/^typedef __sanitizer::s64     INTMAX_T;$/;"	t
IOCB_CMD_PREADV	include/system/linux/aio_abi.h	5;"	d
IOCB_CMD_PWRITEV	include/system/linux/aio_abi.h	6;"	d
IOCTL_AFM_ADDFMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AFM_ADDFMAP = AFM_ADDFMAP;$/;"	m	namespace:__sanitizer
IOCTL_AFM_CLEANFMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AFM_CLEANFMAP = AFM_CLEANFMAP;$/;"	m	namespace:__sanitizer
IOCTL_AFM_DELFMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AFM_DELFMAP = AFM_DELFMAP;$/;"	m	namespace:__sanitizer
IOCTL_AFM_GETFMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AFM_GETFMAP = AFM_GETFMAP;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_ACQUIRE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_ACQUIRE = AGPIOC_ACQUIRE;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_ALLOCATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_ALLOCATE = AGPIOC_ALLOCATE;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_BIND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_BIND = AGPIOC_BIND;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_DEALLOCATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_DEALLOCATE = AGPIOC_DEALLOCATE;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_INFO = AGPIOC_INFO;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_RELEASE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_RELEASE = AGPIOC_RELEASE;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_SETUP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_SETUP = AGPIOC_SETUP;$/;"	m	namespace:__sanitizer
IOCTL_AGPIOC_UNBIND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AGPIOC_UNBIND = AGPIOC_UNBIND;$/;"	m	namespace:__sanitizer
IOCTL_ALTQGTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ALTQGTYPE = ALTQGTYPE;$/;"	m	namespace:__sanitizer
IOCTL_ALTQTBRGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ALTQTBRGET = ALTQTBRGET;$/;"	m	namespace:__sanitizer
IOCTL_ALTQTBRSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ALTQTBRSET = ALTQTBRSET;$/;"	m	namespace:__sanitizer
IOCTL_AMR_IO_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AMR_IO_COMMAND = AMR_IO_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_AMR_IO_VERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AMR_IO_VERSION = AMR_IO_VERSION;$/;"	m	namespace:__sanitizer
IOCTL_APM_IOC_DEV_CTL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_APM_IOC_DEV_CTL = APM_IOC_DEV_CTL;$/;"	m	namespace:__sanitizer
IOCTL_APM_IOC_GETPOWER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_APM_IOC_GETPOWER = APM_IOC_GETPOWER;$/;"	m	namespace:__sanitizer
IOCTL_APM_IOC_NEXTEVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_APM_IOC_NEXTEVENT = APM_IOC_NEXTEVENT;$/;"	m	namespace:__sanitizer
IOCTL_APM_IOC_REJECT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_APM_IOC_REJECT = APM_IOC_REJECT;$/;"	m	namespace:__sanitizer
IOCTL_APM_IOC_STANDBY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_APM_IOC_STANDBY = APM_IOC_STANDBY;$/;"	m	namespace:__sanitizer
IOCTL_APM_IOC_SUSPEND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_APM_IOC_SUSPEND = APM_IOC_SUSPEND;$/;"	m	namespace:__sanitizer
IOCTL_ATABUSIODETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ATABUSIODETACH = ATABUSIODETACH;$/;"	m	namespace:__sanitizer
IOCTL_ATABUSIORESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ATABUSIORESET = ATABUSIORESET;$/;"	m	namespace:__sanitizer
IOCTL_ATABUSIOSCAN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ATABUSIOSCAN = ATABUSIOSCAN;$/;"	m	namespace:__sanitizer
IOCTL_ATAIOCCOMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ATAIOCCOMMAND = ATAIOCCOMMAND;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_DRAIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_DRAIN = AUDIO_DRAIN;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_FLUSH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_FLUSH = AUDIO_FLUSH;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETBUFINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETBUFINFO = AUDIO_GETBUFINFO;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETCHAN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETCHAN = AUDIO_GETCHAN;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETDEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETDEV = AUDIO_GETDEV;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETENC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETENC = AUDIO_GETENC;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETFD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETFD = AUDIO_GETFD;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETFORMAT = AUDIO_GETFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETINFO = AUDIO_GETINFO;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETIOFFS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETIOFFS = AUDIO_GETIOFFS;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETOOFFS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETOOFFS = AUDIO_GETOOFFS;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_GETPROPS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_GETPROPS = AUDIO_GETPROPS;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_MIXER_DEVINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_MIXER_DEVINFO = AUDIO_MIXER_DEVINFO;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_MIXER_READ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_MIXER_READ = AUDIO_MIXER_READ;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_MIXER_WRITE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_MIXER_WRITE = AUDIO_MIXER_WRITE;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_PERROR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_PERROR = AUDIO_PERROR;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_QUERYFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_QUERYFORMAT = AUDIO_QUERYFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_RERROR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_RERROR = AUDIO_RERROR;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_SETCHAN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_SETCHAN = AUDIO_SETCHAN;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_SETFD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_SETFD = AUDIO_SETFD;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_SETFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_SETFORMAT = AUDIO_SETFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_SETINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_SETINFO = AUDIO_SETINFO;$/;"	m	namespace:__sanitizer
IOCTL_AUDIO_WSEEK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUDIO_WSEEK = AUDIO_WSEEK;$/;"	m	namespace:__sanitizer
IOCTL_AUTOFSDONE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUTOFSDONE = AUTOFSDONE;$/;"	m	namespace:__sanitizer
IOCTL_AUTOFSREQUEST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_AUTOFSREQUEST = AUTOFSREQUEST;$/;"	m	namespace:__sanitizer
IOCTL_BIOCALARM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCALARM = BIOCALARM;$/;"	m	namespace:__sanitizer
IOCTL_BIOCBLINK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCBLINK = BIOCBLINK;$/;"	m	namespace:__sanitizer
IOCTL_BIOCDISK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCDISK = BIOCDISK;$/;"	m	namespace:__sanitizer
IOCTL_BIOCDISK_NOVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCDISK_NOVOL = BIOCDISK_NOVOL;$/;"	m	namespace:__sanitizer
IOCTL_BIOCFLUSH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCFLUSH = BIOCFLUSH;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGBLEN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGBLEN = BIOCGBLEN;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGDIRECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGDIRECTION = BIOCGDIRECTION;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGDLT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGDLT = BIOCGDLT;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGDLTLIST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGDLTLIST = BIOCGDLTLIST;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGETIF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGETIF = BIOCGETIF;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGFEEDBACK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGFEEDBACK = BIOCGFEEDBACK;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGHDRCMPLT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGHDRCMPLT = BIOCGHDRCMPLT;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGRTIMEOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGRTIMEOUT = BIOCGRTIMEOUT;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGSTATS = BIOCGSTATS;$/;"	m	namespace:__sanitizer
IOCTL_BIOCGSTATSOLD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCGSTATSOLD = BIOCGSTATSOLD;$/;"	m	namespace:__sanitizer
IOCTL_BIOCIMMEDIATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCIMMEDIATE = BIOCIMMEDIATE;$/;"	m	namespace:__sanitizer
IOCTL_BIOCINQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCINQ = BIOCINQ;$/;"	m	namespace:__sanitizer
IOCTL_BIOCLOCATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCLOCATE = BIOCLOCATE;$/;"	m	namespace:__sanitizer
IOCTL_BIOCPROMISC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCPROMISC = BIOCPROMISC;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSBLEN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSBLEN = BIOCSBLEN;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSDIRECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSDIRECTION = BIOCSDIRECTION;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSDLT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSDLT = BIOCSDLT;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSETF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSETF = BIOCSETF;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSETIF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSETIF = BIOCSETIF;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSETSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSETSTATE = BIOCSETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSFEEDBACK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSFEEDBACK = BIOCSFEEDBACK;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSHDRCMPLT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSHDRCMPLT = BIOCSHDRCMPLT;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSRTIMEOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSRTIMEOUT = BIOCSRTIMEOUT;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSTCPF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSTCPF = BIOCSTCPF;$/;"	m	namespace:__sanitizer
IOCTL_BIOCSUDPF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCSUDPF = BIOCSUDPF;$/;"	m	namespace:__sanitizer
IOCTL_BIOCVERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCVERSION = BIOCVERSION;$/;"	m	namespace:__sanitizer
IOCTL_BIOCVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCVOL = BIOCVOL;$/;"	m	namespace:__sanitizer
IOCTL_BIOCVOLOPS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BIOCVOLOPS = BIOCVOLOPS;$/;"	m	namespace:__sanitizer
IOCTL_BLKFLSBUF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_BLKFLSBUF = BLKFLSBUF;$/;"	m	namespace:__sanitizer
IOCTL_BLKGETSIZE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_BLKGETSIZE = BLKGETSIZE;$/;"	m	namespace:__sanitizer
IOCTL_BLKRAGET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_BLKRAGET = BLKRAGET;$/;"	m	namespace:__sanitizer
IOCTL_BLKRASET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_BLKRASET = BLKRASET;$/;"	m	namespace:__sanitizer
IOCTL_BLKROGET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_BLKROGET = BLKROGET;$/;"	m	namespace:__sanitizer
IOCTL_BLKROSET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_BLKROSET = BLKROSET;$/;"	m	namespace:__sanitizer
IOCTL_BLKRRPART	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_BLKRRPART = BLKRRPART;$/;"	m	namespace:__sanitizer
IOCTL_BLUE_CONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BLUE_CONFIG = BLUE_CONFIG;$/;"	m	namespace:__sanitizer
IOCTL_BLUE_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BLUE_DISABLE = BLUE_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_BLUE_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BLUE_ENABLE = BLUE_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_BLUE_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BLUE_GETSTATS = BLUE_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_BLUE_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BLUE_IF_ATTACH = BLUE_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_BLUE_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BLUE_IF_DETACH = BLUE_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_BTDEV_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BTDEV_ATTACH = BTDEV_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_BTDEV_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BTDEV_DETACH = BTDEV_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_BTSCO_GETINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_BTSCO_GETINFO = BTSCO_GETINFO;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_ADD_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_ADD_CLASS = CBQ_ADD_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_ADD_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_ADD_FILTER = CBQ_ADD_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_CLEAR_HIERARCHY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_CLEAR_HIERARCHY = CBQ_CLEAR_HIERARCHY;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_DEL_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_DEL_CLASS = CBQ_DEL_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_DEL_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_DEL_FILTER = CBQ_DEL_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_DISABLE = CBQ_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_ENABLE = CBQ_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_GETSTATS = CBQ_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_IF_ATTACH = CBQ_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_IF_DETACH = CBQ_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_CBQ_MODIFY_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CBQ_MODIFY_CLASS = CBQ_MODIFY_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_CCDIOCCLR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CCDIOCCLR = CCDIOCCLR;$/;"	m	namespace:__sanitizer
IOCTL_CCDIOCSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CCDIOCSET = CCDIOCSET;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCALLOW	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCALLOW = CDIOCALLOW;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCCLOSE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCCLOSE = CDIOCCLOSE;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCCLRDEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCCLRDEBUG = CDIOCCLRDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCEJECT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCEJECT = CDIOCEJECT;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCGETVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCGETVOL = CDIOCGETVOL;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCLOADUNLOAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCLOADUNLOAD = CDIOCLOADUNLOAD;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCPAUSE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCPAUSE = CDIOCPAUSE;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCPLAYBLOCKS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCPLAYBLOCKS = CDIOCPLAYBLOCKS;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCPLAYMSF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCPLAYMSF = CDIOCPLAYMSF;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCPLAYTRACKS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCPLAYTRACKS = CDIOCPLAYTRACKS;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCPREVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCPREVENT = CDIOCPREVENT;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCREADSUBCHANNEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCREADSUBCHANNEL = CDIOCREADSUBCHANNEL;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCRESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCRESET = CDIOCRESET;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCRESUME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCRESUME = CDIOCRESUME;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETDEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETDEBUG = CDIOCSETDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETLEFT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETLEFT = CDIOCSETLEFT;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETMONO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETMONO = CDIOCSETMONO;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETMUTE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETMUTE = CDIOCSETMUTE;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETPATCH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETPATCH = CDIOCSETPATCH;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETRIGHT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETRIGHT = CDIOCSETRIGHT;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETSTEREO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETSTEREO = CDIOCSETSTEREO;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSETVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSETVOL = CDIOCSETVOL;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSTART	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSTART = CDIOCSTART;$/;"	m	namespace:__sanitizer
IOCTL_CDIOCSTOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOCSTOP = CDIOCSTOP;$/;"	m	namespace:__sanitizer
IOCTL_CDIOREADMSADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOREADMSADDR = CDIOREADMSADDR;$/;"	m	namespace:__sanitizer
IOCTL_CDIOREADTOCENTRIES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOREADTOCENTRIES = CDIOREADTOCENTRIES;$/;"	m	namespace:__sanitizer
IOCTL_CDIOREADTOCHEADER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDIOREADTOCHEADER = CDIOREADTOCHEADER;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_ADD_ELEM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_ADD_ELEM = CDNR_ADD_ELEM;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_ADD_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_ADD_FILTER = CDNR_ADD_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_ADD_TBM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_ADD_TBM = CDNR_ADD_TBM;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_ADD_TCM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_ADD_TCM = CDNR_ADD_TCM;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_ADD_TSW	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_ADD_TSW = CDNR_ADD_TSW;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_DEL_ELEM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_DEL_ELEM = CDNR_DEL_ELEM;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_DEL_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_DEL_FILTER = CDNR_DEL_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_DISABLE = CDNR_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_ENABLE = CDNR_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_GETSTATS = CDNR_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_IF_ATTACH = CDNR_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_IF_DETACH = CDNR_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_MOD_TBM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_MOD_TBM = CDNR_MOD_TBM;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_MOD_TCM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_MOD_TCM = CDNR_MOD_TCM;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_MOD_TSW	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_MOD_TSW = CDNR_MOD_TSW;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_TBM_STATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_TBM_STATS = CDNR_TBM_STATS;$/;"	m	namespace:__sanitizer
IOCTL_CDNR_TCM_STATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CDNR_TCM_STATS = CDNR_TCM_STATS;$/;"	m	namespace:__sanitizer
IOCTL_CDROMAUDIOBUFSIZ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMAUDIOBUFSIZ = CDROMAUDIOBUFSIZ;$/;"	m	namespace:__sanitizer
IOCTL_CDROMEJECT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMEJECT = CDROMEJECT;$/;"	m	namespace:__sanitizer
IOCTL_CDROMEJECT_SW	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMEJECT_SW = CDROMEJECT_SW;$/;"	m	namespace:__sanitizer
IOCTL_CDROMMULTISESSION	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMMULTISESSION = CDROMMULTISESSION;$/;"	m	namespace:__sanitizer
IOCTL_CDROMPAUSE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMPAUSE = CDROMPAUSE;$/;"	m	namespace:__sanitizer
IOCTL_CDROMPLAYMSF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMPLAYMSF = CDROMPLAYMSF;$/;"	m	namespace:__sanitizer
IOCTL_CDROMPLAYTRKIND	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMPLAYTRKIND = CDROMPLAYTRKIND;$/;"	m	namespace:__sanitizer
IOCTL_CDROMREADAUDIO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMREADAUDIO = CDROMREADAUDIO;$/;"	m	namespace:__sanitizer
IOCTL_CDROMREADCOOKED	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMREADCOOKED = CDROMREADCOOKED;$/;"	m	namespace:__sanitizer
IOCTL_CDROMREADMODE1	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMREADMODE1 = CDROMREADMODE1;$/;"	m	namespace:__sanitizer
IOCTL_CDROMREADMODE2	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMREADMODE2 = CDROMREADMODE2;$/;"	m	namespace:__sanitizer
IOCTL_CDROMREADRAW	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMREADRAW = CDROMREADRAW;$/;"	m	namespace:__sanitizer
IOCTL_CDROMREADTOCENTRY	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMREADTOCENTRY = CDROMREADTOCENTRY;$/;"	m	namespace:__sanitizer
IOCTL_CDROMREADTOCHDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMREADTOCHDR = CDROMREADTOCHDR;$/;"	m	namespace:__sanitizer
IOCTL_CDROMRESET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMRESET = CDROMRESET;$/;"	m	namespace:__sanitizer
IOCTL_CDROMRESUME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMRESUME = CDROMRESUME;$/;"	m	namespace:__sanitizer
IOCTL_CDROMSEEK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMSEEK = CDROMSEEK;$/;"	m	namespace:__sanitizer
IOCTL_CDROMSTART	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMSTART = CDROMSTART;$/;"	m	namespace:__sanitizer
IOCTL_CDROMSTOP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMSTOP = CDROMSTOP;$/;"	m	namespace:__sanitizer
IOCTL_CDROMSUBCHNL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMSUBCHNL = CDROMSUBCHNL;$/;"	m	namespace:__sanitizer
IOCTL_CDROMVOLCTRL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMVOLCTRL = CDROMVOLCTRL;$/;"	m	namespace:__sanitizer
IOCTL_CDROMVOLREAD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROMVOLREAD = CDROMVOLREAD;$/;"	m	namespace:__sanitizer
IOCTL_CDROM_GET_UPC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_CDROM_GET_UPC = CDROM_GET_UPC;$/;"	m	namespace:__sanitizer
IOCTL_CEC_GET_LOG_ADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CEC_GET_LOG_ADDRS = CEC_GET_LOG_ADDRS;$/;"	m	namespace:__sanitizer
IOCTL_CEC_GET_PHYS_ADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CEC_GET_PHYS_ADDR = CEC_GET_PHYS_ADDR;$/;"	m	namespace:__sanitizer
IOCTL_CEC_GET_VENDOR_ID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CEC_GET_VENDOR_ID = CEC_GET_VENDOR_ID;$/;"	m	namespace:__sanitizer
IOCTL_CEC_SET_LOG_ADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CEC_SET_LOG_ADDRS = CEC_SET_LOG_ADDRS;$/;"	m	namespace:__sanitizer
IOCTL_CGDIOCCLR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CGDIOCCLR = CGDIOCCLR;$/;"	m	namespace:__sanitizer
IOCTL_CGDIOCGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CGDIOCGET = CGDIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_CGDIOCSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CGDIOCSET = CGDIOCSET;$/;"	m	namespace:__sanitizer
IOCTL_CHIOEXCHANGE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOEXCHANGE = CHIOEXCHANGE;$/;"	m	namespace:__sanitizer
IOCTL_CHIOGPARAMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOGPARAMS = CHIOGPARAMS;$/;"	m	namespace:__sanitizer
IOCTL_CHIOGPICKER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOGPICKER = CHIOGPICKER;$/;"	m	namespace:__sanitizer
IOCTL_CHIOGSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOGSTATUS = CHIOGSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_CHIOIELEM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOIELEM = CHIOIELEM;$/;"	m	namespace:__sanitizer
IOCTL_CHIOMOVE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOMOVE = CHIOMOVE;$/;"	m	namespace:__sanitizer
IOCTL_CHIOPOSITION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOPOSITION = CHIOPOSITION;$/;"	m	namespace:__sanitizer
IOCTL_CHIOSPICKER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOSPICKER = CHIOSPICKER;$/;"	m	namespace:__sanitizer
IOCTL_CHIOSVOLTAG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CHIOSVOLTAG = CHIOSVOLTAG;$/;"	m	namespace:__sanitizer
IOCTL_CIOCASYMFEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCASYMFEAT = CIOCASYMFEAT;$/;"	m	namespace:__sanitizer
IOCTL_CIOCCRYPT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCCRYPT = CIOCCRYPT;$/;"	m	namespace:__sanitizer
IOCTL_CIOCFSESSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCFSESSION = CIOCFSESSION;$/;"	m	namespace:__sanitizer
IOCTL_CIOCGSESSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCGSESSION = CIOCGSESSION;$/;"	m	namespace:__sanitizer
IOCTL_CIOCKEY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCKEY = CIOCKEY;$/;"	m	namespace:__sanitizer
IOCTL_CIOCNCRYPTM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCNCRYPTM = CIOCNCRYPTM;$/;"	m	namespace:__sanitizer
IOCTL_CIOCNCRYPTRET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCNCRYPTRET = CIOCNCRYPTRET;$/;"	m	namespace:__sanitizer
IOCTL_CIOCNCRYPTRETM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCNCRYPTRETM = CIOCNCRYPTRETM;$/;"	m	namespace:__sanitizer
IOCTL_CIOCNFKEYM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCNFKEYM = CIOCNFKEYM;$/;"	m	namespace:__sanitizer
IOCTL_CIOCNFSESSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCNFSESSION = CIOCNFSESSION;$/;"	m	namespace:__sanitizer
IOCTL_CIOCNGSESSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CIOCNGSESSION = CIOCNGSESSION;$/;"	m	namespace:__sanitizer
IOCTL_CLOCKCTL_ADJTIME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CLOCKCTL_ADJTIME = CLOCKCTL_ADJTIME;$/;"	m	namespace:__sanitizer
IOCTL_CLOCKCTL_CLOCK_SETTIME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CLOCKCTL_CLOCK_SETTIME = CLOCKCTL_CLOCK_SETTIME;$/;"	m	namespace:__sanitizer
IOCTL_CLOCKCTL_NTP_ADJTIME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CLOCKCTL_NTP_ADJTIME = CLOCKCTL_NTP_ADJTIME;$/;"	m	namespace:__sanitizer
IOCTL_CLOCKCTL_SETTIMEOFDAY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CLOCKCTL_SETTIMEOFDAY = CLOCKCTL_SETTIMEOFDAY;$/;"	m	namespace:__sanitizer
IOCTL_CONS_GETVERS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CONS_GETVERS = CONS_GETVERS;$/;"	m	namespace:__sanitizer
IOCTL_CRIOGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_CRIOGET = CRIOGET;$/;"	m	namespace:__sanitizer
IOCTL_DIOCADDADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCADDADDR = DIOCADDADDR;$/;"	m	namespace:__sanitizer
IOCTL_DIOCADDALTQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCADDALTQ = DIOCADDALTQ;$/;"	m	namespace:__sanitizer
IOCTL_DIOCADDRULE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCADDRULE = DIOCADDRULE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCADDSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCADDSTATE = DIOCADDSTATE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCADDSTATES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCADDSTATES = DIOCADDSTATES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCAWEDGE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCAWEDGE = DIOCAWEDGE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCBEGINADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCBEGINADDRS = DIOCBEGINADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCBSFLUSH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCBSFLUSH = DIOCBSFLUSH;$/;"	m	namespace:__sanitizer
IOCTL_DIOCBSLIST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCBSLIST = DIOCBSLIST;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCACHESYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCACHESYNC = DIOCCACHESYNC;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCHANGEADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCHANGEADDR = DIOCCHANGEADDR;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCHANGEALTQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCHANGEALTQ = DIOCCHANGEALTQ;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCHANGERULE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCHANGERULE = DIOCCHANGERULE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCLRIFFLAG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCLRIFFLAG = DIOCCLRIFFLAG;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCLRLABEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCLRLABEL = DIOCCLRLABEL;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCLRRULECTRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCLRRULECTRS = DIOCCLRRULECTRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCLRSRCNODES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCLRSRCNODES = DIOCCLRSRCNODES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCLRSTATES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCLRSTATES = DIOCCLRSTATES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCCLRSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCCLRSTATUS = DIOCCLRSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCDWEDGE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCDWEDGE = DIOCDWEDGE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCEJECT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCEJECT = DIOCEJECT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGCACHE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGCACHE = DIOCGCACHE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGDEFLABEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGDEFLABEL = DIOCGDEFLABEL;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGDINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGDINFO = DIOCGDINFO;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGDISKINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGDISKINFO = DIOCGDISKINFO;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETADDR = DIOCGETADDR;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETADDRS = DIOCGETADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETALTQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETALTQ = DIOCGETALTQ;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETALTQS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETALTQS = DIOCGETALTQS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETLIMIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETLIMIT = DIOCGETLIMIT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETQSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETQSTATS = DIOCGETQSTATS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETRULE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETRULE = DIOCGETRULE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETRULES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETRULES = DIOCGETRULES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETRULESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETRULESET = DIOCGETRULESET;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETRULESETS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETRULESETS = DIOCGETRULESETS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETSRCNODES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETSRCNODES = DIOCGETSRCNODES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETSTATE = DIOCGETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETSTATES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETSTATES = DIOCGETSTATES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETSTATUS = DIOCGETSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGETTIMEOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGETTIMEOUT = DIOCGETTIMEOUT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGMEDIASIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGMEDIASIZE = DIOCGMEDIASIZE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGSECTORSIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGSECTORSIZE = DIOCGSECTORSIZE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGSTRATEGY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGSTRATEGY = DIOCGSTRATEGY;$/;"	m	namespace:__sanitizer
IOCTL_DIOCGWEDGEINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCGWEDGEINFO = DIOCGWEDGEINFO;$/;"	m	namespace:__sanitizer
IOCTL_DIOCIGETIFACES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCIGETIFACES = DIOCIGETIFACES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCKILLSRCNODES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCKILLSRCNODES = DIOCKILLSRCNODES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCKILLSTATES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCKILLSTATES = DIOCKILLSTATES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCKLABEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCKLABEL = DIOCKLABEL;$/;"	m	namespace:__sanitizer
IOCTL_DIOCLOCK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCLOCK = DIOCLOCK;$/;"	m	namespace:__sanitizer
IOCTL_DIOCLWEDGES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCLWEDGES = DIOCLWEDGES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCMWEDGES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCMWEDGES = DIOCMWEDGES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCNATLOOK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCNATLOOK = DIOCNATLOOK;$/;"	m	namespace:__sanitizer
IOCTL_DIOCOSFPADD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCOSFPADD = DIOCOSFPADD;$/;"	m	namespace:__sanitizer
IOCTL_DIOCOSFPFLUSH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCOSFPFLUSH = DIOCOSFPFLUSH;$/;"	m	namespace:__sanitizer
IOCTL_DIOCOSFPGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCOSFPGET = DIOCOSFPGET;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRADDADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRADDADDRS = DIOCRADDADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRADDTABLES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRADDTABLES = DIOCRADDTABLES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRCLRADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRCLRADDRS = DIOCRCLRADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRCLRASTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRCLRASTATS = DIOCRCLRASTATS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRCLRTABLES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRCLRTABLES = DIOCRCLRTABLES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRCLRTSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRCLRTSTATS = DIOCRCLRTSTATS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRDELADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRDELADDRS = DIOCRDELADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRDELTABLES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRDELTABLES = DIOCRDELTABLES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRFORMAT = DIOCRFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRGETADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRGETADDRS = DIOCRGETADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRGETASTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRGETASTATS = DIOCRGETASTATS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRGETTABLES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRGETTABLES = DIOCRGETTABLES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRGETTSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRGETTSTATS = DIOCRGETTSTATS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRINADEFINE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRINADEFINE = DIOCRINADEFINE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRMWEDGES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRMWEDGES = DIOCRMWEDGES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRSETADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRSETADDRS = DIOCRSETADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRSETTFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRSETTFLAGS = DIOCRSETTFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCRTSTADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCRTSTADDRS = DIOCRTSTADDRS;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSBAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSBAD = DIOCSBAD;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSCACHE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSCACHE = DIOCSCACHE;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSDINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSDINFO = DIOCSDINFO;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSETDEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSETDEBUG = DIOCSETDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSETHOSTID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSETHOSTID = DIOCSETHOSTID;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSETIFFLAG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSETIFFLAG = DIOCSETIFFLAG;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSETLCK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSETLCK = DIOCSETLCK;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSETLIMIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSETLIMIT = DIOCSETLIMIT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSETSTATUSIF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSETSTATUSIF = DIOCSETSTATUSIF;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSETTIMEOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSETTIMEOUT = DIOCSETTIMEOUT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSRETRIES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSRETRIES = DIOCSRETRIES;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSSTEP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSSTEP = DIOCSSTEP;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSSTRATEGY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSSTRATEGY = DIOCSSTRATEGY;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSTART	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSTART = DIOCSTART;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSTARTALTQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSTARTALTQ = DIOCSTARTALTQ;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSTOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSTOP = DIOCSTOP;$/;"	m	namespace:__sanitizer
IOCTL_DIOCSTOPALTQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCSTOPALTQ = DIOCSTOPALTQ;$/;"	m	namespace:__sanitizer
IOCTL_DIOCTUR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCTUR = DIOCTUR;$/;"	m	namespace:__sanitizer
IOCTL_DIOCWDINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCWDINFO = DIOCWDINFO;$/;"	m	namespace:__sanitizer
IOCTL_DIOCWFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCWFORMAT = DIOCWFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCWLABEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCWLABEL = DIOCWLABEL;$/;"	m	namespace:__sanitizer
IOCTL_DIOCXBEGIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCXBEGIN = DIOCXBEGIN;$/;"	m	namespace:__sanitizer
IOCTL_DIOCXCOMMIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCXCOMMIT = DIOCXCOMMIT;$/;"	m	namespace:__sanitizer
IOCTL_DIOCXROLLBACK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOCXROLLBACK = DIOCXROLLBACK;$/;"	m	namespace:__sanitizer
IOCTL_DIOSXDCMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DIOSXDCMD = DIOSXDCMD;$/;"	m	namespace:__sanitizer
IOCTL_DMIO_SETFUNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMIO_SETFUNC = DMIO_SETFUNC;$/;"	m	namespace:__sanitizer
IOCTL_DMX_ADD_PID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_ADD_PID = DMX_ADD_PID;$/;"	m	namespace:__sanitizer
IOCTL_DMX_GET_CAPS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_GET_CAPS = DMX_GET_CAPS;$/;"	m	namespace:__sanitizer
IOCTL_DMX_GET_STC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_GET_STC = DMX_GET_STC;$/;"	m	namespace:__sanitizer
IOCTL_DMX_REMOVE_PID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_REMOVE_PID = DMX_REMOVE_PID;$/;"	m	namespace:__sanitizer
IOCTL_DMX_SET_BUFFER_SIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_SET_BUFFER_SIZE = DMX_SET_BUFFER_SIZE;$/;"	m	namespace:__sanitizer
IOCTL_DMX_SET_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_SET_FILTER = DMX_SET_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_DMX_SET_PES_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_SET_PES_FILTER = DMX_SET_PES_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_DMX_SET_SOURCE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_SET_SOURCE = DMX_SET_SOURCE;$/;"	m	namespace:__sanitizer
IOCTL_DMX_START	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_START = DMX_START;$/;"	m	namespace:__sanitizer
IOCTL_DMX_STOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DMX_STOP = DMX_STOP;$/;"	m	namespace:__sanitizer
IOCTL_DRVCTLCOMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DRVCTLCOMMAND = DRVCTLCOMMAND;$/;"	m	namespace:__sanitizer
IOCTL_DRVDETACHDEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DRVDETACHDEV = DRVDETACHDEV;$/;"	m	namespace:__sanitizer
IOCTL_DRVGETEVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DRVGETEVENT = DRVGETEVENT;$/;"	m	namespace:__sanitizer
IOCTL_DRVLISTDEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DRVLISTDEV = DRVLISTDEV;$/;"	m	namespace:__sanitizer
IOCTL_DRVRESCANBUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DRVRESCANBUS = DRVRESCANBUS;$/;"	m	namespace:__sanitizer
IOCTL_DRVRESUMEDEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DRVRESUMEDEV = DRVRESUMEDEV;$/;"	m	namespace:__sanitizer
IOCTL_DRVSUSPENDDEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DRVSUSPENDDEV = DRVSUSPENDDEV;$/;"	m	namespace:__sanitizer
IOCTL_DVD_AUTH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DVD_AUTH = DVD_AUTH;$/;"	m	namespace:__sanitizer
IOCTL_DVD_READ_STRUCT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DVD_READ_STRUCT = DVD_READ_STRUCT;$/;"	m	namespace:__sanitizer
IOCTL_DVD_WRITE_STRUCT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_DVD_WRITE_STRUCT = DVD_WRITE_STRUCT;$/;"	m	namespace:__sanitizer
IOCTL_ENVSYS_GETDICTIONARY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ENVSYS_GETDICTIONARY = ENVSYS_GETDICTIONARY;$/;"	m	namespace:__sanitizer
IOCTL_ENVSYS_GTREDATA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ENVSYS_GTREDATA = ENVSYS_GTREDATA;$/;"	m	namespace:__sanitizer
IOCTL_ENVSYS_GTREINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ENVSYS_GTREINFO = ENVSYS_GTREINFO;$/;"	m	namespace:__sanitizer
IOCTL_ENVSYS_REMOVEPROPS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ENVSYS_REMOVEPROPS = ENVSYS_REMOVEPROPS;$/;"	m	namespace:__sanitizer
IOCTL_ENVSYS_SETDICTIONARY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ENVSYS_SETDICTIONARY = ENVSYS_SETDICTIONARY;$/;"	m	namespace:__sanitizer
IOCTL_EQL_EMANCIPATE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EQL_EMANCIPATE = EQL_EMANCIPATE;$/;"	m	namespace:__sanitizer
IOCTL_EQL_ENSLAVE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EQL_ENSLAVE = EQL_ENSLAVE;$/;"	m	namespace:__sanitizer
IOCTL_EQL_GETMASTRCFG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EQL_GETMASTRCFG = EQL_GETMASTRCFG;$/;"	m	namespace:__sanitizer
IOCTL_EQL_GETSLAVECFG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EQL_GETSLAVECFG = EQL_GETSLAVECFG;$/;"	m	namespace:__sanitizer
IOCTL_EQL_SETMASTRCFG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EQL_SETMASTRCFG = EQL_SETMASTRCFG;$/;"	m	namespace:__sanitizer
IOCTL_EQL_SETSLAVECFG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EQL_SETSLAVECFG = EQL_SETSLAVECFG;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGABS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGABS = EVIOCGABS(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGBIT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGBIT = EVIOCGBIT(0, 0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGEFFECTS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGEFFECTS = EVIOCGEFFECTS;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGID	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGID = EVIOCGID;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGKEY	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGKEY = EVIOCGKEY(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGKEYCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGKEYCODE = EVIOCGKEYCODE;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGKEYCODE_V2	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGKEYCODE_V2 = EVIOCGKEYCODE_V2;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGKEYCODE_V2	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGKEYCODE_V2 = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGLED	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGLED = EVIOCGLED(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGNAME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGNAME = EVIOCGNAME(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGPHYS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGPHYS = EVIOCGPHYS(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGPROP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGPROP = EVIOCGPROP(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGPROP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGPROP = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGRAB	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGRAB = EVIOCGRAB;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGREP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGREP = EVIOCGREP;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGSND	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGSND = EVIOCGSND(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGSW	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGSW = EVIOCGSW(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGUNIQ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGUNIQ = EVIOCGUNIQ(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCGVERSION	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCGVERSION = EVIOCGVERSION;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCRMFF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCRMFF = EVIOCRMFF;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCSABS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCSABS = EVIOCSABS(0);$/;"	m	namespace:__sanitizer
IOCTL_EVIOCSFF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCSFF = EVIOCSFF;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCSKEYCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCSKEYCODE = EVIOCSKEYCODE;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCSKEYCODE_V2	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCSKEYCODE_V2 = EVIOCSKEYCODE_V2;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCSKEYCODE_V2	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCSKEYCODE_V2 = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_EVIOCSREP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_EVIOCSREP = EVIOCSREP;$/;"	m	namespace:__sanitizer
IOCTL_FBIOGATTR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOGATTR = FBIOGATTR;$/;"	m	namespace:__sanitizer
IOCTL_FBIOGCURMAX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOGCURMAX = FBIOGCURMAX;$/;"	m	namespace:__sanitizer
IOCTL_FBIOGCURPOS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOGCURPOS = FBIOGCURPOS;$/;"	m	namespace:__sanitizer
IOCTL_FBIOGCURSOR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOGCURSOR = FBIOGCURSOR;$/;"	m	namespace:__sanitizer
IOCTL_FBIOGETCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOGETCMAP = FBIOGETCMAP;$/;"	m	namespace:__sanitizer
IOCTL_FBIOGTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOGTYPE = FBIOGTYPE;$/;"	m	namespace:__sanitizer
IOCTL_FBIOGVIDEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOGVIDEO = FBIOGVIDEO;$/;"	m	namespace:__sanitizer
IOCTL_FBIOPUTCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOPUTCMAP = FBIOPUTCMAP;$/;"	m	namespace:__sanitizer
IOCTL_FBIOSCURPOS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOSCURPOS = FBIOSCURPOS;$/;"	m	namespace:__sanitizer
IOCTL_FBIOSCURSOR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOSCURSOR = FBIOSCURSOR;$/;"	m	namespace:__sanitizer
IOCTL_FBIOSVIDEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FBIOSVIDEO = FBIOSVIDEO;$/;"	m	namespace:__sanitizer
IOCTL_FDCLRPRM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDCLRPRM = FDCLRPRM;$/;"	m	namespace:__sanitizer
IOCTL_FDDEFPRM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDDEFPRM = FDDEFPRM;$/;"	m	namespace:__sanitizer
IOCTL_FDFLUSH	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDFLUSH = FDFLUSH;$/;"	m	namespace:__sanitizer
IOCTL_FDFMTBEG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDFMTBEG = FDFMTBEG;$/;"	m	namespace:__sanitizer
IOCTL_FDFMTEND	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDFMTEND = FDFMTEND;$/;"	m	namespace:__sanitizer
IOCTL_FDFMTTRK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDFMTTRK = FDFMTTRK;$/;"	m	namespace:__sanitizer
IOCTL_FDGETDRVPRM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDGETDRVPRM = FDGETDRVPRM;$/;"	m	namespace:__sanitizer
IOCTL_FDGETDRVSTAT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDGETDRVSTAT = FDGETDRVSTAT;$/;"	m	namespace:__sanitizer
IOCTL_FDGETDRVTYP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDGETDRVTYP = FDGETDRVTYP;$/;"	m	namespace:__sanitizer
IOCTL_FDGETFDCSTAT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDGETFDCSTAT = FDGETFDCSTAT;$/;"	m	namespace:__sanitizer
IOCTL_FDGETMAXERRS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDGETMAXERRS = FDGETMAXERRS;$/;"	m	namespace:__sanitizer
IOCTL_FDGETPRM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDGETPRM = FDGETPRM;$/;"	m	namespace:__sanitizer
IOCTL_FDIOCFORMAT_TRACK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FDIOCFORMAT_TRACK = FDIOCFORMAT_TRACK;$/;"	m	namespace:__sanitizer
IOCTL_FDIOCGETFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FDIOCGETFORMAT = FDIOCGETFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_FDIOCGETOPTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FDIOCGETOPTS = FDIOCGETOPTS;$/;"	m	namespace:__sanitizer
IOCTL_FDIOCSETFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FDIOCSETFORMAT = FDIOCSETFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_FDIOCSETOPTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FDIOCSETOPTS = FDIOCSETOPTS;$/;"	m	namespace:__sanitizer
IOCTL_FDMSGOFF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDMSGOFF = FDMSGOFF;$/;"	m	namespace:__sanitizer
IOCTL_FDMSGON	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDMSGON = FDMSGON;$/;"	m	namespace:__sanitizer
IOCTL_FDPOLLDRVSTAT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDPOLLDRVSTAT = FDPOLLDRVSTAT;$/;"	m	namespace:__sanitizer
IOCTL_FDRAWCMD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDRAWCMD = FDRAWCMD;$/;"	m	namespace:__sanitizer
IOCTL_FDRESET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDRESET = FDRESET;$/;"	m	namespace:__sanitizer
IOCTL_FDSETDRVPRM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDSETDRVPRM = FDSETDRVPRM;$/;"	m	namespace:__sanitizer
IOCTL_FDSETEMSGTRESH	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDSETEMSGTRESH = FDSETEMSGTRESH;$/;"	m	namespace:__sanitizer
IOCTL_FDSETMAXERRS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDSETMAXERRS = FDSETMAXERRS;$/;"	m	namespace:__sanitizer
IOCTL_FDSETPRM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDSETPRM = FDSETPRM;$/;"	m	namespace:__sanitizer
IOCTL_FDTWADDLE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDTWADDLE = FDTWADDLE;$/;"	m	namespace:__sanitizer
IOCTL_FDWERRORCLR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDWERRORCLR = FDWERRORCLR;$/;"	m	namespace:__sanitizer
IOCTL_FDWERRORGET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FDWERRORGET = FDWERRORGET;$/;"	m	namespace:__sanitizer
IOCTL_FE_DISEQC_RECV_SLAVE_REPLY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_DISEQC_RECV_SLAVE_REPLY = FE_DISEQC_RECV_SLAVE_REPLY;$/;"	m	namespace:__sanitizer
IOCTL_FE_DISEQC_RESET_OVERLOAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_DISEQC_RESET_OVERLOAD = FE_DISEQC_RESET_OVERLOAD;$/;"	m	namespace:__sanitizer
IOCTL_FE_DISEQC_SEND_BURST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_DISEQC_SEND_BURST = FE_DISEQC_SEND_BURST;$/;"	m	namespace:__sanitizer
IOCTL_FE_DISEQC_SEND_MASTER_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_DISEQC_SEND_MASTER_CMD = FE_DISEQC_SEND_MASTER_CMD;$/;"	m	namespace:__sanitizer
IOCTL_FE_DISHNETWORK_SEND_LEGACY_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_DISHNETWORK_SEND_LEGACY_CMD = FE_DISHNETWORK_SEND_LEGACY_CMD;$/;"	m	namespace:__sanitizer
IOCTL_FE_ENABLE_HIGH_LNB_VOLTAGE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_ENABLE_HIGH_LNB_VOLTAGE = FE_ENABLE_HIGH_LNB_VOLTAGE;$/;"	m	namespace:__sanitizer
IOCTL_FE_GET_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_GET_EVENT = FE_GET_EVENT;$/;"	m	namespace:__sanitizer
IOCTL_FE_GET_FRONTEND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_GET_FRONTEND = FE_GET_FRONTEND;$/;"	m	namespace:__sanitizer
IOCTL_FE_GET_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_GET_INFO = FE_GET_INFO;$/;"	m	namespace:__sanitizer
IOCTL_FE_READ_BER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_READ_BER = FE_READ_BER;$/;"	m	namespace:__sanitizer
IOCTL_FE_READ_SIGNAL_STRENGTH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_READ_SIGNAL_STRENGTH = FE_READ_SIGNAL_STRENGTH;$/;"	m	namespace:__sanitizer
IOCTL_FE_READ_SNR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_READ_SNR = FE_READ_SNR;$/;"	m	namespace:__sanitizer
IOCTL_FE_READ_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_READ_STATUS = FE_READ_STATUS;$/;"	m	namespace:__sanitizer
IOCTL_FE_READ_UNCORRECTED_BLOCKS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_READ_UNCORRECTED_BLOCKS = FE_READ_UNCORRECTED_BLOCKS;$/;"	m	namespace:__sanitizer
IOCTL_FE_SET_FRONTEND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_SET_FRONTEND = FE_SET_FRONTEND;$/;"	m	namespace:__sanitizer
IOCTL_FE_SET_FRONTEND_TUNE_MODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_SET_FRONTEND_TUNE_MODE = FE_SET_FRONTEND_TUNE_MODE;$/;"	m	namespace:__sanitizer
IOCTL_FE_SET_TONE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_SET_TONE = FE_SET_TONE;$/;"	m	namespace:__sanitizer
IOCTL_FE_SET_VOLTAGE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FE_SET_VOLTAGE = FE_SET_VOLTAGE;$/;"	m	namespace:__sanitizer
IOCTL_FIFOQ_CONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIFOQ_CONFIG = FIFOQ_CONFIG;$/;"	m	namespace:__sanitizer
IOCTL_FIFOQ_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIFOQ_DISABLE = FIFOQ_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_FIFOQ_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIFOQ_ENABLE = FIFOQ_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_FIFOQ_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIFOQ_GETSTATS = FIFOQ_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_FIFOQ_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIFOQ_IF_ATTACH = FIFOQ_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_FIFOQ_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIFOQ_IF_DETACH = FIFOQ_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_FILEMON_SET_FD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FILEMON_SET_FD = FILEMON_SET_FD;$/;"	m	namespace:__sanitizer
IOCTL_FILEMON_SET_PID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FILEMON_SET_PID = FILEMON_SET_PID;$/;"	m	namespace:__sanitizer
IOCTL_FIOASYNC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_FIOASYNC = FIOASYNC;$/;"	m	namespace:__sanitizer
IOCTL_FIOASYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIOASYNC = FIOASYNC;$/;"	m	namespace:__sanitizer
IOCTL_FIOASYNC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FIOASYNC = FIOASYNC;$/;"	m	namespace:__sanitizer
IOCTL_FIOASYNC	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_FIOASYNC = FIOASYNC;$/;"	m	namespace:__sanitizer
IOCTL_FIOCLEX	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_FIOCLEX = FIOCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIOCLEX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIOCLEX = FIOCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIOCLEX	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FIOCLEX = FIOCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIOCLEX	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_FIOCLEX = FIOCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIOGETBMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIOGETBMAP = FIOGETBMAP;$/;"	m	namespace:__sanitizer
IOCTL_FIOGETOWN	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_FIOGETOWN = FIOGETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FIOGETOWN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIOGETOWN = FIOGETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FIOGETOWN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FIOGETOWN = FIOGETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FIOGETOWN	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_FIOGETOWN = FIOGETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FIONBIO	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_FIONBIO = FIONBIO;$/;"	m	namespace:__sanitizer
IOCTL_FIONBIO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIONBIO = FIONBIO;$/;"	m	namespace:__sanitizer
IOCTL_FIONBIO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FIONBIO = FIONBIO;$/;"	m	namespace:__sanitizer
IOCTL_FIONBIO	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_FIONBIO = FIONBIO;$/;"	m	namespace:__sanitizer
IOCTL_FIONCLEX	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_FIONCLEX = FIONCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIONCLEX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIONCLEX = FIONCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIONCLEX	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FIONCLEX = FIONCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIONCLEX	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_FIONCLEX = FIONCLEX;$/;"	m	namespace:__sanitizer
IOCTL_FIONREAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIONREAD = FIONREAD;$/;"	m	namespace:__sanitizer
IOCTL_FIONSPACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIONSPACE = FIONSPACE;$/;"	m	namespace:__sanitizer
IOCTL_FIONWRITE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIONWRITE = FIONWRITE;$/;"	m	namespace:__sanitizer
IOCTL_FIOSEEKDATA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIOSEEKDATA = FIOSEEKDATA;$/;"	m	namespace:__sanitizer
IOCTL_FIOSEEKHOLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIOSEEKHOLE = FIOSEEKHOLE;$/;"	m	namespace:__sanitizer
IOCTL_FIOSETOWN	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_FIOSETOWN = FIOSETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FIOSETOWN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FIOSETOWN = FIOSETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FIOSETOWN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FIOSETOWN = FIOSETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FIOSETOWN	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_FIOSETOWN = FIOSETOWN;$/;"	m	namespace:__sanitizer
IOCTL_FSSIOCCLR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FSSIOCCLR = FSSIOCCLR;$/;"	m	namespace:__sanitizer
IOCTL_FSSIOCGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FSSIOCGET = FSSIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_FSSIOCSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FSSIOCSET = FSSIOCSET;$/;"	m	namespace:__sanitizer
IOCTL_FSSIOFGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FSSIOFGET = FSSIOFGET;$/;"	m	namespace:__sanitizer
IOCTL_FSSIOFSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FSSIOFSET = FSSIOFSET;$/;"	m	namespace:__sanitizer
IOCTL_FS_IOC_GETFLAGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FS_IOC_GETFLAGS = FS_IOC_GETFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_FS_IOC_GETVERSION	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FS_IOC_GETVERSION = FS_IOC_GETVERSION;$/;"	m	namespace:__sanitizer
IOCTL_FS_IOC_SETFLAGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FS_IOC_SETFLAGS = FS_IOC_SETFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_FS_IOC_SETVERSION	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_FS_IOC_SETVERSION = FS_IOC_SETVERSION;$/;"	m	namespace:__sanitizer
IOCTL_FWCFGIO_SET_INDEX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_FWCFGIO_SET_INDEX = FWCFGIO_SET_INDEX;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_CTRCNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_CTRCNT = GDT_IOCTL_CTRCNT;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_CTRTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_CTRTYPE = GDT_IOCTL_CTRTYPE;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_DRVERS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_DRVERS = GDT_IOCTL_DRVERS;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_EVENT = GDT_IOCTL_EVENT;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_GENERAL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_GENERAL = GDT_IOCTL_GENERAL;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_OSVERS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_OSVERS = GDT_IOCTL_OSVERS;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_RESCAN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_RESCAN = GDT_IOCTL_RESCAN;$/;"	m	namespace:__sanitizer
IOCTL_GDT_IOCTL_STATIST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GDT_IOCTL_STATIST = GDT_IOCTL_STATIST;$/;"	m	namespace:__sanitizer
IOCTL_GIO_CMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_GIO_CMAP = GIO_CMAP;$/;"	m	namespace:__sanitizer
IOCTL_GIO_FONT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_GIO_FONT = GIO_FONT;$/;"	m	namespace:__sanitizer
IOCTL_GIO_SCRNMAP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_GIO_SCRNMAP = GIO_SCRNMAP;$/;"	m	namespace:__sanitizer
IOCTL_GIO_SCRNMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_GIO_SCRNMAP = GIO_SCRNMAP;$/;"	m	namespace:__sanitizer
IOCTL_GIO_UNIMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_GIO_UNIMAP = GIO_UNIMAP;$/;"	m	namespace:__sanitizer
IOCTL_GIO_UNISCRNMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_GIO_UNISCRNMAP = GIO_UNISCRNMAP;$/;"	m	namespace:__sanitizer
IOCTL_GPIOATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GPIOATTACH = GPIOATTACH;$/;"	m	namespace:__sanitizer
IOCTL_GPIOINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GPIOINFO = GPIOINFO;$/;"	m	namespace:__sanitizer
IOCTL_GPIOREAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GPIOREAD = GPIOREAD;$/;"	m	namespace:__sanitizer
IOCTL_GPIOSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GPIOSET = GPIOSET;$/;"	m	namespace:__sanitizer
IOCTL_GPIOTOGGLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GPIOTOGGLE = GPIOTOGGLE;$/;"	m	namespace:__sanitizer
IOCTL_GPIOUNSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GPIOUNSET = GPIOUNSET;$/;"	m	namespace:__sanitizer
IOCTL_GPIOWRITE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GPIOWRITE = GPIOWRITE;$/;"	m	namespace:__sanitizer
IOCTL_GREDSOCK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GREDSOCK = GREDSOCK;$/;"	m	namespace:__sanitizer
IOCTL_GREGADDRD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GREGADDRD = GREGADDRD;$/;"	m	namespace:__sanitizer
IOCTL_GREGADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GREGADDRS = GREGADDRS;$/;"	m	namespace:__sanitizer
IOCTL_GREGPROTO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GREGPROTO = GREGPROTO;$/;"	m	namespace:__sanitizer
IOCTL_GRESADDRD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GRESADDRD = GRESADDRD;$/;"	m	namespace:__sanitizer
IOCTL_GRESADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GRESADDRS = GRESADDRS;$/;"	m	namespace:__sanitizer
IOCTL_GRESPROTO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GRESPROTO = GRESPROTO;$/;"	m	namespace:__sanitizer
IOCTL_GRESSOCK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_GRESSOCK = GRESSOCK;$/;"	m	namespace:__sanitizer
IOCTL_HDAUDIO_AFG_CODEC_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HDAUDIO_AFG_CODEC_INFO = HDAUDIO_AFG_CODEC_INFO;$/;"	m	namespace:__sanitizer
IOCTL_HDAUDIO_AFG_WIDGET_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HDAUDIO_AFG_WIDGET_INFO = HDAUDIO_AFG_WIDGET_INFO;$/;"	m	namespace:__sanitizer
IOCTL_HDAUDIO_FGRP_CODEC_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HDAUDIO_FGRP_CODEC_INFO = HDAUDIO_FGRP_CODEC_INFO;$/;"	m	namespace:__sanitizer
IOCTL_HDAUDIO_FGRP_GETCONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HDAUDIO_FGRP_GETCONFIG = HDAUDIO_FGRP_GETCONFIG;$/;"	m	namespace:__sanitizer
IOCTL_HDAUDIO_FGRP_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HDAUDIO_FGRP_INFO = HDAUDIO_FGRP_INFO;$/;"	m	namespace:__sanitizer
IOCTL_HDAUDIO_FGRP_SETCONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HDAUDIO_FGRP_SETCONFIG = HDAUDIO_FGRP_SETCONFIG;$/;"	m	namespace:__sanitizer
IOCTL_HDAUDIO_FGRP_WIDGET_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HDAUDIO_FGRP_WIDGET_INFO = HDAUDIO_FGRP_WIDGET_INFO;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_DRIVE_CMD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_DRIVE_CMD = HDIO_DRIVE_CMD;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GETGEO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GETGEO = HDIO_GETGEO;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GET_32BIT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GET_32BIT = HDIO_GET_32BIT;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GET_DMA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GET_DMA = HDIO_GET_DMA;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GET_IDENTITY	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GET_IDENTITY = HDIO_GET_IDENTITY;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GET_KEEPSETTINGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GET_KEEPSETTINGS = HDIO_GET_KEEPSETTINGS;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GET_MULTCOUNT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GET_MULTCOUNT = HDIO_GET_MULTCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GET_NOWERR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GET_NOWERR = HDIO_GET_NOWERR;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_GET_UNMASKINTR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_GET_UNMASKINTR = HDIO_GET_UNMASKINTR;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_SET_32BIT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_SET_32BIT = HDIO_SET_32BIT;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_SET_DMA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_SET_DMA = HDIO_SET_DMA;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_SET_KEEPSETTINGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_SET_KEEPSETTINGS = HDIO_SET_KEEPSETTINGS;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_SET_MULTCOUNT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_SET_MULTCOUNT = HDIO_SET_MULTCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_SET_NOWERR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_SET_NOWERR = HDIO_SET_NOWERR;$/;"	m	namespace:__sanitizer
IOCTL_HDIO_SET_UNMASKINTR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_HDIO_SET_UNMASKINTR = HDIO_SET_UNMASKINTR;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_ADD_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_ADD_CLASS = HFSC_ADD_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_ADD_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_ADD_FILTER = HFSC_ADD_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_CLEAR_HIERARCHY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_CLEAR_HIERARCHY = HFSC_CLEAR_HIERARCHY;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_DEL_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_DEL_CLASS = HFSC_DEL_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_DEL_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_DEL_FILTER = HFSC_DEL_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_DISABLE = HFSC_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_ENABLE = HFSC_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_GETSTATS = HFSC_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_IF_ATTACH = HFSC_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_IF_DETACH = HFSC_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_HFSC_MOD_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HFSC_MOD_CLASS = HFSC_MOD_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_HPCFBIO_GCONF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HPCFBIO_GCONF = HPCFBIO_GCONF;$/;"	m	namespace:__sanitizer
IOCTL_HPCFBIO_GDSPCONF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HPCFBIO_GDSPCONF = HPCFBIO_GDSPCONF;$/;"	m	namespace:__sanitizer
IOCTL_HPCFBIO_GOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HPCFBIO_GOP = HPCFBIO_GOP;$/;"	m	namespace:__sanitizer
IOCTL_HPCFBIO_SCONF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HPCFBIO_SCONF = HPCFBIO_SCONF;$/;"	m	namespace:__sanitizer
IOCTL_HPCFBIO_SDSPCONF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HPCFBIO_SDSPCONF = HPCFBIO_SDSPCONF;$/;"	m	namespace:__sanitizer
IOCTL_HPCFBIO_SOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_HPCFBIO_SOP = HPCFBIO_SOP;$/;"	m	namespace:__sanitizer
IOCTL_IOC_CPU_GETCOUNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_CPU_GETCOUNT = IOC_CPU_GETCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_IOC_CPU_GETSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_CPU_GETSTATE = IOC_CPU_GETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_CPU_MAPID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_CPU_MAPID = IOC_CPU_MAPID;$/;"	m	namespace:__sanitizer
IOCTL_IOC_CPU_SETSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_CPU_SETSTATE = IOC_CPU_SETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_CPU_UCODE_APPLY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_CPU_UCODE_APPLY = IOC_CPU_UCODE_APPLY;$/;"	m	namespace:__sanitizer
IOCTL_IOC_CPU_UCODE_GET_VERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_CPU_UCODE_GET_VERSION = IOC_CPU_UCODE_GET_VERSION;$/;"	m	namespace:__sanitizer
IOCTL_IOC_LOCKSTAT_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_LOCKSTAT_DISABLE = IOC_LOCKSTAT_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_LOCKSTAT_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_LOCKSTAT_ENABLE = IOC_LOCKSTAT_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_LOCKSTAT_GVERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_LOCKSTAT_GVERSION = IOC_LOCKSTAT_GVERSION;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_CONN_LOOKUP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_CONN_LOOKUP = IOC_NPF_CONN_LOOKUP;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_LOAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_LOAD = IOC_NPF_LOAD;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_RULE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_RULE = IOC_NPF_RULE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_SAVE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_SAVE = IOC_NPF_SAVE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_STATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_STATS = IOC_NPF_STATS;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_SWITCH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_SWITCH = IOC_NPF_SWITCH;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_TABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_TABLE = IOC_NPF_TABLE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_TABLE_REPLACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_TABLE_REPLACE = IOC_NPF_TABLE_REPLACE;$/;"	m	namespace:__sanitizer
IOCTL_IOC_NPF_VERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOC_NPF_VERSION = IOC_NPF_VERSION;$/;"	m	namespace:__sanitizer
IOCTL_IOPIOCGLCT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOPIOCGLCT = IOPIOCGLCT;$/;"	m	namespace:__sanitizer
IOCTL_IOPIOCGSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOPIOCGSTATUS = IOPIOCGSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_IOPIOCGTIDMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOPIOCGTIDMAP = IOPIOCGTIDMAP;$/;"	m	namespace:__sanitizer
IOCTL_IOPIOCPT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOPIOCPT = IOPIOCPT;$/;"	m	namespace:__sanitizer
IOCTL_IOPIOCRECONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IOPIOCRECONFIG = IOPIOCRECONFIG;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_GET_MY_ADDRESS_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_GET_MY_ADDRESS_CMD = IPMICTL_GET_MY_ADDRESS_CMD;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_GET_MY_LUN_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_GET_MY_LUN_CMD = IPMICTL_GET_MY_LUN_CMD;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_RECEIVE_MSG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_RECEIVE_MSG = IPMICTL_RECEIVE_MSG;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_RECEIVE_MSG_TRUNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_RECEIVE_MSG_TRUNC = IPMICTL_RECEIVE_MSG_TRUNC;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_REGISTER_FOR_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_REGISTER_FOR_CMD = IPMICTL_REGISTER_FOR_CMD;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_SEND_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_SEND_COMMAND = IPMICTL_SEND_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_SET_GETS_EVENTS_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_SET_GETS_EVENTS_CMD = IPMICTL_SET_GETS_EVENTS_CMD;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_SET_MY_ADDRESS_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_SET_MY_ADDRESS_CMD = IPMICTL_SET_MY_ADDRESS_CMD;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_SET_MY_LUN_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_SET_MY_LUN_CMD = IPMICTL_SET_MY_LUN_CMD;$/;"	m	namespace:__sanitizer
IOCTL_IPMICTL_UNREGISTER_FOR_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IPMICTL_UNREGISTER_FOR_CMD = IPMICTL_UNREGISTER_FOR_CMD;$/;"	m	namespace:__sanitizer
IOCTL_IRDA_GET_SPEEDMASK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IRDA_GET_SPEEDMASK = IRDA_GET_SPEEDMASK;$/;"	m	namespace:__sanitizer
IOCTL_IRDA_GET_TURNAROUNDMASK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IRDA_GET_TURNAROUNDMASK = IRDA_GET_TURNAROUNDMASK;$/;"	m	namespace:__sanitizer
IOCTL_IRDA_RESET_PARAMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IRDA_RESET_PARAMS = IRDA_RESET_PARAMS;$/;"	m	namespace:__sanitizer
IOCTL_IRDA_SET_PARAMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IRDA_SET_PARAMS = IRDA_SET_PARAMS;$/;"	m	namespace:__sanitizer
IOCTL_IRFRAMETTY_GET_DEVICE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IRFRAMETTY_GET_DEVICE = IRFRAMETTY_GET_DEVICE;$/;"	m	namespace:__sanitizer
IOCTL_IRFRAMETTY_GET_DONGLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IRFRAMETTY_GET_DONGLE = IRFRAMETTY_GET_DONGLE;$/;"	m	namespace:__sanitizer
IOCTL_IRFRAMETTY_SET_DONGLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_IRFRAMETTY_SET_DONGLE = IRFRAMETTY_SET_DONGLE;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_ADD_CONNECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_ADD_CONNECTION = ISCSI_ADD_CONNECTION;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_CONNECTION_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_CONNECTION_STATUS = ISCSI_CONNECTION_STATUS;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_DEREGISTER_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_DEREGISTER_EVENT = ISCSI_DEREGISTER_EVENT;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_GET_VERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_GET_VERSION = ISCSI_GET_VERSION;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_IO_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_IO_COMMAND = ISCSI_IO_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_LOGIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_LOGIN = ISCSI_LOGIN;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_LOGOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_LOGOUT = ISCSI_LOGOUT;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_POLL_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_POLL_EVENT = ISCSI_POLL_EVENT;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_REGISTER_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_REGISTER_EVENT = ISCSI_REGISTER_EVENT;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_REMOVE_CONNECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_REMOVE_CONNECTION = ISCSI_REMOVE_CONNECTION;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_RESTORE_CONNECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_RESTORE_CONNECTION = ISCSI_RESTORE_CONNECTION;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_SEND_TARGETS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_SEND_TARGETS = ISCSI_SEND_TARGETS;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_SET_NODE_NAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_SET_NODE_NAME = ISCSI_SET_NODE_NAME;$/;"	m	namespace:__sanitizer
IOCTL_ISCSI_WAIT_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISCSI_WAIT_EVENT = ISCSI_WAIT_EVENT;$/;"	m	namespace:__sanitizer
IOCTL_ISP_CLR_STATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_CLR_STATS = ISP_CLR_STATS;$/;"	m	namespace:__sanitizer
IOCTL_ISP_FC_GETDINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_FC_GETDINFO = ISP_FC_GETDINFO;$/;"	m	namespace:__sanitizer
IOCTL_ISP_FC_GETDLIST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_FC_GETDLIST = ISP_FC_GETDLIST;$/;"	m	namespace:__sanitizer
IOCTL_ISP_FC_GETHINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_FC_GETHINFO = ISP_FC_GETHINFO;$/;"	m	namespace:__sanitizer
IOCTL_ISP_FC_LIP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_FC_LIP = ISP_FC_LIP;$/;"	m	namespace:__sanitizer
IOCTL_ISP_FORCE_CRASH_DUMP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_FORCE_CRASH_DUMP = ISP_FORCE_CRASH_DUMP;$/;"	m	namespace:__sanitizer
IOCTL_ISP_GETROLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_GETROLE = ISP_GETROLE;$/;"	m	namespace:__sanitizer
IOCTL_ISP_GET_FW_CRASH_DUMP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_GET_FW_CRASH_DUMP = ISP_GET_FW_CRASH_DUMP;$/;"	m	namespace:__sanitizer
IOCTL_ISP_GET_STATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_GET_STATS = ISP_GET_STATS;$/;"	m	namespace:__sanitizer
IOCTL_ISP_RESCAN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_RESCAN = ISP_RESCAN;$/;"	m	namespace:__sanitizer
IOCTL_ISP_RESETHBA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_RESETHBA = ISP_RESETHBA;$/;"	m	namespace:__sanitizer
IOCTL_ISP_SDBLEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_SDBLEV = ISP_SDBLEV;$/;"	m	namespace:__sanitizer
IOCTL_ISP_SETROLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_SETROLE = ISP_SETROLE;$/;"	m	namespace:__sanitizer
IOCTL_ISP_TSK_MGMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISP_TSK_MGMT = ISP_TSK_MGMT;$/;"	m	namespace:__sanitizer
IOCTL_ISV_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ISV_CMD = ISV_CMD;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_ADD_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_ADD_CLASS = JOBS_ADD_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_ADD_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_ADD_FILTER = JOBS_ADD_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_CLEAR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_CLEAR = JOBS_CLEAR;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_DEL_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_DEL_CLASS = JOBS_DEL_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_DEL_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_DEL_FILTER = JOBS_DEL_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_DISABLE = JOBS_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_ENABLE = JOBS_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_GETSTATS = JOBS_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_IF_ATTACH = JOBS_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_IF_DETACH = JOBS_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_JOBS_MOD_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOBS_MOD_CLASS = JOBS_MOD_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_JOY_GETTIMEOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOY_GETTIMEOUT = JOY_GETTIMEOUT;$/;"	m	namespace:__sanitizer
IOCTL_JOY_GET_X_OFFSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOY_GET_X_OFFSET = JOY_GET_X_OFFSET;$/;"	m	namespace:__sanitizer
IOCTL_JOY_GET_Y_OFFSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOY_GET_Y_OFFSET = JOY_GET_Y_OFFSET;$/;"	m	namespace:__sanitizer
IOCTL_JOY_SETTIMEOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOY_SETTIMEOUT = JOY_SETTIMEOUT;$/;"	m	namespace:__sanitizer
IOCTL_JOY_SET_X_OFFSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOY_SET_X_OFFSET = JOY_SET_X_OFFSET;$/;"	m	namespace:__sanitizer
IOCTL_JOY_SET_Y_OFFSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_JOY_SET_Y_OFFSET = JOY_SET_Y_OFFSET;$/;"	m	namespace:__sanitizer
IOCTL_KCOV_IOC_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KCOV_IOC_DISABLE = KCOV_IOC_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_KCOV_IOC_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KCOV_IOC_ENABLE = KCOV_IOC_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_KCOV_IOC_SETBUFSIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KCOV_IOC_SETBUFSIZE = KCOV_IOC_SETBUFSIZE;$/;"	m	namespace:__sanitizer
IOCTL_KDADDIO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDADDIO = KDADDIO;$/;"	m	namespace:__sanitizer
IOCTL_KDDELIO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDDELIO = KDDELIO;$/;"	m	namespace:__sanitizer
IOCTL_KDDISABIO	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDDISABIO = KDDISABIO;$/;"	m	namespace:__sanitizer
IOCTL_KDDISABIO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDDISABIO = KDDISABIO;$/;"	m	namespace:__sanitizer
IOCTL_KDDISABIO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDDISABIO = KDDISABIO;$/;"	m	namespace:__sanitizer
IOCTL_KDENABIO	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDENABIO = KDENABIO;$/;"	m	namespace:__sanitizer
IOCTL_KDENABIO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDENABIO = KDENABIO;$/;"	m	namespace:__sanitizer
IOCTL_KDENABIO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDENABIO = KDENABIO;$/;"	m	namespace:__sanitizer
IOCTL_KDGETKBENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDGETKBENT = KDGETKBENT;$/;"	m	namespace:__sanitizer
IOCTL_KDGETKEYCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGETKEYCODE = KDGETKEYCODE;$/;"	m	namespace:__sanitizer
IOCTL_KDGETLED	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDGETLED = KDGETLED;$/;"	m	namespace:__sanitizer
IOCTL_KDGETLED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDGETLED = KDGETLED;$/;"	m	namespace:__sanitizer
IOCTL_KDGETLED	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGETLED = KDGETLED;$/;"	m	namespace:__sanitizer
IOCTL_KDGETMODE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDGETMODE = KDGETMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDGETMODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGETMODE = KDGETMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBDIACR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGKBDIACR = KDGKBDIACR;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBENT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGKBENT = KDGKBENT;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBLED	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGKBLED = KDGKBLED;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBMETA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGKBMETA = KDGKBMETA;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBMODE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDGKBMODE = KDGKBMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDGKBMODE = KDGKBMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBMODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGKBMODE = KDGKBMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBSENT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGKBSENT = KDGKBSENT;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBTYPE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDGKBTYPE = KDGKBTYPE;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDGKBTYPE = KDGKBTYPE;$/;"	m	namespace:__sanitizer
IOCTL_KDGKBTYPE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDGKBTYPE = KDGKBTYPE;$/;"	m	namespace:__sanitizer
IOCTL_KDMAPDISP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDMAPDISP = KDMAPDISP;$/;"	m	namespace:__sanitizer
IOCTL_KDMKTONE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDMKTONE = KDMKTONE;$/;"	m	namespace:__sanitizer
IOCTL_KDMKTONE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDMKTONE = KDMKTONE;$/;"	m	namespace:__sanitizer
IOCTL_KDMKTONE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDMKTONE = KDMKTONE;$/;"	m	namespace:__sanitizer
IOCTL_KDSETKEYCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSETKEYCODE = KDSETKEYCODE;$/;"	m	namespace:__sanitizer
IOCTL_KDSETLED	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDSETLED = KDSETLED;$/;"	m	namespace:__sanitizer
IOCTL_KDSETLED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDSETLED = KDSETLED;$/;"	m	namespace:__sanitizer
IOCTL_KDSETLED	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSETLED = KDSETLED;$/;"	m	namespace:__sanitizer
IOCTL_KDSETMODE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDSETMODE = KDSETMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDSETMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDSETMODE = KDSETMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDSETMODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSETMODE = KDSETMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDSETRAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDSETRAD = KDSETRAD;$/;"	m	namespace:__sanitizer
IOCTL_KDSIGACCEPT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSIGACCEPT = KDSIGACCEPT;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBDIACR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSKBDIACR = KDSKBDIACR;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBENT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSKBENT = KDSKBENT;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBLED	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSKBLED = KDSKBLED;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBMETA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSKBMETA = KDSKBMETA;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBMODE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KDSKBMODE = KDSKBMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KDSKBMODE = KDSKBMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBMODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSKBMODE = KDSKBMODE;$/;"	m	namespace:__sanitizer
IOCTL_KDSKBSENT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDSKBSENT = KDSKBSENT;$/;"	m	namespace:__sanitizer
IOCTL_KDUNMAPDISP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KDUNMAPDISP = KDUNMAPDISP;$/;"	m	namespace:__sanitizer
IOCTL_KFILTER_BYFILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KFILTER_BYFILTER = KFILTER_BYFILTER;$/;"	m	namespace:__sanitizer
IOCTL_KFILTER_BYNAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KFILTER_BYNAME = KFILTER_BYNAME;$/;"	m	namespace:__sanitizer
IOCTL_KIOCCMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCCMD = KIOCCMD;$/;"	m	namespace:__sanitizer
IOCTL_KIOCGETKEY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCGETKEY = KIOCGETKEY;$/;"	m	namespace:__sanitizer
IOCTL_KIOCGKEY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCGKEY = KIOCGKEY;$/;"	m	namespace:__sanitizer
IOCTL_KIOCGLED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCGLED = KIOCGLED;$/;"	m	namespace:__sanitizer
IOCTL_KIOCGSIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCGSIZE = KIOCGSIZE;$/;"	m	namespace:__sanitizer
IOCTL_KIOCGSYMBOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCGSYMBOL = KIOCGSYMBOL;$/;"	m	namespace:__sanitizer
IOCTL_KIOCGTRANS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCGTRANS = KIOCGTRANS;$/;"	m	namespace:__sanitizer
IOCTL_KIOCGVALUE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCGVALUE = KIOCGVALUE;$/;"	m	namespace:__sanitizer
IOCTL_KIOCLAYOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCLAYOUT = KIOCLAYOUT;$/;"	m	namespace:__sanitizer
IOCTL_KIOCSDIRECT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCSDIRECT = KIOCSDIRECT;$/;"	m	namespace:__sanitizer
IOCTL_KIOCSETKEY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCSETKEY = KIOCSETKEY;$/;"	m	namespace:__sanitizer
IOCTL_KIOCSKEY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCSKEY = KIOCSKEY;$/;"	m	namespace:__sanitizer
IOCTL_KIOCSLED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCSLED = KIOCSLED;$/;"	m	namespace:__sanitizer
IOCTL_KIOCSOUND	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_KIOCSOUND = KIOCSOUND;$/;"	m	namespace:__sanitizer
IOCTL_KIOCSOUND	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_KIOCSOUND = KIOCSOUND;$/;"	m	namespace:__sanitizer
IOCTL_KIOCTRANS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCTRANS = KIOCTRANS;$/;"	m	namespace:__sanitizer
IOCTL_KIOCTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KIOCTYPE = KIOCTYPE;$/;"	m	namespace:__sanitizer
IOCTL_KTTCP_IO_RECV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KTTCP_IO_RECV = KTTCP_IO_RECV;$/;"	m	namespace:__sanitizer
IOCTL_KTTCP_IO_SEND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_KTTCP_IO_SEND = KTTCP_IO_SEND;$/;"	m	namespace:__sanitizer
IOCTL_LPABORT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPABORT = LPABORT;$/;"	m	namespace:__sanitizer
IOCTL_LPABORTOPEN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPABORTOPEN = LPABORTOPEN;$/;"	m	namespace:__sanitizer
IOCTL_LPCAREFUL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPCAREFUL = LPCAREFUL;$/;"	m	namespace:__sanitizer
IOCTL_LPCHAR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPCHAR = LPCHAR;$/;"	m	namespace:__sanitizer
IOCTL_LPGETIRQ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPGETIRQ = LPGETIRQ;$/;"	m	namespace:__sanitizer
IOCTL_LPGETSTATUS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPGETSTATUS = LPGETSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_LPRESET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPRESET = LPRESET;$/;"	m	namespace:__sanitizer
IOCTL_LPSETIRQ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPSETIRQ = LPSETIRQ;$/;"	m	namespace:__sanitizer
IOCTL_LPTIME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPTIME = LPTIME;$/;"	m	namespace:__sanitizer
IOCTL_LPWAIT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_LPWAIT = LPWAIT;$/;"	m	namespace:__sanitizer
IOCTL_LUACREATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_LUACREATE = LUACREATE;$/;"	m	namespace:__sanitizer
IOCTL_LUADESTROY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_LUADESTROY = LUADESTROY;$/;"	m	namespace:__sanitizer
IOCTL_LUAINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_LUAINFO = LUAINFO;$/;"	m	namespace:__sanitizer
IOCTL_LUALOAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_LUALOAD = LUALOAD;$/;"	m	namespace:__sanitizer
IOCTL_LUAREQUIRE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_LUAREQUIRE = LUAREQUIRE;$/;"	m	namespace:__sanitizer
IOCTL_MBPPIOCGPARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MBPPIOCGPARAM = MBPPIOCGPARAM;$/;"	m	namespace:__sanitizer
IOCTL_MBPPIOCGSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MBPPIOCGSTAT = MBPPIOCGSTAT;$/;"	m	namespace:__sanitizer
IOCTL_MBPPIOCSPARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MBPPIOCSPARAM = MBPPIOCSPARAM;$/;"	m	namespace:__sanitizer
IOCTL_MD_GETCONF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MD_GETCONF = MD_GETCONF;$/;"	m	namespace:__sanitizer
IOCTL_MD_SETCONF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MD_SETCONF = MD_SETCONF;$/;"	m	namespace:__sanitizer
IOCTL_METEORCAPFRM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORCAPFRM = METEORCAPFRM;$/;"	m	namespace:__sanitizer
IOCTL_METEORCAPTUR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORCAPTUR = METEORCAPTUR;$/;"	m	namespace:__sanitizer
IOCTL_METEORGACTPIXFMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGACTPIXFMT = METEORGACTPIXFMT;$/;"	m	namespace:__sanitizer
IOCTL_METEORGBRIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGBRIG = METEORGBRIG;$/;"	m	namespace:__sanitizer
IOCTL_METEORGCHCV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGCHCV = METEORGCHCV;$/;"	m	namespace:__sanitizer
IOCTL_METEORGCONT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGCONT = METEORGCONT;$/;"	m	namespace:__sanitizer
IOCTL_METEORGCOUNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGCOUNT = METEORGCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_METEORGCSAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGCSAT = METEORGCSAT;$/;"	m	namespace:__sanitizer
IOCTL_METEORGETGEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGETGEO = METEORGETGEO;$/;"	m	namespace:__sanitizer
IOCTL_METEORGFMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGFMT = METEORGFMT;$/;"	m	namespace:__sanitizer
IOCTL_METEORGFPS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGFPS = METEORGFPS;$/;"	m	namespace:__sanitizer
IOCTL_METEORGHUE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGHUE = METEORGHUE;$/;"	m	namespace:__sanitizer
IOCTL_METEORGHWS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGHWS = METEORGHWS;$/;"	m	namespace:__sanitizer
IOCTL_METEORGINPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGINPUT = METEORGINPUT;$/;"	m	namespace:__sanitizer
IOCTL_METEORGSIGNAL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGSIGNAL = METEORGSIGNAL;$/;"	m	namespace:__sanitizer
IOCTL_METEORGSUPPIXFMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGSUPPIXFMT = METEORGSUPPIXFMT;$/;"	m	namespace:__sanitizer
IOCTL_METEORGTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGTS = METEORGTS;$/;"	m	namespace:__sanitizer
IOCTL_METEORGVIDEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGVIDEO = METEORGVIDEO;$/;"	m	namespace:__sanitizer
IOCTL_METEORGVWS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORGVWS = METEORGVWS;$/;"	m	namespace:__sanitizer
IOCTL_METEORSACTPIXFMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSACTPIXFMT = METEORSACTPIXFMT;$/;"	m	namespace:__sanitizer
IOCTL_METEORSBRIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSBRIG = METEORSBRIG;$/;"	m	namespace:__sanitizer
IOCTL_METEORSCHCV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSCHCV = METEORSCHCV;$/;"	m	namespace:__sanitizer
IOCTL_METEORSCONT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSCONT = METEORSCONT;$/;"	m	namespace:__sanitizer
IOCTL_METEORSCOUNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSCOUNT = METEORSCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_METEORSCSAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSCSAT = METEORSCSAT;$/;"	m	namespace:__sanitizer
IOCTL_METEORSETGEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSETGEO = METEORSETGEO;$/;"	m	namespace:__sanitizer
IOCTL_METEORSFMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSFMT = METEORSFMT;$/;"	m	namespace:__sanitizer
IOCTL_METEORSFPS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSFPS = METEORSFPS;$/;"	m	namespace:__sanitizer
IOCTL_METEORSHUE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSHUE = METEORSHUE;$/;"	m	namespace:__sanitizer
IOCTL_METEORSHWS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSHWS = METEORSHWS;$/;"	m	namespace:__sanitizer
IOCTL_METEORSINPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSINPUT = METEORSINPUT;$/;"	m	namespace:__sanitizer
IOCTL_METEORSSIGNAL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSSIGNAL = METEORSSIGNAL;$/;"	m	namespace:__sanitizer
IOCTL_METEORSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSTATUS = METEORSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_METEORSTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSTS = METEORSTS;$/;"	m	namespace:__sanitizer
IOCTL_METEORSVIDEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSVIDEO = METEORSVIDEO;$/;"	m	namespace:__sanitizer
IOCTL_METEORSVWS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_METEORSVWS = METEORSVWS;$/;"	m	namespace:__sanitizer
IOCTL_MIDI_MPUCMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MIDI_MPUCMD = MIDI_MPUCMD;$/;"	m	namespace:__sanitizer
IOCTL_MIDI_MPUMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MIDI_MPUMODE = MIDI_MPUMODE;$/;"	m	namespace:__sanitizer
IOCTL_MIDI_PRETIME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MIDI_PRETIME = MIDI_PRETIME;$/;"	m	namespace:__sanitizer
IOCTL_MLXD_CHECKASYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLXD_CHECKASYNC = MLXD_CHECKASYNC;$/;"	m	namespace:__sanitizer
IOCTL_MLXD_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLXD_DETACH = MLXD_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_MLXD_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLXD_STATUS = MLXD_STATUS;$/;"	m	namespace:__sanitizer
IOCTL_MLX_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLX_COMMAND = MLX_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_MLX_GET_CINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLX_GET_CINFO = MLX_GET_CINFO;$/;"	m	namespace:__sanitizer
IOCTL_MLX_GET_SYSDRIVE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLX_GET_SYSDRIVE = MLX_GET_SYSDRIVE;$/;"	m	namespace:__sanitizer
IOCTL_MLX_PAUSE_CHANNEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLX_PAUSE_CHANNEL = MLX_PAUSE_CHANNEL;$/;"	m	namespace:__sanitizer
IOCTL_MLX_REBUILDASYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLX_REBUILDASYNC = MLX_REBUILDASYNC;$/;"	m	namespace:__sanitizer
IOCTL_MLX_REBUILDSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLX_REBUILDSTAT = MLX_REBUILDSTAT;$/;"	m	namespace:__sanitizer
IOCTL_MLX_RESCAN_DRIVES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLX_RESCAN_DRIVES = MLX_RESCAN_DRIVES;$/;"	m	namespace:__sanitizer
IOCTL_MLYIO_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLYIO_COMMAND = MLYIO_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_MLYIO_HEALTH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MLYIO_HEALTH = MLYIO_HEALTH;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCEEOT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCEEOT = MTIOCEEOT;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCGET	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_MTIOCGET = MTIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCGET = MTIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCGET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_MTIOCGET = MTIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCGET	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_MTIOCGET = MTIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCGETCONFIG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_MTIOCGETCONFIG = MTIOCGETCONFIG;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCHLOCATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCHLOCATE = MTIOCHLOCATE;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCIEOT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCIEOT = MTIOCIEOT;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCPOS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_MTIOCPOS = MTIOCPOS;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCRDHPOS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCRDHPOS = MTIOCRDHPOS;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCRDSPOS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCRDSPOS = MTIOCRDSPOS;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCSETCONFIG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_MTIOCSETCONFIG = MTIOCSETCONFIG;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCSLOCATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCSLOCATE = MTIOCSLOCATE;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCTOP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_MTIOCTOP = MTIOCTOP;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCTOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_MTIOCTOP = MTIOCTOP;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCTOP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_MTIOCTOP = MTIOCTOP;$/;"	m	namespace:__sanitizer
IOCTL_MTIOCTOP	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_MTIOCTOP = MTIOCTOP;$/;"	m	namespace:__sanitizer
IOCTL_NETBSD_DM_IOCTL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NETBSD_DM_IOCTL = NETBSD_DM_IOCTL;$/;"	m	namespace:__sanitizer
IOCTL_NOT_PRESENT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const unsigned IOCTL_NOT_PRESENT = 0;$/;"	m	namespace:__sanitizer
IOCTL_NOT_PRESENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned IOCTL_NOT_PRESENT = 0;$/;"	m	namespace:__sanitizer
IOCTL_NOT_PRESENT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const unsigned IOCTL_NOT_PRESENT = 0;$/;"	m	namespace:__sanitizer
IOCTL_NOT_PRESENT	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  const unsigned IOCTL_NOT_PRESENT = 0;$/;"	m	namespace:__sanitizer
IOCTL_NVME_PASSTHROUGH_CMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVME_PASSTHROUGH_CMD = NVME_PASSTHROUGH_CMD;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_CAPABILITY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_CAPABILITY = NVMM_IOC_CAPABILITY;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_CTL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_CTL = NVMM_IOC_CTL;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_GPA_MAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_GPA_MAP = NVMM_IOC_GPA_MAP;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_GPA_UNMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_GPA_UNMAP = NVMM_IOC_GPA_UNMAP;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_HVA_MAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_HVA_MAP = NVMM_IOC_HVA_MAP;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_HVA_UNMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_HVA_UNMAP = NVMM_IOC_HVA_UNMAP;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_MACHINE_CONFIGURE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_MACHINE_CONFIGURE = NVMM_IOC_MACHINE_CONFIGURE;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_MACHINE_CREATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_MACHINE_CREATE = NVMM_IOC_MACHINE_CREATE;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_MACHINE_DESTROY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_MACHINE_DESTROY = NVMM_IOC_MACHINE_DESTROY;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_VCPU_CONFIGURE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_VCPU_CONFIGURE = NVMM_IOC_VCPU_CONFIGURE;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_VCPU_CREATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_VCPU_CREATE = NVMM_IOC_VCPU_CREATE;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_VCPU_DESTROY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_VCPU_DESTROY = NVMM_IOC_VCPU_DESTROY;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_VCPU_GETSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_VCPU_GETSTATE = NVMM_IOC_VCPU_GETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_VCPU_INJECT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_VCPU_INJECT = NVMM_IOC_VCPU_INJECT;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_VCPU_RUN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_VCPU_RUN = NVMM_IOC_VCPU_RUN;$/;"	m	namespace:__sanitizer
IOCTL_NVMM_IOC_VCPU_SETSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_NVMM_IOC_VCPU_SETSTATE = NVMM_IOC_VCPU_SETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_OAPM_IOC_GETPOWER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OAPM_IOC_GETPOWER = OAPM_IOC_GETPOWER;$/;"	m	namespace:__sanitizer
IOCTL_OCHIOGSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OCHIOGSTATUS = OCHIOGSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_ODIOCEJECT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_ODIOCEJECT = ODIOCEJECT;$/;"	m	namespace:__sanitizer
IOCTL_OFIOCFINDDEVICE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOCFINDDEVICE = OFIOCFINDDEVICE;$/;"	m	namespace:__sanitizer
IOCTL_OFIOCGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOCGET = OFIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_OFIOCGETCHILD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOCGETCHILD = OFIOCGETCHILD;$/;"	m	namespace:__sanitizer
IOCTL_OFIOCGETNEXT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOCGETNEXT = OFIOCGETNEXT;$/;"	m	namespace:__sanitizer
IOCTL_OFIOCGETOPTNODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOCGETOPTNODE = OFIOCGETOPTNODE;$/;"	m	namespace:__sanitizer
IOCTL_OFIOCNEXTPROP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOCNEXTPROP = OFIOCNEXTPROP;$/;"	m	namespace:__sanitizer
IOCTL_OFIOCSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOCSET = OFIOCSET;$/;"	m	namespace:__sanitizer
IOCTL_OFIOGETBMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OFIOGETBMAP = OFIOGETBMAP;$/;"	m	namespace:__sanitizer
IOCTL_OKIOCGSYMBOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OKIOCGSYMBOL = OKIOCGSYMBOL;$/;"	m	namespace:__sanitizer
IOCTL_OKIOCGVALUE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OKIOCGVALUE = OKIOCGVALUE;$/;"	m	namespace:__sanitizer
IOCTL_OSCIOCIDENTIFY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OSCIOCIDENTIFY = OSCIOCIDENTIFY;$/;"	m	namespace:__sanitizer
IOCTL_OSS_GETVERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OSS_GETVERSION = OSS_GETVERSION;$/;"	m	namespace:__sanitizer
IOCTL_OTIOCCONS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_OTIOCCONS = OTIOCCONS;$/;"	m	namespace:__sanitizer
IOCTL_PCI_IOC_BDF_CFGREAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PCI_IOC_BDF_CFGREAD = PCI_IOC_BDF_CFGREAD;$/;"	m	namespace:__sanitizer
IOCTL_PCI_IOC_BDF_CFGWRITE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PCI_IOC_BDF_CFGWRITE = PCI_IOC_BDF_CFGWRITE;$/;"	m	namespace:__sanitizer
IOCTL_PCI_IOC_BUSINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PCI_IOC_BUSINFO = PCI_IOC_BUSINFO;$/;"	m	namespace:__sanitizer
IOCTL_PCI_IOC_CFGREAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PCI_IOC_CFGREAD = PCI_IOC_CFGREAD;$/;"	m	namespace:__sanitizer
IOCTL_PCI_IOC_CFGWRITE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PCI_IOC_CFGWRITE = PCI_IOC_CFGWRITE;$/;"	m	namespace:__sanitizer
IOCTL_PCI_IOC_DRVNAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PCI_IOC_DRVNAME = PCI_IOC_DRVNAME;$/;"	m	namespace:__sanitizer
IOCTL_PCI_IOC_DRVNAMEONBUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PCI_IOC_DRVNAMEONBUS = PCI_IOC_DRVNAMEONBUS;$/;"	m	namespace:__sanitizer
IOCTL_PIO_CMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PIO_CMAP = PIO_CMAP;$/;"	m	namespace:__sanitizer
IOCTL_PIO_FONT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PIO_FONT = PIO_FONT;$/;"	m	namespace:__sanitizer
IOCTL_PIO_SCRNMAP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_PIO_SCRNMAP = PIO_SCRNMAP;$/;"	m	namespace:__sanitizer
IOCTL_PIO_SCRNMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PIO_SCRNMAP = PIO_SCRNMAP;$/;"	m	namespace:__sanitizer
IOCTL_PIO_UNIMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PIO_UNIMAP = PIO_UNIMAP;$/;"	m	namespace:__sanitizer
IOCTL_PIO_UNIMAPCLR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PIO_UNIMAPCLR = PIO_UNIMAPCLR;$/;"	m	namespace:__sanitizer
IOCTL_PIO_UNISCRNMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PIO_UNISCRNMAP = PIO_UNISCRNMAP;$/;"	m	namespace:__sanitizer
IOCTL_POWER_EVENT_RECVDICT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_POWER_EVENT_RECVDICT = POWER_EVENT_RECVDICT;$/;"	m	namespace:__sanitizer
IOCTL_POWER_IOC_GET_TYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_POWER_IOC_GET_TYPE = POWER_IOC_GET_TYPE;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGASYNCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGASYNCMAP = PPPIOCGASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGASYNCMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCGASYNCMAP = PPPIOCGASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGDEBUG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCGDEBUG = PPPIOCGDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGFLAGS = PPPIOCGFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGFLAGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCGFLAGS = PPPIOCGFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGIDLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGIDLE = PPPIOCGIDLE;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGMRU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGMRU = PPPIOCGMRU;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGMTU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGMTU = PPPIOCGMTU;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGNPMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGNPMODE = PPPIOCGNPMODE;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGRASYNCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGRASYNCMAP = PPPIOCGRASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGRAWIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGRAWIN = PPPIOCGRAWIN;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGUNIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGUNIT = PPPIOCGUNIT;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGUNIT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCGUNIT = PPPIOCGUNIT;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGXASYNCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCGXASYNCMAP = PPPIOCGXASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCGXASYNCMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCGXASYNCMAP = PPPIOCGXASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSASYNCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSASYNCMAP = PPPIOCSASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSASYNCMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCSASYNCMAP = PPPIOCSASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSCOMPRESS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSCOMPRESS = PPPIOCSCOMPRESS;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSDEBUG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCSDEBUG = PPPIOCSDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSFLAGS = PPPIOCSFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSFLAGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCSFLAGS = PPPIOCSFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSMAXCID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSMAXCID = PPPIOCSMAXCID;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSMAXCID	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCSMAXCID = PPPIOCSMAXCID;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSMRU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSMRU = PPPIOCSMRU;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSMRU	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCSMRU = PPPIOCSMRU;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSMTU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSMTU = PPPIOCSMTU;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSNPMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSNPMODE = PPPIOCSNPMODE;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSRASYNCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSRASYNCMAP = PPPIOCSRASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSXASYNCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCSXASYNCMAP = PPPIOCSXASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCSXASYNCMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_PPPIOCSXASYNCMAP = PPPIOCSXASYNCMAP;$/;"	m	namespace:__sanitizer
IOCTL_PPPIOCXFERUNIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPIOCXFERUNIT = PPPIOCXFERUNIT;$/;"	m	namespace:__sanitizer
IOCTL_PPPOEGETPARMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPOEGETPARMS = PPPOEGETPARMS;$/;"	m	namespace:__sanitizer
IOCTL_PPPOEGETSESSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPOEGETSESSION = PPPOEGETSESSION;$/;"	m	namespace:__sanitizer
IOCTL_PPPOESETPARMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPPOESETPARMS = PPPOESETPARMS;$/;"	m	namespace:__sanitizer
IOCTL_PPS_IOC_CREATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPS_IOC_CREATE = PPS_IOC_CREATE;$/;"	m	namespace:__sanitizer
IOCTL_PPS_IOC_DESTROY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPS_IOC_DESTROY = PPS_IOC_DESTROY;$/;"	m	namespace:__sanitizer
IOCTL_PPS_IOC_FETCH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPS_IOC_FETCH = PPS_IOC_FETCH;$/;"	m	namespace:__sanitizer
IOCTL_PPS_IOC_GETCAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPS_IOC_GETCAP = PPS_IOC_GETCAP;$/;"	m	namespace:__sanitizer
IOCTL_PPS_IOC_GETPARAMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPS_IOC_GETPARAMS = PPS_IOC_GETPARAMS;$/;"	m	namespace:__sanitizer
IOCTL_PPS_IOC_KCBIND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPS_IOC_KCBIND = PPS_IOC_KCBIND;$/;"	m	namespace:__sanitizer
IOCTL_PPS_IOC_SETPARAMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PPS_IOC_SETPARAMS = PPS_IOC_SETPARAMS;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_ADD_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_ADD_CLASS = PRIQ_ADD_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_ADD_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_ADD_FILTER = PRIQ_ADD_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_CLEAR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_CLEAR = PRIQ_CLEAR;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_DEL_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_DEL_CLASS = PRIQ_DEL_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_DEL_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_DEL_FILTER = PRIQ_DEL_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_DISABLE = PRIQ_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_ENABLE = PRIQ_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_GETSTATS = PRIQ_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_IF_ATTACH = PRIQ_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_IF_DETACH = PRIQ_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_PRIQ_MOD_CLASS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PRIQ_MOD_CLASS = PRIQ_MOD_CLASS;$/;"	m	namespace:__sanitizer
IOCTL_PTIOCFREEBSD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PTIOCFREEBSD = PTIOCFREEBSD;$/;"	m	namespace:__sanitizer
IOCTL_PTIOCLINUX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PTIOCLINUX = PTIOCLINUX;$/;"	m	namespace:__sanitizer
IOCTL_PTIOCNETBSD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PTIOCNETBSD = PTIOCNETBSD;$/;"	m	namespace:__sanitizer
IOCTL_PTIOCSUNOS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PTIOCSUNOS = PTIOCSUNOS;$/;"	m	namespace:__sanitizer
IOCTL_PTIOCULTRIX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_PTIOCULTRIX = PTIOCULTRIX;$/;"	m	namespace:__sanitizer
IOCTL_RADIO_GETFREQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RADIO_GETFREQ = RADIO_GETFREQ;$/;"	m	namespace:__sanitizer
IOCTL_RADIO_GETMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RADIO_GETMODE = RADIO_GETMODE;$/;"	m	namespace:__sanitizer
IOCTL_RADIO_SETFREQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RADIO_SETFREQ = RADIO_SETFREQ;$/;"	m	namespace:__sanitizer
IOCTL_RADIO_SETMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RADIO_SETMODE = RADIO_SETMODE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_ABORT_SPARET_WAIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_ABORT_SPARET_WAIT = RAIDFRAME_ABORT_SPARET_WAIT;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_ADD_HOT_SPARE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_ADD_HOT_SPARE = RAIDFRAME_ADD_HOT_SPARE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS_EXT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CHECK_COPYBACK_STATUS_EXT =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CHECK_PARITY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CHECK_PARITY = RAIDFRAME_CHECK_PARITY;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS_EXT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CHECK_PARITYREWRITE_STATUS_EXT =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CHECK_RECON_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CHECK_RECON_STATUS = RAIDFRAME_CHECK_RECON_STATUS;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CHECK_RECON_STATUS_EXT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CHECK_RECON_STATUS_EXT =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_CONFIGURE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_CONFIGURE = RAIDFRAME_CONFIGURE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_COPYBACK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_COPYBACK = RAIDFRAME_COPYBACK;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_DELETE_COMPONENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_DELETE_COMPONENT = RAIDFRAME_DELETE_COMPONENT;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_FAIL_DISK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_FAIL_DISK = RAIDFRAME_FAIL_DISK;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_GET_COMPONENT_LABEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_GET_COMPONENT_LABEL = RAIDFRAME_GET_COMPONENT_LABEL;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_GET_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_GET_INFO = RAIDFRAME_GET_INFO;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_GET_SIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_GET_SIZE = RAIDFRAME_GET_SIZE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_INCORPORATE_HOT_SPARE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_INCORPORATE_HOT_SPARE =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_INIT_LABELS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_INIT_LABELS = RAIDFRAME_INIT_LABELS;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_KEEP_ACCTOTALS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_KEEP_ACCTOTALS = RAIDFRAME_KEEP_ACCTOTALS;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_PARITYMAP_GET_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_GET_DISABLE =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_PARITYMAP_SET_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_SET_DISABLE =$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_PARITYMAP_SET_PARAMS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_SET_PARAMS = RAIDFRAME_PARITYMAP_SET_PARAMS;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_PARITYMAP_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_PARITYMAP_STATUS = RAIDFRAME_PARITYMAP_STATUS;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_REBUILD_IN_PLACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_REBUILD_IN_PLACE = RAIDFRAME_REBUILD_IN_PLACE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_REMOVE_HOT_SPARE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_REMOVE_HOT_SPARE = RAIDFRAME_REMOVE_HOT_SPARE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_RESET_ACCTOTALS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_RESET_ACCTOTALS = RAIDFRAME_RESET_ACCTOTALS;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_REWRITEPARITY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_REWRITEPARITY = RAIDFRAME_REWRITEPARITY;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_SEND_SPARET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_SEND_SPARET = RAIDFRAME_SEND_SPARET;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_SET_AUTOCONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_SET_AUTOCONFIG = RAIDFRAME_SET_AUTOCONFIG;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_SET_COMPONENT_LABEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_SET_COMPONENT_LABEL = RAIDFRAME_SET_COMPONENT_LABEL;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_SET_LAST_UNIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_SET_LAST_UNIT = RAIDFRAME_SET_LAST_UNIT;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_SET_ROOT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_SET_ROOT = RAIDFRAME_SET_ROOT;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_SHUTDOWN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_SHUTDOWN = RAIDFRAME_SHUTDOWN;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_SPARET_WAIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_SPARET_WAIT = RAIDFRAME_SPARET_WAIT;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_START_ATRACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_START_ATRACE = RAIDFRAME_START_ATRACE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_STOP_ATRACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_STOP_ATRACE = RAIDFRAME_STOP_ATRACE;$/;"	m	namespace:__sanitizer
IOCTL_RAIDFRAME_TUR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RAIDFRAME_TUR = RAIDFRAME_TUR;$/;"	m	namespace:__sanitizer
IOCTL_RED_CONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RED_CONFIG = RED_CONFIG;$/;"	m	namespace:__sanitizer
IOCTL_RED_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RED_DISABLE = RED_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_RED_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RED_ENABLE = RED_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_RED_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RED_GETSTATS = RED_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_RED_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RED_IF_ATTACH = RED_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_RED_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RED_IF_DETACH = RED_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_RED_SETDEFAULTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RED_SETDEFAULTS = RED_SETDEFAULTS;$/;"	m	namespace:__sanitizer
IOCTL_REMOTE_GETKEY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_REMOTE_GETKEY = REMOTE_GETKEY;$/;"	m	namespace:__sanitizer
IOCTL_RIOCGINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIOCGINFO = RIOCGINFO;$/;"	m	namespace:__sanitizer
IOCTL_RIOCSINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIOCSINFO = RIOCSINFO;$/;"	m	namespace:__sanitizer
IOCTL_RIOCSSRCH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIOCSSRCH = RIOCSSRCH;$/;"	m	namespace:__sanitizer
IOCTL_RIO_CONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIO_CONFIG = RIO_CONFIG;$/;"	m	namespace:__sanitizer
IOCTL_RIO_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIO_DISABLE = RIO_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_RIO_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIO_ENABLE = RIO_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_RIO_GETSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIO_GETSTATS = RIO_GETSTATS;$/;"	m	namespace:__sanitizer
IOCTL_RIO_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIO_IF_ATTACH = RIO_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_RIO_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIO_IF_DETACH = RIO_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_RIO_SETDEFAULTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RIO_SETDEFAULTS = RIO_SETDEFAULTS;$/;"	m	namespace:__sanitizer
IOCTL_RNDADDDATA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDADDDATA = RNDADDDATA;$/;"	m	namespace:__sanitizer
IOCTL_RNDCTL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDCTL = RNDCTL;$/;"	m	namespace:__sanitizer
IOCTL_RNDGETENTCNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDGETENTCNT = RNDGETENTCNT;$/;"	m	namespace:__sanitizer
IOCTL_RNDGETESTNAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDGETESTNAME = RNDGETESTNAME;$/;"	m	namespace:__sanitizer
IOCTL_RNDGETESTNUM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDGETESTNUM = RNDGETESTNUM;$/;"	m	namespace:__sanitizer
IOCTL_RNDGETPOOLSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDGETPOOLSTAT = RNDGETPOOLSTAT;$/;"	m	namespace:__sanitizer
IOCTL_RNDGETSRCNAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDGETSRCNAME = RNDGETSRCNAME;$/;"	m	namespace:__sanitizer
IOCTL_RNDGETSRCNUM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_RNDGETSRCNUM = RNDGETSRCNUM;$/;"	m	namespace:__sanitizer
IOCTL_SCBUSACCEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCBUSACCEL = SCBUSACCEL;$/;"	m	namespace:__sanitizer
IOCTL_SCBUSIODETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCBUSIODETACH = SCBUSIODETACH;$/;"	m	namespace:__sanitizer
IOCTL_SCBUSIOLLSCAN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCBUSIOLLSCAN = SCBUSIOLLSCAN;$/;"	m	namespace:__sanitizer
IOCTL_SCBUSIORESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCBUSIORESET = SCBUSIORESET;$/;"	m	namespace:__sanitizer
IOCTL_SCBUSIOSCAN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCBUSIOSCAN = SCBUSIOSCAN;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCCOMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCCOMMAND = SCIOCCOMMAND;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCDEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCDEBUG = SCIOCDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCDECONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCDECONFIG = SCIOCDECONFIG;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCGET = SCIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCIDENTIFY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCIDENTIFY = SCIOCIDENTIFY;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCRECONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCRECONFIG = SCIOCRECONFIG;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCRESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCRESET = SCIOCRESET;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCRESTART	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCRESTART = SCIOCRESTART;$/;"	m	namespace:__sanitizer
IOCTL_SCIOCSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOCSET = SCIOCSET;$/;"	m	namespace:__sanitizer
IOCTL_SCIOC_USE_ADF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SCIOC_USE_ADF = SCIOC_USE_ADF;$/;"	m	namespace:__sanitizer
IOCTL_SCSI_IOCTL_GET_IDLUN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SCSI_IOCTL_GET_IDLUN = SCSI_IOCTL_GET_IDLUN;$/;"	m	namespace:__sanitizer
IOCTL_SCSI_IOCTL_PROBE_HOST	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SCSI_IOCTL_PROBE_HOST = SCSI_IOCTL_PROBE_HOST;$/;"	m	namespace:__sanitizer
IOCTL_SCSI_IOCTL_TAGGED_DISABLE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SCSI_IOCTL_TAGGED_DISABLE = SCSI_IOCTL_TAGGED_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_SCSI_IOCTL_TAGGED_ENABLE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SCSI_IOCTL_TAGGED_ENABLE = SCSI_IOCTL_TAGGED_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_CTRLRATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_CTRLRATE = SEQUENCER_CTRLRATE;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_GETINCOUNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_GETINCOUNT = SEQUENCER_GETINCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_GETOUTCOUNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_GETOUTCOUNT = SEQUENCER_GETOUTCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_GETTIME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_GETTIME = SEQUENCER_GETTIME;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_INFO = SEQUENCER_INFO;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_MEMAVL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_MEMAVL = SEQUENCER_MEMAVL;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_NRMIDIS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_NRMIDIS = SEQUENCER_NRMIDIS;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_NRSYNTHS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_NRSYNTHS = SEQUENCER_NRSYNTHS;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_OUTOFBAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_OUTOFBAND = SEQUENCER_OUTOFBAND;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_PANIC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_PANIC = SEQUENCER_PANIC;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_RESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_RESET = SEQUENCER_RESET;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_RESETSAMPLES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_RESETSAMPLES = SEQUENCER_RESETSAMPLES;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_SYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_SYNC = SEQUENCER_SYNC;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_THRESHOLD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_THRESHOLD = SEQUENCER_THRESHOLD;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_CONTINUE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_CONTINUE = SEQUENCER_TMR_CONTINUE;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_METRONOME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_METRONOME = SEQUENCER_TMR_METRONOME;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_SELECT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_SELECT = SEQUENCER_TMR_SELECT;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_SOURCE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_SOURCE = SEQUENCER_TMR_SOURCE;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_START	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_START = SEQUENCER_TMR_START;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_STOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_STOP = SEQUENCER_TMR_STOP;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_TEMPO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_TEMPO = SEQUENCER_TMR_TEMPO;$/;"	m	namespace:__sanitizer
IOCTL_SEQUENCER_TMR_TIMEBASE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SEQUENCER_TMR_TIMEBASE = SEQUENCER_TMR_TIMEBASE;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_GETENCSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_GETENCSTAT = SESIOC_GETENCSTAT;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_GETNOBJ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_GETNOBJ = SESIOC_GETNOBJ;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_GETOBJMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_GETOBJMAP = SESIOC_GETOBJMAP;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_GETOBJSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_GETOBJSTAT = SESIOC_GETOBJSTAT;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_GETTEXT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_GETTEXT = SESIOC_GETTEXT;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_INIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_INIT = SESIOC_INIT;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_SETENCSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_SETENCSTAT = SESIOC_SETENCSTAT;$/;"	m	namespace:__sanitizer
IOCTL_SESIOC_SETOBJSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SESIOC_SETOBJSTAT = SESIOC_SETOBJSTAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAADDRCTL_POLICY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCAADDRCTL_POLICY = SIOCAADDRCTL_POLICY;$/;"	m	namespace:__sanitizer
IOCTL_SIOCADDMULTI	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCADDMULTI = SIOCADDMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCADDMULTI	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCADDMULTI = SIOCADDMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCADDMULTI	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCADDMULTI = SIOCADDMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCADDMULTI	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCADDMULTI = SIOCADDMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCADDRT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCADDRT = SIOCADDRT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCADDRT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCADDRT = SIOCADDRT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCADNAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCADNAT = SIOCADNAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCAIFADDR = SIOCAIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAIPXITFCRT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAIPXITFCRT = SIOCAIPXITFCRT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAIPXPRISLT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAIPXPRISLT = SIOCAIPXPRISLT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCALIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCALIFADDR = SIOCALIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCATMARK	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCATMARK = SIOCATMARK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCATMARK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCATMARK = SIOCATMARK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCATMARK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCATMARK = SIOCATMARK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCATMARK	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCATMARK = SIOCATMARK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAX25ADDUID	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAX25ADDUID = SIOCAX25ADDUID;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAX25DELUID	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAX25DELUID = SIOCAX25DELUID;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAX25GETPARMS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAX25GETPARMS = SIOCAX25GETPARMS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAX25GETUID	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAX25GETUID = SIOCAX25GETUID;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAX25NOUID	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAX25NOUID = SIOCAX25NOUID;$/;"	m	namespace:__sanitizer
IOCTL_SIOCAX25SETPARMS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCAX25SETPARMS = SIOCAX25SETPARMS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCBTDUMP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCBTDUMP = SIOCBTDUMP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCCONNECTX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCCONNECTX = SIOCCONNECTX;$/;"	m	namespace:__sanitizer
IOCTL_SIOCCONNECTXDEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCCONNECTXDEL = SIOCCONNECTXDEL;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDADDRCTL_POLICY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCDADDRCTL_POLICY = SIOCDADDRCTL_POLICY;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDARP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCDARP = SIOCDARP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDELMULTI	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCDELMULTI = SIOCDELMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDELMULTI	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCDELMULTI = SIOCDELMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDELMULTI	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCDELMULTI = SIOCDELMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDELMULTI	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCDELMULTI = SIOCDELMULTI;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDELRT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCDELRT = SIOCDELRT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDELRT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCDELRT = SIOCDELRT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDEVPLIP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCDEVPLIP = SIOCDEVPLIP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCDIFADDR = SIOCDIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDIFPHYADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCDIFPHYADDR = SIOCDIFPHYADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDLIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCDLIFADDR = SIOCDLIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCDRARP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCDRARP = SIOCDRARP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGARP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGARP = SIOCGARP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGATHDIAG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGATHDIAG = SIOCGATHDIAG;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGATHSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGATHSTATS = SIOCGATHSTATS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGBTFEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGBTFEAT = SIOCGBTFEAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGBTINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGBTINFO = SIOCGBTINFO;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGBTINFOA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGBTINFOA = SIOCGBTINFOA;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGBTSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGBTSTATS = SIOCGBTSTATS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGCNWDOMAIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGCNWDOMAIN = SIOCGCNWDOMAIN;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGCNWSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGCNWSTATS = SIOCGCNWSTATS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGCNWSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGCNWSTATUS = SIOCGCNWSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGCNWTRAIL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGCNWTRAIL = SIOCGCNWTRAIL;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGDRVSPEC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGDRVSPEC = SIOCGDRVSPEC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETHERCAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGETHERCAP = SIOCGETHERCAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETPFSYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGETPFSYNC = SIOCGETPFSYNC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETSGCNT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGETSGCNT = SIOCGETSGCNT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETSGCNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGETSGCNT = SIOCGETSGCNT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETSGCNT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGETSGCNT = SIOCGETSGCNT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETVIFCNT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGETVIFCNT = SIOCGETVIFCNT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETVIFCNT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGETVIFCNT = SIOCGETVIFCNT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGETVIFCNT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGETVIFCNT = SIOCGETVIFCNT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGHIWAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGHIWAT = SIOCGHIWAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFADDR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFADDR = SIOCGIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFADDR = SIOCGIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFADDR = SIOCGIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFADDR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFADDR = SIOCGIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFADDRPREF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFADDRPREF = SIOCGIFADDRPREF;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFAFLAG_IN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFAFLAG_IN = SIOCGIFAFLAG_IN;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFALIAS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFALIAS = SIOCGIFALIAS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFBRDADDR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFBRDADDR = SIOCGIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFBRDADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFBRDADDR = SIOCGIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFBRDADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFBRDADDR = SIOCGIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFBRDADDR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFBRDADDR = SIOCGIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFCAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFCAP = SIOCGIFCAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFCONF	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFCONF = SIOCGIFCONF;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFCONF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFCONF = SIOCGIFCONF;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFCONF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFCONF = SIOCGIFCONF;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFCONF	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFCONF = SIOCGIFCONF;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFDATA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFDATA = SIOCGIFDATA;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFDESCR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFDESCR = SIOCGIFDESCR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFDLT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFDLT = SIOCGIFDLT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFDSTADDR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFDSTADDR = SIOCGIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFDSTADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFDSTADDR = SIOCGIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFDSTADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFDSTADDR = SIOCGIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFDSTADDR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFDSTADDR = SIOCGIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFENCAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFENCAP = SIOCGIFENCAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFFLAGS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFFLAGS = SIOCGIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFFLAGS = SIOCGIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFFLAGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFFLAGS = SIOCGIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFFLAGS	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFFLAGS = SIOCGIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFGENERIC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFGENERIC = SIOCGIFGENERIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFHWADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFHWADDR = SIOCGIFHWADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFINDEX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFINDEX = SIOCGIFINDEX;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFMAP = SIOCGIFMAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMEDIA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFMEDIA = SIOCGIFMEDIA;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMEM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFMEM = SIOCGIFMEM;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMETRIC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFMETRIC = SIOCGIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMETRIC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFMETRIC = SIOCGIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMETRIC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFMETRIC = SIOCGIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMETRIC	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFMETRIC = SIOCGIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMTU	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFMTU = SIOCGIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMTU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFMTU = SIOCGIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMTU	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFMTU = SIOCGIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFMTU	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFMTU = SIOCGIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFNAME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFNAME = SIOCGIFNAME;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFNETMASK	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGIFNETMASK = SIOCGIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFNETMASK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFNETMASK = SIOCGIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFNETMASK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFNETMASK = SIOCGIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFNETMASK	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGIFNETMASK = SIOCGIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFPDSTADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFPDSTADDR = SIOCGIFPDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFPSRCADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGIFPSRCADDR = SIOCGIFPSRCADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGIFSLAVE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGIFSLAVE = SIOCGIFSLAVE;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGLIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGLIFADDR = SIOCGLIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGLIFPHYADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGLIFPHYADDR = SIOCGLIFPHYADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGLINKSTR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGLINKSTR = SIOCGLINKSTR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGLOWAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGLOWAT = SIOCGLOWAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGNATL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGNATL = SIOCGNATL;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGNATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGNATS = SIOCGNATS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGPGRP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCGPGRP = SIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGPGRP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGPGRP = SIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGPGRP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGPGRP = SIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGPGRP	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCGPGRP = SIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGPPPCSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGPPPCSTATS = SIOCGPPPCSTATS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGPPPSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGPPPSTATS = SIOCGPPPSTATS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGRARP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGRARP = SIOCGRARP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGRAYSIGLEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGRAYSIGLEV = SIOCGRAYSIGLEV;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGSTAMP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCGSTAMP = SIOCGSTAMP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGUMBINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGUMBINFO = SIOCGUMBINFO;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGUMBPARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGUMBPARAM = SIOCGUMBPARAM;$/;"	m	namespace:__sanitizer
IOCTL_SIOCGVH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCGVH = SIOCGVH;$/;"	m	namespace:__sanitizer
IOCTL_SIOCIFCREATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCIFCREATE = SIOCIFCREATE;$/;"	m	namespace:__sanitizer
IOCTL_SIOCIFDESTROY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCIFDESTROY = SIOCIFDESTROY;$/;"	m	namespace:__sanitizer
IOCTL_SIOCIFGCLONERS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCIFGCLONERS = SIOCIFGCLONERS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCINITIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCINITIFADDR = SIOCINITIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCIPXCFGDATA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCIPXCFGDATA = SIOCIPXCFGDATA;$/;"	m	namespace:__sanitizer
IOCTL_SIOCNBTINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCNBTINFO = SIOCNBTINFO;$/;"	m	namespace:__sanitizer
IOCTL_SIOCNRDECOBS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCNRDECOBS = SIOCNRDECOBS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCNRGETPARMS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCNRGETPARMS = SIOCNRGETPARMS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCNRRTCTL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCNRRTCTL = SIOCNRRTCTL;$/;"	m	namespace:__sanitizer
IOCTL_SIOCNRSETPARMS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCNRSETPARMS = SIOCNRSETPARMS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCPEELOFF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCPEELOFF = SIOCPEELOFF;$/;"	m	namespace:__sanitizer
IOCTL_SIOCPURGENAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCPURGENAT = SIOCPURGENAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCRMNAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCRMNAT = SIOCRMNAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSARP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSARP = SIOCSARP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSBTFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSBTFLAGS = SIOCSBTFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSBTPOLICY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSBTPOLICY = SIOCSBTPOLICY;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSBTPTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSBTPTYPE = SIOCSBTPTYPE;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSBTSCOMTU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSBTSCOMTU = SIOCSBTSCOMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSCNWDOMAIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSCNWDOMAIN = SIOCSCNWDOMAIN;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSCNWKEY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSCNWKEY = SIOCSCNWKEY;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSDRVSPEC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSDRVSPEC = SIOCSDRVSPEC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSETHERCAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSETHERCAP = SIOCSETHERCAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSETPFSYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSETPFSYNC = SIOCSETPFSYNC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSHIWAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSHIWAT = SIOCSHIWAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFADDR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSIFADDR = SIOCSIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFADDR = SIOCSIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFADDR = SIOCSIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFADDR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSIFADDR = SIOCSIFADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFADDRPREF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFADDRPREF = SIOCSIFADDRPREF;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFBRDADDR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSIFBRDADDR = SIOCSIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFBRDADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFBRDADDR = SIOCSIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFBRDADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFBRDADDR = SIOCSIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFBRDADDR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSIFBRDADDR = SIOCSIFBRDADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFCAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFCAP = SIOCSIFCAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFDESCR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFDESCR = SIOCSIFDESCR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFDSTADDR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSIFDSTADDR = SIOCSIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFDSTADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFDSTADDR = SIOCSIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFDSTADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFDSTADDR = SIOCSIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFDSTADDR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSIFDSTADDR = SIOCSIFDSTADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFENCAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFENCAP = SIOCSIFENCAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFFLAGS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSIFFLAGS = SIOCSIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFFLAGS = SIOCSIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFFLAGS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFFLAGS = SIOCSIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFFLAGS	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSIFFLAGS = SIOCSIFFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFGENERIC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFGENERIC = SIOCSIFGENERIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFHWADDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFHWADDR = SIOCSIFHWADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFINFO_FLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFINFO_FLAGS = SIOCSIFINFO_FLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFLINK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFLINK = SIOCSIFLINK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMAP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFMAP = SIOCSIFMAP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMEDIA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFMEDIA = SIOCSIFMEDIA;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMEM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFMEM = SIOCSIFMEM;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMETRIC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSIFMETRIC = SIOCSIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMETRIC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFMETRIC = SIOCSIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMETRIC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFMETRIC = SIOCSIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMETRIC	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSIFMETRIC = SIOCSIFMETRIC;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMTU	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSIFMTU = SIOCSIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMTU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFMTU = SIOCSIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMTU	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFMTU = SIOCSIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFMTU	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSIFMTU = SIOCSIFMTU;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFNETMASK	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSIFNETMASK = SIOCSIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFNETMASK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFNETMASK = SIOCSIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFNETMASK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFNETMASK = SIOCSIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFNETMASK	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSIFNETMASK = SIOCSIFNETMASK;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFPHYADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSIFPHYADDR = SIOCSIFPHYADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSIFSLAVE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSIFSLAVE = SIOCSIFSLAVE;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSLIFPHYADDR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSLIFPHYADDR = SIOCSLIFPHYADDR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSLINKSTR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSLINKSTR = SIOCSLINKSTR;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSLOWAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSLOWAT = SIOCSLOWAT;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSPGRP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SIOCSPGRP = SIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSPGRP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSPGRP = SIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSPGRP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSPGRP = SIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSPGRP	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_SIOCSPGRP = SIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSRARP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SIOCSRARP = SIOCSRARP;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSUMBPARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSUMBPARAM = SIOCSUMBPARAM;$/;"	m	namespace:__sanitizer
IOCTL_SIOCSVH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCSVH = SIOCSVH;$/;"	m	namespace:__sanitizer
IOCTL_SIOCZBTSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCZBTSTATS = SIOCZBTSTATS;$/;"	m	namespace:__sanitizer
IOCTL_SIOCZIFDATA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SIOCZIFDATA = SIOCZIFDATA;$/;"	m	namespace:__sanitizer
IOCTL_SLIOCGUNIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SLIOCGUNIT = SLIOCGUNIT;$/;"	m	namespace:__sanitizer
IOCTL_SMBIOC_LOOKUP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SMBIOC_LOOKUP = SMBIOC_LOOKUP;$/;"	m	namespace:__sanitizer
IOCTL_SMBIOC_OPENSESSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SMBIOC_OPENSESSION = SMBIOC_OPENSESSION;$/;"	m	namespace:__sanitizer
IOCTL_SMBIOC_OPENSHARE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SMBIOC_OPENSHARE = SMBIOC_OPENSHARE;$/;"	m	namespace:__sanitizer
IOCTL_SMBIOC_READ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SMBIOC_READ = SMBIOC_READ;$/;"	m	namespace:__sanitizer
IOCTL_SMBIOC_REQUEST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SMBIOC_REQUEST = SMBIOC_REQUEST;$/;"	m	namespace:__sanitizer
IOCTL_SMBIOC_SETFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SMBIOC_SETFLAGS = SMBIOC_SETFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SMBIOC_WRITE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SMBIOC_WRITE = SMBIOC_WRITE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_AUDIOINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_AUDIOINFO = SNDCTL_AUDIOINFO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_HALT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_HALT = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_HALT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_HALT = SNDCTL_COPR_HALT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_LOAD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_LOAD = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_LOAD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_LOAD = SNDCTL_COPR_LOAD;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RCODE = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RCODE = SNDCTL_COPR_RCODE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RCVMSG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RCVMSG = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RCVMSG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RCVMSG = SNDCTL_COPR_RCVMSG;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RDATA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RDATA = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RDATA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RDATA = SNDCTL_COPR_RDATA;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RESET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RESET = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RESET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RESET = SNDCTL_COPR_RESET;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RUN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RUN = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_RUN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_RUN = SNDCTL_COPR_RUN;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_SENDMSG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_SENDMSG = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_SENDMSG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_SENDMSG = SNDCTL_COPR_SENDMSG;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_WCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_WCODE = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_WCODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_WCODE = SNDCTL_COPR_WCODE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_WDATA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_WDATA = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_COPR_WDATA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_COPR_WDATA = SNDCTL_COPR_WDATA;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_CHANNELS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_CHANNELS = SNDCTL_DSP_CHANNELS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETBLKSIZE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETBLKSIZE = SNDCTL_DSP_GETBLKSIZE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETBLKSIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETBLKSIZE = SNDCTL_DSP_GETBLKSIZE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETBLKSIZE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_GETBLKSIZE = SNDCTL_DSP_GETBLKSIZE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETCAPS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETCAPS = SNDCTL_DSP_GETCAPS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETFMTS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETFMTS = SNDCTL_DSP_GETFMTS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETFMTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETFMTS = SNDCTL_DSP_GETFMTS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETFMTS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_GETFMTS = SNDCTL_DSP_GETFMTS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETIPTR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETIPTR = SNDCTL_DSP_GETIPTR;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETISPACE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETISPACE = SNDCTL_DSP_GETISPACE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETISPACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETISPACE = SNDCTL_DSP_GETISPACE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETISPACE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_GETISPACE = SNDCTL_DSP_GETISPACE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETODELAY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETODELAY = SNDCTL_DSP_GETODELAY;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETOPTR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETOPTR = SNDCTL_DSP_GETOPTR;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETOSPACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETOSPACE = SNDCTL_DSP_GETOSPACE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETOSPACE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_GETOSPACE = SNDCTL_DSP_GETOSPACE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETPLAYVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETPLAYVOL = SNDCTL_DSP_GETPLAYVOL;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETRECVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETRECVOL = SNDCTL_DSP_GETRECVOL;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_GETTRIGGER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_GETTRIGGER = SNDCTL_DSP_GETTRIGGER;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_MAPINBUF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_MAPINBUF = SNDCTL_DSP_MAPINBUF;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_MAPOUTBUF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_MAPOUTBUF = SNDCTL_DSP_MAPOUTBUF;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_NONBLOCK	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_NONBLOCK = SNDCTL_DSP_NONBLOCK;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_NONBLOCK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_NONBLOCK = SNDCTL_DSP_NONBLOCK;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_NONBLOCK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_NONBLOCK = SNDCTL_DSP_NONBLOCK;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_POST	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_POST = SNDCTL_DSP_POST;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_POST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_POST = SNDCTL_DSP_POST;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_POST	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_POST = SNDCTL_DSP_POST;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_PROFILE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_PROFILE = SNDCTL_DSP_PROFILE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_RESET	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_RESET = SNDCTL_DSP_RESET;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_RESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_RESET = SNDCTL_DSP_RESET;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_RESET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_RESET = SNDCTL_DSP_RESET;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETDUPLEX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETDUPLEX = SNDCTL_DSP_SETDUPLEX;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETFMT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETFMT = SNDCTL_DSP_SETFMT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETFMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETFMT = SNDCTL_DSP_SETFMT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETFMT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_SETFMT = SNDCTL_DSP_SETFMT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETFRAGMENT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETFRAGMENT = SNDCTL_DSP_SETFRAGMENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETFRAGMENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETFRAGMENT = SNDCTL_DSP_SETFRAGMENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETFRAGMENT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_SETFRAGMENT = SNDCTL_DSP_SETFRAGMENT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETPLAYVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETPLAYVOL = SNDCTL_DSP_SETPLAYVOL;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETRECVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETRECVOL = SNDCTL_DSP_SETRECVOL;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETSYNCRO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETSYNCRO = SNDCTL_DSP_SETSYNCRO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SETTRIGGER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SETTRIGGER = SNDCTL_DSP_SETTRIGGER;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SILENCE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SILENCE = SNDCTL_DSP_SILENCE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SKIP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SKIP = SNDCTL_DSP_SKIP;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SPEED	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SPEED = SNDCTL_DSP_SPEED;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SPEED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SPEED = SNDCTL_DSP_SPEED;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SPEED	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_SPEED = SNDCTL_DSP_SPEED;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_STEREO	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_STEREO = SNDCTL_DSP_STEREO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_STEREO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_STEREO = SNDCTL_DSP_STEREO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_STEREO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_STEREO = SNDCTL_DSP_STEREO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SUBDIVIDE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SUBDIVIDE = SNDCTL_DSP_SUBDIVIDE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SUBDIVIDE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SUBDIVIDE = SNDCTL_DSP_SUBDIVIDE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SUBDIVIDE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_SUBDIVIDE = SNDCTL_DSP_SUBDIVIDE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SYNC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SYNC = SNDCTL_DSP_SYNC;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SYNC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_DSP_SYNC = SNDCTL_DSP_SYNC;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_DSP_SYNC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_DSP_SYNC = SNDCTL_DSP_SYNC;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_ENGINEINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_ENGINEINFO = SNDCTL_ENGINEINFO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_FM_4OP_ENABLE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_FM_4OP_ENABLE = SNDCTL_FM_4OP_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_FM_4OP_ENABLE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_FM_4OP_ENABLE = SNDCTL_FM_4OP_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_FM_LOAD_INSTR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_FM_LOAD_INSTR = SNDCTL_FM_LOAD_INSTR;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_FM_LOAD_INSTR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_FM_LOAD_INSTR = SNDCTL_FM_LOAD_INSTR;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_MIDI_INFO	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_MIDI_INFO = SNDCTL_MIDI_INFO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_MIDI_INFO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_MIDI_INFO = SNDCTL_MIDI_INFO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_MIDI_PRETIME	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_MIDI_PRETIME = SNDCTL_MIDI_PRETIME;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_MIDI_PRETIME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_MIDI_PRETIME = SNDCTL_MIDI_PRETIME;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_CTRLRATE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_CTRLRATE = SNDCTL_SEQ_CTRLRATE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_CTRLRATE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_CTRLRATE = SNDCTL_SEQ_CTRLRATE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_GETINCOUNT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_GETINCOUNT = SNDCTL_SEQ_GETINCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_GETINCOUNT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_GETINCOUNT = SNDCTL_SEQ_GETINCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_GETOUTCOUNT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_GETOUTCOUNT = SNDCTL_SEQ_GETOUTCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_GETOUTCOUNT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_GETOUTCOUNT = SNDCTL_SEQ_GETOUTCOUNT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_NRMIDIS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_NRMIDIS = SNDCTL_SEQ_NRMIDIS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_NRMIDIS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_NRMIDIS = SNDCTL_SEQ_NRMIDIS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_NRSYNTHS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_NRSYNTHS = SNDCTL_SEQ_NRSYNTHS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_NRSYNTHS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_NRSYNTHS = SNDCTL_SEQ_NRSYNTHS;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_OUTOFBAND	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_OUTOFBAND = SNDCTL_SEQ_OUTOFBAND;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_OUTOFBAND	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_OUTOFBAND = SNDCTL_SEQ_OUTOFBAND;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_PANIC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_PANIC = SNDCTL_SEQ_PANIC;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_PANIC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_PANIC = SNDCTL_SEQ_PANIC;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_PERCMODE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_PERCMODE = SNDCTL_SEQ_PERCMODE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_PERCMODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_PERCMODE = SNDCTL_SEQ_PERCMODE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_RESET	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_RESET = SNDCTL_SEQ_RESET;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_RESET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_RESET = SNDCTL_SEQ_RESET;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_RESETSAMPLES	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_RESETSAMPLES = SNDCTL_SEQ_RESETSAMPLES;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_RESETSAMPLES	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_RESETSAMPLES = SNDCTL_SEQ_RESETSAMPLES;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_SYNC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_SYNC = SNDCTL_SEQ_SYNC;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_SYNC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_SYNC = SNDCTL_SEQ_SYNC;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_TESTMIDI	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_TESTMIDI = SNDCTL_SEQ_TESTMIDI;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_TESTMIDI	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_TESTMIDI = SNDCTL_SEQ_TESTMIDI;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_THRESHOLD	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SEQ_THRESHOLD = SNDCTL_SEQ_THRESHOLD;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SEQ_THRESHOLD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SEQ_THRESHOLD = SNDCTL_SEQ_THRESHOLD;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SYNTH_INFO	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SYNTH_INFO = SNDCTL_SYNTH_INFO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SYNTH_INFO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SYNTH_INFO = SNDCTL_SYNTH_INFO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SYNTH_MEMAVL	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_SYNTH_MEMAVL = SNDCTL_SYNTH_MEMAVL;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SYNTH_MEMAVL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_SYNTH_MEMAVL = SNDCTL_SYNTH_MEMAVL;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_SYSINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SNDCTL_SYSINFO = SNDCTL_SYSINFO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_CONTINUE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_CONTINUE = SNDCTL_TMR_CONTINUE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_CONTINUE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_CONTINUE = SNDCTL_TMR_CONTINUE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_METRONOME	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_METRONOME = SNDCTL_TMR_METRONOME;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_METRONOME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_METRONOME = SNDCTL_TMR_METRONOME;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_SELECT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_SELECT = SNDCTL_TMR_SELECT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_SELECT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_SELECT = SNDCTL_TMR_SELECT;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_SOURCE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_SOURCE = SNDCTL_TMR_SOURCE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_SOURCE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_SOURCE = SNDCTL_TMR_SOURCE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_START	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_START = SNDCTL_TMR_START;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_START	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_START = SNDCTL_TMR_START;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_STOP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_STOP = SNDCTL_TMR_STOP;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_STOP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_STOP = SNDCTL_TMR_STOP;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_TEMPO	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_TEMPO = SNDCTL_TMR_TEMPO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_TEMPO	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_TEMPO = SNDCTL_TMR_TEMPO;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_TIMEBASE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SNDCTL_TMR_TIMEBASE = SNDCTL_TMR_TIMEBASE;$/;"	m	namespace:__sanitizer
IOCTL_SNDCTL_TMR_TIMEBASE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SNDCTL_TMR_TIMEBASE = SNDCTL_TMR_TIMEBASE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SOUND_MIXER_INFO = SOUND_MIXER_INFO;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_ALTPCM	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_ALTPCM = SOUND_MIXER_READ_ALTPCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_ALTPCM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_ALTPCM = SOUND_MIXER_READ_ALTPCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_BASS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_BASS = SOUND_MIXER_READ_BASS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_BASS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_BASS = SOUND_MIXER_READ_BASS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_CAPS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_CAPS = SOUND_MIXER_READ_CAPS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_CAPS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_CAPS = SOUND_MIXER_READ_CAPS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_CD	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_CD = SOUND_MIXER_READ_CD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_CD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_CD = SOUND_MIXER_READ_CD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_DEVMASK	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_DEVMASK = SOUND_MIXER_READ_DEVMASK;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_DEVMASK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_DEVMASK = SOUND_MIXER_READ_DEVMASK;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_ENHANCE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_ENHANCE = SOUND_MIXER_READ_ENHANCE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_ENHANCE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_ENHANCE = SOUND_MIXER_READ_ENHANCE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_IGAIN	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_IGAIN = SOUND_MIXER_READ_IGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_IGAIN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_IGAIN = SOUND_MIXER_READ_IGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_IMIX	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_IMIX = SOUND_MIXER_READ_IMIX;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_IMIX	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_IMIX = SOUND_MIXER_READ_IMIX;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_LINE = SOUND_MIXER_READ_LINE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE = SOUND_MIXER_READ_LINE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE1	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_LINE1 = SOUND_MIXER_READ_LINE1;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE1	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE1 = SOUND_MIXER_READ_LINE1;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE2	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_LINE2 = SOUND_MIXER_READ_LINE2;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE2	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE2 = SOUND_MIXER_READ_LINE2;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE3	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_LINE3 = SOUND_MIXER_READ_LINE3;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LINE3	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_LINE3 = SOUND_MIXER_READ_LINE3;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LOUD	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_LOUD = SOUND_MIXER_READ_LOUD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_LOUD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_LOUD = SOUND_MIXER_READ_LOUD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_MIC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_MIC = SOUND_MIXER_READ_MIC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_MIC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_MIC = SOUND_MIXER_READ_MIC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_MUTE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_MUTE = SOUND_MIXER_READ_MUTE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_MUTE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_MUTE = SOUND_MIXER_READ_MUTE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_OGAIN	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_OGAIN = SOUND_MIXER_READ_OGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_OGAIN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_OGAIN = SOUND_MIXER_READ_OGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_PCM	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_PCM = SOUND_MIXER_READ_PCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_PCM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_PCM = SOUND_MIXER_READ_PCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_RECLEV	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_RECLEV = SOUND_MIXER_READ_RECLEV;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_RECLEV	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_RECLEV = SOUND_MIXER_READ_RECLEV;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_RECMASK	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_RECMASK = SOUND_MIXER_READ_RECMASK;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_RECMASK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_RECMASK = SOUND_MIXER_READ_RECMASK;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_RECSRC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_RECSRC = SOUND_MIXER_READ_RECSRC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_RECSRC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_RECSRC = SOUND_MIXER_READ_RECSRC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_SPEAKER	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_SPEAKER = SOUND_MIXER_READ_SPEAKER;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_SPEAKER	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_SPEAKER = SOUND_MIXER_READ_SPEAKER;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_STEREODEVS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_STEREODEVS = SOUND_MIXER_READ_STEREODEVS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_STEREODEVS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_STEREODEVS = SOUND_MIXER_READ_STEREODEVS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_SYNTH	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_SYNTH = SOUND_MIXER_READ_SYNTH;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_SYNTH	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_SYNTH = SOUND_MIXER_READ_SYNTH;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_TREBLE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_TREBLE = SOUND_MIXER_READ_TREBLE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_TREBLE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_TREBLE = SOUND_MIXER_READ_TREBLE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_VOLUME	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_READ_VOLUME = SOUND_MIXER_READ_VOLUME;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_READ_VOLUME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_READ_VOLUME = SOUND_MIXER_READ_VOLUME;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_ALTPCM	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_ALTPCM = SOUND_MIXER_WRITE_ALTPCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_ALTPCM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_ALTPCM = SOUND_MIXER_WRITE_ALTPCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_BASS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_BASS = SOUND_MIXER_WRITE_BASS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_BASS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_BASS = SOUND_MIXER_WRITE_BASS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_CD	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_CD = SOUND_MIXER_WRITE_CD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_CD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_CD = SOUND_MIXER_WRITE_CD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_ENHANCE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_ENHANCE = SOUND_MIXER_WRITE_ENHANCE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_ENHANCE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_ENHANCE = SOUND_MIXER_WRITE_ENHANCE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_IGAIN	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_IGAIN = SOUND_MIXER_WRITE_IGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_IGAIN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_IGAIN = SOUND_MIXER_WRITE_IGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_IMIX	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_IMIX = SOUND_MIXER_WRITE_IMIX;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_IMIX	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_IMIX = SOUND_MIXER_WRITE_IMIX;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_LINE = SOUND_MIXER_WRITE_LINE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE = SOUND_MIXER_WRITE_LINE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE1	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_LINE1 = SOUND_MIXER_WRITE_LINE1;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE1	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE1 = SOUND_MIXER_WRITE_LINE1;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE2	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_LINE2 = SOUND_MIXER_WRITE_LINE2;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE2	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE2 = SOUND_MIXER_WRITE_LINE2;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE3	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_LINE3 = SOUND_MIXER_WRITE_LINE3;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LINE3	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LINE3 = SOUND_MIXER_WRITE_LINE3;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LOUD	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_LOUD = SOUND_MIXER_WRITE_LOUD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_LOUD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_LOUD = SOUND_MIXER_WRITE_LOUD;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_MIC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_MIC = SOUND_MIXER_WRITE_MIC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_MIC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_MIC = SOUND_MIXER_WRITE_MIC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_MUTE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_MUTE = SOUND_MIXER_WRITE_MUTE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_MUTE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_MUTE = SOUND_MIXER_WRITE_MUTE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_OGAIN	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_OGAIN = SOUND_MIXER_WRITE_OGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_OGAIN	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_OGAIN = SOUND_MIXER_WRITE_OGAIN;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_PCM	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_PCM = SOUND_MIXER_WRITE_PCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_PCM	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_PCM = SOUND_MIXER_WRITE_PCM;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_RECLEV	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_RECLEV = SOUND_MIXER_WRITE_RECLEV;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_RECLEV	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_RECLEV = SOUND_MIXER_WRITE_RECLEV;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_RECSRC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_RECSRC = SOUND_MIXER_WRITE_RECSRC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_RECSRC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_RECSRC = SOUND_MIXER_WRITE_RECSRC;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_SPEAKER	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_SPEAKER = SOUND_MIXER_WRITE_SPEAKER;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_SPEAKER	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_SPEAKER = SOUND_MIXER_WRITE_SPEAKER;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_SYNTH	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_SYNTH = SOUND_MIXER_WRITE_SYNTH;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_SYNTH	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_SYNTH = SOUND_MIXER_WRITE_SYNTH;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_TREBLE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_TREBLE = SOUND_MIXER_WRITE_TREBLE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_TREBLE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_TREBLE = SOUND_MIXER_WRITE_TREBLE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_VOLUME	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_SOUND_MIXER_WRITE_VOLUME = SOUND_MIXER_WRITE_VOLUME;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_MIXER_WRITE_VOLUME	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_MIXER_WRITE_VOLUME = SOUND_MIXER_WRITE_VOLUME;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_OLD_MIXER_INFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SOUND_OLD_MIXER_INFO = SOUND_OLD_MIXER_INFO;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_BITS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SOUND_PCM_READ_BITS = SOUND_PCM_READ_BITS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_BITS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_BITS = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_BITS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_BITS = SOUND_PCM_READ_BITS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_CHANNELS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SOUND_PCM_READ_CHANNELS = SOUND_PCM_READ_CHANNELS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_CHANNELS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_CHANNELS = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_CHANNELS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_CHANNELS = SOUND_PCM_READ_CHANNELS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SOUND_PCM_READ_FILTER = SOUND_PCM_READ_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_FILTER	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_FILTER = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_FILTER	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_FILTER = SOUND_PCM_READ_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_RATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SOUND_PCM_READ_RATE = SOUND_PCM_READ_RATE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_RATE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_RATE = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_READ_RATE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_READ_RATE = SOUND_PCM_READ_RATE;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_WRITE_CHANNELS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_WRITE_CHANNELS = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_WRITE_CHANNELS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_WRITE_CHANNELS = SOUND_PCM_WRITE_CHANNELS;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_WRITE_FILTER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SOUND_PCM_WRITE_FILTER = SOUND_PCM_WRITE_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_WRITE_FILTER	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_WRITE_FILTER = IOCTL_NOT_PRESENT;$/;"	m	namespace:__sanitizer
IOCTL_SOUND_PCM_WRITE_FILTER	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_SOUND_PCM_WRITE_FILTER = SOUND_PCM_WRITE_FILTER;$/;"	m	namespace:__sanitizer
IOCTL_SPI_IOCTL_CONFIGURE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPI_IOCTL_CONFIGURE = SPI_IOCTL_CONFIGURE;$/;"	m	namespace:__sanitizer
IOCTL_SPI_IOCTL_TRANSFER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPI_IOCTL_TRANSFER = SPI_IOCTL_TRANSFER;$/;"	m	namespace:__sanitizer
IOCTL_SPKRGETVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPKRGETVOL = SPKRGETVOL;$/;"	m	namespace:__sanitizer
IOCTL_SPKRSETVOL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPKRSETVOL = SPKRSETVOL;$/;"	m	namespace:__sanitizer
IOCTL_SPKRTONE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPKRTONE = SPKRTONE;$/;"	m	namespace:__sanitizer
IOCTL_SPKRTUNE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPKRTUNE = SPKRTUNE;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETAUTHCFG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETAUTHCFG = SPPPGETAUTHCFG;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETAUTHFAILURES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETAUTHFAILURES = SPPPGETAUTHFAILURES;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETDNSADDRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETDNSADDRS = SPPPGETDNSADDRS;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETDNSOPTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETDNSOPTS = SPPPGETDNSOPTS;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETIDLETO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETIDLETO = SPPPGETIDLETO;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETKEEPALIVE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETKEEPALIVE = SPPPGETKEEPALIVE;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETLCPCFG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETLCPCFG = SPPPGETLCPCFG;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETSTATUS = SPPPGETSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_SPPPGETSTATUSNCP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPGETSTATUSNCP = SPPPGETSTATUSNCP;$/;"	m	namespace:__sanitizer
IOCTL_SPPPSETAUTHCFG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPSETAUTHCFG = SPPPSETAUTHCFG;$/;"	m	namespace:__sanitizer
IOCTL_SPPPSETAUTHFAILURE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPSETAUTHFAILURE = SPPPSETAUTHFAILURE;$/;"	m	namespace:__sanitizer
IOCTL_SPPPSETDNSOPTS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPSETDNSOPTS = SPPPSETDNSOPTS;$/;"	m	namespace:__sanitizer
IOCTL_SPPPSETIDLETO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPSETIDLETO = SPPPSETIDLETO;$/;"	m	namespace:__sanitizer
IOCTL_SPPPSETKEEPALIVE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPSETKEEPALIVE = SPPPSETKEEPALIVE;$/;"	m	namespace:__sanitizer
IOCTL_SPPPSETLCPCFG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SPPPSETLCPCFG = SPPPSETLCPCFG;$/;"	m	namespace:__sanitizer
IOCTL_SRT_DEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_DEBUG = SRT_DEBUG;$/;"	m	namespace:__sanitizer
IOCTL_SRT_DELRT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_DELRT = SRT_DELRT;$/;"	m	namespace:__sanitizer
IOCTL_SRT_GETNRT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_GETNRT = SRT_GETNRT;$/;"	m	namespace:__sanitizer
IOCTL_SRT_GETRT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_GETRT = SRT_GETRT;$/;"	m	namespace:__sanitizer
IOCTL_SRT_GFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_GFLAGS = SRT_GFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SRT_SETRT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_SETRT = SRT_SETRT;$/;"	m	namespace:__sanitizer
IOCTL_SRT_SFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_SFLAGS = SRT_SFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_SRT_SGFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SRT_SGFLAGS = SRT_SGFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_STICIO_GXINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_STICIO_GXINFO = STICIO_GXINFO;$/;"	m	namespace:__sanitizer
IOCTL_STICIO_RESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_STICIO_RESET = STICIO_RESET;$/;"	m	namespace:__sanitizer
IOCTL_STICIO_STARTQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_STICIO_STARTQ = STICIO_STARTQ;$/;"	m	namespace:__sanitizer
IOCTL_STICIO_STOPQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_STICIO_STOPQ = STICIO_STOPQ;$/;"	m	namespace:__sanitizer
IOCTL_SUN_DKIOCGGEOM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SUN_DKIOCGGEOM = SUN_DKIOCGGEOM;$/;"	m	namespace:__sanitizer
IOCTL_SUN_DKIOCGPART	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SUN_DKIOCGPART = SUN_DKIOCGPART;$/;"	m	namespace:__sanitizer
IOCTL_SUN_DKIOCINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_SUN_DKIOCINFO = SUN_DKIOCINFO;$/;"	m	namespace:__sanitizer
IOCTL_TAPGIFNAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TAPGIFNAME = TAPGIFNAME;$/;"	m	namespace:__sanitizer
IOCTL_TCFLSH	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCFLSH = TCFLSH;$/;"	m	namespace:__sanitizer
IOCTL_TCGETA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCGETA = TCGETA;$/;"	m	namespace:__sanitizer
IOCTL_TCGETS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCGETS = TCGETS;$/;"	m	namespace:__sanitizer
IOCTL_TCSBRK	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSBRK = TCSBRK;$/;"	m	namespace:__sanitizer
IOCTL_TCSBRKP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSBRKP = TCSBRKP;$/;"	m	namespace:__sanitizer
IOCTL_TCSETA	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSETA = TCSETA;$/;"	m	namespace:__sanitizer
IOCTL_TCSETAF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSETAF = TCSETAF;$/;"	m	namespace:__sanitizer
IOCTL_TCSETAW	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSETAW = TCSETAW;$/;"	m	namespace:__sanitizer
IOCTL_TCSETS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSETS = TCSETS;$/;"	m	namespace:__sanitizer
IOCTL_TCSETSF	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSETSF = TCSETSF;$/;"	m	namespace:__sanitizer
IOCTL_TCSETSW	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCSETSW = TCSETSW;$/;"	m	namespace:__sanitizer
IOCTL_TCXONC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TCXONC = TCXONC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCCBRK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCCBRK = TIOCCBRK;$/;"	m	namespace:__sanitizer
IOCTL_TIOCCDTR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCCDTR = TIOCCDTR;$/;"	m	namespace:__sanitizer
IOCTL_TIOCCONS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCCONS = TIOCCONS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCCONS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCCONS = TIOCCONS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCCONS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCCONS = TIOCCONS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCDCDTIMESTAMP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCDCDTIMESTAMP = TIOCDCDTIMESTAMP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCDRAIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCDRAIN = TIOCDRAIN;$/;"	m	namespace:__sanitizer
IOCTL_TIOCEXCL	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCEXCL = TIOCEXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCEXCL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCEXCL = TIOCEXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCEXCL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCEXCL = TIOCEXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCEXCL	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCEXCL = TIOCEXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCEXT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCEXT = TIOCEXT;$/;"	m	namespace:__sanitizer
IOCTL_TIOCFLUSH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCFLUSH = TIOCFLUSH;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGETA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGETA = TIOCGETA;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGETC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGETC = TIOCGETC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGETD	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCGETD = TIOCGETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGETD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGETD = TIOCGETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGETD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCGETD = TIOCGETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGETD	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCGETD = TIOCGETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGETP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGETP = TIOCGETP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGFLAGS = TIOCGFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGLCKTRMIOS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCGLCKTRMIOS = TIOCGLCKTRMIOS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGLINED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGLINED = TIOCGLINED;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGLTC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGLTC = TIOCGLTC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGPGRP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCGPGRP = TIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGPGRP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGPGRP = TIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGPGRP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCGPGRP = TIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGPGRP	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCGPGRP = TIOCGPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGQSIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGQSIZE = TIOCGQSIZE;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGRANTPT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGRANTPT = TIOCGRANTPT;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGSERIAL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCGSERIAL = TIOCGSERIAL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGSID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGSID = TIOCGSID;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGSOFTCAR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCGSOFTCAR = TIOCGSOFTCAR;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGWINSZ	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCGWINSZ = TIOCGWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGWINSZ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCGWINSZ = TIOCGWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGWINSZ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCGWINSZ = TIOCGWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCGWINSZ	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCGWINSZ = TIOCGWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCHPCL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCHPCL = TIOCHPCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCINQ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCINQ = TIOCINQ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCLBIC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCLBIC = TIOCLBIC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCLBIS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCLBIS = TIOCLBIS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCLGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCLGET = TIOCLGET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCLINUX	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCLINUX = TIOCLINUX;$/;"	m	namespace:__sanitizer
IOCTL_TIOCLSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCLSET = TIOCLSET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIC	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCMBIC = TIOCMBIC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCMBIC = TIOCMBIC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIC	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCMBIC = TIOCMBIC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIC	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCMBIC = TIOCMBIC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIS	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCMBIS = TIOCMBIS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCMBIS = TIOCMBIS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCMBIS = TIOCMBIS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMBIS	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCMBIS = TIOCMBIS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMGET	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCMGET = TIOCMGET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCMGET = TIOCMGET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMGET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCMGET = TIOCMGET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMGET	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCMGET = TIOCMGET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMSET	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCMSET = TIOCMSET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCMSET = TIOCMSET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMSET	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCMSET = TIOCMSET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCMSET	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCMSET = TIOCMSET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNOTTY	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCNOTTY = TIOCNOTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNOTTY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCNOTTY = TIOCNOTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNOTTY	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCNOTTY = TIOCNOTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNOTTY	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCNOTTY = TIOCNOTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNXCL	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCNXCL = TIOCNXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNXCL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCNXCL = TIOCNXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNXCL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCNXCL = TIOCNXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCNXCL	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCNXCL = TIOCNXCL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCOUTQ	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCOUTQ = TIOCOUTQ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCOUTQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCOUTQ = TIOCOUTQ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCOUTQ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCOUTQ = TIOCOUTQ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCOUTQ	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCOUTQ = TIOCOUTQ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCPKT	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCPKT = TIOCPKT;$/;"	m	namespace:__sanitizer
IOCTL_TIOCPKT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCPKT = TIOCPKT;$/;"	m	namespace:__sanitizer
IOCTL_TIOCPKT	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCPKT = TIOCPKT;$/;"	m	namespace:__sanitizer
IOCTL_TIOCPKT	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCPKT = TIOCPKT;$/;"	m	namespace:__sanitizer
IOCTL_TIOCPTMGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCPTMGET = TIOCPTMGET;$/;"	m	namespace:__sanitizer
IOCTL_TIOCPTSNAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCPTSNAME = TIOCPTSNAME;$/;"	m	namespace:__sanitizer
IOCTL_TIOCRCVFRAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCRCVFRAME = TIOCRCVFRAME;$/;"	m	namespace:__sanitizer
IOCTL_TIOCREMOTE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCREMOTE = TIOCREMOTE;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSBRK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSBRK = TIOCSBRK;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSCTTY	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCSCTTY = TIOCSCTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSCTTY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSCTTY = TIOCSCTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSCTTY	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSCTTY = TIOCSCTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSCTTY	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCSCTTY = TIOCSCTTY;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSDTR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSDTR = TIOCSDTR;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSERCONFIG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSERCONFIG = TIOCSERCONFIG;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSERGETLSR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSERGETLSR = TIOCSERGETLSR;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSERGETMULTI	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSERGETMULTI = TIOCSERGETMULTI;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSERGWILD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSERGWILD = TIOCSERGWILD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSERSETMULTI	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSERSETMULTI = TIOCSERSETMULTI;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSERSWILD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSERSWILD = TIOCSERSWILD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSETA = TIOCSETA;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETAF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSETAF = TIOCSETAF;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETAW	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSETAW = TIOCSETAW;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSETC = TIOCSETC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETD	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCSETD = TIOCSETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSETD = TIOCSETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETD	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSETD = TIOCSETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETD	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCSETD = TIOCSETD;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSETN = TIOCSETN;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSETP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSETP = TIOCSETP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSFLAGS = TIOCSFLAGS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSIG = TIOCSIG;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSLCKTRMIOS	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSLCKTRMIOS = TIOCSLCKTRMIOS;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSLINED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSLINED = TIOCSLINED;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSLTC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSLTC = TIOCSLTC;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSPGRP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCSPGRP = TIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSPGRP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSPGRP = TIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSPGRP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSPGRP = TIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSPGRP	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCSPGRP = TIOCSPGRP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSQSIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSQSIZE = TIOCSQSIZE;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSSERIAL	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSSERIAL = TIOCSSERIAL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSSOFTCAR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSSOFTCAR = TIOCSSOFTCAR;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSTART	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSTART = TIOCSTART;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSTAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSTAT = TIOCSTAT;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSTI	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCSTI = TIOCSTI;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSTI	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSTI = TIOCSTI;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSTI	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSTI = TIOCSTI;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSTI	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCSTI = TIOCSTI;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSTOP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSTOP = TIOCSTOP;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSWINSZ	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_TIOCSWINSZ = TIOCSWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSWINSZ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCSWINSZ = TIOCSWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSWINSZ	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_TIOCSWINSZ = TIOCSWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCSWINSZ	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned IOCTL_TIOCSWINSZ = TIOCSWINSZ;$/;"	m	namespace:__sanitizer
IOCTL_TIOCUCNTL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCUCNTL = TIOCUCNTL;$/;"	m	namespace:__sanitizer
IOCTL_TIOCXMTFRAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TIOCXMTFRAME = TIOCXMTFRAME;$/;"	m	namespace:__sanitizer
IOCTL_TUNGDEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TUNGDEBUG = TUNGDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_TUNGIFHEAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TUNGIFHEAD = TUNGIFHEAD;$/;"	m	namespace:__sanitizer
IOCTL_TUNSDEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TUNSDEBUG = TUNSDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_TUNSIFHEAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TUNSIFHEAD = TUNSIFHEAD;$/;"	m	namespace:__sanitizer
IOCTL_TUNSIFMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TUNSIFMODE = TUNSIFMODE;$/;"	m	namespace:__sanitizer
IOCTL_TUNSLMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TUNSLMODE = TUNSLMODE;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_GETAFC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_GETAFC = TVTUNER_GETAFC;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_GETCHNL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_GETCHNL = TVTUNER_GETCHNL;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_GETCHNLSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_GETCHNLSET = TVTUNER_GETCHNLSET;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_GETFREQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_GETFREQ = TVTUNER_GETFREQ;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_GETSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_GETSTATUS = TVTUNER_GETSTATUS;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_GETTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_GETTYPE = TVTUNER_GETTYPE;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_SETAFC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_SETAFC = TVTUNER_SETAFC;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_SETCHNL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_SETCHNL = TVTUNER_SETCHNL;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_SETFREQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_SETFREQ = TVTUNER_SETFREQ;$/;"	m	namespace:__sanitizer
IOCTL_TVTUNER_SETTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TVTUNER_SETTYPE = TVTUNER_SETTYPE;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_ADD_UNIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_ADD_UNIT = TWEIO_ADD_UNIT;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_AEN_POLL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_AEN_POLL = TWEIO_AEN_POLL;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_AEN_WAIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_AEN_WAIT = TWEIO_AEN_WAIT;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_COMMAND = TWEIO_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_DEL_UNIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_DEL_UNIT = TWEIO_DEL_UNIT;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_GET_PARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_GET_PARAM = TWEIO_GET_PARAM;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_RESET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_RESET = TWEIO_RESET;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_SET_PARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_SET_PARAM = TWEIO_SET_PARAM;$/;"	m	namespace:__sanitizer
IOCTL_TWEIO_STATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_TWEIO_STATS = TWEIO_STATS;$/;"	m	namespace:__sanitizer
IOCTL_UKYOPON_IDENTIFY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UKYOPON_IDENTIFY = UKYOPON_IDENTIFY;$/;"	m	namespace:__sanitizer
IOCTL_URIO_RECV_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_URIO_RECV_COMMAND = URIO_RECV_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_URIO_SEND_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_URIO_SEND_COMMAND = URIO_SEND_COMMAND;$/;"	m	namespace:__sanitizer
IOCTL_USB_DEVICEINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_DEVICEINFO = USB_DEVICEINFO;$/;"	m	namespace:__sanitizer
IOCTL_USB_DEVICEINFO_OLD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_DEVICEINFO_OLD = USB_DEVICEINFO_OLD;$/;"	m	namespace:__sanitizer
IOCTL_USB_DEVICESTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_DEVICESTATS = USB_DEVICESTATS;$/;"	m	namespace:__sanitizer
IOCTL_USB_DISCOVER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_DISCOVER = USB_DISCOVER;$/;"	m	namespace:__sanitizer
IOCTL_USB_DO_REQUEST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_DO_REQUEST = USB_DO_REQUEST;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_ALTINTERFACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_ALTINTERFACE = USB_GET_ALTINTERFACE;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_CM_OVER_DATA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_CM_OVER_DATA = USB_GET_CM_OVER_DATA;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_CONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_CONFIG = USB_GET_CONFIG;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_CONFIG_DESC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_CONFIG_DESC = USB_GET_CONFIG_DESC;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_DEVICEINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_DEVICEINFO = USB_GET_DEVICEINFO;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_DEVICEINFO_OLD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_DEVICEINFO_OLD = USB_GET_DEVICEINFO_OLD;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_DEVICE_DESC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_DEVICE_DESC = USB_GET_DEVICE_DESC;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_ENDPOINT_DESC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_ENDPOINT_DESC = USB_GET_ENDPOINT_DESC;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_FULL_DESC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_FULL_DESC = USB_GET_FULL_DESC;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_INTERFACE_DESC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_INTERFACE_DESC = USB_GET_INTERFACE_DESC;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_NO_ALT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_NO_ALT = USB_GET_NO_ALT;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_REPORT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_REPORT = USB_GET_REPORT;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_REPORT_DESC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_REPORT_DESC = USB_GET_REPORT_DESC;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_REPORT_ID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_REPORT_ID = USB_GET_REPORT_ID;$/;"	m	namespace:__sanitizer
IOCTL_USB_GET_STRING_DESC	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_GET_STRING_DESC = USB_GET_STRING_DESC;$/;"	m	namespace:__sanitizer
IOCTL_USB_REQUEST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_REQUEST = USB_REQUEST;$/;"	m	namespace:__sanitizer
IOCTL_USB_SETDEBUG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SETDEBUG = USB_SETDEBUG;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_ALTINTERFACE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_ALTINTERFACE = USB_SET_ALTINTERFACE;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_BULK_RA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_BULK_RA = USB_SET_BULK_RA;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_BULK_RA_OPT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_BULK_RA_OPT = USB_SET_BULK_RA_OPT;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_BULK_WB	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_BULK_WB = USB_SET_BULK_WB;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_BULK_WB_OPT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_BULK_WB_OPT = USB_SET_BULK_WB_OPT;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_CM_OVER_DATA	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_CM_OVER_DATA = USB_SET_CM_OVER_DATA;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_CONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_CONFIG = USB_SET_CONFIG;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_IMMED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_IMMED = USB_SET_IMMED;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_REPORT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_REPORT = USB_SET_REPORT;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_SHORT_XFER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_SHORT_XFER = USB_SET_SHORT_XFER;$/;"	m	namespace:__sanitizer
IOCTL_USB_SET_TIMEOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_USB_SET_TIMEOUT = USB_SET_TIMEOUT;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOCANCEL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOCANCEL = UTOPPYIOCANCEL;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIODELETE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIODELETE = UTOPPYIODELETE;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOMKDIR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOMKDIR = UTOPPYIOMKDIR;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOREADDIR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOREADDIR = UTOPPYIOREADDIR;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOREADFILE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOREADFILE = UTOPPYIOREADFILE;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOREBOOT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOREBOOT = UTOPPYIOREBOOT;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIORENAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIORENAME = UTOPPYIORENAME;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOSTATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOSTATS = UTOPPYIOSTATS;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOTURBO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOTURBO = UTOPPYIOTURBO;$/;"	m	namespace:__sanitizer
IOCTL_UTOPPYIOWRITEFILE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_UTOPPYIOWRITEFILE = UTOPPYIOWRITEFILE;$/;"	m	namespace:__sanitizer
IOCTL_VERIEXEC_DELETE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VERIEXEC_DELETE = VERIEXEC_DELETE;$/;"	m	namespace:__sanitizer
IOCTL_VERIEXEC_DUMP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VERIEXEC_DUMP = VERIEXEC_DUMP;$/;"	m	namespace:__sanitizer
IOCTL_VERIEXEC_FLUSH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VERIEXEC_FLUSH = VERIEXEC_FLUSH;$/;"	m	namespace:__sanitizer
IOCTL_VERIEXEC_LOAD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VERIEXEC_LOAD = VERIEXEC_LOAD;$/;"	m	namespace:__sanitizer
IOCTL_VERIEXEC_QUERY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VERIEXEC_QUERY = VERIEXEC_QUERY;$/;"	m	namespace:__sanitizer
IOCTL_VERIEXEC_TABLESIZE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VERIEXEC_TABLESIZE = VERIEXEC_TABLESIZE;$/;"	m	namespace:__sanitizer
IOCTL_VGAPCVTID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VGAPCVTID = VGAPCVTID;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_CROPCAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_CROPCAP = VIDIOC_CROPCAP;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_DQBUF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_DQBUF = VIDIOC_DQBUF;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUMAUDIO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUMAUDIO = VIDIOC_ENUMAUDIO;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUMAUDOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUMAUDOUT = VIDIOC_ENUMAUDOUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUMINPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUMINPUT = VIDIOC_ENUMINPUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUMOUTPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUMOUTPUT = VIDIOC_ENUMOUTPUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUMSTD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUMSTD = VIDIOC_ENUMSTD;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUM_FMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUM_FMT = VIDIOC_ENUM_FMT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUM_FRAMEINTERVALS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUM_FRAMEINTERVALS = VIDIOC_ENUM_FRAMEINTERVALS;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_ENUM_FRAMESIZES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_ENUM_FRAMESIZES = VIDIOC_ENUM_FRAMESIZES;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_AUDIO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_AUDIO = VIDIOC_G_AUDIO;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_AUDOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_AUDOUT = VIDIOC_G_AUDOUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_CROP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_CROP = VIDIOC_G_CROP;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_CTRL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_CTRL = VIDIOC_G_CTRL;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_FBUF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_FBUF = VIDIOC_G_FBUF;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_FMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_FMT = VIDIOC_G_FMT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_FREQUENCY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_FREQUENCY = VIDIOC_G_FREQUENCY;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_INPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_INPUT = VIDIOC_G_INPUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_JPEGCOMP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_JPEGCOMP = VIDIOC_G_JPEGCOMP;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_MODULATOR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_MODULATOR = VIDIOC_G_MODULATOR;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_OUTPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_OUTPUT = VIDIOC_G_OUTPUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_PARM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_PARM = VIDIOC_G_PARM;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_PRIORITY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_PRIORITY = VIDIOC_G_PRIORITY;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_STD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_STD = VIDIOC_G_STD;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_G_TUNER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_G_TUNER = VIDIOC_G_TUNER;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_OVERLAY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_OVERLAY = VIDIOC_OVERLAY;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_QBUF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_QBUF = VIDIOC_QBUF;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_QUERYBUF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_QUERYBUF = VIDIOC_QUERYBUF;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_QUERYCAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_QUERYCAP = VIDIOC_QUERYCAP;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_QUERYCTRL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_QUERYCTRL = VIDIOC_QUERYCTRL;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_QUERYMENU	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_QUERYMENU = VIDIOC_QUERYMENU;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_QUERYSTD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_QUERYSTD = VIDIOC_QUERYSTD;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_REQBUFS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_REQBUFS = VIDIOC_REQBUFS;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_RESERVED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_RESERVED = VIDIOC_RESERVED;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_STREAMOFF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_STREAMOFF = VIDIOC_STREAMOFF;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_STREAMON	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_STREAMON = VIDIOC_STREAMON;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_AUDIO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_AUDIO = VIDIOC_S_AUDIO;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_AUDOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_AUDOUT = VIDIOC_S_AUDOUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_CROP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_CROP = VIDIOC_S_CROP;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_CTRL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_CTRL = VIDIOC_S_CTRL;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_FBUF	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_FBUF = VIDIOC_S_FBUF;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_FMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_FMT = VIDIOC_S_FMT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_FREQUENCY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_FREQUENCY = VIDIOC_S_FREQUENCY;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_INPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_INPUT = VIDIOC_S_INPUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_JPEGCOMP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_JPEGCOMP = VIDIOC_S_JPEGCOMP;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_MODULATOR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_MODULATOR = VIDIOC_S_MODULATOR;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_OUTPUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_OUTPUT = VIDIOC_S_OUTPUT;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_PARM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_PARM = VIDIOC_S_PARM;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_PRIORITY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_PRIORITY = VIDIOC_S_PRIORITY;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_STD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_STD = VIDIOC_S_STD;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_S_TUNER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_S_TUNER = VIDIOC_S_TUNER;$/;"	m	namespace:__sanitizer
IOCTL_VIDIOC_TRY_FMT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VIDIOC_TRY_FMT = VIDIOC_TRY_FMT;$/;"	m	namespace:__sanitizer
IOCTL_VNDIOCCLR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VNDIOCCLR = VNDIOCCLR;$/;"	m	namespace:__sanitizer
IOCTL_VNDIOCGET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VNDIOCGET = VNDIOCGET;$/;"	m	namespace:__sanitizer
IOCTL_VNDIOCSET	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VNDIOCSET = VNDIOCSET;$/;"	m	namespace:__sanitizer
IOCTL_VT_ACTIVATE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_VT_ACTIVATE = VT_ACTIVATE;$/;"	m	namespace:__sanitizer
IOCTL_VT_ACTIVATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_ACTIVATE = VT_ACTIVATE;$/;"	m	namespace:__sanitizer
IOCTL_VT_ACTIVATE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_ACTIVATE = VT_ACTIVATE;$/;"	m	namespace:__sanitizer
IOCTL_VT_DISALLOCATE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_DISALLOCATE = VT_DISALLOCATE;$/;"	m	namespace:__sanitizer
IOCTL_VT_GETACTIVE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_GETACTIVE = VT_GETACTIVE;$/;"	m	namespace:__sanitizer
IOCTL_VT_GETMODE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_VT_GETMODE = VT_GETMODE;$/;"	m	namespace:__sanitizer
IOCTL_VT_GETMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_GETMODE = VT_GETMODE;$/;"	m	namespace:__sanitizer
IOCTL_VT_GETMODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_GETMODE = VT_GETMODE;$/;"	m	namespace:__sanitizer
IOCTL_VT_GETSTATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_GETSTATE = VT_GETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_VT_GETSTATE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_GETSTATE = VT_GETSTATE;$/;"	m	namespace:__sanitizer
IOCTL_VT_OPENQRY	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_VT_OPENQRY = VT_OPENQRY;$/;"	m	namespace:__sanitizer
IOCTL_VT_OPENQRY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_OPENQRY = VT_OPENQRY;$/;"	m	namespace:__sanitizer
IOCTL_VT_OPENQRY	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_OPENQRY = VT_OPENQRY;$/;"	m	namespace:__sanitizer
IOCTL_VT_RELDISP	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_VT_RELDISP = VT_RELDISP;$/;"	m	namespace:__sanitizer
IOCTL_VT_RELDISP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_RELDISP = VT_RELDISP;$/;"	m	namespace:__sanitizer
IOCTL_VT_RELDISP	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_RELDISP = VT_RELDISP;$/;"	m	namespace:__sanitizer
IOCTL_VT_RESIZE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_RESIZE = VT_RESIZE;$/;"	m	namespace:__sanitizer
IOCTL_VT_RESIZEX	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_RESIZEX = VT_RESIZEX;$/;"	m	namespace:__sanitizer
IOCTL_VT_SENDSIG	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_SENDSIG = VT_SENDSIG;$/;"	m	namespace:__sanitizer
IOCTL_VT_SETMODE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_VT_SETMODE = VT_SETMODE;$/;"	m	namespace:__sanitizer
IOCTL_VT_SETMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_SETMODE = VT_SETMODE;$/;"	m	namespace:__sanitizer
IOCTL_VT_SETMODE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_SETMODE = VT_SETMODE;$/;"	m	namespace:__sanitizer
IOCTL_VT_WAITACTIVE	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned IOCTL_VT_WAITACTIVE = VT_WAITACTIVE;$/;"	m	namespace:__sanitizer
IOCTL_VT_WAITACTIVE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VT_WAITACTIVE = VT_WAITACTIVE;$/;"	m	namespace:__sanitizer
IOCTL_VT_WAITACTIVE	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned IOCTL_VT_WAITACTIVE = VT_WAITACTIVE;$/;"	m	namespace:__sanitizer
IOCTL_VUIDGFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VUIDGFORMAT = VUIDGFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_VUIDSFORMAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_VUIDSFORMAT = VUIDSFORMAT;$/;"	m	namespace:__sanitizer
IOCTL_WDOGIOC_GMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WDOGIOC_GMODE = WDOGIOC_GMODE;$/;"	m	namespace:__sanitizer
IOCTL_WDOGIOC_GTICKLER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WDOGIOC_GTICKLER = WDOGIOC_GTICKLER;$/;"	m	namespace:__sanitizer
IOCTL_WDOGIOC_GWDOGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WDOGIOC_GWDOGS = WDOGIOC_GWDOGS;$/;"	m	namespace:__sanitizer
IOCTL_WDOGIOC_SMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WDOGIOC_SMODE = WDOGIOC_SMODE;$/;"	m	namespace:__sanitizer
IOCTL_WDOGIOC_TICKLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WDOGIOC_TICKLE = WDOGIOC_TICKLE;$/;"	m	namespace:__sanitizer
IOCTL_WDOGIOC_WHICH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WDOGIOC_WHICH = WDOGIOC_WHICH;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_CONFIG	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_CONFIG = WFQ_CONFIG;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_DISABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_DISABLE = WFQ_DISABLE;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_ENABLE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_ENABLE = WFQ_ENABLE;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_GET_QID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_GET_QID = WFQ_GET_QID;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_GET_STATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_GET_STATS = WFQ_GET_STATS;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_IF_ATTACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_IF_ATTACH = WFQ_IF_ATTACH;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_IF_DETACH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_IF_DETACH = WFQ_IF_DETACH;$/;"	m	namespace:__sanitizer
IOCTL_WFQ_SET_WEIGHT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WFQ_SET_WEIGHT = WFQ_SET_WEIGHT;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_ADDSCREEN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_ADDSCREEN = WSDISPLAYIO_ADDSCREEN;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_DELSCREEN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_DELSCREEN = WSDISPLAYIO_DELSCREEN;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_DGSCROLL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_DGSCROLL = WSDISPLAYIO_DGSCROLL;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_DOBLIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_DOBLIT = WSDISPLAYIO_DOBLIT;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_DSSCROLL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_DSSCROLL = WSDISPLAYIO_DSSCROLL;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GBORDER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GBORDER = WSDISPLAYIO_GBORDER;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GCURMAX	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GCURMAX = WSDISPLAYIO_GCURMAX;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GCURPOS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GCURPOS = WSDISPLAYIO_GCURPOS;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GCURSOR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GCURSOR = WSDISPLAYIO_GCURSOR;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GETACTIVESCREEN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GETACTIVESCREEN = WSDISPLAYIO_GETACTIVESCREEN;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GETCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GETCMAP = WSDISPLAYIO_GETCMAP;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GETPARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GETPARAM = WSDISPLAYIO_GETPARAM;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GETWSCHAR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GETWSCHAR = WSDISPLAYIO_GETWSCHAR;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GET_BUSID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GET_BUSID = WSDISPLAYIO_GET_BUSID;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GET_EDID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GET_EDID = WSDISPLAYIO_GET_EDID;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GET_FBINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GET_FBINFO = WSDISPLAYIO_GET_FBINFO;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GINFO = WSDISPLAYIO_GINFO;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GMODE = WSDISPLAYIO_GMODE;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GMSGATTRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GMSGATTRS = WSDISPLAYIO_GMSGATTRS;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GTYPE = WSDISPLAYIO_GTYPE;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_GVIDEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_GVIDEO = WSDISPLAYIO_GVIDEO;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_LDFONT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_LDFONT = WSDISPLAYIO_LDFONT;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_LINEBYTES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_LINEBYTES = WSDISPLAYIO_LINEBYTES;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_PUTCMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_PUTCMAP = WSDISPLAYIO_PUTCMAP;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_PUTWSCHAR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_PUTWSCHAR = WSDISPLAYIO_PUTWSCHAR;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SBORDER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SBORDER = WSDISPLAYIO_SBORDER;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SCURPOS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SCURPOS = WSDISPLAYIO_SCURPOS;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SCURSOR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SCURSOR = WSDISPLAYIO_SCURSOR;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SETPARAM	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SETPARAM = WSDISPLAYIO_SETPARAM;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SETVERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SETVERSION = WSDISPLAYIO_SETVERSION;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SET_POLLING	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SET_POLLING = WSDISPLAYIO_SET_POLLING;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SFONT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SFONT = WSDISPLAYIO_SFONT;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SMODE = WSDISPLAYIO_SMODE;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SMSGATTRS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SMSGATTRS = WSDISPLAYIO_SMSGATTRS;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SPROGRESS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SPROGRESS = WSDISPLAYIO_SPROGRESS;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SSPLASH	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SSPLASH = WSDISPLAYIO_SSPLASH;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_SVIDEO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_SVIDEO = WSDISPLAYIO_SVIDEO;$/;"	m	namespace:__sanitizer
IOCTL_WSDISPLAYIO_WAITBLIT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSDISPLAYIO_WAITBLIT = WSDISPLAYIO_WAITBLIT;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_BELL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_BELL = WSKBDIO_BELL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_COMPLEXBELL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_COMPLEXBELL = WSKBDIO_COMPLEXBELL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETBELL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETBELL = WSKBDIO_GETBELL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETDEFAULTBELL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETDEFAULTBELL = WSKBDIO_GETDEFAULTBELL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETDEFAULTKEYREPEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETDEFAULTKEYREPEAT = WSKBDIO_GETDEFAULTKEYREPEAT;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETENCODING	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETENCODING = WSKBDIO_GETENCODING;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETKEYCLICK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETKEYCLICK = WSKBDIO_GETKEYCLICK;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETKEYREPEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETKEYREPEAT = WSKBDIO_GETKEYREPEAT;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETLEDS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETLEDS = WSKBDIO_GETLEDS;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETMAP = WSKBDIO_GETMAP;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETMODE = WSKBDIO_GETMODE;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GETSCROLL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GETSCROLL = WSKBDIO_GETSCROLL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_GTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_GTYPE = WSKBDIO_GTYPE;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETBELL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETBELL = WSKBDIO_SETBELL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETDEFAULTBELL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETDEFAULTBELL = WSKBDIO_SETDEFAULTBELL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETDEFAULTKEYREPEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETDEFAULTKEYREPEAT = WSKBDIO_SETDEFAULTKEYREPEAT;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETENCODING	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETENCODING = WSKBDIO_SETENCODING;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETKEYCLICK	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETKEYCLICK = WSKBDIO_SETKEYCLICK;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETKEYREPEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETKEYREPEAT = WSKBDIO_SETKEYREPEAT;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETLEDS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETLEDS = WSKBDIO_SETLEDS;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETMAP = WSKBDIO_SETMAP;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETMODE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETMODE = WSKBDIO_SETMODE;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETSCROLL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETSCROLL = WSKBDIO_SETSCROLL;$/;"	m	namespace:__sanitizer
IOCTL_WSKBDIO_SETVERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSKBDIO_SETVERSION = WSKBDIO_SETVERSION;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_GCALIBCOORDS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_GCALIBCOORDS = WSMOUSEIO_GCALIBCOORDS;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_GETID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_GETID = WSMOUSEIO_GETID;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_GETREPEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_GETREPEAT = WSMOUSEIO_GETREPEAT;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_GTYPE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_GTYPE = WSMOUSEIO_GTYPE;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_SCALIBCOORDS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_SCALIBCOORDS = WSMOUSEIO_SCALIBCOORDS;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_SETREPEAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_SETREPEAT = WSMOUSEIO_SETREPEAT;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_SETVERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_SETVERSION = WSMOUSEIO_SETVERSION;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_SRATE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_SRATE = WSMOUSEIO_SRATE;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_SRES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_SRES = WSMOUSEIO_SRES;$/;"	m	namespace:__sanitizer
IOCTL_WSMOUSEIO_SSCALE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMOUSEIO_SSCALE = WSMOUSEIO_SSCALE;$/;"	m	namespace:__sanitizer
IOCTL_WSMUXIO_ADD_DEVICE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMUXIO_ADD_DEVICE = WSMUXIO_ADD_DEVICE;$/;"	m	namespace:__sanitizer
IOCTL_WSMUXIO_INJECTEVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMUXIO_INJECTEVENT = WSMUXIO_INJECTEVENT;$/;"	m	namespace:__sanitizer
IOCTL_WSMUXIO_LIST_DEVICES	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMUXIO_LIST_DEVICES = WSMUXIO_LIST_DEVICES;$/;"	m	namespace:__sanitizer
IOCTL_WSMUXIO_REMOVE_DEVICE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WSMUXIO_REMOVE_DEVICE = WSMUXIO_REMOVE_DEVICE;$/;"	m	namespace:__sanitizer
IOCTL_WTQICMD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL_WTQICMD = WTQICMD;$/;"	m	namespace:__sanitizer
IOCTL__O_WSDISPLAYIO_SETKEYBOARD	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned IOCTL__O_WSDISPLAYIO_SETKEYBOARD = _O_WSDISPLAYIO_SETKEYBOARD;$/;"	m	namespace:__sanitizer
IOC_DIR	sanitizer_common/sanitizer_platform_limits_freebsd.h	430;"	d
IOC_DIR	sanitizer_common/sanitizer_platform_limits_netbsd.h	545;"	d
IOC_DIR	sanitizer_common/sanitizer_platform_limits_posix.h	920;"	d
IOC_DIR	sanitizer_common/sanitizer_platform_limits_solaris.h	399;"	d
IOC_DIRBITS	sanitizer_common/sanitizer_platform_limits_freebsd.h	405;"	d
IOC_DIRBITS	sanitizer_common/sanitizer_platform_limits_freebsd.h	411;"	d
IOC_DIRBITS	sanitizer_common/sanitizer_platform_limits_netbsd.h	529;"	d
IOC_DIRBITS	sanitizer_common/sanitizer_platform_limits_posix.h	895;"	d
IOC_DIRBITS	sanitizer_common/sanitizer_platform_limits_posix.h	901;"	d
IOC_DIRBITS	sanitizer_common/sanitizer_platform_limits_solaris.h	384;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	84;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_freebsd.h	420;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_freebsd.h	422;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_netbsd.h	536;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_netbsd.h	537;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_posix.cpp	87;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_posix.h	910;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_posix.h	912;"	d
IOC_DIRMASK	sanitizer_common/sanitizer_platform_limits_solaris.h	393;"	d
IOC_DIRSHIFT	sanitizer_common/sanitizer_platform_limits_freebsd.h	426;"	d
IOC_DIRSHIFT	sanitizer_common/sanitizer_platform_limits_netbsd.h	541;"	d
IOC_DIRSHIFT	sanitizer_common/sanitizer_platform_limits_posix.h	916;"	d
IOC_DIRSHIFT	sanitizer_common/sanitizer_platform_limits_solaris.h	397;"	d
IOC_NONE	sanitizer_common/sanitizer_platform_limits_freebsd.h	406;"	d
IOC_NONE	sanitizer_common/sanitizer_platform_limits_freebsd.h	412;"	d
IOC_NONE	sanitizer_common/sanitizer_platform_limits_netbsd.h	530;"	d
IOC_NONE	sanitizer_common/sanitizer_platform_limits_posix.h	896;"	d
IOC_NONE	sanitizer_common/sanitizer_platform_limits_posix.h	902;"	d
IOC_NONE	sanitizer_common/sanitizer_platform_limits_solaris.h	385;"	d
IOC_NONE	sanitizer_common/sanitizer_platform_limits_solaris.h	386;"	d
IOC_NR	sanitizer_common/sanitizer_platform_limits_freebsd.h	432;"	d
IOC_NR	sanitizer_common/sanitizer_platform_limits_netbsd.h	547;"	d
IOC_NR	sanitizer_common/sanitizer_platform_limits_posix.h	922;"	d
IOC_NR	sanitizer_common/sanitizer_platform_limits_solaris.h	401;"	d
IOC_NRBITS	sanitizer_common/sanitizer_platform_limits_freebsd.h	401;"	d
IOC_NRBITS	sanitizer_common/sanitizer_platform_limits_netbsd.h	526;"	d
IOC_NRBITS	sanitizer_common/sanitizer_platform_limits_posix.h	890;"	d
IOC_NRBITS	sanitizer_common/sanitizer_platform_limits_solaris.h	381;"	d
IOC_NRMASK	sanitizer_common/sanitizer_platform_limits_freebsd.h	416;"	d
IOC_NRMASK	sanitizer_common/sanitizer_platform_limits_netbsd.h	533;"	d
IOC_NRMASK	sanitizer_common/sanitizer_platform_limits_posix.h	906;"	d
IOC_NRMASK	sanitizer_common/sanitizer_platform_limits_solaris.h	390;"	d
IOC_NRSHIFT	sanitizer_common/sanitizer_platform_limits_freebsd.h	423;"	d
IOC_NRSHIFT	sanitizer_common/sanitizer_platform_limits_netbsd.h	538;"	d
IOC_NRSHIFT	sanitizer_common/sanitizer_platform_limits_posix.h	913;"	d
IOC_NRSHIFT	sanitizer_common/sanitizer_platform_limits_solaris.h	394;"	d
IOC_READ	sanitizer_common/sanitizer_platform_limits_freebsd.h	408;"	d
IOC_READ	sanitizer_common/sanitizer_platform_limits_freebsd.h	414;"	d
IOC_READ	sanitizer_common/sanitizer_platform_limits_netbsd.h	532;"	d
IOC_READ	sanitizer_common/sanitizer_platform_limits_posix.h	898;"	d
IOC_READ	sanitizer_common/sanitizer_platform_limits_posix.h	904;"	d
IOC_READ	sanitizer_common/sanitizer_platform_limits_solaris.h	387;"	d
IOC_SIZE	sanitizer_common/sanitizer_platform_limits_freebsd.h	433;"	d
IOC_SIZE	sanitizer_common/sanitizer_platform_limits_netbsd.h	548;"	d
IOC_SIZE	sanitizer_common/sanitizer_platform_limits_posix.h	928;"	d
IOC_SIZE	sanitizer_common/sanitizer_platform_limits_posix.h	931;"	d
IOC_SIZE	sanitizer_common/sanitizer_platform_limits_solaris.h	407;"	d
IOC_SIZE	sanitizer_common/sanitizer_platform_limits_solaris.h	410;"	d
IOC_SIZEBITS	sanitizer_common/sanitizer_platform_limits_freebsd.h	404;"	d
IOC_SIZEBITS	sanitizer_common/sanitizer_platform_limits_freebsd.h	410;"	d
IOC_SIZEBITS	sanitizer_common/sanitizer_platform_limits_netbsd.h	528;"	d
IOC_SIZEBITS	sanitizer_common/sanitizer_platform_limits_posix.h	894;"	d
IOC_SIZEBITS	sanitizer_common/sanitizer_platform_limits_posix.h	900;"	d
IOC_SIZEBITS	sanitizer_common/sanitizer_platform_limits_solaris.h	383;"	d
IOC_SIZEMASK	sanitizer_common/sanitizer_platform_limits_freebsd.h	418;"	d
IOC_SIZEMASK	sanitizer_common/sanitizer_platform_limits_netbsd.h	535;"	d
IOC_SIZEMASK	sanitizer_common/sanitizer_platform_limits_posix.h	908;"	d
IOC_SIZEMASK	sanitizer_common/sanitizer_platform_limits_solaris.h	392;"	d
IOC_SIZESHIFT	sanitizer_common/sanitizer_platform_limits_freebsd.h	425;"	d
IOC_SIZESHIFT	sanitizer_common/sanitizer_platform_limits_netbsd.h	540;"	d
IOC_SIZESHIFT	sanitizer_common/sanitizer_platform_limits_posix.h	915;"	d
IOC_SIZESHIFT	sanitizer_common/sanitizer_platform_limits_solaris.h	396;"	d
IOC_TYPE	sanitizer_common/sanitizer_platform_limits_freebsd.h	431;"	d
IOC_TYPE	sanitizer_common/sanitizer_platform_limits_netbsd.h	546;"	d
IOC_TYPE	sanitizer_common/sanitizer_platform_limits_posix.h	921;"	d
IOC_TYPE	sanitizer_common/sanitizer_platform_limits_solaris.h	400;"	d
IOC_TYPEBITS	sanitizer_common/sanitizer_platform_limits_freebsd.h	402;"	d
IOC_TYPEBITS	sanitizer_common/sanitizer_platform_limits_netbsd.h	527;"	d
IOC_TYPEBITS	sanitizer_common/sanitizer_platform_limits_posix.h	891;"	d
IOC_TYPEBITS	sanitizer_common/sanitizer_platform_limits_solaris.h	382;"	d
IOC_TYPEMASK	sanitizer_common/sanitizer_platform_limits_freebsd.h	417;"	d
IOC_TYPEMASK	sanitizer_common/sanitizer_platform_limits_netbsd.h	534;"	d
IOC_TYPEMASK	sanitizer_common/sanitizer_platform_limits_posix.h	907;"	d
IOC_TYPEMASK	sanitizer_common/sanitizer_platform_limits_solaris.h	391;"	d
IOC_TYPESHIFT	sanitizer_common/sanitizer_platform_limits_freebsd.h	424;"	d
IOC_TYPESHIFT	sanitizer_common/sanitizer_platform_limits_netbsd.h	539;"	d
IOC_TYPESHIFT	sanitizer_common/sanitizer_platform_limits_posix.h	914;"	d
IOC_TYPESHIFT	sanitizer_common/sanitizer_platform_limits_solaris.h	395;"	d
IOC_WRITE	sanitizer_common/sanitizer_platform_limits_freebsd.h	407;"	d
IOC_WRITE	sanitizer_common/sanitizer_platform_limits_freebsd.h	413;"	d
IOC_WRITE	sanitizer_common/sanitizer_platform_limits_netbsd.h	531;"	d
IOC_WRITE	sanitizer_common/sanitizer_platform_limits_posix.h	897;"	d
IOC_WRITE	sanitizer_common/sanitizer_platform_limits_posix.h	903;"	d
IOC_WRITE	sanitizer_common/sanitizer_platform_limits_solaris.h	388;"	d
ISCSI_ADD_CONNECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	284;"	d
ISCSI_AUTH_CHAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_AUTH_CHAP = 1,$/;"	e	enum:__anon26
ISCSI_AUTH_KRB5	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_AUTH_KRB5 = 2,$/;"	e	enum:__anon26
ISCSI_AUTH_None	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_AUTH_None = 0,$/;"	e	enum:__anon26
ISCSI_AUTH_SRP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_AUTH_SRP = 3$/;"	e	enum:__anon26
ISCSI_CONNECTION_STATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	287;"	d
ISCSI_CONNECTION_TERMINATED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_CONNECTION_TERMINATED,$/;"	e	enum:__anon29
ISCSI_DEREGISTER_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	292;"	d
ISCSI_DIGEST_CRC32C	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^typedef enum { ISCSI_DIGEST_None = 0, ISCSI_DIGEST_CRC32C = 1 } iscsi_digest_t;$/;"	e	enum:__anon28
ISCSI_DIGEST_None	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^typedef enum { ISCSI_DIGEST_None = 0, ISCSI_DIGEST_CRC32C = 1 } iscsi_digest_t;$/;"	e	enum:__anon28
ISCSI_DRIVER_TERMINATING	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_DRIVER_TERMINATING$/;"	e	enum:__anon29
ISCSI_GET_VERSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	281;"	d
ISCSI_IO_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	290;"	d
ISCSI_LOGIN	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	282;"	d
ISCSI_LOGINTYPE_DISCOVERY	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_LOGINTYPE_DISCOVERY = 0,$/;"	e	enum:__anon27
ISCSI_LOGINTYPE_MAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_LOGINTYPE_MAP = 2$/;"	e	enum:__anon27
ISCSI_LOGINTYPE_NOMAP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_LOGINTYPE_NOMAP = 1,$/;"	e	enum:__anon27
ISCSI_LOGOUT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	283;"	d
ISCSI_POLL_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	294;"	d
ISCSI_RECOVER_CONNECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_RECOVER_CONNECTION,$/;"	e	enum:__anon29
ISCSI_REGISTER_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	291;"	d
ISCSI_REMOVE_CONNECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	286;"	d
ISCSI_RESTORE_CONNECTION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	285;"	d
ISCSI_SEND_TARGETS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	288;"	d
ISCSI_SESSION_TERMINATED	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ISCSI_SESSION_TERMINATED = 1,$/;"	e	enum:__anon29
ISCSI_SET_NODE_NAME	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	289;"	d
ISCSI_WAIT_EVENT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	293;"	d
ISID	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint8_t ISID[6];$/;"	m	struct:__anon37
IS_FROM_LOCAL_POOL	asan/asan_malloc_local.h	43;"	d
IS_FROM_LOCAL_POOL	asan/asan_malloc_local.h	48;"	d
IT	builtins/assembly.h	78;"	d
IT	builtins/assembly.h	83;"	d
IT	builtins/assembly.h	90;"	d
ITE	builtins/assembly.h	80;"	d
ITE	builtins/assembly.h	85;"	d
ITE	builtins/assembly.h	92;"	d
ITT	builtins/assembly.h	79;"	d
ITT	builtins/assembly.h	84;"	d
ITT	builtins/assembly.h	91;"	d
Id	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  explicit Id(u32 id = 0, u32 seq = 0)$/;"	f	struct:__sanitizer::Id
Id	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^struct Id {$/;"	s	namespace:__sanitizer
IdComparator	sanitizer_common/sanitizer_stackdepot.cpp	/^bool StackDepotReverseMap::IdDescPair::IdComparator($/;"	f	class:__sanitizer::StackDepotReverseMap::IdDescPair
IdDescPair	sanitizer_common/sanitizer_stackdepot.h	/^  struct IdDescPair {$/;"	s	class:__sanitizer::StackDepotReverseMap
IgnoreNoninstrumentedModules	sanitizer_common/sanitizer_libignore.h	/^  void IgnoreNoninstrumentedModules(bool enable) {$/;"	f	class:__sanitizer::LibIgnore
IgnoreObjectLocked	asan/asan_allocator.cpp	/^IgnoreObjectResult IgnoreObjectLocked(const void *p) {$/;"	f	namespace:__lsan
IgnoreObjectLocked	lsan/lsan_allocator.cpp	/^IgnoreObjectResult IgnoreObjectLocked(const void *p) {$/;"	f	namespace:__lsan
IgnoreObjectResult	lsan/lsan_common.h	/^enum IgnoreObjectResult {$/;"	g	namespace:__lsan
IgnoreSet	tsan/tsan_ignoreset.cpp	/^IgnoreSet::IgnoreSet()$/;"	f	class:__tsan::IgnoreSet
IgnoreSet	tsan/tsan_ignoreset.h	/^class IgnoreSet {$/;"	c	namespace:__tsan
ImitateTlsWrite	tsan/tsan_platform_linux.cpp	/^void ImitateTlsWrite(ThreadState *thr, uptr tls_addr, uptr tls_size) {$/;"	f	namespace:__tsan
ImitateTlsWrite	tsan/tsan_platform_mac.cpp	/^void ImitateTlsWrite(ThreadState *thr, uptr tls_addr, uptr tls_size) {$/;"	f	namespace:__tsan
ImplicitConversionData	ubsan/ubsan_handlers.h	/^struct ImplicitConversionData {$/;"	s	namespace:__ubsan
Inc	sanitizer_common/sanitizer_allocator_primary64.h	/^    void Inc(uptr i) const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
IncRange	sanitizer_common/sanitizer_allocator_primary64.h	/^    void IncRange(uptr from, uptr to) const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
Incomplete	sanitizer_common/sanitizer_linux.h	/^    Incomplete,$/;"	e	enum:__sanitizer::ThreadLister::Result
IncreaseTotalMmap	sanitizer_common/sanitizer_common.cpp	/^void IncreaseTotalMmap(uptr size) {$/;"	f	namespace:__sanitizer
IncrementEpoch	tsan/tsan_rtl.h	/^  void IncrementEpoch() {$/;"	f	class:__tsan::FastState
IndexT	tsan/tsan_dense_alloc.h	/^  typedef typename Cache::IndexT IndexT;$/;"	t	class:__tsan::DenseSlabAlloc
IndexT	tsan/tsan_dense_alloc.h	/^  typedef u32 IndexT;$/;"	t	class:__tsan::DenseSlabAllocCache
IndexType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &IndexType;$/;"	m	struct:__ubsan::OutOfBoundsData
Init	asan/asan_descriptions.cpp	/^void AsanThreadIdAndName::Init(u32 tid, const char *tname) {$/;"	f	class:__asan::AsanThreadIdAndName
Init	asan/asan_thread.cpp	/^void AsanThread::Init(const InitOptions *options) {$/;"	f	class:__asan::AsanThread
Init	hwasan/hwasan_thread.cpp	/^void Thread::Init(uptr stack_buffer_start, uptr stack_buffer_size) {$/;"	f	class:__hwasan::Thread
Init	sanitizer_common/sanitizer_allocator_bytemap.h	/^  void Init() {$/;"	f	class:FlatByteMap
Init	sanitizer_common/sanitizer_allocator_bytemap.h	/^  void Init() {$/;"	f	class:TwoLevelByteMap
Init	sanitizer_common/sanitizer_allocator_combined.h	/^  void Init(s32 release_to_os_interval_ms) {$/;"	f	class:CombinedAllocator
Init	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Init(AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator32LocalCache
Init	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void Init(AllocatorGlobalStats *s) {$/;"	f	struct:SizeClassAllocator64LocalCache
Init	sanitizer_common/sanitizer_allocator_primary32.h	/^  void Init(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator32
Init	sanitizer_common/sanitizer_allocator_primary64.h	/^  void Init(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator64
Init	sanitizer_common/sanitizer_allocator_secondary.h	/^  inline void *Init() { return &p_[0]; }$/;"	f	class:LargeMmapAllocatorPtrArrayStatic
Init	sanitizer_common/sanitizer_allocator_secondary.h	/^  inline void *Init() {$/;"	f	class:LargeMmapAllocatorPtrArrayDynamic
Init	sanitizer_common/sanitizer_allocator_secondary.h	/^  void Init() {$/;"	f	class:LargeMmapAllocator
Init	sanitizer_common/sanitizer_allocator_stats.h	/^  void Init() {$/;"	f	class:AllocatorGlobalStats
Init	sanitizer_common/sanitizer_allocator_stats.h	/^  void Init() {$/;"	f	class:AllocatorStats
Init	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr ReservedAddressRange::Init(uptr init_size, const char *name,$/;"	f	class:__sanitizer::ReservedAddressRange
Init	sanitizer_common/sanitizer_mutex.h	/^  void Init() {$/;"	f	class:__sanitizer::StaticSpinMutex
Init	sanitizer_common/sanitizer_posix_libcdep.cpp	/^uptr ReservedAddressRange::Init(uptr size, const char *name, uptr fixed_addr) {$/;"	f	class:__sanitizer::ReservedAddressRange
Init	sanitizer_common/sanitizer_quarantine.h	/^  void Init(uptr size, uptr cache_size) {$/;"	f	class:__sanitizer::Quarantine
Init	sanitizer_common/sanitizer_ring_buffer.h	/^  void Init(void *storage, uptr size) {$/;"	f	class:__sanitizer::CompactRingBuffer
Init	sanitizer_common/sanitizer_stacktrace.cpp	/^void BufferedStackTrace::Init(const uptr *pcs, uptr cnt, uptr extra_top_pc) {$/;"	f	class:__sanitizer::BufferedStackTrace
Init	sanitizer_common/sanitizer_win.cpp	/^uptr ReservedAddressRange::Init(uptr size, const char *name, uptr fixed_addr) {$/;"	f	class:__sanitizer::ReservedAddressRange
Init	tsan/tsan_stack_trace.cpp	/^void VarSizeStackTrace::Init(const uptr *pcs, uptr cnt, uptr extra_top_pc) {$/;"	f	class:__tsan::VarSizeStackTrace
Init	tsan/tsan_sync.cpp	/^void SyncVar::Init(ThreadState *thr, uptr pc, uptr addr, u64 uid) {$/;"	f	class:__tsan::SyncVar
InitAligned	sanitizer_common/sanitizer_common_libcdep.cpp	/^uptr ReservedAddressRange::InitAligned(uptr size, uptr align,$/;"	f	class:__sanitizer::ReservedAddressRange
InitAsPlugin	ubsan/ubsan_init.cpp	/^void __ubsan::InitAsPlugin() {$/;"	f	class:__ubsan
InitAsStandalone	ubsan/ubsan_init.cpp	/^void __ubsan::InitAsStandalone() {$/;"	f	class:__ubsan
InitAsStandaloneIfNecessary	ubsan/ubsan_init.cpp	/^void __ubsan::InitAsStandaloneIfNecessary() { return InitAsStandalone(); }$/;"	f	class:__ubsan
InitCache	sanitizer_common/sanitizer_allocator_combined.h	/^  void InitCache(AllocatorCache *cache) {$/;"	f	class:CombinedAllocator
InitCache	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void InitCache(PerClass *c) {$/;"	f	struct:SizeClassAllocator32LocalCache
InitCache	sanitizer_common/sanitizer_allocator_local_cache.h	/^  void InitCache(PerClass *c) {$/;"	f	struct:SizeClassAllocator64LocalCache
InitCache	tsan/tsan_dense_alloc.h	/^  void InitCache(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
InitCommonLsan	lsan/lsan_common.cpp	/^void InitCommonLsan() {$/;"	f	namespace:__lsan
InitInstrumentation	hwasan/hwasan.cpp	/^static void InitInstrumentation() {$/;"	f
InitLinkerInitialized	asan/asan_allocator.cpp	/^  void InitLinkerInitialized(const AllocatorOptions &options) {$/;"	f	struct:__asan::Allocator
InitLinkerInitialized	sanitizer_common/sanitizer_allocator_combined.h	/^  void InitLinkerInitialized(s32 release_to_os_interval_ms) {$/;"	f	class:CombinedAllocator
InitLinkerInitialized	sanitizer_common/sanitizer_allocator_secondary.h	/^  void InitLinkerInitialized() {$/;"	f	class:LargeMmapAllocator
InitLinkerInitialized	sanitizer_common/sanitizer_allocator_stats.h	/^  void InitLinkerInitialized() {$/;"	f	class:AllocatorGlobalStats
InitLinkerInitialized	sanitizer_common/sanitizer_allocator_stats.h	/^  void InitLinkerInitialized() {}$/;"	f	class:AllocatorStats
InitList	tsan/tsan_interface_ann.cpp	/^static void InitList(ExpectRace *list) {$/;"	f	namespace:__tsan
InitLoadedGlobals	hwasan/hwasan.cpp	/^static void InitLoadedGlobals() {$/;"	f
InitMemoryUsage	hwasan/hwasan.cpp	/^static void InitMemoryUsage() {$/;"	f	namespace:__hwasan
InitOptions	asan/asan_fuchsia.cpp	/^struct AsanThread::InitOptions {$/;"	s	class:__asan::AsanThread
InitOptions	asan/asan_rtems.cpp	/^struct AsanThread::InitOptions {$/;"	s	class:__asan::AsanThread
InitPcSpBp	sanitizer_common/sanitizer_linux.cpp	/^void SignalContext::InitPcSpBp() { GetPcSpBp(context, &pc, &sp, &bp); }$/;"	f	class:__sanitizer::SignalContext
InitPcSpBp	sanitizer_common/sanitizer_mac.cpp	/^void SignalContext::InitPcSpBp() {$/;"	f	class:__sanitizer::SignalContext
InitPcSpBp	sanitizer_common/sanitizer_win.cpp	/^void SignalContext::InitPcSpBp() {$/;"	f	class:__sanitizer::SignalContext
InitPrctl	hwasan/hwasan_linux.cpp	/^void InitPrctl() {$/;"	f	namespace:__hwasan
InitRandomState	hwasan/hwasan_thread.cpp	/^void Thread::InitRandomState() {$/;"	f	class:__hwasan::Thread
InitShadow	hwasan/hwasan_linux.cpp	/^bool InitShadow() {$/;"	f	namespace:__hwasan
InitShadowGOT	hwasan/hwasan_dynamic_shadow.cpp	/^void InitShadowGOT() {$/;"	f	namespace:__hwasan
InitThreadList	hwasan/hwasan_thread_list.cpp	/^void InitThreadList(uptr storage, uptr size) {$/;"	f	namespace:__hwasan
InitThreads	hwasan/hwasan_linux.cpp	/^void InitThreads() {$/;"	f	namespace:__hwasan
InitTlsSize	sanitizer_common/sanitizer_fuchsia.cpp	/^void InitTlsSize() {}$/;"	f	namespace:__sanitizer
InitTlsSize	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void InitTlsSize() { }$/;"	f	namespace:__sanitizer
InitTlsSize	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void InitTlsSize() {$/;"	f	namespace:__sanitizer
InitTlsSize	sanitizer_common/sanitizer_mac.cpp	/^void InitTlsSize() {$/;"	f	namespace:__sanitizer
InitTlsSize	sanitizer_common/sanitizer_rtems.cpp	/^void InitTlsSize() {}$/;"	f	namespace:__sanitizer
InitTlsSize	sanitizer_common/sanitizer_win.cpp	/^void InitTlsSize() {$/;"	f	namespace:__sanitizer
InitTracePcGuard	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  void InitTracePcGuard(u32 *start, u32 *end) {$/;"	f	class:__sancov::__anon45::final
InitTracePcGuard	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^  void InitTracePcGuard(u32* start, u32* end) {$/;"	f	class:__sancov::__anon40::TracePcGuardController
Initialize	sanitizer_common/sanitizer_common.h	/^  void Initialize(uptr initial_capacity) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
Initialize	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^  void Initialize() {$/;"	f	class:__sancov::__anon40::TracePcGuardController
Initialize	tsan/tsan_rtl.cpp	/^void Initialize(ThreadState *thr) {$/;"	f	namespace:__tsan
InitializeAllocator	asan/asan_allocator.cpp	/^void InitializeAllocator(const AllocatorOptions &options) {$/;"	f	namespace:__asan
InitializeAllocator	lsan/lsan_allocator.cpp	/^void InitializeAllocator() {$/;"	f	namespace:__lsan
InitializeAllocator	tsan/tsan_mman.cpp	/^void InitializeAllocator() {$/;"	f	namespace:__tsan
InitializeAllocatorLate	tsan/tsan_mman.cpp	/^void InitializeAllocatorLate() {$/;"	f	namespace:__tsan
InitializeAsanInterceptors	asan/asan_fuchsia.cpp	/^void InitializeAsanInterceptors() {}$/;"	f	namespace:__asan
InitializeAsanInterceptors	asan/asan_interceptors.cpp	/^void InitializeAsanInterceptors() {$/;"	f	namespace:__asan
InitializeAsanInterceptors	asan/asan_rtems.cpp	/^void InitializeAsanInterceptors() {}$/;"	f	namespace:__asan
InitializeClonedVariables	asan/asan_win_dynamic_runtime_thunk.cpp	/^static int InitializeClonedVariables() {$/;"	f
InitializeCommonFlags	sanitizer_common/sanitizer_flags.cpp	/^void InitializeCommonFlags(CommonFlags *cf) {$/;"	f	namespace:__sanitizer
InitializeCoverage	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^void InitializeCoverage(bool enabled, const char *dir) {$/;"	f	namespace:__sanitizer
InitializeCoverage	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^void InitializeCoverage(bool enabled, const char *dir) {$/;"	f	namespace:__sanitizer
InitializeDbgHelpIfNeeded	sanitizer_common/sanitizer_symbolizer_win.cpp	/^void InitializeDbgHelpIfNeeded() {$/;"	f	namespace:__sanitizer
InitializeDeadlySignals	ubsan/ubsan_signals_standalone.cpp	/^void InitializeDeadlySignals() {$/;"	f	namespace:__ubsan
InitializeDeadlySignals	ubsan/ubsan_signals_standalone.cpp	/^void InitializeDeadlySignals() {}$/;"	f	namespace:__ubsan
InitializeDynamicAnnotations	tsan/tsan_interface_ann.cpp	/^void InitializeDynamicAnnotations() {$/;"	f	namespace:__tsan
InitializeFlags	asan/asan_flags.cpp	/^void InitializeFlags() {$/;"	f	namespace:__asan
InitializeFlags	hwasan/hwasan.cpp	/^static void InitializeFlags() {$/;"	f	namespace:__hwasan
InitializeFlags	lsan/lsan.cpp	/^static void InitializeFlags() {$/;"	f
InitializeFlags	tsan/tsan_flags.cpp	/^void InitializeFlags(Flags *f, const char *env, const char *env_option_name) {$/;"	f	namespace:__tsan
InitializeFlags	ubsan/ubsan_flags.cpp	/^void InitializeFlags() {$/;"	f	namespace:__ubsan
InitializeHighMemEnd	asan/asan_rtl.cpp	/^static void InitializeHighMemEnd() {$/;"	f	namespace:__asan
InitializeInterceptors	hwasan/hwasan_interceptors.cpp	/^void InitializeInterceptors() {$/;"	f	namespace:__hwasan
InitializeInterceptors	lsan/lsan_interceptors.cpp	/^void InitializeInterceptors() {$/;"	f	namespace:std::__lsan
InitializeInterceptors	tsan/tsan_interceptors_posix.cpp	/^void InitializeInterceptors() {$/;"	f	namespace:__tsan
InitializeLibIgnore	tsan/tsan_interceptors_posix.cpp	/^void InitializeLibIgnore() {$/;"	f	namespace:__tsan
InitializeLibdispatchInterceptors	tsan/tsan_interceptors_libdispatch.cpp	/^void InitializeLibdispatchInterceptors() {$/;"	f	namespace:__tsan
InitializeLibdispatchInterceptors	tsan/tsan_interceptors_posix.cpp	/^SANITIZER_WEAK_ATTRIBUTE void InitializeLibdispatchInterceptors() {}$/;"	f	namespace:__tsan
InitializeLongjmpXorKey	tsan/tsan_platform_linux.cpp	/^static void InitializeLongjmpXorKey() {$/;"	f	namespace:__tsan
InitializeMainThread	lsan/lsan_fuchsia.cpp	/^void InitializeMainThread() {$/;"	f	namespace:__lsan
InitializeMainThread	lsan/lsan_posix.cpp	/^void InitializeMainThread() {$/;"	f	namespace:__lsan
InitializeMutex	tsan/tsan_mutex.cpp	/^void InitializeMutex() {$/;"	f	namespace:__tsan
InitializePlatform	tsan/tsan_platform_linux.cpp	/^void InitializePlatform() {$/;"	f	namespace:__tsan
InitializePlatform	tsan/tsan_platform_mac.cpp	/^void InitializePlatform() {$/;"	f	namespace:__tsan
InitializePlatform	tsan/tsan_platform_windows.cpp	/^void InitializePlatform() {$/;"	f	namespace:__tsan
InitializePlatformCommonFlags	sanitizer_common/sanitizer_common_nolibc.cpp	/^void InitializePlatformCommonFlags(CommonFlags *cf) {}$/;"	f	namespace:__sanitizer
InitializePlatformCommonFlags	sanitizer_common/sanitizer_fuchsia.cpp	/^void InitializePlatformCommonFlags(CommonFlags *cf) {}$/;"	f	namespace:__sanitizer
InitializePlatformCommonFlags	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void InitializePlatformCommonFlags(CommonFlags *cf) {$/;"	f	namespace:__sanitizer
InitializePlatformCommonFlags	sanitizer_common/sanitizer_mac.cpp	/^void InitializePlatformCommonFlags(CommonFlags *cf) {}$/;"	f	namespace:__sanitizer
InitializePlatformCommonFlags	sanitizer_common/sanitizer_win.cpp	/^void InitializePlatformCommonFlags(CommonFlags *cf) {}$/;"	f	namespace:__sanitizer
InitializePlatformEarly	sanitizer_common/sanitizer_fuchsia.cpp	/^void InitializePlatformEarly() {}$/;"	f	namespace:__sanitizer
InitializePlatformEarly	sanitizer_common/sanitizer_linux.cpp	/^void InitializePlatformEarly() {$/;"	f	namespace:__sanitizer
InitializePlatformEarly	sanitizer_common/sanitizer_mac.cpp	/^void InitializePlatformEarly() {$/;"	f	namespace:__sanitizer
InitializePlatformEarly	sanitizer_common/sanitizer_rtems.cpp	/^void InitializePlatformEarly() {}$/;"	f	namespace:__sanitizer
InitializePlatformEarly	sanitizer_common/sanitizer_win.cpp	/^void InitializePlatformEarly() {$/;"	f	namespace:__sanitizer
InitializePlatformEarly	tsan/tsan_platform_linux.cpp	/^void InitializePlatformEarly() {$/;"	f	namespace:__tsan
InitializePlatformEarly	tsan/tsan_platform_mac.cpp	/^void InitializePlatformEarly() {$/;"	f	namespace:__tsan
InitializePlatformEarly	tsan/tsan_platform_windows.cpp	/^void InitializePlatformEarly() {$/;"	f	namespace:__tsan
InitializePlatformExceptionHandlers	asan/asan_fuchsia.cpp	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	asan/asan_linux.cpp	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	asan/asan_mac.cpp	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	asan/asan_rtems.cpp	/^void InitializePlatformExceptionHandlers() {}$/;"	f	namespace:__asan
InitializePlatformExceptionHandlers	asan/asan_win.cpp	/^void InitializePlatformExceptionHandlers() {$/;"	f	namespace:__asan
InitializePlatformInterceptors	asan/asan_linux.cpp	/^void InitializePlatformInterceptors() {}$/;"	f	namespace:__asan
InitializePlatformInterceptors	asan/asan_mac.cpp	/^void InitializePlatformInterceptors() {}$/;"	f	namespace:__asan
InitializePlatformInterceptors	asan/asan_rtems.cpp	/^void InitializePlatformInterceptors() {}$/;"	f	namespace:__asan
InitializePlatformInterceptors	asan/asan_win.cpp	/^void InitializePlatformInterceptors() {$/;"	f	namespace:__asan
InitializePlatformSpecificModules	lsan/lsan_common_fuchsia.cpp	/^void InitializePlatformSpecificModules() {}$/;"	f	namespace:__lsan
InitializePlatformSpecificModules	lsan/lsan_common_linux.cpp	/^void InitializePlatformSpecificModules() {$/;"	f	namespace:__lsan
InitializePlatformSpecificModules	lsan/lsan_common_mac.cpp	/^void InitializePlatformSpecificModules() {}$/;"	f	namespace:__lsan
InitializeRootRegions	lsan/lsan_common.cpp	/^void InitializeRootRegions() {$/;"	f	namespace:__lsan
InitializeSancovFlags	sanitizer_common/sancov_flags.cpp	/^void InitializeSancovFlags() {$/;"	f	namespace:__sancov
InitializeShadowBaseAddress	hwasan/hwasan_linux.cpp	/^static void InitializeShadowBaseAddress(uptr shadow_size_bytes) {$/;"	f	namespace:__hwasan
InitializeShadowMemory	asan/asan_fuchsia.cpp	/^void InitializeShadowMemory() {$/;"	f	namespace:__asan
InitializeShadowMemory	asan/asan_rtems.cpp	/^void InitializeShadowMemory() {$/;"	f	namespace:__asan
InitializeShadowMemory	asan/asan_shadow_setup.cpp	/^void InitializeShadowMemory() {$/;"	f	namespace:__asan
InitializeShadowMemory	tsan/tsan_platform_posix.cpp	/^void InitializeShadowMemory() {$/;"	f	namespace:__tsan
InitializeShadowMemoryPlatform	tsan/tsan_platform_linux.cpp	/^void InitializeShadowMemoryPlatform() {$/;"	f	namespace:__tsan
InitializeShadowMemoryPlatform	tsan/tsan_platform_mac.cpp	/^void InitializeShadowMemoryPlatform() { }$/;"	f	namespace:__tsan
InitializeSingleGlobal	hwasan/hwasan.cpp	/^static bool InitializeSingleGlobal(const hwasan_global &global) {$/;"	f
InitializeSuppressions	asan/asan_suppressions.cpp	/^void InitializeSuppressions() {$/;"	f	namespace:__asan
InitializeSuppressions	lsan/lsan_common.cpp	/^void InitializeSuppressions() {$/;"	f	namespace:__lsan
InitializeSuppressions	tsan/tsan_suppressions.cpp	/^void InitializeSuppressions() {$/;"	f	namespace:__tsan
InitializeSuppressions	ubsan/ubsan_diag.cpp	/^void __ubsan::InitializeSuppressions() {$/;"	f	class:__ubsan
InitializeSwiftDemangler	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^static void InitializeSwiftDemangler() {$/;"	f	namespace:__sanitizer
InitializeThreadRegistry	lsan/lsan_thread.cpp	/^void InitializeThreadRegistry() {$/;"	f	namespace:__lsan
Initializer	ubsan/ubsan_diag.cpp	/^ScopedReport::Initializer::Initializer() { InitAsStandaloneIfNecessary(); }$/;"	f	class:ScopedReport::Initializer
Initializer	ubsan/ubsan_diag.h	/^  struct Initializer {$/;"	s	class:__ubsan::ScopedReport
InitiatorAlias	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint8_t InitiatorAlias[224];$/;"	m	struct:__anon37
InitiatorName	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint8_t InitiatorName[224];$/;"	m	struct:__anon37
Insert	asan/asan_memory_profile.cpp	/^  void Insert(u32 id, uptr size) {$/;"	f	class:__asan::HeapProfile
InsertShadowStackFrameForTag	tsan/tsan_external.cpp	/^void InsertShadowStackFrameForTag(ThreadState *thr, uptr tag) {$/;"	f	namespace:__tsan
InstallAtExitHandler	hwasan/hwasan_linux.cpp	/^void InstallAtExitHandler() {$/;"	f	namespace:__hwasan
InstallDeadlySignalHandlers	sanitizer_common/sanitizer_fuchsia.cpp	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {}$/;"	f	namespace:__sanitizer
InstallDeadlySignalHandlers	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {$/;"	f	namespace:__sanitizer
InstallDeadlySignalHandlers	sanitizer_common/sanitizer_rtems.cpp	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {}$/;"	f	namespace:__sanitizer
InstallDeadlySignalHandlers	sanitizer_common/sanitizer_win.cpp	/^void InstallDeadlySignalHandlers(SignalHandlerType handler) {$/;"	f	namespace:__sanitizer
InstallMallocFreeHooks	sanitizer_common/sanitizer_common.cpp	/^static int InstallMallocFreeHooks(void (*malloc_hook)(const void *, uptr),$/;"	f	namespace:__sanitizer
InterceptCB	sanitizer_common/sanitizer_win_weak_interception.cpp	/^typedef void (*InterceptCB)();$/;"	t
InterceptFunction	interception/interception_linux.cpp	/^bool InterceptFunction(const char *name, const char *ver, uptr *ptr_to_real,$/;"	f	namespace:__interception
InterceptFunction	interception/interception_linux.cpp	/^bool InterceptFunction(const char *name, uptr *ptr_to_real, uptr func,$/;"	f	namespace:__interception
InterceptionFailed	interception/interception_win.cpp	/^static void InterceptionFailed() {$/;"	f	namespace:__interception
InterceptorContext	tsan/tsan_interceptors_posix.cpp	/^  InterceptorContext()$/;"	f	struct:__tsan::InterceptorContext
InterceptorContext	tsan/tsan_interceptors_posix.cpp	/^struct InterceptorContext {$/;"	s	namespace:__tsan
InterestingDLLsAvailable	interception/interception_win.cpp	/^static void **InterestingDLLsAvailable() {$/;"	f	namespace:__interception
InternalAlloc	sanitizer_common/sanitizer_allocator.cpp	/^void *InternalAlloc(uptr size, InternalAllocatorCache *cache, uptr alignment) {$/;"	f	namespace:__sanitizer
InternalAllocator	sanitizer_common/sanitizer_allocator_internal.h	/^    InternalAllocator;$/;"	t	namespace:__sanitizer
InternalAllocatorCache	sanitizer_common/sanitizer_allocator_internal.h	/^typedef InternalAllocator::AllocatorCache InternalAllocatorCache;$/;"	t	namespace:__sanitizer
InternalCalloc	sanitizer_common/sanitizer_allocator.cpp	/^void *InternalCalloc(uptr count, uptr size, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
InternalDeadlockDetector	tsan/tsan_mutex.cpp	/^InternalDeadlockDetector::InternalDeadlockDetector() {$/;"	f	class:__tsan::InternalDeadlockDetector
InternalDeadlockDetector	tsan/tsan_mutex.h	/^class InternalDeadlockDetector {$/;"	c	namespace:__tsan
InternalDieCallbacks	sanitizer_common/sanitizer_termination.cpp	/^static DieCallbackType InternalDieCallbacks[kMaxNumOfInternalDieCallbacks];$/;"	m	namespace:__sanitizer
InternalFree	sanitizer_common/sanitizer_allocator.cpp	/^void InternalFree(void *addr, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
InternalGetProcAddress	interception/interception_win.cpp	/^uptr InternalGetProcAddress(void *module, const char *func_name) {$/;"	f	namespace:__interception
InternalLongjmp	hwasan/hwasan_interceptors.cpp	/^InternalLongjmp(__hw_register_buf env, int retval) {$/;"	f
InternalLowerBound	sanitizer_common/sanitizer_common.h	/^uptr InternalLowerBound(const Container &v, uptr first, uptr last,$/;"	f	namespace:__sanitizer
InternalMmapVector	sanitizer_common/sanitizer_common.h	/^  InternalMmapVector() { InternalMmapVectorNoCtor<T>::Initialize(0); }$/;"	f	class:__sanitizer::InternalMmapVector
InternalMmapVector	sanitizer_common/sanitizer_common.h	/^  explicit InternalMmapVector(uptr cnt) {$/;"	f	class:__sanitizer::InternalMmapVector
InternalMmapVector	sanitizer_common/sanitizer_common.h	/^class InternalMmapVector : public InternalMmapVectorNoCtor<T> {$/;"	c	namespace:__sanitizer
InternalMmapVectorNoCtor	sanitizer_common/sanitizer_common.h	/^class InternalMmapVectorNoCtor {$/;"	c	namespace:__sanitizer
InternalRealloc	sanitizer_common/sanitizer_allocator.cpp	/^void *InternalRealloc(void *addr, uptr size, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
InternalReallocArray	sanitizer_common/sanitizer_allocator.cpp	/^void *InternalReallocArray(void *addr, uptr count, uptr size,$/;"	f	namespace:__sanitizer
InternalScopedString	sanitizer_common/sanitizer_common.h	/^  explicit InternalScopedString(uptr max_length)$/;"	f	class:__sanitizer::InternalScopedString
InternalScopedString	sanitizer_common/sanitizer_common.h	/^class InternalScopedString : public InternalMmapVector<char> {$/;"	c	namespace:__sanitizer
InternalSizeClassMap	sanitizer_common/sanitizer_allocator_internal.h	/^typedef CompactSizeClassMap InternalSizeClassMap;$/;"	t	namespace:__sanitizer
InternalSymbolizer	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  InternalSymbolizer() { }$/;"	f	class:__sanitizer::final
IntervalsAreSeparate	sanitizer_common/sanitizer_posix.cpp	/^static inline bool IntervalsAreSeparate(uptr start1, uptr end1,$/;"	f	namespace:__sanitizer
IntrusiveList	sanitizer_common/sanitizer_list.h	/^struct IntrusiveList {$/;"	s	namespace:__sanitizer
InvalidBuiltinData	ubsan/ubsan_handlers.h	/^struct InvalidBuiltinData {$/;"	s	namespace:__ubsan
InvalidObjCCast	ubsan/ubsan_handlers.h	/^struct InvalidObjCCast {$/;"	s	namespace:__ubsan
InvalidPCParam	lsan/lsan_common.cpp	/^struct InvalidPCParam {$/;"	s	namespace:__lsan
InvalidValueData	ubsan/ubsan_handlers.h	/^struct InvalidValueData {$/;"	s	namespace:__ubsan
InvalidateModuleList	sanitizer_common/sanitizer_symbolizer.cpp	/^void Symbolizer::InvalidateModuleList() {$/;"	f	class:__sanitizer::Symbolizer
IsARMABIArrayCookie	lsan/lsan_common.h	/^static inline bool IsARMABIArrayCookie(uptr chunk_beg, uptr chunk_size,$/;"	f	namespace:__lsan
IsASCII	asan/asan_globals.cpp	/^static bool IsASCII(unsigned char c) { return \/*0x00 <= c &&*\/ c <= 0x7F; }$/;"	f	namespace:__asan
IsAbsolutePath	sanitizer_common/sanitizer_posix.cpp	/^bool IsAbsolutePath(const char *path) {$/;"	f	namespace:__sanitizer
IsAbsolutePath	sanitizer_common/sanitizer_rtems.cpp	/^bool IsAbsolutePath(const char *path) {$/;"	f	namespace:__sanitizer
IsAbsolutePath	sanitizer_common/sanitizer_win.cpp	/^bool IsAbsolutePath(const char *path) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	sanitizer_common/sanitizer_fuchsia.cpp	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	sanitizer_common/sanitizer_rtems.cpp	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAccessibleMemoryRange	sanitizer_common/sanitizer_win.cpp	/^bool IsAccessibleMemoryRange(uptr beg, uptr size) {$/;"	f	namespace:__sanitizer
IsAcqRelOrder	tsan/tsan_interface_atomic.cpp	/^static bool IsAcqRelOrder(morder mo) {$/;"	f
IsAcquireOrder	tsan/tsan_interface_atomic.cpp	/^static bool IsAcquireOrder(morder mo) {$/;"	f
IsAddressNearGlobal	asan/asan_globals.cpp	/^static bool IsAddressNearGlobal(uptr addr, const __asan_global &g) {$/;"	f	namespace:__asan
IsAligned	sanitizer_common/sanitizer_common.h	/^inline bool IsAligned(uptr a, uptr alignment) {$/;"	f	namespace:__sanitizer
IsAlive	sanitizer_common/sanitizer_linux.cpp	/^bool ThreadLister::IsAlive(int tid) {$/;"	f	class:__sanitizer::ThreadLister
IsAllocated	asan/asan_allocator.cpp	/^bool AsanChunkView::IsAllocated() const {$/;"	f	class:__asan::AsanChunkView
IsAllocated	hwasan/hwasan_allocator.cpp	/^bool HwasanChunkView::IsAllocated() const {$/;"	f	class:__hwasan::HwasanChunkView
IsAllocated	sanitizer_common/sanitizer_allocator_primary64.h	/^    bool IsAllocated() const {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
IsAllocatorOutOfMemory	sanitizer_common/sanitizer_allocator.cpp	/^bool IsAllocatorOutOfMemory() {$/;"	f	namespace:__sanitizer
IsAlpha	sanitizer_common/sanitizer_win.cpp	/^static bool IsAlpha(char c) {$/;"	f	namespace:__sanitizer
IsAlreadyAcquired	tsan/tsan_clock.cpp	/^bool ThreadClock::IsAlreadyAcquired(const SyncClock *src) const {$/;"	f	class:__tsan::ThreadClock
IsAppMem	tsan/tsan_platform.h	/^bool IsAppMem(uptr mem) {$/;"	f	namespace:__tsan
IsAppMemImpl	tsan/tsan_platform.h	/^bool IsAppMemImpl(uptr mem) {$/;"	f	namespace:__tsan
IsAppNotRodata	tsan/tsan_interceptors_posix.cpp	/^static bool IsAppNotRodata(uptr addr) {$/;"	f
IsAtomic	tsan/tsan_rtl.h	/^  bool IsAtomic() const {$/;"	f	class:__tsan::Shadow
IsBothReadsOrAtomic	tsan/tsan_rtl.h	/^  bool ALWAYS_INLINE IsBothReadsOrAtomic(bool kIsWrite, bool kIsAtomic) const {$/;"	f	class:__tsan::Shadow
IsDecimal	sanitizer_common/sanitizer_procmaps_common.cpp	/^bool IsDecimal(char c) {$/;"	f	namespace:__sanitizer
IsDigit	sanitizer_common/sanitizer_common.h	/^inline bool IsDigit(int c) {$/;"	f	namespace:__sanitizer
IsDynamicRTName	asan/asan_linux.cpp	/^static bool IsDynamicRTName(const char *libname) {$/;"	f	namespace:__asan
IsExecutable	sanitizer_common/sanitizer_procmaps.h	/^  bool IsExecutable() const { return protection & kProtectionExecute; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsExpectedReport	tsan/tsan_interface_ann.cpp	/^bool IsExpectedReport(uptr addr, uptr size) {$/;"	f	namespace:__tsan
IsFiredSuppression	tsan/tsan_rtl_report.cpp	/^bool IsFiredSuppression(Context *ctx, ReportType type, StackTrace trace) {$/;"	f	namespace:__tsan
IsFiredSuppression	tsan/tsan_rtl_report.cpp	/^static bool IsFiredSuppression(Context *ctx, ReportType type, uptr addr) {$/;"	f	namespace:__tsan
IsFlagSet	tsan/tsan_sync.h	/^  bool IsFlagSet(u32 f) const {$/;"	f	struct:__tsan::SyncVar
IsFreed	tsan/tsan_rtl.h	/^  bool IsFreed() const {$/;"	f	class:__tsan::Shadow
IsFromLocalPool	asan/asan_malloc_linux.cpp	/^bool IsFromLocalPool(const void *ptr) {$/;"	f
IsHandledDeadlyException	sanitizer_common/sanitizer_win.cpp	/^bool IsHandledDeadlyException(DWORD exceptionCode) {$/;"	f	namespace:__sanitizer
IsHex	sanitizer_common/sanitizer_procmaps_common.cpp	/^bool IsHex(char c) {$/;"	f	namespace:__sanitizer
IsIgnored	sanitizer_common/sanitizer_libignore.h	/^inline bool LibIgnore::IsIgnored(uptr pc, bool *pc_in_ignored_lib) const {$/;"	f	class:__sanitizer::LibIgnore
IsInDlsymAllocPool	asan/asan_malloc_linux.cpp	/^static inline bool IsInDlsymAllocPool(const void *ptr) {$/;"	f
IsInDlsymAllocPool	hwasan/hwasan_interceptors.cpp	/^static bool IsInDlsymAllocPool(const void *ptr) {$/;"	f
IsInRange	sanitizer_common/sanitizer_libignore.h	/^  inline bool IsInRange(uptr pc, const LibCodeRange &range) const {$/;"	f	class:__sanitizer::LibIgnore
IsInStackOrTls	tsan/tsan_rtl_report.cpp	/^static bool IsInStackOrTls(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
IsInterceptorSuppressed	asan/asan_suppressions.cpp	/^bool IsInterceptorSuppressed(const char *interceptor_name) {$/;"	f	namespace:__asan
IsInvalidPointerPair	asan/asan_report.cpp	/^static bool IsInvalidPointerPair(uptr a1, uptr a2) {$/;"	f	namespace:__asan
IsItaniumABIArrayCookie	lsan/lsan_common.h	/^static inline bool IsItaniumABIArrayCookie(uptr chunk_beg, uptr chunk_size,$/;"	f	namespace:__lsan
IsLinker	lsan/lsan_common_linux.cpp	/^static bool IsLinker(const LoadedModule& module) {$/;"	f	namespace:__lsan
IsLoadOrder	tsan/tsan_interface_atomic.cpp	/^static bool IsLoadOrder(morder mo) {$/;"	f
IsMainThread	hwasan/hwasan_thread.h	/^  bool IsMainThread() { return unique_id_ == 0; }$/;"	f	class:__hwasan::Thread
IsMemoryAccess	sanitizer_common/sanitizer_posix.cpp	/^bool SignalContext::IsMemoryAccess() const {$/;"	f	class:__sanitizer::SignalContext
IsMemoryAccess	sanitizer_common/sanitizer_win.cpp	/^bool SignalContext::IsMemoryAccess() const {$/;"	f	class:__sanitizer::SignalContext
IsMemoryPadding	interception/interception_win.cpp	/^static bool IsMemoryPadding(uptr address, uptr size) {$/;"	f	namespace:__interception
IsMetaMem	tsan/tsan_platform.h	/^bool IsMetaMem(uptr mem) {$/;"	f	namespace:__tsan
IsMetaMemImpl	tsan/tsan_platform.h	/^bool IsMetaMemImpl(uptr mem) {$/;"	f	namespace:__tsan
IsModuleInstrumented	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static bool IsModuleInstrumented(const load_command *first_lc) {$/;"	f	namespace:__sanitizer
IsODRViolationSuppressed	asan/asan_suppressions.cpp	/^bool IsODRViolationSuppressed(const char *global_var_name) {$/;"	f	namespace:__asan
IsOneOf	sanitizer_common/sanitizer_procmaps_linux.cpp	/^static bool IsOneOf(char c, char c1, char c2) {$/;"	f	namespace:__sanitizer
IsPCSuppressed	ubsan/ubsan_diag.cpp	/^bool __ubsan::IsPCSuppressed(ErrorType ET, uptr PC, const char *Filename) {$/;"	f	class:__ubsan
IsPathSeparator	sanitizer_common/sanitizer_posix.cpp	/^bool IsPathSeparator(const char c) {$/;"	f	namespace:__sanitizer
IsPathSeparator	sanitizer_common/sanitizer_rtems.cpp	/^bool IsPathSeparator(const char c) {$/;"	f	namespace:__sanitizer
IsPathSeparator	sanitizer_common/sanitizer_win.cpp	/^bool IsPathSeparator(const char c) {$/;"	f	namespace:__sanitizer
IsPcInstrumented	sanitizer_common/sanitizer_libignore.h	/^inline bool LibIgnore::IsPcInstrumented(uptr pc) const {$/;"	f	class:__sanitizer::LibIgnore
IsPowerOfTwo	sanitizer_common/sanitizer_common.h	/^inline bool IsPowerOfTwo(uptr x) {$/;"	f	namespace:__sanitizer
IsPremapShadowAvailable	hwasan/hwasan_dynamic_shadow.cpp	/^static bool IsPremapShadowAvailable() {$/;"	f	namespace:__hwasan
IsProcessRunning	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool IsProcessRunning(pid_t pid) {$/;"	f	namespace:__sanitizer
IsProcessRunning	sanitizer_common/sanitizer_win.cpp	/^bool IsProcessRunning(pid_t pid) {$/;"	f	namespace:__sanitizer
IsQuarantined	asan/asan_allocator.cpp	/^bool AsanChunkView::IsQuarantined() const {$/;"	f	class:__asan::AsanChunkView
IsQueueSerial	tsan/tsan_interceptors_libdispatch.cpp	/^static bool IsQueueSerial(dispatch_queue_t q) {$/;"	f	namespace:__tsan
IsRWNotWeaker	tsan/tsan_rtl.h	/^  bool ALWAYS_INLINE IsRWNotWeaker(bool kIsWrite, bool kIsAtomic) const {$/;"	f	class:__tsan::Shadow
IsRWWeakerOrEqual	tsan/tsan_rtl.h	/^  bool ALWAYS_INLINE IsRWWeakerOrEqual(bool kIsWrite, bool kIsAtomic) const {$/;"	f	class:__tsan::Shadow
IsRead	tsan/tsan_rtl.h	/^  bool ALWAYS_INLINE IsRead() const { return x_ & kReadBit; }$/;"	f	class:__tsan::Shadow
IsReadable	sanitizer_common/sanitizer_procmaps.h	/^  bool IsReadable() const { return protection & kProtectionRead; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsRegionExhausted	sanitizer_common/sanitizer_allocator_primary64.h	/^  bool IsRegionExhausted(RegionInfo *region, uptr class_id,$/;"	f	class:SizeClassAllocator64
IsReleaseOrder	tsan/tsan_interface_atomic.cpp	/^static bool IsReleaseOrder(morder mo) {$/;"	f
IsSameModule	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^static bool IsSameModule(const char* path) {$/;"	f	namespace:__sanitizer
IsShadowMem	tsan/tsan_platform.h	/^bool IsShadowMem(uptr mem) {$/;"	f	namespace:__tsan
IsShadowMemImpl	tsan/tsan_platform.h	/^bool IsShadowMemImpl(uptr mem) {$/;"	f	namespace:__tsan
IsShared	sanitizer_common/sanitizer_procmaps.h	/^  bool IsShared() const { return protection & kProtectionShared; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsShared	tsan/tsan_clock.cpp	/^bool SyncClock::IsShared() const {$/;"	f	class:__tsan::SyncClock
IsSpace	sanitizer_common/sanitizer_common.h	/^inline bool IsSpace(int c) {$/;"	f	namespace:__sanitizer
IsSpecialCaseOfOperatorNew0	lsan/lsan_common.h	/^inline bool IsSpecialCaseOfOperatorNew0(uptr chunk_beg, uptr chunk_size,$/;"	f	namespace:__lsan
IsStackOverflow	sanitizer_common/sanitizer_fuchsia.cpp	/^bool SignalContext::IsStackOverflow() const { return false; }$/;"	f	class:__sanitizer::SignalContext
IsStackOverflow	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool SignalContext::IsStackOverflow() const {$/;"	f	class:__sanitizer::SignalContext
IsStackOverflow	sanitizer_common/sanitizer_win.cpp	/^bool SignalContext::IsStackOverflow() const {$/;"	f	class:__sanitizer::SignalContext
IsStackTraceSuppressed	asan/asan_suppressions.cpp	/^bool IsStackTraceSuppressed(const StackTrace *stack) {$/;"	f	namespace:__asan
IsStateDetached	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool IsStateDetached(int state) {$/;"	f	namespace:__sanitizer
IsStoreOrder	tsan/tsan_interface_atomic.cpp	/^static bool IsStoreOrder(morder mo) {$/;"	f
IsSuppressed	tsan/tsan_suppressions.cpp	/^static uptr IsSuppressed(const char *stype, const AddressInfo &info,$/;"	f	namespace:__tsan
IsSuppressed	tsan/tsan_suppressions.cpp	/^uptr IsSuppressed(ReportType typ, const ReportLocation *loc, Suppression **sp) {$/;"	f	namespace:__tsan
IsSuppressed	tsan/tsan_suppressions.cpp	/^uptr IsSuppressed(ReportType typ, const ReportStack *stack, Suppression **sp) {$/;"	f	namespace:__tsan
IsSystemHeapAddress	asan/asan_linux.cpp	/^bool IsSystemHeapAddress (uptr addr) { return false; }$/;"	f	namespace:__asan
IsSystemHeapAddress	asan/asan_mac.cpp	/^bool IsSystemHeapAddress (uptr addr) { return false; }$/;"	f	namespace:__asan
IsSystemHeapAddress	asan/asan_win.cpp	/^bool IsSystemHeapAddress(uptr addr) {$/;"	f	namespace:__asan
IsTaggedObjCPointer	tsan/tsan_interceptors_mac.cpp	/^static bool IsTaggedObjCPointer(id obj) {$/;"	f	namespace:__tsan
IsThreadStackOrTls	tsan/tsan_rtl_report.cpp	/^ThreadContext *IsThreadStackOrTls(uptr addr, bool *is_stack) {$/;"	f	namespace:__tsan
IsTlsInitialized	asan/asan_win.cpp	/^BOOL IsTlsInitialized() {$/;"	f	namespace:__asan
IsTrueFaultingAddress	sanitizer_common/sanitizer_linux.cpp	/^bool SignalContext::IsTrueFaultingAddress() const {$/;"	f	class:__sanitizer::SignalContext
IsTrueFaultingAddress	sanitizer_common/sanitizer_mac.cpp	/^bool SignalContext::IsTrueFaultingAddress() const {$/;"	f	class:__sanitizer::SignalContext
IsTrueFaultingAddress	sanitizer_common/sanitizer_win.cpp	/^bool SignalContext::IsTrueFaultingAddress() const {$/;"	f	class:__sanitizer::SignalContext
IsValid	asan/asan_allocator.cpp	/^bool AsanChunkView::IsValid() const {$/;"	f	class:__asan::AsanChunkView
IsValid	asan/asan_errors.h	/^  bool IsValid() { return kind != kErrorKindInvalid; }$/;"	f	struct:__asan::ErrorDescription
IsValidFrame	sanitizer_common/sanitizer_stacktrace.h	/^static inline bool IsValidFrame(uptr frame, uptr stack_top, uptr stack_bottom) {$/;"	f	namespace:__sanitizer
IsVptrCheckSuppressed	ubsan/ubsan_diag.cpp	/^bool __ubsan::IsVptrCheckSuppressed(const char *TypeName) {$/;"	f	class:__ubsan
IsWritable	sanitizer_common/sanitizer_procmaps.h	/^  bool IsWritable() const { return protection & kProtectionWrite; }$/;"	f	class:__sanitizer::MemoryMappedSegment
IsWrite	tsan/tsan_rtl.h	/^  bool ALWAYS_INLINE IsWrite() const { return !IsRead(); }$/;"	f	class:__tsan::Shadow
IsZero	tsan/tsan_rtl.h	/^  bool IsZero() const {$/;"	f	class:__tsan::Shadow
IssueKind	ubsan/ubsan_monitor.h	/^  const char *IssueKind;$/;"	m	struct:__ubsan::UndefinedBehaviorReport
Iterator	sanitizer_common/sanitizer_bitvector.h	/^    Iterator() { }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
Iterator	sanitizer_common/sanitizer_bitvector.h	/^    Iterator() { }$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
Iterator	sanitizer_common/sanitizer_bitvector.h	/^    explicit Iterator(const BasicBitVector &bv) : bv_(bv) {}$/;"	f	class:__sanitizer::BasicBitVector::Iterator
Iterator	sanitizer_common/sanitizer_bitvector.h	/^    explicit Iterator(const TwoLevelBitVector &bv) : bv_(bv), i0_(0), i1_(0) {$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
Iterator	sanitizer_common/sanitizer_bitvector.h	/^  class Iterator {$/;"	c	class:__sanitizer::BasicBitVector
Iterator	sanitizer_common/sanitizer_bitvector.h	/^  class Iterator {$/;"	c	class:__sanitizer::TwoLevelBitVector
Iterator	sanitizer_common/sanitizer_list.h	/^  typedef IteratorBase<Item> Iterator;$/;"	t	struct:__sanitizer::IntrusiveList
IteratorBase	sanitizer_common/sanitizer_list.h	/^    explicit IteratorBase(ItemTy *current) : current_(current) {}$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
IteratorBase	sanitizer_common/sanitizer_list.h	/^  class IteratorBase {$/;"	c	struct:__sanitizer::IntrusiveList
JMP	builtins/assembly.h	108;"	d
JMP	builtins/assembly.h	111;"	d
JMPc	builtins/assembly.h	109;"	d
JMPc	builtins/assembly.h	112;"	d
JavaContext	tsan/tsan_interface_java.cpp	/^  JavaContext(jptr heap_begin, jptr heap_size)$/;"	f	struct:__tsan::JavaContext
JavaContext	tsan/tsan_interface_java.cpp	/^struct JavaContext {$/;"	s	namespace:__tsan
JmpBuf	tsan/tsan_rtl.h	/^struct JmpBuf {$/;"	s	namespace:__tsan
JmpBufGarbageCollect	tsan/tsan_interceptors_posix.cpp	/^static void JmpBufGarbageCollect(ThreadState *thr, uptr sp) {$/;"	f
JoinThread	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::JoinThread(u32 tid, void *arg) {$/;"	f	class:__sanitizer::ThreadRegistry
K_ATOS_ENV_VAR	sanitizer_common/sanitizer_symbolizer_mac.cpp	149;"	d
K_ATOS_ENV_VAR	sanitizer_common/sanitizer_symbolizer_mac.cpp	61;"	d
KillAllThreads	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^void ThreadSuspender::KillAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
KillAllThreads	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^void ThreadSuspender::KillAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
Kind	ubsan/ubsan_diag.h	/^    ArgKind Kind;$/;"	m	struct:__ubsan::Diag::Arg
Kind	ubsan/ubsan_diag.h	/^  LocationKind Kind;$/;"	m	class:__ubsan::Location
Kind	ubsan/ubsan_handlers.h	/^  \/* ImplicitConversionCheckKind *\/ unsigned char Kind;$/;"	m	struct:__ubsan::ImplicitConversionData
Kind	ubsan/ubsan_handlers.h	/^  unsigned char Kind;$/;"	m	struct:__ubsan::InvalidBuiltinData
Kind	ubsan/ubsan_value.h	/^  enum Kind {$/;"	g	class:__ubsan::TypeDescriptor
LFStack	sanitizer_common/sanitizer_lfstack.h	/^struct LFStack {$/;"	s	namespace:__sanitizer
LHSType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &LHSType;$/;"	m	struct:__ubsan::ShiftOutOfBoundsData
LIKELY	sanitizer_common/sanitizer_internal_defs.h	214;"	d
LIKELY	sanitizer_common/sanitizer_internal_defs.h	228;"	d
LINKER_INITIALIZED	sanitizer_common/sanitizer_internal_defs.h	/^enum LinkerInitialized { LINKER_INITIALIZED = 0 };$/;"	e	enum:__sanitizer::LinkerInitialized
LINUX_TYPES_WRAPPER_H	include/system/linux/types.h	2;"	d
LK_Memory	ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LK_Null	ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LK_Source	ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LK_Symbolized	ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	e	enum:__ubsan::Location::LocationKind
LLVMSymbolizer	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^LLVMSymbolizer::LLVMSymbolizer(const char *path, LowLevelAllocator *allocator)$/;"	f	class:__sanitizer::LLVMSymbolizer
LLVMSymbolizerProcess	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^  explicit LLVMSymbolizerProcess(const char *path)$/;"	f	class:__sanitizer::final
LOCAL_LABEL	builtins/assembly.h	25;"	d
LOCAL_LABEL	builtins/assembly.h	36;"	d
LOCAL_LABEL	builtins/assembly.h	55;"	d
LOGICAL	asan/asan_malloc_win.cpp	/^typedef unsigned long LOGICAL;$/;"	t
LOG_POINTERS	lsan/lsan_common.cpp	58;"	d
LOG_THREADS	lsan/lsan_common.cpp	63;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_linux.cpp	387;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_linux.cpp	392;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_linux.cpp	394;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_linux.cpp	397;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_linux.cpp	399;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_linux.cpp	401;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_mac.cpp	269;"	d
LONG_JMP_SP_ENV_SLOT	tsan/tsan_platform_mac.cpp	272;"	d
LPCVOID	asan/asan_malloc_win.cpp	/^typedef const void *LPCVOID;$/;"	t
LPVOID	asan/asan_malloc_win.cpp	/^typedef void *LPVOID;$/;"	t
LSAN_ALLOCATOR_H	lsan/lsan_allocator.h	15;"	d
LSAN_COMMON_H	lsan/lsan_common.h	15;"	d
LSAN_FLAG	lsan/lsan_common.cpp	46;"	d
LSAN_FLAG	lsan/lsan_common.cpp	48;"	d
LSAN_FLAG	lsan/lsan_common.cpp	52;"	d
LSAN_FLAG	lsan/lsan_common.cpp	55;"	d
LSAN_FLAG	lsan/lsan_common.h	69;"	d
LSAN_FLAG	lsan/lsan_common.h	71;"	d
LSAN_FUCHSIA_H	lsan/lsan_fuchsia.h	15;"	d
LSAN_MAYBE_INTERCEPT_ALIGNED_ALLOC	lsan/lsan_interceptors.cpp	149;"	d
LSAN_MAYBE_INTERCEPT_ALIGNED_ALLOC	lsan/lsan_interceptors.cpp	151;"	d
LSAN_MAYBE_INTERCEPT_ATEXIT	lsan/lsan_interceptors.cpp	383;"	d
LSAN_MAYBE_INTERCEPT_ATEXIT	lsan/lsan_interceptors.cpp	385;"	d
LSAN_MAYBE_INTERCEPT_MALLINFO	lsan/lsan_interceptors.cpp	175;"	d
LSAN_MAYBE_INTERCEPT_MALLINFO	lsan/lsan_interceptors.cpp	182;"	d
LSAN_MAYBE_INTERCEPT_MALLOC_USABLE_SIZE	lsan/lsan_interceptors.cpp	159;"	d
LSAN_MAYBE_INTERCEPT_MALLOC_USABLE_SIZE	lsan/lsan_interceptors.cpp	162;"	d
LSAN_MAYBE_INTERCEPT_MALLOPT	lsan/lsan_interceptors.cpp	180;"	d
LSAN_MAYBE_INTERCEPT_MALLOPT	lsan/lsan_interceptors.cpp	183;"	d
LSAN_MAYBE_INTERCEPT_MEMALIGN	lsan/lsan_interceptors.cpp	125;"	d
LSAN_MAYBE_INTERCEPT_MEMALIGN	lsan/lsan_interceptors.cpp	127;"	d
LSAN_MAYBE_INTERCEPT_PTHREAD_ATFORK	lsan/lsan_interceptors.cpp	401;"	d
LSAN_MAYBE_INTERCEPT_PTHREAD_ATFORK	lsan/lsan_interceptors.cpp	403;"	d
LSAN_MAYBE_INTERCEPT_STRERROR	lsan/lsan_interceptors.cpp	411;"	d
LSAN_MAYBE_INTERCEPT_STRERROR	lsan/lsan_interceptors.cpp	413;"	d
LSAN_MAYBE_INTERCEPT_THR_EXIT	lsan/lsan_interceptors.cpp	362;"	d
LSAN_MAYBE_INTERCEPT_THR_EXIT	lsan/lsan_interceptors.cpp	364;"	d
LSAN_MAYBE_INTERCEPT__LWP_EXIT	lsan/lsan_interceptors.cpp	351;"	d
LSAN_MAYBE_INTERCEPT__LWP_EXIT	lsan/lsan_interceptors.cpp	353;"	d
LSAN_MAYBE_INTERCEPT___CXA_ATEXIT	lsan/lsan_interceptors.cpp	373;"	d
LSAN_MAYBE_INTERCEPT___CXA_ATEXIT	lsan/lsan_interceptors.cpp	375;"	d
LSAN_MAYBE_INTERCEPT___LIBC_MEMALIGN	lsan/lsan_interceptors.cpp	138;"	d
LSAN_MAYBE_INTERCEPT___LIBC_MEMALIGN	lsan/lsan_interceptors.cpp	140;"	d
LSAN_POSIX_H	lsan/lsan_posix.h	15;"	d
LSAN_THREAD_H	lsan/lsan_thread.h	15;"	d
LargeChunkHeader	asan/asan_allocator.cpp	/^class LargeChunkHeader {$/;"	c	namespace:__asan
LargeMmapAllocator	sanitizer_common/sanitizer_allocator_secondary.h	/^class LargeMmapAllocator {$/;"	c
LargeMmapAllocatorPtrArrayDynamic	sanitizer_common/sanitizer_allocator_secondary.h	/^class LargeMmapAllocatorPtrArrayDynamic {$/;"	c
LargeMmapAllocatorPtrArrayStatic	sanitizer_common/sanitizer_allocator_secondary.h	/^class LargeMmapAllocatorPtrArrayStatic {$/;"	c
LateInitialize	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual void LateInitialize() {}$/;"	f	class:__sanitizer::SymbolizerTool
LateInitialize	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^  void LateInitialize() {$/;"	f	class:__sanitizer::final
LateInitialize	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^void AtosSymbolizer::LateInitialize() { process_->LateInitialize(); }$/;"	f	class:__sanitizer::AtosSymbolizer
LateInitialize	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^void Symbolizer::LateInitialize() {$/;"	f	class:__sanitizer::Symbolizer
LateInitialize	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^void Symbolizer::LateInitialize() {$/;"	f	class:__sanitizer::Symbolizer
LateInitialize	sanitizer_common/sanitizer_symbolizer_win.cpp	/^void Symbolizer::LateInitialize() {$/;"	f	class:__sanitizer::Symbolizer
LateInitializeTools	sanitizer_common/sanitizer_symbolizer.cpp	/^void Symbolizer::LateInitializeTools() {$/;"	f	class:__sanitizer::Symbolizer
Leak	lsan/lsan_common.cpp	/^  const char *Leak() { return Blue(); }$/;"	f	class:__lsan::Decorator
Leak	lsan/lsan_common.h	/^struct Leak {$/;"	s	namespace:__lsan
LeakComparator	lsan/lsan_common.cpp	/^static bool LeakComparator(const Leak &leak1, const Leak &leak2) {$/;"	f	namespace:__lsan
LeakReport	lsan/lsan_common.h	/^  LeakReport() {}$/;"	f	class:__lsan::LeakReport
LeakReport	lsan/lsan_common.h	/^class LeakReport {$/;"	c	namespace:__lsan
LeakedObject	lsan/lsan_common.h	/^struct LeakedObject {$/;"	s	namespace:__lsan
LeakyResetEnv	sanitizer_common/sanitizer_mac.cpp	/^void LeakyResetEnv(const char *name, const char *name_value) {$/;"	f	namespace:__sanitizer
LeastSignificantSetBitIndex	sanitizer_common/sanitizer_common.h	/^inline uptr LeastSignificantSetBitIndex(uptr x) {$/;"	f	namespace:__sanitizer
Level	ubsan/ubsan_diag.h	/^  DiagLevel Level;$/;"	m	class:__ubsan::Diag
Lib	sanitizer_common/sanitizer_libignore.h	/^  struct Lib {$/;"	s	class:__sanitizer::LibIgnore
LibCodeRange	sanitizer_common/sanitizer_libignore.h	/^  struct LibCodeRange {$/;"	s	class:__sanitizer::LibIgnore
LibIgnore	sanitizer_common/sanitizer_libignore.cpp	/^LibIgnore::LibIgnore(LinkerInitialized) {$/;"	f	class:__sanitizer::LibIgnore
LibIgnore	sanitizer_common/sanitizer_libignore.h	/^class LibIgnore {$/;"	c	namespace:__sanitizer
LibbacktraceSymbolizer	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  explicit LibbacktraceSymbolizer(void *state) : state_(state) {}$/;"	f	class:__sanitizer::final
LibraryNameIs	sanitizer_common/sanitizer_linux.cpp	/^bool LibraryNameIs(const char *full_name, const char *base_name) {$/;"	f	namespace:__sanitizer
Line	ubsan/ubsan_value.h	/^  u32 Line;$/;"	m	class:__ubsan::SourceLocation
Link	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  explicit Link(u32 id = 0, u32 seq = 0, u32 tid = 0, u32 s0 = 0, u32 s1 = 0)$/;"	f	struct:__sanitizer::Link
Link	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^struct Link {$/;"	s	namespace:__sanitizer
LinkerInitialized	sanitizer_common/sanitizer_internal_defs.h	/^enum LinkerInitialized { LINKER_INITIALIZED = 0 };$/;"	g	namespace:__sanitizer
List	sanitizer_common/sanitizer_quarantine.h	/^  typedef IntrusiveList<QuarantineBatch> List;$/;"	t	class:__sanitizer::QuarantineCache
ListOfGlobals	asan/asan_globals.cpp	/^struct ListOfGlobals {$/;"	s	namespace:__asan
ListOfModules	sanitizer_common/sanitizer_common.h	/^  ListOfModules() : initialized(false) {}$/;"	f	class:__sanitizer::ListOfModules
ListOfModules	sanitizer_common/sanitizer_common.h	/^class ListOfModules {$/;"	c	namespace:__sanitizer
ListThreads	sanitizer_common/sanitizer_linux.cpp	/^ThreadLister::Result ThreadLister::ListThreads($/;"	f	class:__sanitizer::ThreadLister
LoAppMemBeg	tsan/tsan_platform.h	/^uptr LoAppMemBeg(void) {$/;"	f	namespace:__tsan
LoAppMemEnd	tsan/tsan_platform.h	/^uptr LoAppMemEnd(void) {$/;"	f	namespace:__tsan
Load	hwasan/hwasan_checks.h	/^enum class AccessType { Load, Store };$/;"	m	class:__hwasan::AccessType
Load	sanitizer_common/sanitizer_local_address_space_view.h	/^  static const T *Load(const T *target_address, uptr num_elements = 1) {$/;"	f	struct:__sanitizer::LocalAddressSpaceView
LoadFromCache	sanitizer_common/sanitizer_procmaps_common.cpp	/^void MemoryMappingLayout::LoadFromCache() {$/;"	f	class:__sanitizer::MemoryMappingLayout
LoadFromCache	sanitizer_common/sanitizer_procmaps_mac.cpp	/^void MemoryMappingLayout::LoadFromCache() {$/;"	f	class:__sanitizer::MemoryMappingLayout
LoadShadow	tsan/tsan_rtl.cpp	/^Shadow LoadShadow(u64 *p) {$/;"	f	namespace:__tsan
LoadWritable	sanitizer_common/sanitizer_local_address_space_view.h	/^  static T *LoadWritable(T *target_address, uptr num_elements = 1) {$/;"	f	struct:__sanitizer::LocalAddressSpaceView
LoadedModule	sanitizer_common/sanitizer_common.h	/^  LoadedModule()$/;"	f	class:__sanitizer::LoadedModule
LoadedModule	sanitizer_common/sanitizer_common.h	/^class LoadedModule {$/;"	c	namespace:__sanitizer
Loc	ubsan/ubsan_diag.h	/^  Location Loc;$/;"	m	class:__ubsan::Diag
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::AlignmentAssumptionData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::CFIBadIcallData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::CFICheckFailData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::FloatCastOverflowDataV2
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::ImplicitConversionData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::InvalidBuiltinData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::InvalidObjCCast
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::InvalidValueData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::NonNullArgData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::OutOfBoundsData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::OverflowData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::PointerOverflowData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::ShiftOutOfBoundsData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::TypeMismatchData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::UnreachableData
Loc	ubsan/ubsan_handlers.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::VLABoundData
Loc	ubsan/ubsan_handlers_cxx.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
Loc	ubsan/ubsan_handlers_cxx.h	/^  SourceLocation Loc;$/;"	m	struct:__ubsan::FunctionTypeMismatchData
Loc	ubsan/ubsan_monitor.h	/^  Location &Loc;$/;"	m	struct:__ubsan::UndefinedBehaviorReport
LocalAddressSpaceView	sanitizer_common/sanitizer_local_address_space_view.h	/^struct LocalAddressSpaceView {$/;"	s	namespace:__sanitizer
LocalInfo	sanitizer_common/sanitizer_symbolizer.h	/^struct LocalInfo {$/;"	s	namespace:__sanitizer
LocatePcInTrace	sanitizer_common/sanitizer_stacktrace.cpp	/^uptr BufferedStackTrace::LocatePcInTrace(uptr pc) {$/;"	f	class:__sanitizer::BufferedStackTrace
Location	asan/asan_descriptions.h	/^  const char *Location() { return Green(); }$/;"	f	class:__asan::Decorator
Location	hwasan/hwasan_report.cpp	/^  const char *Location() { return Green(); }$/;"	f	class:__hwasan::Decorator
Location	tsan/tsan_report.cpp	/^  const char *Location()   { return Green(); }$/;"	f	class:__tsan::Decorator
Location	ubsan/ubsan_diag.h	/^  Location() : Kind(LK_Null) {}$/;"	f	class:__ubsan::Location
Location	ubsan/ubsan_diag.h	/^  Location(MemoryLocation Loc) :$/;"	f	class:__ubsan::Location
Location	ubsan/ubsan_diag.h	/^  Location(SourceLocation Loc) :$/;"	f	class:__ubsan::Location
Location	ubsan/ubsan_diag.h	/^  Location(const SymbolizedStackHolder &Stack) :$/;"	f	class:__ubsan::Location
Location	ubsan/ubsan_diag.h	/^class Location {$/;"	c	namespace:__ubsan
LocationKind	ubsan/ubsan_diag.h	/^  enum LocationKind { LK_Null, LK_Source, LK_Memory, LK_Symbolized };$/;"	g	class:__ubsan::Location
Lock	sanitizer_common/sanitizer_fuchsia.cpp	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	sanitizer_common/sanitizer_linux.cpp	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	sanitizer_common/sanitizer_mac.cpp	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	sanitizer_common/sanitizer_mutex.h	/^  void Lock() {$/;"	f	class:__sanitizer::RWMutex
Lock	sanitizer_common/sanitizer_mutex.h	/^  void Lock() {$/;"	f	class:__sanitizer::StaticSpinMutex
Lock	sanitizer_common/sanitizer_rtems.cpp	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	sanitizer_common/sanitizer_solaris.cpp	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	sanitizer_common/sanitizer_thread_registry.h	/^  void Lock() { mtx_.Lock(); }$/;"	f	class:__sanitizer::ThreadRegistry
Lock	sanitizer_common/sanitizer_win.cpp	/^void BlockingMutex::Lock() {$/;"	f	class:__sanitizer::BlockingMutex
Lock	tsan/tsan_mutex.cpp	/^void InternalDeadlockDetector::Lock(MutexType t) {$/;"	f	class:__tsan::InternalDeadlockDetector
Lock	tsan/tsan_mutex.cpp	/^void Mutex::Lock() {$/;"	f	class:__tsan::Mutex
Lock	tsan/tsan_mutex.h	/^typedef GenericScopedLock<Mutex> Lock;$/;"	t	namespace:__tsan
LockAll	sanitizer_common/sanitizer_stackdepotbase.h	/^void StackDepotBase<Node, kReservedBits, kTabSizeLog>::LockAll() {$/;"	f	class:__sanitizer::StackDepotBase
LockAllocator	asan/asan_allocator.cpp	/^void LockAllocator() {$/;"	f	namespace:__lsan
LockAllocator	lsan/lsan_allocator.cpp	/^void LockAllocator() {$/;"	f	namespace:__lsan
LockSlow	sanitizer_common/sanitizer_mutex.h	/^  void NOINLINE LockSlow() {$/;"	f	class:__sanitizer::RWMutex
LockSlow	sanitizer_common/sanitizer_mutex.h	/^  void NOINLINE LockSlow() {$/;"	f	class:__sanitizer::StaticSpinMutex
LockStuffAndStopTheWorld	lsan/lsan_common_fuchsia.cpp	/^void LockStuffAndStopTheWorld(StopTheWorldCallback callback,$/;"	f	namespace:__lsan
LockStuffAndStopTheWorld	lsan/lsan_common_linux.cpp	/^void LockStuffAndStopTheWorld(StopTheWorldCallback callback,$/;"	f	namespace:__lsan
LockStuffAndStopTheWorld	lsan/lsan_common_mac.cpp	/^void LockStuffAndStopTheWorld(StopTheWorldCallback callback,$/;"	f	namespace:__lsan
LockStuffAndStopTheWorldCallback	lsan/lsan_common_linux.cpp	/^static int LockStuffAndStopTheWorldCallback(struct dl_phdr_info *info,$/;"	f	namespace:__lsan
LockThreadRegistry	asan/asan_thread.cpp	/^void LockThreadRegistry() {$/;"	f	namespace:__lsan
LockThreadRegistry	lsan/lsan_thread.cpp	/^void LockThreadRegistry() { thread_registry->Lock(); }$/;"	f	namespace:__lsan
LockWithContext	sanitizer_common/sanitizer_deadlock_detector.h	/^  struct LockWithContext {$/;"	s	class:__sanitizer::DeadlockDetectorTLS
Log2	sanitizer_common/sanitizer_common.h	/^inline uptr Log2(uptr x) {$/;"	f	namespace:__sanitizer
LogAlignment	ubsan/ubsan_handlers.h	/^  unsigned char LogAlignment;$/;"	m	struct:__ubsan::TypeMismatchData
LogFullErrorReport	sanitizer_common/sanitizer_common.h	/^inline void LogFullErrorReport(const char *buffer) {}$/;"	f	namespace:__sanitizer
LogFullErrorReport	sanitizer_common/sanitizer_mac.cpp	/^void LogFullErrorReport(const char *buffer) {$/;"	f	namespace:__sanitizer
LogFullErrorReport	sanitizer_common/sanitizer_win.cpp	/^void LogFullErrorReport(const char *buffer) {$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	sanitizer_common/sanitizer_common.h	/^inline void LogMessageOnPrintf(const char *str) {}$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	sanitizer_common/sanitizer_common_nolibc.cpp	/^void LogMessageOnPrintf(const char *str) {}$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void LogMessageOnPrintf(const char *str) {$/;"	f	namespace:__sanitizer
LogMessageOnPrintf	sanitizer_common/sanitizer_mac.cpp	/^void LogMessageOnPrintf(const char *str) {$/;"	f	namespace:__sanitizer
LongJmp	tsan/tsan_interceptors_posix.cpp	/^static void LongJmp(ThreadState *thr, uptr *env) {$/;"	f
LowLevelAllocateCallback	sanitizer_common/sanitizer_common.h	/^typedef void (*LowLevelAllocateCallback)(uptr ptr, uptr size);$/;"	t	namespace:__sanitizer
LowLevelAllocator	sanitizer_common/sanitizer_common.h	/^class LowLevelAllocator {$/;"	c	namespace:__sanitizer
LsanMetadata	asan/asan_allocator.cpp	/^LsanMetadata::LsanMetadata(uptr chunk) {$/;"	f	class:__lsan::LsanMetadata
LsanMetadata	lsan/lsan_allocator.cpp	/^LsanMetadata::LsanMetadata(uptr chunk) {$/;"	f	class:__lsan::LsanMetadata
LsanMetadata	lsan/lsan_common.h	/^class LsanMetadata {$/;"	c	namespace:__lsan
LsanOnDeadlySignal	lsan/lsan_fuchsia.cpp	/^void LsanOnDeadlySignal(int signo, void *siginfo, void *context) {}$/;"	f	namespace:__lsan
LsanOnDeadlySignal	lsan/lsan_posix.cpp	/^void LsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__lsan
M	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr M = (1 << S) - 1;$/;"	m	class:SizeClassMap
MAPPING_APP_BEG	tsan/tsan_platform.h	/^  MAPPING_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_APP_END	tsan/tsan_platform.h	/^  MAPPING_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_HEAP_BEG	tsan/tsan_platform.h	/^  MAPPING_HEAP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_HEAP_END	tsan/tsan_platform.h	/^  MAPPING_HEAP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_HI_APP_BEG	tsan/tsan_platform.h	/^  MAPPING_HI_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_HI_APP_END	tsan/tsan_platform.h	/^  MAPPING_HI_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_LO_APP_BEG	tsan/tsan_platform.h	/^  MAPPING_LO_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_LO_APP_END	tsan/tsan_platform.h	/^  MAPPING_LO_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_META_SHADOW_BEG	tsan/tsan_platform.h	/^  MAPPING_META_SHADOW_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_META_SHADOW_END	tsan/tsan_platform.h	/^  MAPPING_META_SHADOW_END,$/;"	e	enum:__tsan::MappingType
MAPPING_MID_APP_BEG	tsan/tsan_platform.h	/^  MAPPING_MID_APP_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_MID_APP_END	tsan/tsan_platform.h	/^  MAPPING_MID_APP_END,$/;"	e	enum:__tsan::MappingType
MAPPING_SHADOW_BEG	tsan/tsan_platform.h	/^  MAPPING_SHADOW_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_SHADOW_END	tsan/tsan_platform.h	/^  MAPPING_SHADOW_END,$/;"	e	enum:__tsan::MappingType
MAPPING_TRACE_BEG	tsan/tsan_platform.h	/^  MAPPING_TRACE_BEG,$/;"	e	enum:__tsan::MappingType
MAPPING_TRACE_END	tsan/tsan_platform.h	/^  MAPPING_TRACE_END,$/;"	e	enum:__tsan::MappingType
MAPPING_VDSO_BEG	tsan/tsan_platform.h	/^  MAPPING_VDSO_BEG,$/;"	e	enum:__tsan::MappingType
MAP_FAILED	tsan/tsan_interceptors_posix.cpp	/^void *const MAP_FAILED = (void*)-1;$/;"	v
MAP_FIXED	tsan/tsan_interceptors_posix.cpp	/^const int MAP_FIXED = 0x10;$/;"	v
MAP_NORESERVE	sanitizer_common/sanitizer_posix.cpp	33;"	d
MAP_NORESERVE	sanitizer_common/sanitizer_posix.cpp	34;"	d
MAP_NORESERVE	sanitizer_common/sanitizer_posix_libcdep.cpp	42;"	d
MAP_NORESERVE	sanitizer_common/sanitizer_posix_libcdep.cpp	43;"	d
MAYBE_ALLOCATE_FROM_LOCAL_POOL	asan/asan_malloc_local.h	33;"	d
MAYBE_ALLOCATE_FROM_LOCAL_POOL	asan/asan_malloc_local.h	47;"	d
MBlock	tsan/tsan_defs.h	/^struct MBlock {$/;"	s	namespace:__tsan
MBlockAtExit	tsan/tsan_mman.h	/^  MBlockAtExit,$/;"	e	enum:__tsan::MBlockType
MBlockClock	tsan/tsan_mman.h	/^  MBlockClock,$/;"	e	enum:__tsan::MBlockType
MBlockDeadInfo	tsan/tsan_mman.h	/^  MBlockDeadInfo,$/;"	e	enum:__tsan::MBlockType
MBlockExpectRace	tsan/tsan_mman.h	/^  MBlockExpectRace,$/;"	e	enum:__tsan::MBlockType
MBlockFlag	tsan/tsan_mman.h	/^  MBlockFlag,$/;"	e	enum:__tsan::MBlockType
MBlockJmpBuf	tsan/tsan_mman.h	/^  MBlockJmpBuf,$/;"	e	enum:__tsan::MBlockType
MBlockRacyAddresses	tsan/tsan_mman.h	/^  MBlockRacyAddresses,$/;"	e	enum:__tsan::MBlockType
MBlockRacyStacks	tsan/tsan_mman.h	/^  MBlockRacyStacks,$/;"	e	enum:__tsan::MBlockType
MBlockReport	tsan/tsan_mman.h	/^  MBlockReport,$/;"	e	enum:__tsan::MBlockType
MBlockReportLoc	tsan/tsan_mman.h	/^  MBlockReportLoc,$/;"	e	enum:__tsan::MBlockType
MBlockReportMop	tsan/tsan_mman.h	/^  MBlockReportMop,$/;"	e	enum:__tsan::MBlockType
MBlockReportMutex	tsan/tsan_mman.h	/^  MBlockReportMutex,$/;"	e	enum:__tsan::MBlockType
MBlockReportStack	tsan/tsan_mman.h	/^  MBlockReportStack,$/;"	e	enum:__tsan::MBlockType
MBlockReportThread	tsan/tsan_mman.h	/^  MBlockReportThread,$/;"	e	enum:__tsan::MBlockType
MBlockScopedBuf	tsan/tsan_mman.h	/^  MBlockScopedBuf,$/;"	e	enum:__tsan::MBlockType
MBlockShadowStack	tsan/tsan_mman.h	/^  MBlockShadowStack,$/;"	e	enum:__tsan::MBlockType
MBlockSignal	tsan/tsan_mman.h	/^  MBlockSignal,$/;"	e	enum:__tsan::MBlockType
MBlockStackTrace	tsan/tsan_mman.h	/^  MBlockStackTrace,$/;"	e	enum:__tsan::MBlockType
MBlockString	tsan/tsan_mman.h	/^  MBlockString,$/;"	e	enum:__tsan::MBlockType
MBlockSuppression	tsan/tsan_mman.h	/^  MBlockSuppression,$/;"	e	enum:__tsan::MBlockType
MBlockSync	tsan/tsan_mman.h	/^  MBlockSync,$/;"	e	enum:__tsan::MBlockType
MBlockThreadContex	tsan/tsan_mman.h	/^  MBlockThreadContex,$/;"	e	enum:__tsan::MBlockType
MBlockType	tsan/tsan_mman.h	/^enum MBlockType {$/;"	g	namespace:__tsan
MBlockTypeCount	tsan/tsan_mman.h	/^  MBlockTypeCount$/;"	e	enum:__tsan::MBlockType
MD2_CTX_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned MD2_CTX_sz = sizeof(MD2_CTX);$/;"	m	namespace:__sanitizer
MD2_return_length	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned MD2_return_length = MD2_DIGEST_STRING_LENGTH;$/;"	m	namespace:__sanitizer
MD4_CTX_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned MD4_CTX_sz = sizeof(MD4_CTX);$/;"	m	namespace:__sanitizer
MD4_return_length	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned MD4_return_length = MD4_DIGEST_STRING_LENGTH;$/;"	m	namespace:__sanitizer
MD5Hash	tsan/tsan_defs.h	/^struct MD5Hash {$/;"	s	namespace:__tsan
MD5_CTX	tsan/tsan_md5.cpp	/^} MD5_CTX;$/;"	t	namespace:__tsan	typeref:struct:__tsan::__anon81
MD5_CTX_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned MD5_CTX_sz = sizeof(MD5_CTX);$/;"	m	namespace:__sanitizer
MD5_Final	tsan/tsan_md5.cpp	/^void MD5_Final(unsigned char *result, MD5_CTX *ctx) {$/;"	f	namespace:__tsan
MD5_Init	tsan/tsan_md5.cpp	/^void MD5_Init(MD5_CTX *ctx) {$/;"	f	namespace:__tsan
MD5_Update	tsan/tsan_md5.cpp	/^void MD5_Update(MD5_CTX *ctx, const void *data, ulong_t size) {$/;"	f	namespace:__tsan
MD5_return_length	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned MD5_return_length = MD5_DIGEST_STRING_LENGTH;$/;"	m	namespace:__sanitizer
MD5_u32plus	tsan/tsan_md5.cpp	/^typedef unsigned int MD5_u32plus;$/;"	t	namespace:__tsan
MEM_TO_SHADOW	asan/asan_mapping_myriad.h	17;"	d
MEM_TO_SHADOW	asan/asan_mapping_sparc64.h	28;"	d
MFHooks	sanitizer_common/sanitizer_common.cpp	/^static MallocFreeHook MFHooks[kMaxMallocFreeHooks];$/;"	m	namespace:__sanitizer
MSAN_INTERFACE_H	include/sanitizer/msan_interface.h	14;"	d
MSC_PREREQ	sanitizer_common/sanitizer_platform.h	306;"	d
MSC_PREREQ	sanitizer_common/sanitizer_platform.h	308;"	d
MacosVersion	sanitizer_common/sanitizer_mac.h	/^  MacosVersion(u16 major, u16 minor) : VersionBase(major, minor) {}$/;"	f	struct:__sanitizer::MacosVersion
MacosVersion	sanitizer_common/sanitizer_mac.h	/^struct MacosVersion : VersionBase<MacosVersion> {$/;"	s	namespace:__sanitizer
Magenta	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Magenta() const { return ansi_ ? "\\033[1m\\033[35m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
Magic	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static const u64 Magic = SANITIZER_WORDSIZE == 64 ? Magic64 : Magic32;$/;"	m	namespace:__sancov::__anon40
Magic32	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static const u64 Magic32 = 0xC0BFFFFFFFFFFF32ULL;$/;"	m	namespace:__sancov::__anon40
Magic64	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^constexpr u64 Magic64 = 0xC0BFFFFFFFFFFF64ULL;$/;"	m	namespace:__sancov::__anon45
Magic64	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static const u64 Magic64 = 0xC0BFFFFFFFFFFF64ULL;$/;"	m	namespace:__sancov::__anon40
MainThreadStackBase	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer
MainThreadStackBase	sanitizer_common/sanitizer_rtems.cpp	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer
MainThreadStackSize	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer
MainThreadStackSize	sanitizer_common/sanitizer_rtems.cpp	/^uptr MainThreadStackBase, MainThreadStackSize;$/;"	m	namespace:__sanitizer
MainThreadTlsBase	sanitizer_common/sanitizer_rtems.cpp	/^uptr MainThreadTlsBase, MainThreadTlsSize;$/;"	m	namespace:__sanitizer
MainThreadTlsSize	sanitizer_common/sanitizer_rtems.cpp	/^uptr MainThreadTlsBase, MainThreadTlsSize;$/;"	m	namespace:__sanitizer
MallocDebugK	asan/asan_malloc_linux.cpp	/^struct MallocDebugK {$/;"	s
MallocDebugL	asan/asan_malloc_linux.cpp	/^struct MallocDebugL {$/;"	s
MallocFreeHook	sanitizer_common/sanitizer_common.cpp	/^struct MallocFreeHook {$/;"	s	namespace:__sanitizer
Map	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr ReservedAddressRange::Map(uptr fixed_addr, uptr map_size,$/;"	f	class:__sanitizer::ReservedAddressRange
Map	sanitizer_common/sanitizer_posix_libcdep.cpp	/^uptr ReservedAddressRange::Map(uptr fixed_addr, uptr size, const char *name) {$/;"	f	class:__sanitizer::ReservedAddressRange
Map	sanitizer_common/sanitizer_win.cpp	/^uptr ReservedAddressRange::Map(uptr fixed_addr, uptr size, const char *name) {$/;"	f	class:__sanitizer::ReservedAddressRange
Map	tsan/tsan_dense_alloc.h	/^  T *Map(IndexT idx) {$/;"	f	class:__tsan::DenseSlabAlloc
MapDynamicShadow	sanitizer_common/sanitizer_linux_libcdep.cpp	/^uptr MapDynamicShadow(uptr shadow_size_bytes, uptr shadow_scale,$/;"	f	namespace:__sanitizer
MapDynamicShadow	sanitizer_common/sanitizer_mac.cpp	/^uptr MapDynamicShadow(uptr shadow_size_bytes, uptr shadow_scale,$/;"	f	namespace:__sanitizer
MapDynamicShadow	sanitizer_common/sanitizer_win.cpp	/^uptr MapDynamicShadow(uptr shadow_size_bytes, uptr shadow_scale,$/;"	f	namespace:__sanitizer
MapFileToMemory	sanitizer_common/sanitizer_posix.cpp	/^void *MapFileToMemory(const char *file_name, uptr *buff_size) {$/;"	f	namespace:__sanitizer
MapFileToMemory	sanitizer_common/sanitizer_win.cpp	/^void *MapFileToMemory(const char *file_name, uptr *buff_size) {$/;"	f	namespace:__sanitizer
MapOrDie	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr ReservedAddressRange::MapOrDie(uptr fixed_addr, uptr map_size,$/;"	f	class:__sanitizer::ReservedAddressRange
MapOrDie	sanitizer_common/sanitizer_posix_libcdep.cpp	/^uptr ReservedAddressRange::MapOrDie(uptr fixed_addr, uptr size,$/;"	f	class:__sanitizer::ReservedAddressRange
MapOrDie	sanitizer_common/sanitizer_win.cpp	/^uptr ReservedAddressRange::MapOrDie(uptr fixed_addr, uptr size,$/;"	f	class:__sanitizer::ReservedAddressRange
MapPackedCounterArrayBuffer	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr MapPackedCounterArrayBuffer(uptr buffer_size) {$/;"	f	class:SizeClassAllocator64::MemoryMapper
MapRodata	tsan/tsan_platform_linux.cpp	/^static void MapRodata() {$/;"	f	namespace:__tsan
MapShadow	tsan/tsan_rtl.cpp	/^void MapShadow(uptr addr, uptr size) {$/;"	f	namespace:__tsan
MapThreadTrace	tsan/tsan_rtl.cpp	/^void MapThreadTrace(uptr addr, uptr size, const char *name) {$/;"	f	namespace:__tsan
MapToMacos	sanitizer_common/sanitizer_mac.cpp	/^static void MapToMacos(u16 *major, u16 *minor) {$/;"	f	namespace:__sanitizer
MapUnmapCallback	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  typedef AsanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__asan::AP64
MapUnmapCallback	asan/asan_allocator.h	/^  typedef AsanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__asan::AP64
MapUnmapCallback	hwasan/hwasan_allocator.h	/^  typedef HwasanMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__hwasan::AP64
MapUnmapCallback	lsan/lsan_allocator.h	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__lsan::AP32
MapUnmapCallback	sanitizer_common/sanitizer_allocator_internal.h	/^  typedef NoOpMapUnmapCallback MapUnmapCallback;$/;"	t	struct:__sanitizer::AP32
MapUnmapCallback	sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef typename Params::MapUnmapCallback MapUnmapCallback;$/;"	t	class:SizeClassAllocator32
MapUnmapCallback	sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef typename Params::MapUnmapCallback MapUnmapCallback;$/;"	t	class:SizeClassAllocator64
MapUnmapCallback	tsan/tsan_mman.cpp	/^struct MapUnmapCallback {$/;"	s	namespace:__tsan
MapUnmapCallback	tsan/tsan_rtl.h	/^  typedef __tsan::MapUnmapCallback MapUnmapCallback;$/;"	t	struct:__tsan::AP32
MapUnmapCallback	tsan/tsan_rtl.h	/^  typedef __tsan::MapUnmapCallback MapUnmapCallback;$/;"	t	struct:__tsan::AP64
MapWithCallback	sanitizer_common/sanitizer_allocator_primary32.h	/^  void *MapWithCallback(uptr size) {$/;"	f	class:SizeClassAllocator32
MapWithCallback	sanitizer_common/sanitizer_allocator_primary64.h	/^  bool MapWithCallback(uptr beg, uptr size, const char *name) {$/;"	f	class:SizeClassAllocator64
MapWithCallbackOrDie	sanitizer_common/sanitizer_allocator_primary64.h	/^  void MapWithCallbackOrDie(uptr beg, uptr size, const char *name) {$/;"	f	class:SizeClassAllocator64
MapWritableFileToMemory	sanitizer_common/sanitizer_posix.cpp	/^void *MapWritableFileToMemory(void *addr, uptr size, fd_t fd, OFF_T offset) {$/;"	f	namespace:__sanitizer
MapWritableFileToMemory	sanitizer_common/sanitizer_win.cpp	/^void *MapWritableFileToMemory(void *addr, uptr size, fd_t fd, OFF_T offset) {$/;"	f	namespace:__sanitizer
Mapping	tsan/tsan_platform.h	/^struct Mapping {$/;"	s	namespace:__tsan
MappingArchImpl	tsan/tsan_platform.h	/^uptr MappingArchImpl(void) {$/;"	f	namespace:__tsan
MappingImpl	tsan/tsan_platform.h	/^uptr MappingImpl(void) {$/;"	f	namespace:__tsan
MappingSize	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  static constexpr size_t MappingSize = sizeof(uptr) << 32;$/;"	m	class:__sancov::__anon45::final
MappingType	tsan/tsan_platform.h	/^enum MappingType {$/;"	g	namespace:__tsan
MarkAsFreed	tsan/tsan_rtl.h	/^  void MarkAsFreed() {$/;"	f	class:__tsan::Shadow
MarkIndirectlyLeakedCb	lsan/lsan_common.cpp	/^static void MarkIndirectlyLeakedCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
MarkInvalidPCCb	lsan/lsan_common.cpp	/^static void MarkInvalidPCCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
Match	sanitizer_common/sanitizer_suppressions.cpp	/^bool SuppressionContext::Match(const char *str, const char *type,$/;"	f	class:__sanitizer::SuppressionContext
Max	sanitizer_common/sanitizer_common.h	/^template<class T> T Max(T a, T b) { return a > b ? a : b; }$/;"	f	namespace:__sanitizer
MaxArgs	ubsan/ubsan_diag.h	/^  static const unsigned MaxArgs = 8;$/;"	m	class:__ubsan::Diag
MaxCached	sanitizer_common/sanitizer_allocator_primary32.h	/^    static uptr MaxCached(uptr size) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
MaxCachedHint	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static uptr MaxCachedHint(uptr size) {$/;"	f	class:SizeClassMap
MaxConnections	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int MaxConnections : 1;$/;"	m	struct:__anon31::__anon32
MaxConnections	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint16_t MaxConnections;$/;"	m	struct:__anon31
MaxRanges	ubsan/ubsan_diag.h	/^  static const unsigned MaxRanges = 1;$/;"	m	class:__ubsan::Diag
MaxRecvDataSegmentLength	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int MaxRecvDataSegmentLength : 1;$/;"	m	struct:__anon31::__anon32
MaxRecvDataSegmentLength	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t MaxRecvDataSegmentLength;$/;"	m	struct:__anon31
MaybeAppendToErrorMessage	hwasan/hwasan_report.cpp	/^  static void MaybeAppendToErrorMessage(const char *msg) {$/;"	f	class:__hwasan::ScopedReport
MaybeCallSancovDefaultOptions	sanitizer_common/sancov_flags.cpp	/^static const char *MaybeCallSancovDefaultOptions() {$/;"	f	namespace:__sancov
MaybeDemangleGlobalName	asan/asan_globals.cpp	/^const char *MaybeDemangleGlobalName(const char *name) {$/;"	f	namespace:__asan
MaybeDumpInstructionBytes	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static void MaybeDumpInstructionBytes(uptr pc) {$/;"	f	namespace:__sanitizer
MaybeDumpRegisters	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static void MaybeDumpRegisters(void *context) {$/;"	f	namespace:__sanitizer
MaybeInDlsym	asan/asan_malloc_linux.cpp	/^static inline bool MaybeInDlsym() {$/;"	f
MaybeInstallSigaction	sanitizer_common/sanitizer_posix_libcdep.cpp	/^static void MaybeInstallSigaction(int signum,$/;"	f	namespace:__sanitizer
MaybePrintStackTrace	ubsan/ubsan_diag.cpp	/^static void MaybePrintStackTrace(uptr pc, uptr bp) {$/;"	f
MaybeRealStrnlen	asan/asan_interceptors.cpp	/^static inline uptr MaybeRealStrnlen(const char *s, uptr maxlen) {$/;"	f	namespace:__asan
MaybeReexec	sanitizer_common/sanitizer_fuchsia.cpp	/^void MaybeReexec() {}$/;"	f	namespace:__sanitizer
MaybeReexec	sanitizer_common/sanitizer_linux.cpp	/^void MaybeReexec() {$/;"	f	namespace:__sanitizer
MaybeReexec	sanitizer_common/sanitizer_mac.cpp	/^void MaybeReexec() {$/;"	f	namespace:__sanitizer
MaybeReexec	sanitizer_common/sanitizer_rtems.cpp	/^void MaybeReexec() {}$/;"	f	namespace:__sanitizer
MaybeReexec	sanitizer_common/sanitizer_win.cpp	/^void MaybeReexec() {$/;"	f	namespace:__sanitizer
MaybeReleaseToOS	sanitizer_common/sanitizer_allocator_primary64.h	/^  void MaybeReleaseToOS(uptr class_id, bool force) {$/;"	f	class:SizeClassAllocator64
MaybeReportErrorSummary	ubsan/ubsan_diag.cpp	/^static void MaybeReportErrorSummary(Location Loc, ErrorType Type) {$/;"	f
MaybeReportLinuxPIEBug	asan/asan_shadow_setup.cpp	/^static void MaybeReportLinuxPIEBug() {$/;"	f	namespace:__asan
MaybeReportNonExecRegion	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static void MaybeReportNonExecRegion(uptr pc) {$/;"	f	namespace:__sanitizer
MaybeReportThreadLeak	tsan/tsan_rtl_thread.cpp	/^static void MaybeReportThreadLeak(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
MaybeSpawnBackgroundThread	tsan/tsan_rtl.cpp	/^void MaybeSpawnBackgroundThread() {$/;"	f	namespace:__tsan
MaybeStartBackgroudThread	sanitizer_common/sanitizer_common_libcdep.cpp	/^void MaybeStartBackgroudThread() {$/;"	f	namespace:__sanitizer
MaybeUseAsanDefaultOptionsCompileDefinition	asan/asan_flags.cpp	/^static const char *MaybeUseAsanDefaultOptionsCompileDefinition() {$/;"	f	namespace:__asan
MemCount	tsan/tsan_platform_linux.cpp	/^  MemCount  = 8,$/;"	e	enum:__tsan::__anon82
MemFile	tsan/tsan_platform_linux.cpp	/^  MemFile   = 3,$/;"	e	enum:__tsan::__anon82
MemHeap	tsan/tsan_platform_linux.cpp	/^  MemHeap   = 6,$/;"	e	enum:__tsan::__anon82
MemIsApp	hwasan/hwasan_linux.cpp	/^bool MemIsApp(uptr p) {$/;"	f	namespace:__hwasan
MemMeta	tsan/tsan_platform_linux.cpp	/^  MemMeta   = 2,$/;"	e	enum:__tsan::__anon82
MemMmap	tsan/tsan_platform_linux.cpp	/^  MemMmap   = 4,$/;"	e	enum:__tsan::__anon82
MemOther	tsan/tsan_platform_linux.cpp	/^  MemOther  = 7,$/;"	e	enum:__tsan::__anon82
MemShadow	tsan/tsan_platform_linux.cpp	/^  MemShadow = 1,$/;"	e	enum:__tsan::__anon82
MemToMeta	tsan/tsan_platform.h	/^u32 *MemToMeta(uptr x) {$/;"	f	namespace:__tsan
MemToMetaImpl	tsan/tsan_platform.h	/^u32 *MemToMetaImpl(uptr x) {$/;"	f	namespace:__tsan
MemToShadow	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static inline uptr MemToShadow(uptr p) {$/;"	f	namespace:__asan
MemToShadow	asan/asan_mapping.h	/^static inline uptr MemToShadow(uptr p) {$/;"	f	namespace:__asan
MemToShadow	hwasan/hwasan_mapping.h	/^inline uptr MemToShadow(uptr untagged_addr) {$/;"	f	namespace:__hwasan
MemToShadow	tsan/tsan_platform.h	/^uptr MemToShadow(uptr x) {$/;"	f	namespace:__tsan
MemToShadowImpl	tsan/tsan_platform.h	/^uptr MemToShadowImpl(uptr x) {$/;"	f	namespace:__tsan
MemToShadowSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static inline uptr MemToShadowSize(uptr size) { return size >> SHADOW_SCALE; }$/;"	f	namespace:__asan
MemToShadowSize	asan/asan_mapping.h	/^static inline uptr MemToShadowSize(uptr size) { return size >> SHADOW_SCALE; }$/;"	f	namespace:__asan
MemToShadowSize	hwasan/hwasan_mapping.h	/^inline uptr MemToShadowSize(uptr size) {$/;"	f	namespace:__hwasan
MemTotal	tsan/tsan_platform_linux.cpp	/^  MemTotal  = 0,$/;"	e	enum:__tsan::__anon82
MemTrace	tsan/tsan_platform_linux.cpp	/^  MemTrace  = 5,$/;"	e	enum:__tsan::__anon82
MemalignFromLocalPool	asan/asan_malloc_linux.cpp	/^void* MemalignFromLocalPool(uptr alignment, uptr size) {$/;"	f
MemoryAccess	tsan/tsan_rtl.cpp	/^void MemoryAccess(ThreadState *thr, uptr pc, uptr addr,$/;"	f	namespace:__tsan
MemoryAccessImpl	tsan/tsan_rtl.cpp	/^void MemoryAccessImpl(ThreadState *thr, uptr addr,$/;"	f	namespace:__tsan
MemoryAccessImpl1	tsan/tsan_rtl.cpp	/^void MemoryAccessImpl1(ThreadState *thr, uptr addr,$/;"	f	namespace:__tsan
MemoryAccessRange	tsan/tsan_rtl_thread.cpp	/^void MemoryAccessRange(ThreadState *thr, uptr pc, uptr addr,$/;"	f	namespace:__tsan
MemoryByte	sanitizer_common/sanitizer_report_decorator.h	/^  const char *MemoryByte() const { return Magenta(); }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
MemoryLoc	ubsan/ubsan_diag.h	/^  MemoryLocation MemoryLoc;$/;"	m	class:__ubsan::Location
MemoryLocation	ubsan/ubsan_diag.h	/^typedef uptr MemoryLocation;$/;"	t	namespace:__ubsan
MemoryMappedSegment	sanitizer_common/sanitizer_procmaps.h	/^  explicit MemoryMappedSegment(char *buff = nullptr, uptr size = 0)$/;"	f	class:__sanitizer::MemoryMappedSegment
MemoryMappedSegment	sanitizer_common/sanitizer_procmaps.h	/^class MemoryMappedSegment {$/;"	c	namespace:__sanitizer
MemoryMappedSegmentData	sanitizer_common/sanitizer_procmaps_mac.cpp	/^struct MemoryMappedSegmentData {$/;"	s	namespace:__sanitizer
MemoryMapper	sanitizer_common/sanitizer_allocator_primary64.h	/^    MemoryMapper(const ThisT& base_allocator, uptr class_id)$/;"	f	class:SizeClassAllocator64::MemoryMapper
MemoryMapper	sanitizer_common/sanitizer_allocator_primary64.h	/^  class MemoryMapper {$/;"	c	class:SizeClassAllocator64
MemoryMappingLayout	sanitizer_common/sanitizer_procmaps.h	/^class MemoryMappingLayout {$/;"	c	namespace:__sanitizer
MemoryMappingLayout	sanitizer_common/sanitizer_procmaps_common.cpp	/^MemoryMappingLayout::MemoryMappingLayout(bool cache_enabled) {$/;"	f	class:__sanitizer::MemoryMappingLayout
MemoryMappingLayout	sanitizer_common/sanitizer_procmaps_fuchsia.cpp	/^MemoryMappingLayout::MemoryMappingLayout(bool) { Reset(); }$/;"	f	class:__sanitizer::MemoryMappingLayout
MemoryMappingLayout	sanitizer_common/sanitizer_procmaps_mac.cpp	/^MemoryMappingLayout::MemoryMappingLayout(bool cache_enabled) {$/;"	f	class:__sanitizer::MemoryMappingLayout
MemoryMappingLayoutData	sanitizer_common/sanitizer_fuchsia.h	/^struct MemoryMappingLayoutData {$/;"	s	namespace:__sanitizer
MemoryMappingLayoutData	sanitizer_common/sanitizer_linux.h	/^struct MemoryMappingLayoutData {$/;"	s	namespace:__sanitizer
MemoryMappingLayoutData	sanitizer_common/sanitizer_mac.h	/^struct MemoryMappingLayoutData {$/;"	s	namespace:__sanitizer
MemoryProfileCB	asan/asan_memory_profile.cpp	/^static void MemoryProfileCB(const SuspendedThreadsList &suspended_threads_list,$/;"	f	namespace:__asan
MemoryProfiler	tsan/tsan_rtl.cpp	/^static void MemoryProfiler(Context *ctx, fd_t fd, int i) {$/;"	f	namespace:__tsan
MemoryRangeFreed	tsan/tsan_rtl.cpp	/^void MemoryRangeFreed(ThreadState *thr, uptr pc, uptr addr, uptr size) {$/;"	f	namespace:__tsan
MemoryRangeImitateWrite	tsan/tsan_rtl.cpp	/^void MemoryRangeImitateWrite(ThreadState *thr, uptr pc, uptr addr, uptr size) {$/;"	f	namespace:__tsan
MemoryRangeImitateWriteOrResetRange	tsan/tsan_rtl.cpp	/^void MemoryRangeImitateWriteOrResetRange(ThreadState *thr, uptr pc, uptr addr,$/;"	f	namespace:__tsan
MemoryRangeIsAvailable	sanitizer_common/sanitizer_posix.cpp	/^bool MemoryRangeIsAvailable(uptr range_start, uptr range_end) {$/;"	f	namespace:__sanitizer
MemoryRangeIsAvailable	sanitizer_common/sanitizer_win.cpp	/^bool MemoryRangeIsAvailable(uptr range_start, uptr range_end) {$/;"	f	namespace:__sanitizer
MemoryRangeSet	tsan/tsan_rtl.cpp	/^static void MemoryRangeSet(ThreadState *thr, uptr pc, uptr addr, uptr size,$/;"	f	namespace:__tsan
MemoryRead	tsan/tsan_rtl.h	/^void ALWAYS_INLINE MemoryRead(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
MemoryReadAtomic	tsan/tsan_rtl.h	/^void ALWAYS_INLINE MemoryReadAtomic(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
MemoryResetRange	tsan/tsan_rtl.cpp	/^void MemoryResetRange(ThreadState *thr, uptr pc, uptr addr, uptr size) {$/;"	f	namespace:__tsan
MemoryUsedPerThread	hwasan/hwasan_thread_list.h	/^  uptr MemoryUsedPerThread() {$/;"	f	class:__hwasan::HwasanThreadList
MemoryWrite	tsan/tsan_rtl.h	/^void ALWAYS_INLINE MemoryWrite(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
MemoryWriteAtomic	tsan/tsan_rtl.h	/^void ALWAYS_INLINE MemoryWriteAtomic(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
MergeBatches	sanitizer_common/sanitizer_quarantine.h	/^  void MergeBatches(QuarantineCache *to_deallocate) {$/;"	f	class:__sanitizer::QuarantineCache
MergeFrom	asan/asan_stats.cpp	/^void AsanStats::MergeFrom(const AsanStats *stats) {$/;"	f	class:__asan::AsanStats
MergeThreadStats	asan/asan_stats.cpp	/^static void MergeThreadStats(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__asan
Message	ubsan/ubsan_diag.h	/^  const char *Message;$/;"	m	class:__ubsan::Diag
MetaMap	tsan/tsan_sync.cpp	/^MetaMap::MetaMap()$/;"	f	class:__tsan::MetaMap
MetaMap	tsan/tsan_sync.h	/^class MetaMap {$/;"	c	namespace:__tsan
MetaShadowBeg	tsan/tsan_platform.h	/^uptr MetaShadowBeg(void) {$/;"	f	namespace:__tsan
MetaShadowEnd	tsan/tsan_platform.h	/^uptr MetaShadowEnd(void) {$/;"	f	namespace:__tsan
Metadata	hwasan/hwasan_allocator.h	/^struct Metadata {$/;"	s	namespace:__hwasan
Metadata	lsan/lsan_allocator.cpp	/^static ChunkMetadata *Metadata(const void *p) {$/;"	f	namespace:__lsan
MidAppMemBeg	tsan/tsan_platform.h	/^uptr MidAppMemBeg(void) {$/;"	f	namespace:__tsan
MidAppMemEnd	tsan/tsan_platform.h	/^uptr MidAppMemEnd(void) {$/;"	f	namespace:__tsan
Min	sanitizer_common/sanitizer_common.h	/^template<class T> T Min(T a, T b) { return a < b ? a : b; }$/;"	f	namespace:__sanitizer
MmapAlignedOrDieOnFatalError	sanitizer_common/sanitizer_fuchsia.cpp	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapAlignedOrDieOnFatalError	sanitizer_common/sanitizer_posix.cpp	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapAlignedOrDieOnFatalError	sanitizer_common/sanitizer_rtems.cpp	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapAlignedOrDieOnFatalError	sanitizer_common/sanitizer_win.cpp	/^void *MmapAlignedOrDieOnFatalError(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
MmapFixed	sanitizer_common/sanitizer_posix_libcdep.cpp	/^static bool MmapFixed(uptr fixed_addr, uptr size, int additional_flags,$/;"	f	namespace:__sanitizer
MmapFixedImpl	sanitizer_common/sanitizer_posix.cpp	/^static void *MmapFixedImpl(uptr fixed_addr, uptr size, bool tolerate_enomem,$/;"	f	namespace:__sanitizer
MmapFixedNoAccess	sanitizer_common/sanitizer_fuchsia.cpp	/^void *MmapFixedNoAccess(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoAccess	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void *MmapFixedNoAccess(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoAccess	sanitizer_common/sanitizer_win.cpp	/^void *MmapFixedNoAccess(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoReserve	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool MmapFixedNoReserve(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedNoReserve	sanitizer_common/sanitizer_win.cpp	/^bool MmapFixedNoReserve(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedOrDie	sanitizer_common/sanitizer_posix.cpp	/^void *MmapFixedOrDie(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedOrDie	sanitizer_common/sanitizer_win.cpp	/^void *MmapFixedOrDie(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedOrDieOnFatalError	sanitizer_common/sanitizer_posix.cpp	/^void *MmapFixedOrDieOnFatalError(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedOrDieOnFatalError	sanitizer_common/sanitizer_win.cpp	/^void *MmapFixedOrDieOnFatalError(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedSuperNoReserve	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool MmapFixedSuperNoReserve(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapFixedSuperNoReserve	sanitizer_common/sanitizer_win.cpp	/^bool MmapFixedSuperNoReserve(uptr fixed_addr, uptr size, const char *name) {$/;"	f	namespace:__sanitizer
MmapNamed	sanitizer_common/sanitizer_posix.cpp	/^uptr MmapNamed(void *addr, uptr length, int prot, int flags, const char *name) {$/;"	f	namespace:__sanitizer
MmapNoAccess	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void *MmapNoAccess(uptr size) {$/;"	f	namespace:__sanitizer
MmapNoAccess	sanitizer_common/sanitizer_win.cpp	/^void *MmapNoAccess(uptr size) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	sanitizer_common/sanitizer_fuchsia.cpp	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	sanitizer_common/sanitizer_posix.cpp	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	sanitizer_common/sanitizer_rtems.cpp	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapNoReserveOrDie	sanitizer_common/sanitizer_win.cpp	/^void *MmapNoReserveOrDie(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDie	sanitizer_common/sanitizer_fuchsia.cpp	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDie	sanitizer_common/sanitizer_posix.cpp	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDie	sanitizer_common/sanitizer_rtems.cpp	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDie	sanitizer_common/sanitizer_win.cpp	/^void *MmapOrDie(uptr size, const char *mem_type, bool raw_report) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	sanitizer_common/sanitizer_fuchsia.cpp	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	sanitizer_common/sanitizer_posix.cpp	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	sanitizer_common/sanitizer_rtems.cpp	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieOnFatalError	sanitizer_common/sanitizer_win.cpp	/^void *MmapOrDieOnFatalError(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
MmapOrDieQuietly	sanitizer_common/sanitizer_common.h	/^inline void *MmapOrDieQuietly(uptr size, const char *mem_type) {$/;"	f	namespace:__sanitizer
ModuleArch	sanitizer_common/sanitizer_common.h	/^enum ModuleArch {$/;"	g	namespace:__sanitizer
ModuleArchFromCpuType	sanitizer_common/sanitizer_procmaps_mac.cpp	/^ModuleArch ModuleArchFromCpuType(cpu_type_t cputype, cpu_subtype_t cpusubtype) {$/;"	f	namespace:__sanitizer
ModuleArchToString	sanitizer_common/sanitizer_common.h	/^inline const char *ModuleArchToString(ModuleArch arch) {$/;"	f	namespace:__sanitizer
ModuleInfo	sanitizer_common/sanitizer_win.cpp	/^struct ModuleInfo {$/;"	s	namespace:__sanitizer::__anon43
ModuleNameOwner	sanitizer_common/sanitizer_symbolizer.h	/^    explicit ModuleNameOwner(BlockingMutex *synchronized_by)$/;"	f	class:__sanitizer::final::ModuleNameOwner
ModuleNameOwner	sanitizer_common/sanitizer_symbolizer.h	/^  class ModuleNameOwner {$/;"	c	class:__sanitizer::final
ModuloNumberOfFrames	asan/asan_fake_stack.h	/^  static uptr ModuloNumberOfFrames(uptr stack_size_log, uptr class_id, uptr n) {$/;"	f	class:__asan::FakeStack
MonotonicNanoTime	sanitizer_common/sanitizer_fuchsia.cpp	/^u64 MonotonicNanoTime() { return _zx_clock_get_monotonic(); }$/;"	f	namespace:__sanitizer
MonotonicNanoTime	sanitizer_common/sanitizer_linux_libcdep.cpp	/^u64 MonotonicNanoTime() {$/;"	f	namespace:__sanitizer
MonotonicNanoTime	sanitizer_common/sanitizer_mac.cpp	/^u64 MonotonicNanoTime() {$/;"	f	namespace:__sanitizer
MonotonicNanoTime	sanitizer_common/sanitizer_win.cpp	/^u64 MonotonicNanoTime() { return NanoTime(); }$/;"	f	namespace:__sanitizer
MopDesc	tsan/tsan_report.cpp	/^static const char *MopDesc(bool first, bool write, bool atomic) {$/;"	f	namespace:__tsan
MostDerivedTypeName	ubsan/ubsan_type_hash.h	/^  const char *MostDerivedTypeName;$/;"	m	class:__ubsan::DynamicTypeInfo
MostSignificantSetBitIndex	sanitizer_common/sanitizer_common.h	/^inline uptr MostSignificantSetBitIndex(uptr x) {$/;"	f	namespace:__sanitizer
MoveMemory	tsan/tsan_sync.cpp	/^void MetaMap::MoveMemory(uptr src, uptr dst, uptr sz) {$/;"	f	class:__tsan::MetaMap
MprotectMallocZones	sanitizer_common/sanitizer_mac.cpp	/^void MprotectMallocZones(void *addr, int prot) {$/;"	f	namespace:__sanitizer
MprotectMallocZones	sanitizer_common/sanitizer_posix.cpp	/^void MprotectMallocZones(void *addr, int prot) {}$/;"	f	namespace:__sanitizer
MprotectNoAccess	sanitizer_common/sanitizer_posix.cpp	/^bool MprotectNoAccess(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
MprotectNoAccess	sanitizer_common/sanitizer_win.cpp	/^bool MprotectNoAccess(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
MprotectReadOnly	sanitizer_common/sanitizer_posix.cpp	/^bool MprotectReadOnly(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
MtxLocked	sanitizer_common/sanitizer_linux.cpp	/^  MtxLocked = 1,$/;"	e	enum:__sanitizer::MutexState
MtxLocked	sanitizer_common/sanitizer_rtems.cpp	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	e	enum:__sanitizer::MutexState
MtxSleeping	sanitizer_common/sanitizer_linux.cpp	/^  MtxSleeping = 2$/;"	e	enum:__sanitizer::MutexState
MtxSleeping	sanitizer_common/sanitizer_rtems.cpp	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	e	enum:__sanitizer::MutexState
MtxUnlocked	sanitizer_common/sanitizer_linux.cpp	/^  MtxUnlocked = 0,$/;"	e	enum:__sanitizer::MutexState
MtxUnlocked	sanitizer_common/sanitizer_rtems.cpp	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	e	enum:__sanitizer::MutexState
MurMur2HashBuilder	sanitizer_common/sanitizer_hash.h	/^  explicit MurMur2HashBuilder(u32 init = 0) { h = seed ^ init; }$/;"	f	class:__sanitizer::MurMur2HashBuilder
MurMur2HashBuilder	sanitizer_common/sanitizer_hash.h	/^class MurMur2HashBuilder {$/;"	c	namespace:__sanitizer
Mutex	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^struct Mutex {$/;"	s	namespace:__sanitizer
Mutex	tsan/tsan_mutex.cpp	/^Mutex::Mutex(MutexType type, StatType stat_type) {$/;"	f	class:__tsan::Mutex
Mutex	tsan/tsan_mutex.h	/^class Mutex {$/;"	c	namespace:__tsan
Mutex	tsan/tsan_report.cpp	/^  const char *Mutex()   { return Magenta(); }$/;"	f	class:__tsan::Decorator
MutexAfterLock	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::MutexAfterLock(DDCallback *cb, DDMutex *m, bool wlock, bool trylock) {$/;"	f	class:__sanitizer::DD
MutexAfterLock	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::MutexAfterLock(DDCallback *cb, DDMutex *m, bool wlock,$/;"	f	class:__sanitizer::DD
MutexAfterLock	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexAfterLock(DDCallback *cb, DDMutex *m, bool wlock,$/;"	f	struct:__sanitizer::DDetector
MutexBeforeLock	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::MutexBeforeLock(DDCallback *cb,$/;"	f	class:__sanitizer::DD
MutexBeforeLock	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::MutexBeforeLock(DDCallback *cb, DDMutex *m, bool wlock) {$/;"	f	class:__sanitizer::DD
MutexBeforeLock	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexBeforeLock(DDCallback *cb, DDMutex *m, bool wlock) {}$/;"	f	struct:__sanitizer::DDetector
MutexBeforeUnlock	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) {$/;"	f	class:__sanitizer::DD
MutexBeforeUnlock	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) {$/;"	f	class:__sanitizer::DD
MutexBeforeUnlock	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) {}$/;"	f	struct:__sanitizer::DDetector
MutexCreate	tsan/tsan_rtl_mutex.cpp	/^void MutexCreate(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexCreationFlagMask	tsan/tsan_sync.h	/^  MutexCreationFlagMask        = MutexFlagLinkerInit |$/;"	e	enum:__tsan::MutexFlags
MutexDestroy	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::MutexDestroy(DDCallback *cb,$/;"	f	class:__sanitizer::DD
MutexDestroy	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::MutexDestroy(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexDestroy	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexDestroy(DDCallback *cb, DDMutex *m) {}$/;"	f	struct:__sanitizer::DDetector
MutexDestroy	tsan/tsan_rtl_mutex.cpp	/^void MutexDestroy(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexEnsureID	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::MutexEnsureID(DDLogicalThread *lt, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexFlagBroken	tsan/tsan_sync.h	/^  MutexFlagBroken              = 1 << 30,$/;"	e	enum:__tsan::MutexFlags
MutexFlagDoPreLockOnPostLock	tsan/tsan_sync.h	/^  MutexFlagDoPreLockOnPostLock = 1 << 29,$/;"	e	enum:__tsan::MutexFlags
MutexFlagLinkerInit	tsan/tsan_sync.h	/^  MutexFlagLinkerInit          = 1 << 0, \/\/ __tsan_mutex_linker_init$/;"	e	enum:__tsan::MutexFlags
MutexFlagNotStatic	tsan/tsan_sync.h	/^  MutexFlagNotStatic           = 1 << 8, \/\/ __tsan_mutex_not_static$/;"	e	enum:__tsan::MutexFlags
MutexFlagReadLock	tsan/tsan_sync.h	/^  MutexFlagReadLock            = 1 << 3, \/\/ __tsan_mutex_read_lock$/;"	e	enum:__tsan::MutexFlags
MutexFlagReadReentrant	tsan/tsan_sync.h	/^  MutexFlagReadReentrant       = 1 << 2, \/\/ __tsan_mutex_read_reentrant$/;"	e	enum:__tsan::MutexFlags
MutexFlagRecursiveLock	tsan/tsan_sync.h	/^  MutexFlagRecursiveLock       = 1 << 6, \/\/ __tsan_mutex_recursive_lock$/;"	e	enum:__tsan::MutexFlags
MutexFlagRecursiveUnlock	tsan/tsan_sync.h	/^  MutexFlagRecursiveUnlock     = 1 << 7, \/\/ __tsan_mutex_recursive_unlock$/;"	e	enum:__tsan::MutexFlags
MutexFlagTryLock	tsan/tsan_sync.h	/^  MutexFlagTryLock             = 1 << 4, \/\/ __tsan_mutex_try_lock$/;"	e	enum:__tsan::MutexFlags
MutexFlagTryLockFailed	tsan/tsan_sync.h	/^  MutexFlagTryLockFailed       = 1 << 5, \/\/ __tsan_mutex_try_lock_failed$/;"	e	enum:__tsan::MutexFlags
MutexFlagWriteReentrant	tsan/tsan_sync.h	/^  MutexFlagWriteReentrant      = 1 << 1, \/\/ __tsan_mutex_write_reentrant$/;"	e	enum:__tsan::MutexFlags
MutexFlags	tsan/tsan_sync.h	/^enum MutexFlags {$/;"	g	namespace:__tsan
MutexInit	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::MutexInit(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexInit	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::MutexInit(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
MutexInit	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual void MutexInit(DDCallback *cb, DDMutex *m) {}$/;"	f	struct:__sanitizer::DDetector
MutexInvalidAccess	tsan/tsan_rtl_mutex.cpp	/^void MutexInvalidAccess(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexPostLock	tsan/tsan_rtl_mutex.cpp	/^void MutexPostLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz, int rec) {$/;"	f	namespace:__tsan
MutexPostReadLock	tsan/tsan_rtl_mutex.cpp	/^void MutexPostReadLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexPreLock	tsan/tsan_rtl_mutex.cpp	/^void MutexPreLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexPreReadLock	tsan/tsan_rtl_mutex.cpp	/^void MutexPreReadLock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
MutexReadOrWriteUnlock	tsan/tsan_rtl_mutex.cpp	/^void MutexReadOrWriteUnlock(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexReadUnlock	tsan/tsan_rtl_mutex.cpp	/^void MutexReadUnlock(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexRepair	tsan/tsan_rtl_mutex.cpp	/^void MutexRepair(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
MutexSet	tsan/tsan_mutexset.cpp	/^MutexSet::MutexSet() {$/;"	f	class:__tsan::MutexSet
MutexSet	tsan/tsan_mutexset.h	/^MutexSet::MutexSet() {}$/;"	f	class:__tsan::MutexSet
MutexSet	tsan/tsan_mutexset.h	/^class MutexSet {$/;"	c	namespace:__tsan
MutexState	sanitizer_common/sanitizer_linux.cpp	/^enum MutexState {$/;"	g	namespace:__sanitizer
MutexState	sanitizer_common/sanitizer_rtems.cpp	/^enum MutexState { MtxUnlocked = 0, MtxLocked = 1, MtxSleeping = 2 };$/;"	g	namespace:__sanitizer
MutexType	tsan/tsan_mutex.h	/^enum MutexType {$/;"	g	namespace:__tsan
MutexTypeAnnotations	tsan/tsan_mutex.h	/^  MutexTypeAnnotations,$/;"	e	enum:__tsan::MutexType
MutexTypeAtExit	tsan/tsan_mutex.h	/^  MutexTypeAtExit,$/;"	e	enum:__tsan::MutexType
MutexTypeCount	tsan/tsan_mutex.h	/^  MutexTypeCount$/;"	e	enum:__tsan::MutexType
MutexTypeDDetector	tsan/tsan_mutex.h	/^  MutexTypeDDetector,$/;"	e	enum:__tsan::MutexType
MutexTypeFired	tsan/tsan_mutex.h	/^  MutexTypeFired,$/;"	e	enum:__tsan::MutexType
MutexTypeGlobalProc	tsan/tsan_mutex.h	/^  MutexTypeGlobalProc,$/;"	e	enum:__tsan::MutexType
MutexTypeInvalid	tsan/tsan_mutex.h	/^  MutexTypeInvalid,$/;"	e	enum:__tsan::MutexType
MutexTypeJavaMBlock	tsan/tsan_mutex.h	/^  MutexTypeJavaMBlock,$/;"	e	enum:__tsan::MutexType
MutexTypeLeaf	tsan/tsan_mutex.cpp	/^const MutexType MutexTypeLeaf = (MutexType)-1;$/;"	m	namespace:__tsan
MutexTypeMBlock	tsan/tsan_mutex.h	/^  MutexTypeMBlock,$/;"	e	enum:__tsan::MutexType
MutexTypeRacy	tsan/tsan_mutex.h	/^  MutexTypeRacy,$/;"	e	enum:__tsan::MutexType
MutexTypeReport	tsan/tsan_mutex.h	/^  MutexTypeReport,$/;"	e	enum:__tsan::MutexType
MutexTypeSlab	tsan/tsan_mutex.h	/^  MutexTypeSlab,$/;"	e	enum:__tsan::MutexType
MutexTypeSyncTab	tsan/tsan_mutex.h	/^  MutexTypeSyncTab,$/;"	e	enum:__tsan::MutexType
MutexTypeSyncVar	tsan/tsan_mutex.h	/^  MutexTypeSyncVar,$/;"	e	enum:__tsan::MutexType
MutexTypeThreads	tsan/tsan_mutex.h	/^  MutexTypeThreads,$/;"	e	enum:__tsan::MutexType
MutexTypeTrace	tsan/tsan_mutex.h	/^  MutexTypeTrace,$/;"	e	enum:__tsan::MutexType
MutexUnlock	tsan/tsan_rtl_mutex.cpp	/^int MutexUnlock(ThreadState *thr, uptr pc, uptr addr, u32 flagz) {$/;"	f	namespace:__tsan
NEED_TLS_GET_ADDR	tsan/tsan_interceptors_posix.cpp	2224;"	d
NOEXCEPT	sanitizer_common/sanitizer_internal_defs.h	248;"	d
NOEXCEPT	sanitizer_common/sanitizer_internal_defs.h	250;"	d
NOGDI	sanitizer_common/sanitizer_unwind_win.cpp	17;"	d
NOGDI	sanitizer_common/sanitizer_win.cpp	18;"	d
NOINLINE	sanitizer_common/sanitizer_internal_defs.h	211;"	d
NOINLINE	sanitizer_common/sanitizer_internal_defs.h	225;"	d
NORETURN	sanitizer_common/sanitizer_internal_defs.h	212;"	d
NORETURN	sanitizer_common/sanitizer_internal_defs.h	226;"	d
NO_EXEC_STACK_DIRECTIVE	asan/asan_interceptors_vfork.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	builtins/assembly.h	31;"	d
NO_EXEC_STACK_DIRECTIVE	builtins/assembly.h	47;"	d
NO_EXEC_STACK_DIRECTIVE	builtins/assembly.h	49;"	d
NO_EXEC_STACK_DIRECTIVE	builtins/assembly.h	64;"	d
NO_EXEC_STACK_DIRECTIVE	hwasan/hwasan_interceptors_vfork.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	hwasan/hwasan_setjmp.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	hwasan/hwasan_tag_mismatch_aarch64.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	sanitizer_common/sanitizer_asm.h	64;"	d
NO_EXEC_STACK_DIRECTIVE	sanitizer_common/sanitizer_asm.h	67;"	d
NO_EXEC_STACK_DIRECTIVE	tsan/tsan_rtl_aarch64.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NO_EXEC_STACK_DIRECTIVE	tsan/tsan_rtl_amd64.S	/^NO_EXEC_STACK_DIRECTIVE$/;"	l
NT_LLVM_HWASAN_GLOBALS	hwasan/hwasan_globals.cpp	/^enum { NT_LLVM_HWASAN_GLOBALS = 3 };$/;"	e	enum:__hwasan::__anon84
NT_X86_XSTATE	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	491;"	d
Name	hwasan/hwasan_report.cpp	/^  const char *Name() const { return Green(); }$/;"	f	class:__hwasan::Decorator
Name	ubsan/ubsan_diag.h	/^  const char *Name;$/;"	m	class:__ubsan::TypeName
NanoTime	sanitizer_common/sanitizer_fuchsia.cpp	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	sanitizer_common/sanitizer_linux.cpp	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	sanitizer_common/sanitizer_mac.cpp	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	sanitizer_common/sanitizer_netbsd.cpp	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	sanitizer_common/sanitizer_solaris.cpp	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
NanoTime	sanitizer_common/sanitizer_win.cpp	/^u64 NanoTime() {$/;"	f	namespace:__sanitizer
New	sanitizer_common/sanitizer_ring_buffer.h	/^  static RingBuffer *New(uptr Size) {$/;"	f	class:__sanitizer::RingBuffer
New	sanitizer_common/sanitizer_symbolizer.cpp	/^SymbolizedStack *SymbolizedStack::New(uptr addr) {$/;"	f	class:__sanitizer::SymbolizedStack
New	tsan/tsan_report.cpp	/^ReportLocation *ReportLocation::New(ReportLocationType type) {$/;"	f	class:__tsan::ReportLocation
New	tsan/tsan_report.cpp	/^ReportStack *ReportStack::New() {$/;"	f	class:__tsan::ReportStack
Next	sanitizer_common/sanitizer_procmaps_bsd.cpp	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	sanitizer_common/sanitizer_procmaps_fuchsia.cpp	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	sanitizer_common/sanitizer_procmaps_linux.cpp	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	sanitizer_common/sanitizer_procmaps_mac.cpp	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	sanitizer_common/sanitizer_procmaps_solaris.cpp	/^bool MemoryMappingLayout::Next(MemoryMappedSegment *segment) {$/;"	f	class:__sanitizer::MemoryMappingLayout
Next	sanitizer_common/sanitizer_ring_buffer.h	/^  T *Next() const { return (T *)(long_ & kNextMask); }$/;"	f	class:__sanitizer::CompactRingBuffer
Next	tsan/tsan_clock.cpp	/^void SyncClock::Iter::Next() {$/;"	f	class:__tsan::SyncClock::Iter
NextCommand	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static const load_command *NextCommand(const load_command *lc) {$/;"	f	namespace:__sanitizer
NextPage	sanitizer_common/sanitizer_allocator_primary64.h	/^    void NextPage(bool freed) {$/;"	f	class:SizeClassAllocator64::FreePagesRangeTracker
NextSectionLoad	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static void NextSectionLoad(LoadedModule *module, MemoryMappedSegmentData *data,$/;"	f	namespace:__sanitizer
NextSegmentLoad	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static bool NextSegmentLoad(MemoryMappedSegment *segment,$/;"	f	namespace:__sanitizer
NoOpMapUnmapCallback	sanitizer_common/sanitizer_allocator.h	/^struct NoOpMapUnmapCallback {$/;"	s	namespace:__sanitizer
NoTsanAtomicCAS	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicCAS(volatile T *a, T c, T v, morder mo, morder fmo) {$/;"	f
NoTsanAtomicCAS	tsan/tsan_interface_atomic.cpp	/^static bool NoTsanAtomicCAS(volatile T *a, T *c, T v, morder mo, morder fmo) {$/;"	f
NoTsanAtomicCAS	tsan/tsan_interface_atomic.cpp	/^static bool NoTsanAtomicCAS(volatile a128 *a, a128 *c, a128 v,$/;"	f
NoTsanAtomicExchange	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicExchange(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicFence	tsan/tsan_interface_atomic.cpp	/^static void NoTsanAtomicFence(morder mo) {$/;"	f
NoTsanAtomicFetchAdd	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicFetchAdd(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicFetchAnd	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicFetchAnd(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicFetchNand	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicFetchNand(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicFetchOr	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicFetchOr(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicFetchSub	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicFetchSub(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicFetchXor	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicFetchXor(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicLoad	tsan/tsan_interface_atomic.cpp	/^static T NoTsanAtomicLoad(const volatile T *a, morder mo) {$/;"	f
NoTsanAtomicLoad	tsan/tsan_interface_atomic.cpp	/^static a128 NoTsanAtomicLoad(const volatile a128 *a, morder mo) {$/;"	f
NoTsanAtomicStore	tsan/tsan_interface_atomic.cpp	/^static void NoTsanAtomicStore(volatile T *a, T v, morder mo) {$/;"	f
NoTsanAtomicStore	tsan/tsan_interface_atomic.cpp	/^static void NoTsanAtomicStore(volatile a128 *a, a128 v, morder mo) {$/;"	f
NonConstSpaceBeg	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr NonConstSpaceBeg;$/;"	m	class:SizeClassAllocator64
NonNullArgData	ubsan/ubsan_handlers.h	/^struct NonNullArgData {$/;"	s	namespace:__ubsan
NonNullReturnData	ubsan/ubsan_handlers.h	/^struct NonNullReturnData {$/;"	s	namespace:__ubsan
Note	ubsan/ubsan_diag.cpp	/^  const char *Note() const { return Black(); }$/;"	f	class:__anon5::Decorator
NumArgs	ubsan/ubsan_diag.h	/^  unsigned NumArgs;$/;"	m	class:__ubsan::Diag
NumRanges	ubsan/ubsan_diag.h	/^  unsigned NumRanges;$/;"	m	class:__ubsan::Diag
NumberOfCPUsCached	sanitizer_common/sanitizer_common.cpp	/^u32 NumberOfCPUsCached;$/;"	m	namespace:__sanitizer
NumberOfFrames	asan/asan_fake_stack.h	/^  static uptr NumberOfFrames(uptr stack_size_log, uptr class_id) {$/;"	f	class:__asan::FakeStack
OFF64_T	interception/interception.h	/^typedef __sanitizer::OFF64_T OFF64_T;$/;"	t
OFF64_T	sanitizer_common/sanitizer_internal_defs.h	/^typedef u64  OFF64_T;$/;"	t	namespace:__sanitizer
OFF_T	interception/interception.h	/^typedef __sanitizer::OFF_T   OFF_T;$/;"	t
OFF_T	sanitizer_common/sanitizer_internal_defs.h	/^typedef u64 OFF_T;$/;"	t	namespace:__sanitizer
OFF_T	sanitizer_common/sanitizer_internal_defs.h	/^typedef uptr OFF_T;$/;"	t	namespace:__sanitizer
OPERATOR_DELETE_BODY	asan/asan_new_delete.cpp	141;"	d
OPERATOR_DELETE_BODY	hwasan/hwasan_new_delete.cpp	31;"	d
OPERATOR_DELETE_BODY	hwasan/hwasan_new_delete.cpp	42;"	d
OPERATOR_DELETE_BODY	lsan/lsan_interceptors.cpp	235;"	d
OPERATOR_DELETE_BODY	tsan/tsan_new_delete.cpp	115;"	d
OPERATOR_DELETE_BODY_ALIGN	asan/asan_new_delete.cpp	151;"	d
OPERATOR_DELETE_BODY_SIZE	asan/asan_new_delete.cpp	146;"	d
OPERATOR_DELETE_BODY_SIZE_ALIGN	asan/asan_new_delete.cpp	156;"	d
OPERATOR_NEW_BODY	asan/asan_new_delete.cpp	74;"	d
OPERATOR_NEW_BODY	hwasan/hwasan_new_delete.cpp	25;"	d
OPERATOR_NEW_BODY	hwasan/hwasan_new_delete.cpp	41;"	d
OPERATOR_NEW_BODY	lsan/lsan_interceptors.cpp	222;"	d
OPERATOR_NEW_BODY	tsan/tsan_new_delete.cpp	31;"	d
OPERATOR_NEW_BODY_ALIGN	asan/asan_new_delete.cpp	81;"	d
OPERATOR_NEW_BODY_ALIGN	lsan/lsan_interceptors.cpp	228;"	d
OPERATOR_NEW_BODY_ALIGN	tsan/tsan_new_delete.cpp	46;"	d
OSATOMIC_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	50;"	d
OSATOMIC_INTERCEPTORS_ARITHMETIC	tsan/tsan_interceptors_mac.cpp	75;"	d
OSATOMIC_INTERCEPTORS_BITOP	tsan/tsan_interceptors_mac.cpp	144;"	d
OSATOMIC_INTERCEPTORS_BITWISE	tsan/tsan_interceptors_mac.cpp	85;"	d
OSATOMIC_INTERCEPTORS_CAS	tsan/tsan_interceptors_mac.cpp	108;"	d
OSATOMIC_INTERCEPTOR_BITOP	tsan/tsan_interceptors_mac.cpp	134;"	d
OSATOMIC_INTERCEPTOR_MINUS_1	tsan/tsan_interceptors_mac.cpp	68;"	d
OSATOMIC_INTERCEPTOR_PLUS_1	tsan/tsan_interceptors_mac.cpp	62;"	d
OSATOMIC_INTERCEPTOR_PLUS_X	tsan/tsan_interceptors_mac.cpp	56;"	d
OVERRIDE_FUNCTION	interception/interception.h	253;"	d
OWNED_BY_RTL	asan/asan_malloc_win.cpp	204;"	d
ObjCGetClassNameTy	ubsan/ubsan_value.cpp	/^typedef const char *(*ObjCGetClassNameTy)(void *);$/;"	t
ObtainCurrentStack	tsan/tsan_rtl.h	/^void ObtainCurrentStack(ThreadState *thr, uptr toppc, StackTraceTy *stack,$/;"	f	namespace:__tsan
Offset	ubsan/ubsan_type_hash.h	/^  sptr Offset;$/;"	m	class:__ubsan::DynamicTypeInfo
Offset	ubsan/ubsan_type_hash_itanium.cpp	/^  sptr Offset;$/;"	m	struct:__anon4::VtablePrefix
Ok	sanitizer_common/sanitizer_linux.h	/^    Ok,$/;"	e	enum:__sanitizer::ThreadLister::Result
OnCreated	asan/asan_thread.cpp	/^void AsanThreadContext::OnCreated(void *arg) {$/;"	f	class:__asan::AsanThreadContext
OnCreated	lsan/lsan_fuchsia.cpp	/^void ThreadContext::OnCreated(void *arg) {$/;"	f	class:__lsan::ThreadContext
OnCreated	sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnCreated(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnCreated	tsan/tsan_rtl_thread.cpp	/^void ThreadContext::OnCreated(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnCreatedArgs	lsan/lsan_fuchsia.cpp	/^struct OnCreatedArgs {$/;"	s	namespace:__lsan
OnCreatedArgs	tsan/tsan_rtl_thread.cpp	/^struct OnCreatedArgs {$/;"	s	namespace:__tsan
OnDead	sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnDead() {}$/;"	f	class:__sanitizer::ThreadContextBase
OnDead	tsan/tsan_rtl_thread.cpp	/^void ThreadContext::OnDead() {$/;"	f	class:__tsan::ThreadContext
OnDetached	sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnDetached(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnDetached	tsan/tsan_rtl_thread.cpp	/^void ThreadContext::OnDetached(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnExit	asan/asan_interceptors.cpp	/^int OnExit() {$/;"	f	namespace:__asan
OnExit	hwasan/hwasan_interceptors.cpp	/^int OnExit() {$/;"	f	namespace:__hwasan
OnExit	tsan/tsan_interceptors_posix.cpp	/^static int OnExit(ThreadState *thr) {$/;"	f
OnFinalize	tsan/tsan_rtl.cpp	/^bool OnFinalize(bool failed) {$/;"	f	namespace:__tsan
OnFinished	asan/asan_thread.cpp	/^void AsanThreadContext::OnFinished() {$/;"	f	class:__asan::AsanThreadContext
OnFinished	lsan/lsan_thread.cpp	/^void ThreadContextLsanBase::OnFinished() {$/;"	f	class:__lsan::ThreadContextLsanBase
OnFinished	sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnFinished() {}$/;"	f	class:__sanitizer::ThreadContextBase
OnFinished	tsan/tsan_rtl_thread.cpp	/^void ThreadContext::OnFinished() {$/;"	f	class:__tsan::ThreadContext
OnFree	asan/asan_fake_stack.cpp	/^ALWAYS_INLINE void OnFree(uptr ptr, uptr class_id, uptr size) {$/;"	f	namespace:__asan
OnInitialize	tsan/tsan_rtl.cpp	/^void OnInitialize() {}$/;"	f	namespace:__tsan
OnJoined	sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnJoined(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnJoined	tsan/tsan_rtl_thread.cpp	/^void ThreadContext::OnJoined(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnLibraryLoaded	sanitizer_common/sanitizer_libignore.cpp	/^void LibIgnore::OnLibraryLoaded(const char *name) {$/;"	f	class:__sanitizer::LibIgnore
OnLibraryUnloaded	sanitizer_common/sanitizer_libignore.cpp	/^void LibIgnore::OnLibraryUnloaded() {$/;"	f	class:__sanitizer::LibIgnore
OnLowLevelAllocate	asan/asan_rtl.cpp	/^static void OnLowLevelAllocate(uptr ptr, uptr size) {$/;"	f	namespace:__asan
OnMalloc	asan/asan_fake_stack.cpp	/^ALWAYS_INLINE uptr OnMalloc(uptr class_id, uptr size) {$/;"	f	namespace:__asan
OnMap	asan/asan_allocator.cpp	/^void AsanMapUnmapCallback::OnMap(uptr p, uptr size) const {$/;"	f	class:__asan::AsanMapUnmapCallback
OnMap	hwasan/hwasan_allocator.h	/^  void OnMap(uptr p, uptr size) const { UpdateMemoryUsage(); }$/;"	f	struct:__hwasan::HwasanMapUnmapCallback
OnMap	sanitizer_common/sanitizer_allocator.h	/^  void OnMap(uptr p, uptr size) const { }$/;"	f	struct:__sanitizer::NoOpMapUnmapCallback
OnMap	tsan/tsan_mman.cpp	/^  void OnMap(uptr p, uptr size) const { }$/;"	f	struct:__tsan::MapUnmapCallback
OnPotentiallyBlockingRegionBegin	tsan/tsan_interceptors_posix.cpp	/^SANITIZER_WEAK_CXX_DEFAULT_IMPL void OnPotentiallyBlockingRegionBegin() {}$/;"	f	namespace:__tsan
OnPotentiallyBlockingRegionEnd	tsan/tsan_interceptors_posix.cpp	/^SANITIZER_WEAK_CXX_DEFAULT_IMPL void OnPotentiallyBlockingRegionEnd() {}$/;"	f	namespace:__tsan
OnProcIdle	tsan/tsan_sync.cpp	/^void MetaMap::OnProcIdle(Processor *proc) {$/;"	f	class:__tsan::MetaMap
OnReport	tsan/tsan_rtl_report.cpp	/^bool OnReport(const ReportDesc *rep, bool suppressed) {$/;"	f	namespace:__tsan
OnReset	sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnReset() {}$/;"	f	class:__sanitizer::ThreadContextBase
OnReset	tsan/tsan_rtl_thread.cpp	/^void ThreadContext::OnReset() {$/;"	f	class:__tsan::ThreadContext
OnStackUnwind	asan/asan_errors.cpp	/^static void OnStackUnwind(const SignalContext &sig,$/;"	f	namespace:__asan
OnStackUnwind	hwasan/hwasan_linux.cpp	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	namespace:__hwasan
OnStackUnwind	lsan/lsan_posix.cpp	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	namespace:__lsan
OnStackUnwind	tsan/tsan_rtl.cpp	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	namespace:__tsan
OnStackUnwind	ubsan/ubsan_signals_standalone.cpp	/^static void OnStackUnwind(const SignalContext &sig, const void *,$/;"	f	namespace:__ubsan
OnStarted	lsan/lsan_fuchsia.cpp	/^void ThreadContext::OnStarted(void *arg) {$/;"	f	class:__lsan::ThreadContext
OnStarted	lsan/lsan_posix.cpp	/^void ThreadContext::OnStarted(void *arg) {$/;"	f	class:__lsan::ThreadContext
OnStarted	sanitizer_common/sanitizer_thread_registry.h	/^  virtual void OnStarted(void *arg) {}$/;"	f	class:__sanitizer::ThreadContextBase
OnStarted	tsan/tsan_rtl_thread.cpp	/^void ThreadContext::OnStarted(void *arg) {$/;"	f	class:__tsan::ThreadContext
OnStartedArgs	lsan/lsan_fuchsia.cpp	/^struct OnStartedArgs {$/;"	s	namespace:__lsan
OnStartedArgs	lsan/lsan_posix.cpp	/^struct OnStartedArgs {$/;"	s	namespace:__lsan
OnStartedArgs	tsan/tsan_rtl_thread.cpp	/^struct OnStartedArgs {$/;"	s	namespace:__tsan
OnUnmap	asan/asan_allocator.cpp	/^void AsanMapUnmapCallback::OnUnmap(uptr p, uptr size) const {$/;"	f	class:__asan::AsanMapUnmapCallback
OnUnmap	hwasan/hwasan_allocator.h	/^  void OnUnmap(uptr p, uptr size) const {$/;"	f	struct:__hwasan::HwasanMapUnmapCallback
OnUnmap	sanitizer_common/sanitizer_allocator.h	/^  void OnUnmap(uptr p, uptr size) const { }$/;"	f	struct:__sanitizer::NoOpMapUnmapCallback
OnUnmap	tsan/tsan_mman.cpp	/^  void OnUnmap(uptr p, uptr size) const {$/;"	f	struct:__tsan::MapUnmapCallback
OnUserAlloc	tsan/tsan_mman.cpp	/^void OnUserAlloc(ThreadState *thr, uptr pc, uptr p, uptr sz, bool write) {$/;"	f	namespace:__tsan
OnUserFree	tsan/tsan_mman.cpp	/^void OnUserFree(ThreadState *thr, uptr pc, uptr p, bool write) {$/;"	f	namespace:__tsan
OpenFile	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static fd_t OpenFile(const char* path) {$/;"	f	namespace:__sancov::__anon40
OpenFile	sanitizer_common/sanitizer_posix.cpp	/^fd_t OpenFile(const char *filename, FileAccessMode mode, error_t *errno_p) {$/;"	f	namespace:__sanitizer
OpenFile	sanitizer_common/sanitizer_rtems.cpp	/^fd_t OpenFile(const char *filename, FileAccessMode mode, error_t *errno_p) {$/;"	f	namespace:__sanitizer
OpenFile	sanitizer_common/sanitizer_win.cpp	/^fd_t OpenFile(const char *filename, FileAccessMode mode, error_t *last_error) {$/;"	f	namespace:__sanitizer
Opts	ubsan/ubsan_diag.h	/^  ReportOptions Opts;$/;"	m	class:__ubsan::ScopedReport
Origin	hwasan/hwasan_report.cpp	/^  const char *Origin() const { return Magenta(); }$/;"	f	class:__hwasan::Decorator
OutOfBoundsData	ubsan/ubsan_handlers.h	/^struct OutOfBoundsData {$/;"	s	namespace:__ubsan
OutputReport	tsan/tsan_rtl_report.cpp	/^bool OutputReport(ThreadState *thr, const ScopedReport &srep) {$/;"	f	namespace:__tsan
OverflowData	ubsan/ubsan_handlers.h	/^struct OverflowData {$/;"	s	namespace:__ubsan
OverheadSize	sanitizer_common/sanitizer_quarantine.h	/^  uptr OverheadSize() const {$/;"	f	class:__sanitizer::QuarantineCache
OverrideCommonFlags	sanitizer_common/sanitizer_flags.h	/^inline void OverrideCommonFlags(const CommonFlags &cf) {$/;"	f	namespace:__sanitizer
OverrideFromActivationFlags	asan/asan_activation.cpp	/^  void OverrideFromActivationFlags() {$/;"	f	struct:__asan::AsanDeactivatedFlags
OverrideFunction	interception/interception_win.cpp	/^bool OverrideFunction($/;"	f	namespace:__interception
OverrideFunctionWithDetour	interception/interception_win.cpp	/^bool OverrideFunctionWithDetour($/;"	f	namespace:__interception
OverrideFunctionWithHotPatch	interception/interception_win.cpp	/^bool OverrideFunctionWithHotPatch($/;"	f	namespace:__interception
OverrideFunctionWithRedirectJump	interception/interception_win.cpp	/^bool OverrideFunctionWithRedirectJump($/;"	f	namespace:__interception
OverrideFunctionWithTrampoline	interception/interception_win.cpp	/^bool OverrideFunctionWithTrampoline($/;"	f	namespace:__interception
OverrideImportedFunction	interception/interception_win.cpp	/^bool OverrideImportedFunction(const char *module_to_patch,$/;"	f	namespace:__interception
POP_PC	builtins/assembly.h	117;"	d
POP_PC	builtins/assembly.h	119;"	d
PREFETCH	sanitizer_common/sanitizer_internal_defs.h	216;"	d
PREFETCH	sanitizer_common/sanitizer_internal_defs.h	232;"	d
PREFETCH	sanitizer_common/sanitizer_internal_defs.h	234;"	d
PRINT_CURRENT_STACK	asan/asan_stack.h	68;"	d
PRINT_CURRENT_STACK_CHECK	asan/asan_stack.h	74;"	d
PRINT_CURRENT_STACK_CHECK	hwasan/hwasan.h	111;"	d
PROFILE_ASAN_MAPPING	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	262;"	d
PROFILE_ASAN_MAPPING	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	264;"	d
PROFILE_ASAN_MAPPING	asan/asan_mapping.h	262;"	d
PROFILE_ASAN_MAPPING	asan/asan_mapping.h	264;"	d
PR_GET_TAGGED_ADDR_CTRL	hwasan/hwasan_linux.cpp	119;"	d
PR_GET_TAGGED_ADDR_CTRL	hwasan/hwasan_linux.cpp	150;"	d
PR_SET_PTRACER	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	64;"	d
PR_SET_TAGGED_ADDR_CTRL	hwasan/hwasan_linux.cpp	118;"	d
PR_SET_TAGGED_ADDR_CTRL	hwasan/hwasan_linux.cpp	149;"	d
PR_SET_VMA	sanitizer_common/sanitizer_posix.cpp	377;"	d
PR_SET_VMA_ANON_NAME	sanitizer_common/sanitizer_posix.cpp	378;"	d
PR_TAGGED_ADDR_ENABLE	hwasan/hwasan_linux.cpp	120;"	d
PR_TAGGED_ADDR_ENABLE	hwasan/hwasan_linux.cpp	151;"	d
PTEB	asan/asan_win.cpp	/^} TEB, *PTEB;$/;"	t	namespace:__asan	typeref:struct:__asan::_TEB
PTHREAD_ABI_BASE	tsan/tsan_interceptors_posix.cpp	79;"	d
PTHREAD_ABI_BASE	tsan/tsan_interceptors_posix.cpp	81;"	d
PTHREAD_BARRIER_SERIAL_THREAD	tsan/tsan_interceptors_posix.cpp	/^const int PTHREAD_BARRIER_SERIAL_THREAD = -1;$/;"	v
PTHREAD_BARRIER_SERIAL_THREAD	tsan/tsan_interceptors_posix.cpp	/^const int PTHREAD_BARRIER_SERIAL_THREAD = 1234567;$/;"	v
PTHREAD_INTROSPECTION_THREAD_CREATE	tsan/tsan_platform_mac.cpp	/^static const uptr PTHREAD_INTROSPECTION_THREAD_CREATE = 1;$/;"	m	namespace:__tsan
PTHREAD_INTROSPECTION_THREAD_TERMINATE	tsan/tsan_platform_mac.cpp	/^static const uptr PTHREAD_INTROSPECTION_THREAD_TERMINATE = 3;$/;"	m	namespace:__tsan
PTHREAD_MUTEX_RECURSIVE	tsan/tsan_interceptors_posix.cpp	/^const int PTHREAD_MUTEX_RECURSIVE = 1;$/;"	v
PTHREAD_MUTEX_RECURSIVE	tsan/tsan_interceptors_posix.cpp	/^const int PTHREAD_MUTEX_RECURSIVE = 2;$/;"	v
PTHREAD_MUTEX_RECURSIVE_NP	tsan/tsan_interceptors_posix.cpp	/^const int PTHREAD_MUTEX_RECURSIVE_NP = 1;$/;"	v
PTHREAD_MUTEX_RECURSIVE_NP	tsan/tsan_interceptors_posix.cpp	/^const int PTHREAD_MUTEX_RECURSIVE_NP = 2;$/;"	v
PTRACE_GETREGSET	include/system/sys/ptrace.h	6;"	d
PTRDIFF_T	interception/interception.h	/^typedef __sanitizer::sptr    PTRDIFF_T;$/;"	t
PTR_TO_REAL	interception/interception.h	170;"	d
PT_LWPNEXT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	82;"	d
PT_LWPSTATUS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	79;"	d
PackedCounterArray	sanitizer_common/sanitizer_allocator_primary64.h	/^    PackedCounterArray(u64 num_counters, u64 max_value, MemoryMapperT *mapper)$/;"	f	class:SizeClassAllocator64::PackedCounterArray
PackedCounterArray	sanitizer_common/sanitizer_allocator_primary64.h	/^  class PackedCounterArray {$/;"	c	class:SizeClassAllocator64
PageSizeCached	sanitizer_common/sanitizer_common.cpp	/^uptr PageSizeCached;$/;"	m	namespace:__sanitizer
Parse	sanitizer_common/sanitizer_flag_parser.h	/^  virtual bool Parse(const char *value) { return false; }$/;"	f	class:__sanitizer::FlagHandlerBase
Parse	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<HandleSignalMode>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<bool>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<const char *>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<int>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<s64>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	sanitizer_common/sanitizer_flag_parser.h	/^inline bool FlagHandler<uptr>::Parse(const char *value) {$/;"	f	class:__sanitizer::FlagHandler
Parse	sanitizer_common/sanitizer_suppressions.cpp	/^void SuppressionContext::Parse(const char *str) {$/;"	f	class:__sanitizer::SuppressionContext
ParseBool	sanitizer_common/sanitizer_flag_parser.h	/^inline bool ParseBool(const char *value, bool *b) {$/;"	f	namespace:__sanitizer
ParseCommandOutput	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^static bool ParseCommandOutput(const char *str, uptr addr, char **out_name,$/;"	f	namespace:__sanitizer
ParseDecimal	sanitizer_common/sanitizer_procmaps_common.cpp	/^uptr ParseDecimal(const char **p) {$/;"	f	namespace:__sanitizer
ParseFile	sanitizer_common/sanitizer_flag_parser.cpp	/^bool FlagParser::ParseFile(const char *path, bool ignore_missing) {$/;"	f	class:__sanitizer::FlagParser
ParseFileLineInfo	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^static const char *ParseFileLineInfo(AddressInfo *info, const char *str) {$/;"	f	namespace:__sanitizer
ParseFrameDescription	asan/asan_report.cpp	/^bool ParseFrameDescription(const char *frame_descr,$/;"	f	namespace:__asan
ParseFromFile	sanitizer_common/sanitizer_suppressions.cpp	/^void SuppressionContext::ParseFromFile(const char *filename) {$/;"	f	class:__sanitizer::SuppressionContext
ParseHex	sanitizer_common/sanitizer_procmaps_common.cpp	/^uptr ParseHex(const char **p) {$/;"	f	namespace:__sanitizer
ParseNumber	sanitizer_common/sanitizer_procmaps_common.cpp	/^static uptr ParseNumber(const char **p, int base) {$/;"	f	namespace:__sanitizer
ParseString	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::ParseString(const char *s, const char *env_option_name) {$/;"	f	class:__sanitizer::FlagParser
ParseStringFromEnv	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::ParseStringFromEnv(const char *env_name) {$/;"	f	class:__sanitizer::FlagParser
ParseSymbolizeDataOutput	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^void ParseSymbolizeDataOutput(const char *str, DataInfo *info) {$/;"	f	namespace:__sanitizer
ParseSymbolizeFrameOutput	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^static void ParseSymbolizeFrameOutput(const char *str,$/;"	f	namespace:__sanitizer
ParseSymbolizePCOutput	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^void ParseSymbolizePCOutput(const char *str, SymbolizedStack *res) {$/;"	f	namespace:__sanitizer
ParseVersion	sanitizer_common/sanitizer_mac.cpp	/^void ParseVersion(const char *vers, u16 *major, u16 *minor) {$/;"	f	namespace:__sanitizer
PerClass	sanitizer_common/sanitizer_allocator_local_cache.h	/^  struct PerClass {$/;"	s	struct:SizeClassAllocator32LocalCache
PerClass	sanitizer_common/sanitizer_allocator_local_cache.h	/^  struct PerClass {$/;"	s	struct:SizeClassAllocator64LocalCache
PersistentAlloc	sanitizer_common/sanitizer_persistent_allocator.h	/^inline void *PersistentAlloc(uptr sz) {$/;"	f	namespace:__sanitizer
PersistentAllocator	sanitizer_common/sanitizer_persistent_allocator.h	/^class PersistentAllocator {$/;"	c	namespace:__sanitizer
PersonalityFn	hwasan/hwasan_exceptions.cpp	/^typedef _Unwind_Reason_Code PersonalityFn(int version, _Unwind_Action actions,$/;"	t
PlatformCleanUpThreadState	tsan/tsan_interceptors_posix.cpp	/^void PlatformCleanUpThreadState(ThreadState *thr) {$/;"	f	namespace:__tsan
PlatformDemangle	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^const char *Symbolizer::PlatformDemangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
PlatformDemangle	sanitizer_common/sanitizer_symbolizer_win.cpp	/^const char *Symbolizer::PlatformDemangle(const char *name) {$/;"	f	class:__sanitizer::Symbolizer
PlatformInit	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^Symbolizer *Symbolizer::PlatformInit() {$/;"	f	class:__sanitizer::Symbolizer
PlatformInit	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^Symbolizer *Symbolizer::PlatformInit() {$/;"	f	class:__sanitizer::Symbolizer
PlatformInit	sanitizer_common/sanitizer_symbolizer_win.cpp	/^Symbolizer *Symbolizer::PlatformInit() {$/;"	f	class:__sanitizer::Symbolizer
PlatformPrepareForSandboxing	sanitizer_common/sanitizer_fuchsia.cpp	/^void PlatformPrepareForSandboxing(__sanitizer_sandbox_arguments *args) {}$/;"	f	namespace:__sanitizer
PlatformPrepareForSandboxing	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void PlatformPrepareForSandboxing(__sanitizer_sandbox_arguments *args) {$/;"	f	namespace:__sanitizer
PlatformPrepareForSandboxing	sanitizer_common/sanitizer_win.cpp	/^void PlatformPrepareForSandboxing(__sanitizer_sandbox_arguments *args) {}$/;"	f	namespace:__sanitizer
PlatformTSDDtor	asan/asan_fuchsia.cpp	/^void PlatformTSDDtor(void *tsd) { UNREACHABLE(__func__); }$/;"	f	namespace:__asan
PlatformTSDDtor	asan/asan_posix.cpp	/^void PlatformTSDDtor(void *tsd) {$/;"	f	namespace:__asan
PlatformTSDDtor	asan/asan_rtems.cpp	/^void PlatformTSDDtor(void *tsd) { UNREACHABLE(__func__); }$/;"	f	namespace:__asan
PlatformTSDDtor	asan/asan_win.cpp	/^void PlatformTSDDtor(void *tsd) { AsanThread::TSDDtor(tsd); }$/;"	f	namespace:__asan
PlatformUnpoisonStacks	asan/asan_fuchsia.cpp	/^bool PlatformUnpoisonStacks() { return false; }$/;"	f	namespace:__asan
PlatformUnpoisonStacks	asan/asan_posix.cpp	/^bool PlatformUnpoisonStacks() {$/;"	f	namespace:__asan
PlatformUnpoisonStacks	asan/asan_rtems.cpp	/^bool PlatformUnpoisonStacks() { return false; }$/;"	f	namespace:__asan
PlatformUnpoisonStacks	asan/asan_win.cpp	/^bool PlatformUnpoisonStacks() { return false; }$/;"	f	namespace:__asan
Pointer	ubsan/ubsan_diag.h	/^      const void *Pointer;$/;"	m	union:__ubsan::Diag::Arg::__anon3
PointerAndMemoryTagsMatch	hwasan/hwasan_allocator.cpp	/^static bool PointerAndMemoryTagsMatch(void *tagged_ptr) {$/;"	f	namespace:__hwasan
PointerIsMine	sanitizer_common/sanitizer_allocator_combined.h	/^  bool PointerIsMine(void *p) {$/;"	f	class:CombinedAllocator
PointerIsMine	sanitizer_common/sanitizer_allocator_primary32.h	/^  bool PointerIsMine(const void *p) {$/;"	f	class:SizeClassAllocator32
PointerIsMine	sanitizer_common/sanitizer_allocator_primary64.h	/^  bool PointerIsMine(const void *p) const {$/;"	f	class:SizeClassAllocator64
PointerIsMine	sanitizer_common/sanitizer_allocator_secondary.h	/^  bool PointerIsMine(const void *p) {$/;"	f	class:LargeMmapAllocator
PointerOverflowData	ubsan/ubsan_handlers.h	/^struct PointerOverflowData {$/;"	s	namespace:__ubsan
PointerToCompactPtr	sanitizer_common/sanitizer_allocator_primary64.h	/^  CompactPtrT PointerToCompactPtr(uptr base, uptr ptr) const {$/;"	f	class:SizeClassAllocator64
PointsInsideTheSameVariable	asan/asan_descriptions.cpp	/^bool GlobalAddressDescription::PointsInsideTheSameVariable($/;"	f	class:__asan::GlobalAddressDescription
PointsIntoChunk	asan/asan_allocator.cpp	/^uptr PointsIntoChunk(void *p) {$/;"	f	namespace:__lsan
PointsIntoChunk	lsan/lsan_allocator.cpp	/^uptr PointsIntoChunk(void* p) {$/;"	f	namespace:__lsan
PoisonAlignedStackMemory	asan/asan_poisoning.cpp	/^static void PoisonAlignedStackMemory(uptr addr, uptr size, bool do_poison) {$/;"	f
PoisonAll	asan/asan_fake_stack.cpp	/^void FakeStack::PoisonAll(u8 magic) {$/;"	f	class:__asan::FakeStack
PoisonRedZones	asan/asan_globals.cpp	/^ALWAYS_INLINE void PoisonRedZones(const Global &g) {$/;"	f	namespace:__asan
PoisonShadow	asan/asan_poisoning.cpp	/^void PoisonShadow(uptr addr, uptr size, u8 value) {$/;"	f	namespace:__asan
PoisonShadowForGlobal	asan/asan_globals.cpp	/^ALWAYS_INLINE void PoisonShadowForGlobal(const Global *g, u8 value) {$/;"	f	namespace:__asan
PoisonShadowPartialRightRedzone	asan/asan_poisoning.cpp	/^void PoisonShadowPartialRightRedzone(uptr addr,$/;"	f	namespace:__asan
Pop	hwasan/hwasan_thread_list.h	/^  Thread *Pop() {$/;"	f	struct:__hwasan::ThreadListHead
Pop	sanitizer_common/sanitizer_lfstack.h	/^  T *Pop() {$/;"	f	struct:__sanitizer::LFStack
PopBack	sanitizer_common/sanitizer_vector.h	/^  void PopBack() {$/;"	f	class:__sanitizer::Vector
PopStackFrames	sanitizer_common/sanitizer_stacktrace.cpp	/^void BufferedStackTrace::PopStackFrames(uptr count) {$/;"	f	class:__sanitizer::BufferedStackTrace
PopulateBatches	sanitizer_common/sanitizer_allocator_primary32.h	/^  bool PopulateBatches(AllocatorCache *c, SizeClassInfo *sci, uptr class_id,$/;"	f	class:SizeClassAllocator32
PopulateFreeArray	sanitizer_common/sanitizer_allocator_primary64.h	/^  NOINLINE bool PopulateFreeArray(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator64
PopulateFreeList	sanitizer_common/sanitizer_allocator_primary32.h	/^  bool PopulateFreeList(AllocatorStats *stat, AllocatorCache *c,$/;"	f	class:SizeClassAllocator32
PosixMemalignFromLocalPool	asan/asan_malloc_linux.cpp	/^static int PosixMemalignFromLocalPool(void **memptr, uptr alignment,$/;"	f
PossiblyShortTagMatches	hwasan/hwasan_checks.h	/^__attribute__((always_inline, nodebug)) static bool PossiblyShortTagMatches($/;"	f	namespace:__hwasan
PreInitAsStandalone	ubsan/ubsan_init_standalone_preinit.cpp	/^static void PreInitAsStandalone() {$/;"	f	namespace:__ubsan
PremapShadow	asan/asan_premap_shadow.cpp	/^uptr PremapShadow() {$/;"	f	namespace:__asan
PremapShadow	hwasan/hwasan_dynamic_shadow.cpp	/^static uptr PremapShadow() {$/;"	f	namespace:__hwasan
PremapShadowFailed	asan/asan_premap_shadow.cpp	/^bool PremapShadowFailed() {$/;"	f	namespace:__asan
PremapShadowSize	asan/asan_premap_shadow.cpp	/^uptr PremapShadowSize() {$/;"	f	namespace:__asan
PremapShadowSize	hwasan/hwasan_dynamic_shadow.cpp	/^static uptr PremapShadowSize() {$/;"	f	namespace:__hwasan
PrimaryAllocator	hwasan/hwasan_allocator.h	/^typedef SizeClassAllocator64<AP64> PrimaryAllocator;$/;"	t	namespace:__hwasan
PrimaryAllocator	tsan/tsan_rtl.h	/^typedef SizeClassAllocator32<AP32> PrimaryAllocator;$/;"	t	namespace:__tsan
PrimaryAllocator	tsan/tsan_rtl.h	/^typedef SizeClassAllocator64<AP64> PrimaryAllocator;$/;"	t	namespace:__tsan
PrimaryAllocatorName	sanitizer_common/sanitizer_allocator.cpp	/^const char *PrimaryAllocatorName = "SizeClassAllocator";$/;"	m	namespace:__sanitizer
PrimaryInternalAllocator	sanitizer_common/sanitizer_allocator_internal.h	/^typedef SizeClassAllocator32<AP32> PrimaryInternalAllocator;$/;"	t	namespace:__sanitizer
Print	asan/asan_activation.cpp	/^  void Print() {$/;"	f	struct:__asan::AsanDeactivatedFlags
Print	asan/asan_descriptions.cpp	/^void GlobalAddressDescription::Print(const char *bug_type) const {$/;"	f	class:__asan::GlobalAddressDescription
Print	asan/asan_descriptions.cpp	/^void HeapAddressDescription::Print() const {$/;"	f	class:__asan::HeapAddressDescription
Print	asan/asan_descriptions.cpp	/^void ShadowAddressDescription::Print() const {$/;"	f	class:__asan::ShadowAddressDescription
Print	asan/asan_descriptions.cpp	/^void StackAddressDescription::Print() const {$/;"	f	class:__asan::StackAddressDescription
Print	asan/asan_descriptions.h	/^  void Print(const char *bug_descr = nullptr) const {$/;"	f	class:__asan::AddressDescription
Print	asan/asan_errors.cpp	/^void ErrorAllocTypeMismatch::Print() {$/;"	f	class:__asan::ErrorAllocTypeMismatch
Print	asan/asan_errors.cpp	/^void ErrorAllocationSizeTooBig::Print() {$/;"	f	class:__asan::ErrorAllocationSizeTooBig
Print	asan/asan_errors.cpp	/^void ErrorBadParamsToAnnotateContiguousContainer::Print() {$/;"	f	class:__asan::ErrorBadParamsToAnnotateContiguousContainer
Print	asan/asan_errors.cpp	/^void ErrorCallocOverflow::Print() {$/;"	f	class:__asan::ErrorCallocOverflow
Print	asan/asan_errors.cpp	/^void ErrorDeadlySignal::Print() {$/;"	f	class:__asan::ErrorDeadlySignal
Print	asan/asan_errors.cpp	/^void ErrorDoubleFree::Print() {$/;"	f	class:__asan::ErrorDoubleFree
Print	asan/asan_errors.cpp	/^void ErrorFreeNotMalloced::Print() {$/;"	f	class:__asan::ErrorFreeNotMalloced
Print	asan/asan_errors.cpp	/^void ErrorGeneric::Print() {$/;"	f	class:__asan::ErrorGeneric
Print	asan/asan_errors.cpp	/^void ErrorInvalidAlignedAllocAlignment::Print() {$/;"	f	class:__asan::ErrorInvalidAlignedAllocAlignment
Print	asan/asan_errors.cpp	/^void ErrorInvalidAllocationAlignment::Print() {$/;"	f	class:__asan::ErrorInvalidAllocationAlignment
Print	asan/asan_errors.cpp	/^void ErrorInvalidPointerPair::Print() {$/;"	f	class:__asan::ErrorInvalidPointerPair
Print	asan/asan_errors.cpp	/^void ErrorInvalidPosixMemalignAlignment::Print() {$/;"	f	class:__asan::ErrorInvalidPosixMemalignAlignment
Print	asan/asan_errors.cpp	/^void ErrorMallocUsableSizeNotOwned::Print() {$/;"	f	class:__asan::ErrorMallocUsableSizeNotOwned
Print	asan/asan_errors.cpp	/^void ErrorNewDeleteTypeMismatch::Print() {$/;"	f	class:__asan::ErrorNewDeleteTypeMismatch
Print	asan/asan_errors.cpp	/^void ErrorODRViolation::Print() {$/;"	f	class:__asan::ErrorODRViolation
Print	asan/asan_errors.cpp	/^void ErrorOutOfMemory::Print() {$/;"	f	class:__asan::ErrorOutOfMemory
Print	asan/asan_errors.cpp	/^void ErrorPvallocOverflow::Print() {$/;"	f	class:__asan::ErrorPvallocOverflow
Print	asan/asan_errors.cpp	/^void ErrorReallocArrayOverflow::Print() {$/;"	f	class:__asan::ErrorReallocArrayOverflow
Print	asan/asan_errors.cpp	/^void ErrorRssLimitExceeded::Print() {$/;"	f	class:__asan::ErrorRssLimitExceeded
Print	asan/asan_errors.cpp	/^void ErrorSanitizerGetAllocatedSizeNotOwned::Print() {$/;"	f	class:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
Print	asan/asan_errors.cpp	/^void ErrorStringFunctionMemoryRangesOverlap::Print() {$/;"	f	class:__asan::ErrorStringFunctionMemoryRangesOverlap
Print	asan/asan_errors.cpp	/^void ErrorStringFunctionSizeOverflow::Print() {$/;"	f	class:__asan::ErrorStringFunctionSizeOverflow
Print	asan/asan_errors.h	/^  void Print() {$/;"	f	struct:__asan::ErrorDescription
Print	asan/asan_memory_profile.cpp	/^  void Print(uptr top_percent, uptr max_number_of_contexts) {$/;"	f	class:__asan::HeapProfile
Print	asan/asan_scariness_score.h	/^  void Print() const {$/;"	f	struct:__asan::ScarinessScoreBase
Print	asan/asan_stats.cpp	/^void AsanStats::Print() {$/;"	f	class:__asan::AsanStats
Print	hwasan/hwasan_thread.cpp	/^void Thread::Print(const char *Prefix) {$/;"	f	class:__hwasan::Thread
Print	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static void Print() {$/;"	f	class:SizeClassMap
Print	sanitizer_common/sanitizer_deadlock_detector.h	/^  void Print() {$/;"	f	class:__sanitizer::DeadlockDetector
Print	sanitizer_common/sanitizer_stacktrace_libcdep.cpp	/^void StackTrace::Print() const {$/;"	f	class:__sanitizer::StackTrace
PrintAccessAndVarIntersection	asan/asan_descriptions.cpp	/^static void PrintAccessAndVarIntersection(const StackVarDescr &var, uptr addr,$/;"	f	namespace:__asan
PrintAccumulatedStats	asan/asan_stats.cpp	/^static void PrintAccumulatedStats() {$/;"	f	namespace:__asan
PrintAddressDescription	asan/asan_descriptions.cpp	/^void PrintAddressDescription(uptr addr, uptr access_size,$/;"	f	namespace:__asan
PrintAddressDescription	hwasan/hwasan_report.cpp	/^void PrintAddressDescription($/;"	f	namespace:__hwasan
PrintAddressSpaceLayout	asan/asan_rtl.cpp	/^void PrintAddressSpaceLayout() {$/;"	f	namespace:__asan
PrintAddressSpaceLayout	hwasan/hwasan_linux.cpp	/^static void PrintAddressSpaceLayout() {$/;"	f	namespace:__hwasan
PrintAll	sanitizer_common/sanitizer_stackdepotbase.h	/^void StackDepotBase<Node, kReservedBits, kTabSizeLog>::PrintAll() {$/;"	f	class:__sanitizer::StackDepotBase
PrintCmdline	sanitizer_common/sanitizer_common.cpp	/^void PrintCmdline() {$/;"	f	namespace:__sanitizer
PrintContainerOverflowHint	asan/asan_errors.cpp	/^static void PrintContainerOverflowHint() {$/;"	f	namespace:__asan
PrintCurrentStack	tsan/tsan_rtl_report.cpp	/^void PrintCurrentStack(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
PrintCurrentStackSlow	tsan/tsan_rtl_report.cpp	/^void PrintCurrentStackSlow(uptr pc) {$/;"	f	namespace:__tsan
PrintFlagDescriptions	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::PrintFlagDescriptions() {$/;"	f	class:__sanitizer::FlagParser
PrintGlobalLocation	asan/asan_globals.cpp	/^void PrintGlobalLocation(InternalScopedString *str, const __asan_global &g) {$/;"	f	namespace:__asan
PrintGlobalNameIfASCII	asan/asan_globals.cpp	/^void PrintGlobalNameIfASCII(InternalScopedString *str, const __asan_global &g) {$/;"	f	namespace:__asan
PrintHeapChunkAccess	asan/asan_descriptions.cpp	/^static void PrintHeapChunkAccess(uptr addr, const ChunkAccess &descr) {$/;"	f	namespace:__asan
PrintHintAllocatorCannotReturnNull	sanitizer_common/sanitizer_allocator.cpp	/^void PrintHintAllocatorCannotReturnNull() {$/;"	f	namespace:__sanitizer
PrintInternalAllocatorStats	asan/asan_allocator.cpp	/^void PrintInternalAllocatorStats() {$/;"	f	namespace:__asan
PrintLeakedObjectsForLeak	lsan/lsan_common.cpp	/^void LeakReport::PrintLeakedObjectsForLeak(uptr index) {$/;"	f	class:__lsan::LeakReport
PrintLegend	asan/asan_errors.cpp	/^static void PrintLegend(InternalScopedString *str) {$/;"	f	namespace:__asan
PrintLocation	tsan/tsan_report.cpp	/^static void PrintLocation(const ReportLocation *loc) {$/;"	f	namespace:__tsan
PrintMallocStatsArray	asan/asan_stats.cpp	/^static void PrintMallocStatsArray(const char *prefix,$/;"	f	namespace:__asan
PrintMatchedBenignRaces	tsan/tsan_interface_ann.cpp	/^void PrintMatchedBenignRaces() {$/;"	f	namespace:__tsan
PrintMatchedSuppressions	lsan/lsan_common.cpp	/^static void PrintMatchedSuppressions() {$/;"	f	namespace:__lsan
PrintMatchedSuppressions	tsan/tsan_suppressions.cpp	/^void PrintMatchedSuppressions() {$/;"	f	namespace:__tsan
PrintMemoryByte	asan/asan_report.cpp	/^void PrintMemoryByte(InternalScopedString *str, const char *before, u8 byte,$/;"	f	namespace:__asan
PrintMemoryByte	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static void PrintMemoryByte(InternalScopedString *str, const char *before,$/;"	f	namespace:__sanitizer
PrintMemorySnippet	ubsan/ubsan_diag.cpp	/^static void PrintMemorySnippet(const Decorator &Decor, MemoryLocation Loc,$/;"	f
PrintMop	tsan/tsan_report.cpp	/^static void PrintMop(const ReportMop *mop, bool first) {$/;"	f	namespace:__tsan
PrintMutex	tsan/tsan_report.cpp	/^static void PrintMutex(const ReportMutex *rm) {$/;"	f	namespace:__tsan
PrintMutexSet	tsan/tsan_report.cpp	/^static void PrintMutexSet(Vector<ReportMopMutex> const& mset) {$/;"	f	namespace:__tsan
PrintMutexShort	tsan/tsan_report.cpp	/^static void PrintMutexShort(const ReportMutex *rm, const char *after) {$/;"	f	namespace:__tsan
PrintMutexShortWithAddress	tsan/tsan_report.cpp	/^static void PrintMutexShortWithAddress(const ReportMutex *rm,$/;"	f	namespace:__tsan
PrintRange	hwasan/hwasan_linux.cpp	/^static void PrintRange(uptr start, uptr end, const char *name) {$/;"	f	namespace:__hwasan
PrintReport	tsan/tsan_report.cpp	/^void PrintReport(const ReportDesc *rep) {$/;"	f	namespace:__tsan
PrintReportForLeak	lsan/lsan_common.cpp	/^void LeakReport::PrintReportForLeak(uptr index) {$/;"	f	class:__lsan::LeakReport
PrintShadowByte	asan/asan_errors.cpp	/^static void PrintShadowByte(InternalScopedString *str, const char *before,$/;"	f	namespace:__asan
PrintShadowBytes	asan/asan_errors.cpp	/^static void PrintShadowBytes(InternalScopedString *str, const char *before,$/;"	f	namespace:__asan
PrintShadowMemoryForAddress	asan/asan_errors.cpp	/^static void PrintShadowMemoryForAddress(uptr addr) {$/;"	f	namespace:__asan
PrintSimple	asan/asan_scariness_score.h	/^  static void PrintSimple(int score, const char *descr) {$/;"	f	struct:__asan::ScarinessScoreBase
PrintSleep	tsan/tsan_report.cpp	/^static void PrintSleep(const ReportStack *s) {$/;"	f	namespace:__tsan
PrintStack	tsan/tsan_report.cpp	/^void PrintStack(const ReportStack *ent) {$/;"	f	namespace:__tsan
PrintStackAllocations	hwasan/hwasan_report.cpp	/^static void PrintStackAllocations(StackAllocationsRingBuffer *sa,$/;"	f	namespace:__hwasan
PrintStackTraceById	lsan/lsan_common.cpp	/^static void PrintStackTraceById(u32 stack_trace_id) {$/;"	f	namespace:__lsan
PrintStats	asan/asan_allocator.cpp	/^  void PrintStats() {$/;"	f	struct:__asan::Allocator
PrintStats	sanitizer_common/sanitizer_allocator_combined.h	/^  void PrintStats() {$/;"	f	class:CombinedAllocator
PrintStats	sanitizer_common/sanitizer_allocator_primary32.h	/^  void PrintStats() {}$/;"	f	class:SizeClassAllocator32
PrintStats	sanitizer_common/sanitizer_allocator_primary64.h	/^  void PrintStats() {$/;"	f	class:SizeClassAllocator64
PrintStats	sanitizer_common/sanitizer_allocator_primary64.h	/^  void PrintStats(uptr class_id, uptr rss) {$/;"	f	class:SizeClassAllocator64
PrintStats	sanitizer_common/sanitizer_allocator_secondary.h	/^  void PrintStats() {$/;"	f	class:LargeMmapAllocator
PrintStats	sanitizer_common/sanitizer_quarantine.h	/^  void PrintStats() const {$/;"	f	class:__sanitizer::Quarantine
PrintStats	sanitizer_common/sanitizer_quarantine.h	/^  void PrintStats() const {$/;"	f	class:__sanitizer::QuarantineCache
PrintSummary	lsan/lsan_common.cpp	/^void LeakReport::PrintSummary() {$/;"	f	class:__lsan::LeakReport
PrintTagInfoAroundAddr	hwasan/hwasan_report.cpp	/^static void PrintTagInfoAroundAddr(tag_t *tag_ptr, uptr num_rows,$/;"	f	namespace:__hwasan
PrintTagsAroundAddr	hwasan/hwasan_report.cpp	/^static void PrintTagsAroundAddr(tag_t *tag_ptr) {$/;"	f	namespace:__hwasan
PrintThread	tsan/tsan_report.cpp	/^static void PrintThread(const ReportThread *rt) {$/;"	f	namespace:__tsan
PrintZoneForPointer	asan/asan_report.cpp	/^static void PrintZoneForPointer(uptr ptr, uptr zone_ptr,$/;"	f	namespace:__asan
Printf	sanitizer_common/sanitizer_printf.cpp	/^void Printf(const char *format, ...) {$/;"	f	namespace:__sanitizer
PrintfAndReportCallback	sanitizer_common/sanitizer_printf.cpp	/^static void (*PrintfAndReportCallback)(const char *);$/;"	m	namespace:__sanitizer
ProcCreate	tsan/tsan_rtl_proc.cpp	/^Processor *ProcCreate() {$/;"	f	namespace:__tsan
ProcDestroy	tsan/tsan_rtl_proc.cpp	/^void ProcDestroy(Processor *proc) {$/;"	f	namespace:__tsan
ProcSelfMapsBuff	sanitizer_common/sanitizer_linux.h	/^struct ProcSelfMapsBuff {$/;"	s	namespace:__sanitizer
ProcUnwire	tsan/tsan_rtl_proc.cpp	/^void ProcUnwire(Processor *proc, ThreadState *thr) {$/;"	f	namespace:__tsan
ProcWire	tsan/tsan_rtl_proc.cpp	/^void ProcWire(Processor *proc, ThreadState *thr) {$/;"	f	namespace:__tsan
ProcessChunk	asan/asan_memory_profile.cpp	/^  void ProcessChunk(const AsanChunkView &cv) {$/;"	f	class:__asan::HeapProfile
ProcessEnvironmentBlock	asan/asan_win.cpp	/^  PVOID ProcessEnvironmentBlock;$/;"	m	struct:__asan::_TEB
ProcessGlobalRegions	lsan/lsan_common_fuchsia.cpp	/^void ProcessGlobalRegions(Frontier *frontier) {}$/;"	f	namespace:__lsan
ProcessGlobalRegions	lsan/lsan_common_linux.cpp	/^void ProcessGlobalRegions(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessGlobalRegions	lsan/lsan_common_mac.cpp	/^void ProcessGlobalRegions(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessGlobalRegionsCallback	lsan/lsan_common_linux.cpp	/^static int ProcessGlobalRegionsCallback(struct dl_phdr_info *info, size_t size,$/;"	f	namespace:__lsan
ProcessPC	lsan/lsan_common.cpp	/^void ProcessPC(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessPendingSignals	tsan/tsan_interceptors_posix.cpp	/^void ProcessPendingSignals(ThreadState *thr) {$/;"	f	namespace:__tsan
ProcessPlatformSpecificAllocations	lsan/lsan_common_fuchsia.cpp	/^void ProcessPlatformSpecificAllocations(Frontier *frontier) {}$/;"	f	namespace:__lsan
ProcessPlatformSpecificAllocations	lsan/lsan_common_linux.cpp	/^void ProcessPlatformSpecificAllocations(Frontier *frontier) {}$/;"	f	namespace:__lsan
ProcessPlatformSpecificAllocations	lsan/lsan_common_mac.cpp	/^void ProcessPlatformSpecificAllocations(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessRootRegion	lsan/lsan_common.cpp	/^static void ProcessRootRegion(Frontier *frontier,$/;"	f	namespace:__lsan
ProcessRootRegions	lsan/lsan_common.cpp	/^static void ProcessRootRegions(Frontier *frontier) {$/;"	f	namespace:__lsan
ProcessThreads	lsan/lsan_common.cpp	/^static void ProcessThreads(SuspendedThreadsList const &, Frontier *) {}$/;"	f	namespace:__lsan
ProcessThreads	lsan/lsan_common.cpp	/^static void ProcessThreads(SuspendedThreadsList const &suspended_threads,$/;"	f	namespace:__lsan
Processor	tsan/tsan_rtl.h	/^struct Processor {$/;"	s	namespace:__tsan
ProtectGap	asan/asan_shadow_setup.cpp	/^static void ProtectGap(uptr addr, uptr size) {$/;"	f	namespace:__asan
ProtectGap	hwasan/hwasan_linux.cpp	/^static void ProtectGap(uptr addr, uptr size) {$/;"	f	namespace:__hwasan
ProtectGap	sanitizer_common/sanitizer_common_libcdep.cpp	/^void ProtectGap(uptr addr, uptr size, uptr zero_base_shadow_start,$/;"	f	namespace:__sanitizer
ProtectRange	tsan/tsan_platform_posix.cpp	/^static void ProtectRange(uptr beg, uptr end) {$/;"	f	namespace:__tsan
PtraceRegistersStatus	sanitizer_common/sanitizer_stoptheworld.h	/^enum PtraceRegistersStatus {$/;"	g	namespace:__sanitizer
Purge	asan/asan_allocator.cpp	/^  void Purge(BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
Push	hwasan/hwasan_thread_list.h	/^  void Push(Thread *t) {$/;"	f	struct:__hwasan::ThreadListHead
Push	sanitizer_common/sanitizer_lfstack.h	/^  void Push(T *p) {$/;"	f	struct:__sanitizer::LFStack
PushBack	sanitizer_common/sanitizer_vector.h	/^  T *PushBack() {$/;"	f	class:__sanitizer::Vector
PushBack	sanitizer_common/sanitizer_vector.h	/^  T *PushBack(const T& v) {$/;"	f	class:__sanitizer::Vector
Put	sanitizer_common/sanitizer_quarantine.h	/^  void Put(Cache *c, Callback cb, Node *ptr, uptr size) {$/;"	f	class:__sanitizer::Quarantine
Put	sanitizer_common/sanitizer_stackdepotbase.h	/^StackDepotBase<Node, kReservedBits, kTabSizeLog>::Put(args_type args,$/;"	f	class:__sanitizer::StackDepotBase
Quarantine	sanitizer_common/sanitizer_quarantine.h	/^  explicit Quarantine(LinkerInitialized)$/;"	f	class:__sanitizer::Quarantine
Quarantine	sanitizer_common/sanitizer_quarantine.h	/^class Quarantine {$/;"	c	namespace:__sanitizer
QuarantineBatch	sanitizer_common/sanitizer_quarantine.h	/^struct QuarantineBatch {$/;"	s	namespace:__sanitizer
QuarantineCache	asan/asan_allocator.cpp	/^typedef AsanQuarantine::Cache QuarantineCache;$/;"	t	namespace:__asan
QuarantineCache	sanitizer_common/sanitizer_quarantine.h	/^  QuarantineCache()$/;"	f	class:__sanitizer::QuarantineCache
QuarantineCache	sanitizer_common/sanitizer_quarantine.h	/^  explicit QuarantineCache(LinkerInitialized) {$/;"	f	class:__sanitizer::QuarantineCache
QuarantineCache	sanitizer_common/sanitizer_quarantine.h	/^class QuarantineCache {$/;"	c	namespace:__sanitizer
QuarantineCallback	asan/asan_allocator.cpp	/^  QuarantineCallback(AllocatorCache *cache, BufferedStackTrace *stack)$/;"	f	struct:__asan::QuarantineCallback
QuarantineCallback	asan/asan_allocator.cpp	/^struct QuarantineCallback {$/;"	s	namespace:__asan
QuarantineChunk	asan/asan_allocator.cpp	/^  void QuarantineChunk(AsanChunk *m, void *ptr, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
QuarantinePop	sanitizer_common/sanitizer_thread_registry.cpp	/^ThreadContextBase *ThreadRegistry::QuarantinePop() {$/;"	f	class:__sanitizer::ThreadRegistry
QuarantinePush	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::QuarantinePush(ThreadContextBase *tctx) {$/;"	f	class:__sanitizer::ThreadRegistry
QuickCheckForUnpoisonedRegion	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	/^static inline bool QuickCheckForUnpoisonedRegion(uptr beg, uptr size) {$/;"	f	namespace:__asan
QuickCheckForUnpoisonedRegion	asan/asan_interceptors_memintrinsics.h	/^static inline bool QuickCheckForUnpoisonedRegion(uptr beg, uptr size) {$/;"	f	namespace:__asan
RAW_ADDR	asan/asan_mapping_myriad.h	16;"	d
RAW_CHECK	sanitizer_common/sanitizer_internal_defs.h	287;"	d
RAW_CHECK_MSG	sanitizer_common/sanitizer_internal_defs.h	280;"	d
RAY_DO_SIGLEV	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	19;"	d
READ	sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	e	enum:__sanitizer::SignalContext::WriteFlag
READ_STRING	tsan/tsan_interceptors_posix.cpp	320;"	d
READ_STRING_OF_LEN	tsan/tsan_interceptors_posix.cpp	316;"	d
REAL	interception/interception.h	163;"	d
REAL	interception/interception.h	166;"	d
REAL	interception/interception.h	171;"	d
REAL	interception/interception.h	181;"	d
RECOVERABLE	ubsan/ubsan_handlers.h	30;"	d
REGISTERED	asan/asan_globals.cpp	/^  REGISTERED = 1$/;"	e	enum:__asan::GlobalSymbolState
REGISTERS_AVAILABLE	sanitizer_common/sanitizer_stoptheworld.h	/^  REGISTERS_AVAILABLE = 1$/;"	e	enum:__sanitizer::PtraceRegistersStatus
REGISTERS_UNAVAILABLE	sanitizer_common/sanitizer_stoptheworld.h	/^  REGISTERS_UNAVAILABLE = 0,$/;"	e	enum:__sanitizer::PtraceRegistersStatus
REGISTERS_UNAVAILABLE_FATAL	sanitizer_common/sanitizer_stoptheworld.h	/^  REGISTERS_UNAVAILABLE_FATAL = -1,$/;"	e	enum:__sanitizer::PtraceRegistersStatus
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	475;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	479;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	484;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	486;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	498;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	503;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	505;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	510;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	516;"	d
REG_SP	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	522;"	d
RHSType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &RHSType;$/;"	m	struct:__ubsan::ShiftOutOfBoundsData
RMD160_CTX_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned RMD160_CTX_sz = sizeof(RMD160_CTX);$/;"	m	namespace:__sanitizer
RMD160_return_length	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned RMD160_return_length = RMD160_DIGEST_STRING_LENGTH;$/;"	m	namespace:__sanitizer
RVAPtr	interception/interception_win.cpp	/^  RVAPtr(void *module, uptr rva)$/;"	f	class:__interception::__anon83::RVAPtr
RVAPtr	interception/interception_win.cpp	/^template <typename T> class RVAPtr {$/;"	c	namespace:__interception::__anon83
RWMutex	sanitizer_common/sanitizer_mutex.h	/^  RWMutex() {$/;"	f	class:__sanitizer::RWMutex
RWMutex	sanitizer_common/sanitizer_mutex.h	/^class RWMutex {$/;"	c	namespace:__sanitizer
RWMutexLock	sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedLock<RWMutex> RWMutexLock;$/;"	t	namespace:__sanitizer
RWMutexReadLock	sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedReadLock<RWMutex> RWMutexReadLock;$/;"	t	namespace:__sanitizer
RZLog2Size	asan/asan_allocator.cpp	/^static u32 RZLog2Size(u32 rz_log) {$/;"	f	namespace:__asan
RZSize2Log	asan/asan_allocator.cpp	/^static u32 RZSize2Log(u32 rz_size) {$/;"	f	namespace:__asan
RaceBetweenAtomicAndFree	tsan/tsan_rtl_report.cpp	/^static bool RaceBetweenAtomicAndFree(ThreadState *thr) {$/;"	f	namespace:__tsan
RacyAddress	tsan/tsan_rtl.h	/^struct RacyAddress {$/;"	s	namespace:__tsan
RacyStacks	tsan/tsan_rtl.h	/^struct RacyStacks {$/;"	s	namespace:__tsan
Rand	sanitizer_common/sanitizer_allocator.h	/^inline u32 Rand(u32 *state) {  \/\/ ANSI C linear congruential PRNG.$/;"	f	namespace:__sanitizer
RandN	sanitizer_common/sanitizer_allocator.h	/^inline u32 RandN(u32 *state, u32 n) { return Rand(state) % n; }  \/\/ [0, n)$/;"	f	namespace:__sanitizer
RandomSeed	hwasan/hwasan_thread.cpp	/^static u32 RandomSeed() {$/;"	f	namespace:__hwasan
RandomShuffle	sanitizer_common/sanitizer_allocator.h	/^inline void RandomShuffle(T *a, u32 n, u32 *rand_state) {$/;"	f	namespace:__sanitizer
Range	ubsan/ubsan_diag.h	/^  Range() : Start(), End(), Text() {}$/;"	f	class:__ubsan::Range
Range	ubsan/ubsan_diag.h	/^  Range(MemoryLocation Start, MemoryLocation End, const char *Text)$/;"	f	class:__ubsan::Range
Range	ubsan/ubsan_diag.h	/^class Range {$/;"	c	namespace:__ubsan
RangeIteratorCallback	sanitizer_common/sanitizer_common.h	/^typedef void (*RangeIteratorCallback)(uptr begin, uptr end, void *arg);$/;"	t	namespace:__sanitizer
Ranges	ubsan/ubsan_diag.h	/^  Range Ranges[MaxRanges];$/;"	m	class:__ubsan::Diag
RangesOverlap	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	/^static inline bool RangesOverlap(const char *offset1, uptr length1,$/;"	f	namespace:__asan
RangesOverlap	asan/asan_interceptors_memintrinsics.h	/^static inline bool RangesOverlap(const char *offset1, uptr length1,$/;"	f	namespace:__asan
RawInternalAlloc	sanitizer_common/sanitizer_allocator.cpp	/^static void *RawInternalAlloc(uptr size, InternalAllocatorCache *cache,$/;"	f	namespace:__sanitizer
RawInternalFree	sanitizer_common/sanitizer_allocator.cpp	/^static void RawInternalFree(void *ptr, InternalAllocatorCache *cache) {$/;"	f	namespace:__sanitizer
RawInternalRealloc	sanitizer_common/sanitizer_allocator.cpp	/^static void *RawInternalRealloc(void *ptr, uptr size,$/;"	f	namespace:__sanitizer
RawWrite	sanitizer_common/sanitizer_file.cpp	/^void RawWrite(const char *buffer) {$/;"	f	namespace:__sanitizer
RawWrite	sanitizer_common/sanitizer_fuchsia.cpp	/^void RawWrite(const char *buffer) {$/;"	f	namespace:__sanitizer
RdOnly	sanitizer_common/sanitizer_file.h	/^  RdOnly,$/;"	e	enum:__sanitizer::FileAccessMode
RdWr	sanitizer_common/sanitizer_file.h	/^  RdWr$/;"	e	enum:__sanitizer::FileAccessMode
ReExec	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void ReExec() {$/;"	f	namespace:__sanitizer
ReExec	sanitizer_common/sanitizer_mac.cpp	/^void ReExec() {$/;"	f	namespace:__sanitizer
ReExec	sanitizer_common/sanitizer_win.cpp	/^void ReExec() {$/;"	f	namespace:__sanitizer
ReInitialize	asan/asan_allocator.cpp	/^  void ReInitialize(const AllocatorOptions &options) {$/;"	f	struct:__asan::Allocator
ReInitializeAllocator	asan/asan_allocator.cpp	/^void ReInitializeAllocator(const AllocatorOptions &options) {$/;"	f	namespace:__asan
RePoisonChunk	asan/asan_allocator.cpp	/^  void RePoisonChunk(uptr chunk) {$/;"	f	struct:__asan::Allocator
ReachedEndOfOutput	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual bool ReachedEndOfOutput(const char *buffer, uptr length) const {$/;"	f	class:__sanitizer::SymbolizerProcess
ReachedEndOfOutput	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^bool Addr2LineProcess::ReachedEndOfOutput(const char *buffer,$/;"	f	class:__sanitizer::Addr2LineProcess
ReadBinaryName	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr ReadBinaryName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	sanitizer_common/sanitizer_linux.cpp	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	sanitizer_common/sanitizer_mac.cpp	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	sanitizer_common/sanitizer_rtems.cpp	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryName	sanitizer_common/sanitizer_win.cpp	/^uptr ReadBinaryName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadBinaryNameCached	sanitizer_common/sanitizer_common.cpp	/^uptr ReadBinaryNameCached(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadContextStack	asan/asan_linux.cpp	/^void ReadContextStack(void *context, uptr *stack, uptr *ssize) {$/;"	f	namespace:__asan
ReadContextStack	asan/asan_mac.cpp	/^void ReadContextStack(void *context, uptr *stack, uptr *ssize) {$/;"	f	namespace:__asan
ReadContextStack	asan/asan_win.cpp	/^void ReadContextStack(void *context, uptr *stack, uptr *ssize) {$/;"	f	namespace:__asan
ReadFileToBuffer	sanitizer_common/sanitizer_file.cpp	/^bool ReadFileToBuffer(const char *file_name, char **buff, uptr *buff_size,$/;"	f	namespace:__sanitizer
ReadFileToBuffer	sanitizer_common/sanitizer_fuchsia.cpp	/^bool ReadFileToBuffer(const char *file_name, char **buff, uptr *buff_size,$/;"	f	namespace:__sanitizer
ReadFileToVector	sanitizer_common/sanitizer_file.cpp	/^bool ReadFileToVector(const char *file_name,$/;"	f	namespace:__sanitizer
ReadFromFile	sanitizer_common/sanitizer_posix.cpp	/^bool ReadFromFile(fd_t fd, void *buff, uptr buff_size, uptr *bytes_read,$/;"	f	namespace:__sanitizer
ReadFromFile	sanitizer_common/sanitizer_rtems.cpp	/^bool ReadFromFile(fd_t fd, void *buff, uptr buff_size, uptr *bytes_read,$/;"	f	namespace:__sanitizer
ReadFromFile	sanitizer_common/sanitizer_win.cpp	/^bool ReadFromFile(fd_t fd, void *buff, uptr buff_size, uptr *bytes_read,$/;"	f	namespace:__sanitizer
ReadFromSymbolizer	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool SymbolizerProcess::ReadFromSymbolizer(char *buffer, uptr max_length) {$/;"	f	class:__sanitizer::SymbolizerProcess
ReadLock	sanitizer_common/sanitizer_mutex.h	/^  void ReadLock() {$/;"	f	class:__sanitizer::RWMutex
ReadLock	tsan/tsan_mutex.cpp	/^void Mutex::ReadLock() {$/;"	f	class:__tsan::Mutex
ReadLock	tsan/tsan_mutex.h	/^typedef GenericScopedReadLock<Mutex> ReadLock;$/;"	t	namespace:__tsan
ReadLockSlow	sanitizer_common/sanitizer_mutex.h	/^  void NOINLINE ReadLockSlow() {$/;"	f	class:__sanitizer::RWMutex
ReadLongProcessName	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr ReadLongProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	sanitizer_common/sanitizer_linux.cpp	/^uptr ReadLongProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	sanitizer_common/sanitizer_mac.cpp	/^uptr ReadLongProcessName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	sanitizer_common/sanitizer_rtems.cpp	/^uptr ReadLongProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadLongProcessName	sanitizer_common/sanitizer_win.cpp	/^uptr ReadLongProcessName(\/*out*\/char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadNullSepFileToArray	sanitizer_common/sanitizer_linux.cpp	/^static void ReadNullSepFileToArray(const char *path, char ***arr,$/;"	f	namespace:__sanitizer
ReadProcMaps	sanitizer_common/sanitizer_procmaps_bsd.cpp	/^void ReadProcMaps(ProcSelfMapsBuff *proc_maps) {$/;"	f	namespace:__sanitizer
ReadProcMaps	sanitizer_common/sanitizer_procmaps_linux.cpp	/^void ReadProcMaps(ProcSelfMapsBuff *proc_maps) {$/;"	f	namespace:__sanitizer
ReadProcMaps	sanitizer_common/sanitizer_procmaps_solaris.cpp	/^void ReadProcMaps(ProcSelfMapsBuff *proc_maps) {$/;"	f	namespace:__sanitizer
ReadProcessName	sanitizer_common/sanitizer_common.cpp	/^static uptr ReadProcessName(\/*out*\/ char *buf, uptr buf_len) {$/;"	f	namespace:__sanitizer
ReadUnlock	sanitizer_common/sanitizer_mutex.h	/^  void ReadUnlock() {$/;"	f	class:__sanitizer::RWMutex
ReadUnlock	tsan/tsan_mutex.cpp	/^void Mutex::ReadUnlock() {$/;"	f	class:__tsan::Mutex
Realloc	sanitizer_common/sanitizer_common.h	/^  void Realloc(uptr new_capacity) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
ReallocFromLocalPool	asan/asan_malloc_linux.cpp	/^static void *ReallocFromLocalPool(void *ptr, uptr size) {$/;"	f
Reallocate	asan/asan_allocator.cpp	/^  void *Reallocate(void *old_ptr, uptr new_size, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
Reallocate	lsan/lsan_allocator.cpp	/^void *Reallocate(const StackTrace &stack, void *p, uptr new_size,$/;"	f	namespace:__lsan
Reallocate	sanitizer_common/sanitizer_allocator_combined.h	/^  void *Reallocate(AllocatorCache *cache, void *p, uptr new_size,$/;"	f	class:CombinedAllocator
Recycle	asan/asan_allocator.cpp	/^  void Recycle(AsanChunk *m) {$/;"	f	struct:__asan::QuarantineCallback
Recycle	sanitizer_common/sanitizer_quarantine.h	/^  void NOINLINE Recycle(uptr min_size, Callback cb) {$/;"	f	class:__sanitizer::Quarantine
Red	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Red()     const { return ansi_ ? "\\033[1m\\033[31m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
ReexecDisabled	sanitizer_common/sanitizer_mac.cpp	/^bool ReexecDisabled() {$/;"	f	namespace:__sanitizer
Refill	sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE bool Refill(PerClass *c, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator32LocalCache
Refill	sanitizer_common/sanitizer_allocator_local_cache.h	/^  NOINLINE bool Refill(PerClass *c, SizeClassAllocator *allocator,$/;"	f	struct:SizeClassAllocator64LocalCache
Refill	tsan/tsan_dense_alloc.h	/^  void Refill(Cache *c) {$/;"	f	class:__tsan::DenseSlabAlloc
RefreshModules	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^void Symbolizer::RefreshModules() {$/;"	f	class:__sanitizer::Symbolizer
RegionMemUsage	tsan/tsan_platform_mac.cpp	/^static void RegionMemUsage(uptr start, uptr end, uptr *res, uptr *dirty) {$/;"	f	namespace:__tsan
Register	sanitizer_common/sanitizer_allocator_stats.h	/^  void Register(AllocatorStats *s) {$/;"	f	class:AllocatorGlobalStats
RegisterActivationFlags	asan/asan_activation.cpp	/^  void RegisterActivationFlags(FlagParser *parser, Flags *f, CommonFlags *cf) {$/;"	f	struct:__asan::AsanDeactivatedFlags
RegisterAllocation	lsan/lsan_allocator.cpp	/^static void RegisterAllocation(const StackTrace &stack, void *p, uptr size) {$/;"	f	namespace:__lsan
RegisterAsanFlags	asan/asan_flags.cpp	/^static void RegisterAsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__asan
RegisterCommonFlags	sanitizer_common/sanitizer_flags.cpp	/^void RegisterCommonFlags(FlagParser *parser, CommonFlags *cf) {$/;"	f	namespace:__sanitizer
RegisterDeallocation	lsan/lsan_allocator.cpp	/^static void RegisterDeallocation(void *p) {$/;"	f	namespace:__lsan
RegisterFlag	sanitizer_common/sanitizer_flag_parser.h	/^static void RegisterFlag(FlagParser *parser, const char *name, const char *desc,$/;"	f	namespace:__sanitizer
RegisterGlobal	asan/asan_globals.cpp	/^static void RegisterGlobal(const Global *g) {$/;"	f	namespace:__asan
RegisterHandler	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::RegisterHandler(const char *name, FlagHandlerBase *handler,$/;"	f	class:__sanitizer::FlagParser
RegisterHwasanFlags	hwasan/hwasan.cpp	/^static void RegisterHwasanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__hwasan
RegisterIncludeFlags	sanitizer_common/sanitizer_flags.cpp	/^void RegisterIncludeFlags(FlagParser *parser, CommonFlags *cf) {$/;"	f	namespace:__sanitizer
RegisterLsanFlags	lsan/lsan_common.cpp	/^void RegisterLsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__lsan
RegisterSancovFlags	sanitizer_common/sancov_flags.cpp	/^static void RegisterSancovFlags(FlagParser *parser, SancovFlags *f) {$/;"	f	namespace:__sancov
RegisterTsanFlags	tsan/tsan_flags.cpp	/^void RegisterTsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__tsan
RegisterUbsanFlags	ubsan/ubsan_flags.cpp	/^void RegisterUbsanFlags(FlagParser *parser, Flags *f) {$/;"	f	namespace:__ubsan
RegisterUndefinedBehaviorReport	ubsan/ubsan_monitor.cpp	/^void __ubsan::RegisterUndefinedBehaviorReport(UndefinedBehaviorReport *UBR) {$/;"	f	class:__ubsan
Regular	sanitizer_common/sanitizer_thread_registry.h	/^  Regular, \/\/ Normal thread$/;"	m	class:__sanitizer::ThreadType
Release	tsan/tsan_rtl_mutex.cpp	/^void Release(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
ReleaseFreeMemoryToOS	sanitizer_common/sanitizer_allocator_primary64.h	/^  static void ReleaseFreeMemoryToOS(CompactPtrT *free_array,$/;"	f	class:SizeClassAllocator64
ReleaseImpl	tsan/tsan_rtl_mutex.cpp	/^void ReleaseImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
ReleaseMemoryPagesToOS	sanitizer_common/sanitizer_fuchsia.cpp	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {}$/;"	f	namespace:__sanitizer
ReleaseMemoryPagesToOS	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {$/;"	f	namespace:__sanitizer
ReleaseMemoryPagesToOS	sanitizer_common/sanitizer_rtems.cpp	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {}$/;"	f	namespace:__sanitizer
ReleaseMemoryPagesToOS	sanitizer_common/sanitizer_win.cpp	/^void ReleaseMemoryPagesToOS(uptr beg, uptr end) {$/;"	f	namespace:__sanitizer
ReleaseMemoryPagesToOSAndZeroFill	sanitizer_common/sanitizer_linux.h	/^inline void ReleaseMemoryPagesToOSAndZeroFill(uptr beg, uptr end) {$/;"	f	namespace:__sanitizer
ReleasePageRangeToOS	sanitizer_common/sanitizer_allocator_primary64.h	/^    void ReleasePageRangeToOS(CompactPtrT from, CompactPtrT to) {$/;"	f	class:SizeClassAllocator64::MemoryMapper
ReleaseStore	tsan/tsan_clock.cpp	/^void ThreadClock::ReleaseStore(ClockCache *c, SyncClock *dst) {$/;"	f	class:__tsan::ThreadClock
ReleaseStore	tsan/tsan_rtl_mutex.cpp	/^void ReleaseStore(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
ReleaseStoreAcquire	tsan/tsan_rtl_mutex.cpp	/^void ReleaseStoreAcquire(ThreadState *thr, uptr pc, uptr addr) {$/;"	f	namespace:__tsan
ReleaseStoreAcquireImpl	tsan/tsan_rtl_mutex.cpp	/^void ReleaseStoreAcquireImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
ReleaseStoreImpl	tsan/tsan_rtl_mutex.cpp	/^void ReleaseStoreImpl(ThreadState *thr, uptr pc, SyncClock *c) {$/;"	f	namespace:__tsan
ReleaseThread	hwasan/hwasan_thread_list.h	/^  void ReleaseThread(Thread *t) {$/;"	f	class:__hwasan::HwasanThreadList
ReleaseToOSIntervalMs	sanitizer_common/sanitizer_allocator_combined.h	/^  s32 ReleaseToOSIntervalMs() const {$/;"	f	class:CombinedAllocator
ReleaseToOSIntervalMs	sanitizer_common/sanitizer_allocator_primary32.h	/^  s32 ReleaseToOSIntervalMs() const {$/;"	f	class:SizeClassAllocator32
ReleaseToOSIntervalMs	sanitizer_common/sanitizer_allocator_primary64.h	/^  s32 ReleaseToOSIntervalMs() const {$/;"	f	class:SizeClassAllocator64
ReleaseToOsInfo	sanitizer_common/sanitizer_allocator_primary64.h	/^  struct ReleaseToOsInfo {$/;"	s	class:SizeClassAllocator64
Remove	hwasan/hwasan_thread_list.h	/^  void Remove(Thread *t) {$/;"	f	struct:__hwasan::ThreadListHead
Remove	tsan/tsan_mutexset.cpp	/^void MutexSet::Remove(u64 id) {$/;"	f	class:__tsan::MutexSet
Remove	tsan/tsan_mutexset.h	/^void MutexSet::Remove(u64 id) {}$/;"	f	class:__tsan::MutexSet
RemoveANSIEscapeSequencesFromString	sanitizer_common/sanitizer_common.cpp	/^void RemoveANSIEscapeSequencesFromString(char *str) {$/;"	f	namespace:__sanitizer
RemoveDieCallback	sanitizer_common/sanitizer_termination.cpp	/^bool RemoveDieCallback(DieCallbackType callback) {$/;"	f	namespace:__sanitizer
RemovePos	tsan/tsan_mutexset.cpp	/^void MutexSet::RemovePos(uptr i) {$/;"	f	class:__tsan::MutexSet
RemovePos	tsan/tsan_mutexset.h	/^void MutexSet::RemovePos(uptr i) {}$/;"	f	class:__tsan::MutexSet
RemoveThreadStats	hwasan/hwasan_thread_list.h	/^  void RemoveThreadStats(Thread *t) {$/;"	f	class:__hwasan::HwasanThreadList
RenderData	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^void RenderData(InternalScopedString *buffer, const char *format,$/;"	f	namespace:__sanitizer
RenderData	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^void RenderData(InternalScopedString *buffer, const char *format,$/;"	f	namespace:__sanitizer
RenderFrame	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^void RenderFrame(InternalScopedString *buffer, const char *format, int frame_no,$/;"	f	namespace:__sanitizer
RenderFrame	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^void RenderFrame(InternalScopedString *buffer, const char *format, int frame_no,$/;"	f	namespace:__sanitizer
RenderHex	ubsan/ubsan_diag.cpp	/^static void RenderHex(InternalScopedString *Buffer, UIntMax Val) {$/;"	f
RenderLocation	ubsan/ubsan_diag.cpp	/^static void RenderLocation(InternalScopedString *Buffer, Location Loc) {$/;"	f
RenderModuleLocation	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^void RenderModuleLocation(InternalScopedString *buffer, const char *module,$/;"	f	namespace:__sanitizer
RenderNeedsSymbolization	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^bool RenderNeedsSymbolization(const char *format) {$/;"	f	namespace:__sanitizer
RenderNeedsSymbolization	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^bool RenderNeedsSymbolization(const char *format) { return false; }$/;"	f	namespace:__sanitizer
RenderSourceLocation	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^void RenderSourceLocation(InternalScopedString *buffer, const char *file,$/;"	f	namespace:__sanitizer
RenderText	ubsan/ubsan_diag.cpp	/^static void RenderText(InternalScopedString *Buffer, const char *Message,$/;"	f
ReopenIfNecessary	sanitizer_common/sanitizer_file.cpp	/^void ReportFile::ReopenIfNecessary() {$/;"	f	class:__sanitizer::ReportFile
ReplaceSystemMalloc	asan/asan_malloc_linux.cpp	/^void ReplaceSystemMalloc() {$/;"	f	namespace:__asan
ReplaceSystemMalloc	asan/asan_malloc_win.cpp	/^void ReplaceSystemMalloc() {$/;"	f	namespace:__asan
ReplaceSystemMalloc	lsan/lsan_linux.cpp	/^void ReplaceSystemMalloc() {}$/;"	f	namespace:__lsan
ReplaceSystemMalloc	tsan/tsan_platform_linux.cpp	/^void ReplaceSystemMalloc() { }$/;"	f	namespace:__tsan
Report	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^void DD::Report(DDPhysicalThread *pt, DDLogicalThread *lt, int npath) {$/;"	f	class:__sanitizer::DD
Report	sanitizer_common/sanitizer_flag_parser.cpp	/^  void Report() {$/;"	f	class:__sanitizer::UnknownFlags
Report	sanitizer_common/sanitizer_printf.cpp	/^void Report(const char *format, ...) {$/;"	f	namespace:__sanitizer
ReportAllocTypeMismatch	asan/asan_report.cpp	/^void ReportAllocTypeMismatch(uptr addr, BufferedStackTrace *free_stack,$/;"	f	namespace:__asan
ReportAllocationSizeTooBig	asan/asan_report.cpp	/^void ReportAllocationSizeTooBig(uptr user_size, uptr total_size, uptr max_size,$/;"	f	namespace:__asan
ReportAllocationSizeTooBig	lsan/lsan_allocator.cpp	/^static void *ReportAllocationSizeTooBig(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
ReportAllocationSizeTooBig	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportAllocationSizeTooBig(uptr user_size, uptr max_size,$/;"	f	namespace:__sanitizer
ReportBadParamsToAnnotateContiguousContainer	asan/asan_report.cpp	/^void ReportBadParamsToAnnotateContiguousContainer(uptr beg, uptr end,$/;"	f	namespace:__asan
ReportCallocOverflow	asan/asan_report.cpp	/^void ReportCallocOverflow(uptr count, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportCallocOverflow	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportCallocOverflow(uptr count, uptr size,$/;"	f	namespace:__sanitizer
ReportDeadlock	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^void DD::ReportDeadlock(DDCallback *cb, DDMutex *m) {$/;"	f	class:__sanitizer::DD
ReportDeadlock	tsan/tsan_rtl_mutex.cpp	/^void ReportDeadlock(ThreadState *thr, uptr pc, DDReport *r) {$/;"	f	namespace:__tsan
ReportDeadlySignal	asan/asan_report.cpp	/^void ReportDeadlySignal(const SignalContext &sig) {$/;"	f	namespace:__asan
ReportDeadlySignal	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^void ReportDeadlySignal(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportDeadlySignal	sanitizer_common/sanitizer_symbolizer_report.cpp	/^void ReportDeadlySignal(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportDeadlySignalImpl	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static void ReportDeadlySignalImpl(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportDesc	tsan/tsan_report.cpp	/^ReportDesc::ReportDesc()$/;"	f	class:__tsan::ReportDesc
ReportDesc	tsan/tsan_report.h	/^class ReportDesc {$/;"	c	namespace:__tsan
ReportDoubleFree	asan/asan_report.cpp	/^void ReportDoubleFree(uptr addr, BufferedStackTrace *free_stack) {$/;"	f	namespace:__asan
ReportError	asan/asan_report.cpp	/^  void ReportError(const ErrorDescription &description) {$/;"	f	class:__asan::ScopedInErrorReport
ReportErrorSummary	sanitizer_common/sanitizer_common.cpp	/^void ReportErrorSummary(const char *error_message, const char *alt_tool_name) {$/;"	f	namespace:__sanitizer
ReportErrorSummary	sanitizer_common/sanitizer_symbolizer_report.cpp	/^void ReportErrorSummary(const char *error_type, const AddressInfo &info,$/;"	f	namespace:__sanitizer
ReportErrorSummary	sanitizer_common/sanitizer_symbolizer_report.cpp	/^void ReportErrorSummary(const char *error_type, const StackTrace *stack,$/;"	f	namespace:__sanitizer
ReportFile	sanitizer_common/sanitizer_file.h	/^struct ReportFile {$/;"	s	namespace:__sanitizer
ReportFreeNotMalloced	asan/asan_report.cpp	/^void ReportFreeNotMalloced(uptr addr, BufferedStackTrace *free_stack) {$/;"	f	namespace:__asan
ReportGenericError	asan/asan_report.cpp	/^void ReportGenericError(uptr pc, uptr bp, uptr sp, uptr addr, bool is_write,$/;"	f	namespace:__asan
ReportGlobal	asan/asan_globals.cpp	/^static void ReportGlobal(const Global &g, const char *prefix) {$/;"	f	namespace:__asan
ReportIfNotSuspended	lsan/lsan_common.cpp	/^static void ReportIfNotSuspended(ThreadContextBase *tctx, void *arg) {$/;"	f	namespace:__lsan
ReportIgnoresEnabled	tsan/tsan_rtl_thread.cpp	/^static void ReportIgnoresEnabled(ThreadContext *tctx, IgnoreSet *set) {$/;"	f	namespace:__tsan
ReportIncompatibleRT	asan/asan_linux.cpp	/^static void ReportIncompatibleRT() {$/;"	f	namespace:__asan
ReportInternalAllocatorOutOfMemory	sanitizer_common/sanitizer_allocator.cpp	/^static void NORETURN ReportInternalAllocatorOutOfMemory(uptr requested_size) {$/;"	f	namespace:__sanitizer
ReportInvalidAlignedAllocAlignment	asan/asan_report.cpp	/^void ReportInvalidAlignedAllocAlignment(uptr size, uptr alignment,$/;"	f	namespace:__asan
ReportInvalidAlignedAllocAlignment	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportInvalidAlignedAllocAlignment(uptr size, uptr alignment,$/;"	f	namespace:__sanitizer
ReportInvalidAllocationAlignment	asan/asan_report.cpp	/^void ReportInvalidAllocationAlignment(uptr alignment,$/;"	f	namespace:__asan
ReportInvalidAllocationAlignment	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportInvalidAllocationAlignment(uptr alignment,$/;"	f	namespace:__sanitizer
ReportInvalidFree	asan/asan_allocator.cpp	/^  void ReportInvalidFree(void *ptr, u8 chunk_state, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
ReportInvalidFree	hwasan/hwasan_report.cpp	/^void ReportInvalidFree(StackTrace *stack, uptr tagged_addr) {$/;"	f	namespace:__hwasan
ReportInvalidPointerPair	asan/asan_report.cpp	/^static NOINLINE void ReportInvalidPointerPair(uptr pc, uptr bp, uptr sp,$/;"	f	namespace:__asan
ReportInvalidPosixMemalignAlignment	asan/asan_report.cpp	/^void ReportInvalidPosixMemalignAlignment(uptr alignment,$/;"	f	namespace:__asan
ReportInvalidPosixMemalignAlignment	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportInvalidPosixMemalignAlignment(uptr alignment,$/;"	f	namespace:__sanitizer
ReportLocation	tsan/tsan_report.cpp	/^ReportLocation::ReportLocation(ReportLocationType type)$/;"	f	class:__tsan::ReportLocation
ReportLocation	tsan/tsan_report.h	/^struct ReportLocation {$/;"	s	namespace:__tsan
ReportLocationFD	tsan/tsan_report.h	/^  ReportLocationFD$/;"	e	enum:__tsan::ReportLocationType
ReportLocationGlobal	tsan/tsan_report.h	/^  ReportLocationGlobal,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationHeap	tsan/tsan_report.h	/^  ReportLocationHeap,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationStack	tsan/tsan_report.h	/^  ReportLocationStack,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationTLS	tsan/tsan_report.h	/^  ReportLocationTLS,$/;"	e	enum:__tsan::ReportLocationType
ReportLocationType	tsan/tsan_report.h	/^enum ReportLocationType {$/;"	g	namespace:__tsan
ReportLocationTypeDescription	tsan/tsan_debugging.cpp	/^static const char *ReportLocationTypeDescription(ReportLocationType typ) {$/;"	f
ReportMacMzReallocUnknown	asan/asan_report.cpp	/^void ReportMacMzReallocUnknown(uptr addr, uptr zone_ptr, const char *zone_name,$/;"	f	namespace:__asan
ReportMallocUsableSizeNotOwned	asan/asan_report.cpp	/^void ReportMallocUsableSizeNotOwned(uptr addr, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportMissedExpectedRace	tsan/tsan_interface_ann.cpp	/^static void ReportMissedExpectedRace(ExpectRace *race) {$/;"	f	namespace:__tsan
ReportMmapFailureAndDie	sanitizer_common/sanitizer_common.cpp	/^void NORETURN ReportMmapFailureAndDie(uptr size, const char *mem_type,$/;"	f	namespace:__sanitizer
ReportMmapWriteExec	sanitizer_common/sanitizer_symbolizer_report.cpp	/^void ReportMmapWriteExec(int prot) {$/;"	f	namespace:__sanitizer
ReportMop	tsan/tsan_report.cpp	/^ReportMop::ReportMop()$/;"	f	class:__tsan::ReportMop
ReportMop	tsan/tsan_report.h	/^struct ReportMop {$/;"	s	namespace:__tsan
ReportMopMutex	tsan/tsan_report.h	/^struct ReportMopMutex {$/;"	s	namespace:__tsan
ReportMutex	tsan/tsan_report.h	/^struct ReportMutex {$/;"	s	namespace:__tsan
ReportMutexMisuse	tsan/tsan_rtl_mutex.cpp	/^static void ReportMutexMisuse(ThreadState *thr, uptr pc, ReportType typ,$/;"	f	namespace:__tsan
ReportNewDeleteTypeMismatch	asan/asan_report.cpp	/^void ReportNewDeleteTypeMismatch(uptr addr, uptr delete_size,$/;"	f	namespace:__asan
ReportODRViolation	asan/asan_report.cpp	/^void ReportODRViolation(const __asan_global *g1, u32 stack_id1,$/;"	f	namespace:__asan
ReportOptions	ubsan/ubsan_diag.h	/^struct ReportOptions {$/;"	s	namespace:__ubsan
ReportOutOfMemory	asan/asan_report.cpp	/^void ReportOutOfMemory(uptr requested_size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportOutOfMemory	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportOutOfMemory(uptr requested_size, const StackTrace *stack) {$/;"	f	namespace:__sanitizer
ReportPvallocOverflow	asan/asan_report.cpp	/^void ReportPvallocOverflow(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportPvallocOverflow	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportPvallocOverflow(uptr size, const StackTrace *stack) {$/;"	f	namespace:__sanitizer
ReportRace	tsan/tsan_rtl_report.cpp	/^void ReportRace(ThreadState *thr) {$/;"	f	namespace:__tsan
ReportReallocArrayOverflow	asan/asan_report.cpp	/^void ReportReallocArrayOverflow(uptr count, uptr size,$/;"	f	namespace:__asan
ReportReallocArrayOverflow	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportReallocArrayOverflow(uptr count, uptr size,$/;"	f	namespace:__sanitizer
ReportRegisters	hwasan/hwasan_report.cpp	/^void ReportRegisters(uptr *frame, uptr pc) {$/;"	f	namespace:__hwasan
ReportRssLimitExceeded	asan/asan_report.cpp	/^void ReportRssLimitExceeded(BufferedStackTrace *stack) {$/;"	f	namespace:__asan
ReportRssLimitExceeded	sanitizer_common/sanitizer_allocator_report.cpp	/^void NORETURN ReportRssLimitExceeded(const StackTrace *stack) {$/;"	f	namespace:__sanitizer
ReportSanitizerGetAllocatedSizeNotOwned	asan/asan_report.cpp	/^void ReportSanitizerGetAllocatedSizeNotOwned(uptr addr,$/;"	f	namespace:__asan
ReportStack	tsan/tsan_report.cpp	/^ReportStack::ReportStack() : frames(nullptr), suppressable(false) {}$/;"	f	class:__tsan::ReportStack
ReportStack	tsan/tsan_report.h	/^struct ReportStack {$/;"	s	namespace:__tsan
ReportStackOverflowImpl	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static void ReportStackOverflowImpl(const SignalContext &sig, u32 tid,$/;"	f	namespace:__sanitizer
ReportStats	hwasan/hwasan_report.cpp	/^void ReportStats() {}$/;"	f	namespace:__hwasan
ReportStringFunctionMemoryRangesOverlap	asan/asan_report.cpp	/^void ReportStringFunctionMemoryRangesOverlap(const char *function,$/;"	f	namespace:__asan
ReportStringFunctionSizeOverflow	asan/asan_report.cpp	/^void ReportStringFunctionSizeOverflow(uptr offset, uptr size,$/;"	f	namespace:__asan
ReportSupportsColors	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static inline bool ReportSupportsColors() { return true; }$/;"	f	namespace:__sanitizer
ReportSupportsColors	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static inline bool ReportSupportsColors() {$/;"	f	namespace:__sanitizer
ReportTagMismatch	hwasan/hwasan_report.cpp	/^void ReportTagMismatch(StackTrace *stack, uptr tagged_addr, uptr access_size,$/;"	f	namespace:__hwasan
ReportTailOverwritten	hwasan/hwasan_report.cpp	/^void ReportTailOverwritten(StackTrace *stack, uptr tagged_addr, uptr orig_size,$/;"	f	namespace:__hwasan
ReportThread	tsan/tsan_report.h	/^struct ReportThread {$/;"	s	namespace:__tsan
ReportTopLeaks	lsan/lsan_common.cpp	/^void LeakReport::ReportTopLeaks(uptr num_leaks_to_report) {$/;"	f	class:__lsan::LeakReport
ReportType	tsan/tsan_report.h	/^enum ReportType {$/;"	g	namespace:__tsan
ReportTypeDeadlock	tsan/tsan_report.h	/^  ReportTypeDeadlock$/;"	e	enum:__tsan::ReportType
ReportTypeDescription	tsan/tsan_debugging.cpp	/^static const char *ReportTypeDescription(ReportType typ) {$/;"	f
ReportTypeErrnoInSignal	tsan/tsan_report.h	/^  ReportTypeErrnoInSignal,$/;"	e	enum:__tsan::ReportType
ReportTypeExternalRace	tsan/tsan_report.h	/^  ReportTypeExternalRace,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexBadReadLock	tsan/tsan_report.h	/^  ReportTypeMutexBadReadLock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexBadReadUnlock	tsan/tsan_report.h	/^  ReportTypeMutexBadReadUnlock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexBadUnlock	tsan/tsan_report.h	/^  ReportTypeMutexBadUnlock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexDestroyLocked	tsan/tsan_report.h	/^  ReportTypeMutexDestroyLocked,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexDoubleLock	tsan/tsan_report.h	/^  ReportTypeMutexDoubleLock,$/;"	e	enum:__tsan::ReportType
ReportTypeMutexInvalidAccess	tsan/tsan_report.h	/^  ReportTypeMutexInvalidAccess,$/;"	e	enum:__tsan::ReportType
ReportTypeRace	tsan/tsan_report.h	/^  ReportTypeRace,$/;"	e	enum:__tsan::ReportType
ReportTypeSignalUnsafe	tsan/tsan_report.h	/^  ReportTypeSignalUnsafe,$/;"	e	enum:__tsan::ReportType
ReportTypeString	tsan/tsan_report.cpp	/^static const char *ReportTypeString(ReportType typ, uptr tag) {$/;"	f	namespace:__tsan
ReportTypeThreadLeak	tsan/tsan_report.h	/^  ReportTypeThreadLeak,$/;"	e	enum:__tsan::ReportType
ReportTypeUseAfterFree	tsan/tsan_report.h	/^  ReportTypeUseAfterFree,$/;"	e	enum:__tsan::ReportType
ReportTypeVptrRace	tsan/tsan_report.h	/^  ReportTypeVptrRace,$/;"	e	enum:__tsan::ReportType
ReportTypeVptrUseAfterFree	tsan/tsan_report.h	/^  ReportTypeVptrUseAfterFree,$/;"	e	enum:__tsan::ReportType
ReportUnrecognizedFlags	sanitizer_common/sanitizer_flag_parser.cpp	/^void ReportUnrecognizedFlags() {$/;"	f	namespace:__sanitizer
ReportUnsuspendedThreads	lsan/lsan_common.cpp	/^static void ReportUnsuspendedThreads($/;"	f	namespace:__lsan
ReportUnsuspendedThreads	lsan/lsan_common.cpp	/^static void ReportUnsuspendedThreads(const SuspendedThreadsList &) {}$/;"	f	namespace:__lsan
RequiredSize	asan/asan_fake_stack.h	/^  static uptr RequiredSize(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
ReserveShadowMemoryRange	sanitizer_common/sanitizer_common_libcdep.cpp	/^void ReserveShadowMemoryRange(uptr beg, uptr end, const char *name,$/;"	f	namespace:__sanitizer
ReserveStandardFds	sanitizer_common/sanitizer_posix.cpp	/^fd_t ReserveStandardFds(fd_t fd) {$/;"	f	namespace:__sanitizer
Reserved1	asan/asan_win.cpp	/^  PVOID Reserved1[12];$/;"	m	struct:__asan::_TEB
Reserved2	asan/asan_win.cpp	/^  PVOID Reserved2[399];$/;"	m	struct:__asan::_TEB
Reserved3	asan/asan_win.cpp	/^  BYTE Reserved3[1952];$/;"	m	struct:__asan::_TEB
Reserved4	asan/asan_win.cpp	/^  BYTE Reserved4[8];$/;"	m	struct:__asan::_TEB
Reserved5	asan/asan_win.cpp	/^  PVOID Reserved5[26];$/;"	m	struct:__asan::_TEB
Reserved6	asan/asan_win.cpp	/^  PVOID Reserved6[4];$/;"	m	struct:__asan::_TEB
ReservedAddressRange	sanitizer_common/sanitizer_common.h	/^class ReservedAddressRange {$/;"	c	namespace:__sanitizer
ReservedForOle	asan/asan_win.cpp	/^  PVOID ReservedForOle;$/;"	m	struct:__asan::_TEB
Reset	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^  void Reset() {$/;"	f	class:__sancov::__anon40::TracePcGuardController
Reset	sanitizer_common/sanitizer_procmaps_common.cpp	/^void MemoryMappingLayout::Reset() {$/;"	f	class:__sanitizer::MemoryMappingLayout
Reset	sanitizer_common/sanitizer_procmaps_fuchsia.cpp	/^void MemoryMappingLayout::Reset() {$/;"	f	class:__sanitizer::MemoryMappingLayout
Reset	sanitizer_common/sanitizer_procmaps_mac.cpp	/^void MemoryMappingLayout::Reset() {$/;"	f	class:__sanitizer::MemoryMappingLayout
Reset	sanitizer_common/sanitizer_stacktrace.h	/^  void Reset() {$/;"	f	struct:__sanitizer::BufferedStackTrace
Reset	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::Reset() {$/;"	f	class:__sanitizer::ThreadContextBase
Reset	sanitizer_common/sanitizer_vector.h	/^  void Reset() {$/;"	f	class:__sanitizer::Vector
Reset	tsan/tsan_clock.cpp	/^void SyncClock::Reset(ClockCache *c) {$/;"	f	class:__tsan::SyncClock
Reset	tsan/tsan_ignoreset.cpp	/^void IgnoreSet::Reset() {$/;"	f	class:__tsan::IgnoreSet
Reset	tsan/tsan_sync.cpp	/^void SyncVar::Reset(Processor *proc) {$/;"	f	class:__tsan::SyncVar
ResetCached	tsan/tsan_clock.cpp	/^void ThreadClock::ResetCached(ClockCache *c) {$/;"	f	class:__tsan::ThreadClock
ResetImpl	tsan/tsan_clock.cpp	/^void SyncClock::ResetImpl() {$/;"	f	class:__tsan::SyncClock
ResetRange	tsan/tsan_sync.cpp	/^void MetaMap::ResetRange(Processor *proc, uptr p, uptr sz) {$/;"	f	class:__tsan::MetaMap
ResetShadowMemory	asan/asan_rtems.cpp	/^static void ResetShadowMemory() {$/;"	f	namespace:__asan
ResetTagsCb	lsan/lsan_common.cpp	/^static void ResetTagsCb(uptr chunk, void *arg) {$/;"	f	namespace:__lsan
Resize	sanitizer_common/sanitizer_vector.h	/^  void Resize(uptr size) {$/;"	f	class:__sanitizer::Vector
Resize	tsan/tsan_clock.cpp	/^void SyncClock::Resize(ClockCache *c, uptr nclk) {$/;"	f	class:__tsan::SyncClock
ResizeBuffer	tsan/tsan_stack_trace.cpp	/^void VarSizeStackTrace::ResizeBuffer(uptr new_size) {$/;"	f	class:__tsan::VarSizeStackTrace
Restart	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool SymbolizerProcess::Restart() {$/;"	f	class:__sanitizer::SymbolizerProcess
RestoreMemoryProtection	interception/interception_win.cpp	/^static bool RestoreMemoryProtection($/;"	f	namespace:__interception
RestoreStack	tsan/tsan_rtl_report.cpp	/^void RestoreStack(int tid, const u64 epoch, VarSizeStackTrace *stk,$/;"	f	namespace:__tsan
RestrictMemoryToMaxAddress	sanitizer_common/sanitizer_mac_libcdep.cpp	/^void RestrictMemoryToMaxAddress(uptr max_address) {$/;"	f	namespace:__sanitizer
Result	sanitizer_common/sanitizer_linux.h	/^  enum Result {$/;"	g	class:__sanitizer::ThreadLister
ResumeAllThreads	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^void ThreadSuspender::ResumeAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
ResumeAllThreads	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^void ThreadSuspender::ResumeAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
ReturnNullptrOnOOMOrDie	sanitizer_common/sanitizer_win.cpp	/^static void *ReturnNullptrOnOOMOrDie(uptr size, const char *mem_type,$/;"	f	namespace:__sanitizer
ReturnToAllocator	sanitizer_common/sanitizer_allocator_primary64.h	/^  NOINLINE void ReturnToAllocator(AllocatorStats *stat, uptr class_id,$/;"	f	class:SizeClassAllocator64
ReverseOrder	tsan/tsan_stack_trace.cpp	/^void VarSizeStackTrace::ReverseOrder() {$/;"	f	class:__tsan::VarSizeStackTrace
RightAlignMode	hwasan/hwasan_allocator.cpp	/^enum RightAlignMode {$/;"	g	namespace:__hwasan
RingBuffer	sanitizer_common/sanitizer_ring_buffer.h	/^  RingBuffer() {}$/;"	f	class:__sanitizer::RingBuffer
RingBuffer	sanitizer_common/sanitizer_ring_buffer.h	/^class RingBuffer {$/;"	c	namespace:__sanitizer
RingBufferSize	hwasan/hwasan_thread_list.h	/^static uptr RingBufferSize() {$/;"	f	namespace:__hwasan
RootRegion	lsan/lsan_common.h	/^struct RootRegion {$/;"	s	namespace:__lsan
RoundDown	tsan/tsan_defs.h	/^T RoundDown(T p, u64 align) {$/;"	f	namespace:__tsan
RoundDownTo	sanitizer_common/sanitizer_common.h	/^inline uptr RoundDownTo(uptr x, uptr boundary) {$/;"	f	namespace:__sanitizer
RoundUp	tsan/tsan_defs.h	/^T RoundUp(T p, u64 align) {$/;"	f	namespace:__tsan
RoundUpMapSize	sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr RoundUpMapSize(uptr size) {$/;"	f	class:LargeMmapAllocator
RoundUpTo	interception/interception_win.cpp	/^static uptr RoundUpTo(uptr size, uptr boundary) {$/;"	f	namespace:__interception
RoundUpTo	sanitizer_common/sanitizer_common.h	/^inline uptr RoundUpTo(uptr size, uptr boundary) {$/;"	f	namespace:__sanitizer
RoundUpToInstrBoundary	interception/interception_win.cpp	/^static size_t RoundUpToInstrBoundary(size_t size, uptr address) {$/;"	f	namespace:__interception
RoundUpToPowerOfTwo	sanitizer_common/sanitizer_common.h	/^inline uptr RoundUpToPowerOfTwo(uptr size) {$/;"	f	namespace:__sanitizer
RssLimitExceeded	asan/asan_allocator.cpp	/^  bool RssLimitExceeded() {$/;"	f	struct:__asan::Allocator
RunAtexit	sanitizer_common/sanitizer_win.cpp	/^static int RunAtexit() {$/;"	f	namespace:__sanitizer
RunCallbackForEachThreadLocked	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::RunCallbackForEachThreadLocked(ThreadCallback cb,$/;"	f	class:__sanitizer::ThreadRegistry
RunFreeHooks	sanitizer_common/sanitizer_common.cpp	/^void RunFreeHooks(const void *ptr) {$/;"	f	namespace:__sanitizer
RunMallocHooks	sanitizer_common/sanitizer_common.cpp	/^void RunMallocHooks(const void *ptr, uptr size) {$/;"	f	namespace:__sanitizer
RunOnDestruction	sanitizer_common/sanitizer_common.h	/^  explicit RunOnDestruction(Fn fn) : fn_(fn) {}$/;"	f	class:__sanitizer::RunOnDestruction
RunOnDestruction	sanitizer_common/sanitizer_common.h	/^class RunOnDestruction {$/;"	c	namespace:__sanitizer
RunThread	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^void *RunThread(void *arg) {$/;"	f	namespace:__sanitizer
RunThreadArgs	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^struct RunThreadArgs {$/;"	s	namespace:__sanitizer
RunningOnValgrind	tsan/tsan_interface_ann.cpp	/^int INTERFACE_ATTRIBUTE RunningOnValgrind() {$/;"	f
S	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr S = kNumBits - 1;$/;"	m	class:SizeClassMap
SANCOV_FLAG	sanitizer_common/sancov_flags.cpp	28;"	d
SANCOV_FLAG	sanitizer_common/sancov_flags.cpp	30;"	d
SANCOV_FLAG	sanitizer_common/sancov_flags.cpp	34;"	d
SANCOV_FLAG	sanitizer_common/sancov_flags.cpp	37;"	d
SANCOV_FLAG	sanitizer_common/sancov_flags.h	21;"	d
SANCOV_FLAG	sanitizer_common/sancov_flags.h	23;"	d
SANCOV_FLAGS_H	sanitizer_common/sancov_flags.h	13;"	d
SANITIZER_ADDRHASHMAP_H	sanitizer_common/sanitizer_addrhashmap.h	14;"	d
SANITIZER_ALLOCATOR_CHECKS_H	sanitizer_common/sanitizer_allocator_checks.h	15;"	d
SANITIZER_ALLOCATOR_H	sanitizer_common/sanitizer_allocator.h	14;"	d
SANITIZER_ALLOCATOR_INTERFACE_H	include/sanitizer/allocator_interface.h	12;"	d
SANITIZER_ALLOCATOR_INTERFACE_H	sanitizer_common/sanitizer_allocator_interface.h	14;"	d
SANITIZER_ALLOCATOR_INTERNAL_H	sanitizer_common/sanitizer_allocator_internal.h	14;"	d
SANITIZER_ALLOCATOR_REPORT_H	sanitizer_common/sanitizer_allocator_report.h	15;"	d
SANITIZER_ANDROID	sanitizer_common/sanitizer_platform.h	90;"	d
SANITIZER_ANDROID	sanitizer_common/sanitizer_platform.h	92;"	d
SANITIZER_ANDROID_LOG_INFO	sanitizer_common/sanitizer_linux_libcdep.cpp	762;"	d
SANITIZER_ARM	sanitizer_common/sanitizer_platform.h	199;"	d
SANITIZER_ARM	sanitizer_common/sanitizer_platform.h	201;"	d
SANITIZER_ASAN_INTERFACE_H	include/sanitizer/asan_interface.h	14;"	d
SANITIZER_ATOMIC_CLANG_H	sanitizer_common/sanitizer_atomic_clang.h	15;"	d
SANITIZER_ATOMIC_CLANG_MIPS_H	sanitizer_common/sanitizer_atomic_clang_mips.h	15;"	d
SANITIZER_ATOMIC_CLANG_OTHER_H	sanitizer_common/sanitizer_atomic_clang_other.h	15;"	d
SANITIZER_ATOMIC_CLANG_X86_H	sanitizer_common/sanitizer_atomic_clang_x86.h	15;"	d
SANITIZER_ATOMIC_H	sanitizer_common/sanitizer_atomic.h	14;"	d
SANITIZER_ATOMIC_MSVC_H	sanitizer_common/sanitizer_atomic_msvc.h	15;"	d
SANITIZER_BITVECTOR_H	sanitizer_common/sanitizer_bitvector.h	14;"	d
SANITIZER_BVGRAPH_H	sanitizer_common/sanitizer_bvgraph.h	15;"	d
SANITIZER_CACHE_LINE_SIZE	sanitizer_common/sanitizer_platform.h	349;"	d
SANITIZER_CACHE_LINE_SIZE	sanitizer_common/sanitizer_platform.h	351;"	d
SANITIZER_CAN_FAST_UNWIND	sanitizer_common/sanitizer_stacktrace.h	25;"	d
SANITIZER_CAN_FAST_UNWIND	sanitizer_common/sanitizer_stacktrace.h	27;"	d
SANITIZER_CAN_FAST_UNWIND	sanitizer_common/sanitizer_stacktrace.h	29;"	d
SANITIZER_CAN_SLOW_UNWIND	sanitizer_common/sanitizer_stacktrace.h	36;"	d
SANITIZER_CAN_SLOW_UNWIND	sanitizer_common/sanitizer_stacktrace.h	38;"	d
SANITIZER_CAN_USE_ALLOCATOR64	sanitizer_common/sanitizer_platform.h	229;"	d
SANITIZER_CAN_USE_ALLOCATOR64	sanitizer_common/sanitizer_platform.h	231;"	d
SANITIZER_CAN_USE_ALLOCATOR64	sanitizer_common/sanitizer_platform.h	233;"	d
SANITIZER_CAN_USE_PREINIT_ARRAY	sanitizer_common/sanitizer_internal_defs.h	108;"	d
SANITIZER_CAN_USE_PREINIT_ARRAY	sanitizer_common/sanitizer_internal_defs.h	112;"	d
SANITIZER_CAN_USE_PREINIT_ARRAY	sanitizer_common/sanitizer_internal_defs.h	114;"	d
SANITIZER_COMMON_H	sanitizer_common/sanitizer_common.h	16;"	d
SANITIZER_COMMON_INTERFACE_DEFS_H	include/sanitizer/common_interface_defs.h	13;"	d
SANITIZER_COVERAG_INTERFACE_H	include/sanitizer/coverage_interface.h	13;"	d
SANITIZER_CP_DEMANGLE	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	26;"	d
SANITIZER_DEADLOCK_DETECTOR_H	sanitizer_common/sanitizer_deadlock_detector.h	26;"	d
SANITIZER_DEADLOCK_DETECTOR_INTERFACE_H	sanitizer_common/sanitizer_deadlock_detector_interface.h	16;"	d
SANITIZER_DEADLOCK_DETECTOR_VERSION	sanitizer_common/sanitizer_deadlock_detector_interface.h	19;"	d
SANITIZER_DEBUG	sanitizer_common/sanitizer_internal_defs.h	18;"	d
SANITIZER_DEFS_H	sanitizer_common/sanitizer_internal_defs.h	13;"	d
SANITIZER_ERRNO_CODES_H	sanitizer_common/sanitizer_errno_codes.h	20;"	d
SANITIZER_ERRNO_H	sanitizer_common/sanitizer_errno.h	19;"	d
SANITIZER_FILE_H	sanitizer_common/sanitizer_file.h	16;"	d
SANITIZER_FLAGS_H	sanitizer_common/sanitizer_flags.h	14;"	d
SANITIZER_FLAG_REGISTRY_H	sanitizer_common/sanitizer_flag_parser.h	14;"	d
SANITIZER_FREEBSD	sanitizer_common/sanitizer_platform.h	29;"	d
SANITIZER_FREEBSD	sanitizer_common/sanitizer_platform.h	31;"	d
SANITIZER_FREEBSD_H	sanitizer_common/sanitizer_freebsd.h	15;"	d
SANITIZER_FUCHSIA	sanitizer_common/sanitizer_platform.h	96;"	d
SANITIZER_FUCHSIA	sanitizer_common/sanitizer_platform.h	98;"	d
SANITIZER_FUCHSIA_H	sanitizer_common/sanitizer_fuchsia.h	13;"	d
SANITIZER_GETAUXVAL_H	sanitizer_common/sanitizer_getauxval.h	17;"	d
SANITIZER_GLIBC_VERSION_H	sanitizer_common/sanitizer_glibc_version.h	14;"	d
SANITIZER_GO	sanitizer_common/sanitizer_platform.h	326;"	d
SANITIZER_HASH_H	sanitizer_common/sanitizer_hash.h	13;"	d
SANITIZER_HAS_STRUCT_FILE	sanitizer_common/sanitizer_platform_limits_netbsd.h	490;"	d
SANITIZER_HAS_STRUCT_FILE	sanitizer_common/sanitizer_platform_limits_posix.h	798;"	d
SANITIZER_HAS_STRUCT_FILE	sanitizer_common/sanitizer_platform_limits_posix.h	801;"	d
SANITIZER_HAS_STRUCT_FILE	sanitizer_common/sanitizer_platform_limits_solaris.h	356;"	d
SANITIZER_HWASAN_INTERFACE_H	include/sanitizer/hwasan_interface.h	14;"	d
SANITIZER_I386	sanitizer_common/sanitizer_platform.h	130;"	d
SANITIZER_I386	sanitizer_common/sanitizer_platform.h	132;"	d
SANITIZER_IMPORT_INTERFACE	asan/asan_win_dynamic_runtime_thunk.cpp	24;"	d
SANITIZER_IMPORT_INTERFACE	sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cpp	14;"	d
SANITIZER_IMPORT_INTERFACE	sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cpp	14;"	d
SANITIZER_IMPORT_INTERFACE	ubsan/ubsan_win_dynamic_runtime_thunk.cpp	14;"	d
SANITIZER_INTERCEPTOR_HOOKS	sanitizer_common/sanitizer_platform_interceptors.h	458;"	d
SANITIZER_INTERCEPT_ACCEPT	sanitizer_common/sanitizer_platform_interceptors.h	256;"	d
SANITIZER_INTERCEPT_ACCEPT4	sanitizer_common/sanitizer_platform_interceptors.h	257;"	d
SANITIZER_INTERCEPT_ACCESS	sanitizer_common/sanitizer_platform_interceptors.h	510;"	d
SANITIZER_INTERCEPT_ACCT	sanitizer_common/sanitizer_platform_interceptors.h	505;"	d
SANITIZER_INTERCEPT_AEABI_MEM	sanitizer_common/sanitizer_platform_interceptors.h	418;"	d
SANITIZER_INTERCEPT_AEABI_MEM	sanitizer_common/sanitizer_platform_interceptors.h	420;"	d
SANITIZER_INTERCEPT_ALIGNED_ALLOC	sanitizer_common/sanitizer_platform_interceptors.h	497;"	d
SANITIZER_INTERCEPT_ARC4RANDOM	sanitizer_common/sanitizer_platform_interceptors.h	571;"	d
SANITIZER_INTERCEPT_ASYSCTL	sanitizer_common/sanitizer_platform_interceptors.h	546;"	d
SANITIZER_INTERCEPT_ATEXIT	sanitizer_common/sanitizer_platform_interceptors.h	581;"	d
SANITIZER_INTERCEPT_BACKTRACE	sanitizer_common/sanitizer_platform_interceptors.h	326;"	d
SANITIZER_INTERCEPT_BCMP	sanitizer_common/sanitizer_platform_interceptors.h	158;"	d
SANITIZER_INTERCEPT_BSD_SIGNAL	sanitizer_common/sanitizer_platform_interceptors.h	503;"	d
SANITIZER_INTERCEPT_BZERO	sanitizer_common/sanitizer_platform_interceptors.h	423;"	d
SANITIZER_INTERCEPT_CANONICALIZE_FILE_NAME	sanitizer_common/sanitizer_platform_interceptors.h	299;"	d
SANITIZER_INTERCEPT_CAPGET	sanitizer_common/sanitizer_platform_interceptors.h	416;"	d
SANITIZER_INTERCEPT_CAPSICUM	sanitizer_common/sanitizer_platform_interceptors.h	550;"	d
SANITIZER_INTERCEPT_CAPSICUM	sanitizer_common/sanitizer_platform_interceptors.h	555;"	d
SANITIZER_INTERCEPT_CDB	sanitizer_common/sanitizer_platform_interceptors.h	563;"	d
SANITIZER_INTERCEPT_CFREE	sanitizer_common/sanitizer_platform_interceptors.h	493;"	d
SANITIZER_INTERCEPT_CLOCK_GETCPUCLOCKID	sanitizer_common/sanitizer_platform_interceptors.h	234;"	d
SANITIZER_INTERCEPT_CLOCK_GETTIME	sanitizer_common/sanitizer_platform_interceptors.h	232;"	d
SANITIZER_INTERCEPT_CONFSTR	sanitizer_common/sanitizer_platform_interceptors.h	301;"	d
SANITIZER_INTERCEPT_CRYPT	sanitizer_common/sanitizer_platform_interceptors.h	575;"	d
SANITIZER_INTERCEPT_CRYPT_R	sanitizer_common/sanitizer_platform_interceptors.h	576;"	d
SANITIZER_INTERCEPT_CTERMID	sanitizer_common/sanitizer_platform_interceptors.h	454;"	d
SANITIZER_INTERCEPT_CTERMID_R	sanitizer_common/sanitizer_platform_interceptors.h	456;"	d
SANITIZER_INTERCEPT_DEVNAME	sanitizer_common/sanitizer_platform_interceptors.h	529;"	d
SANITIZER_INTERCEPT_DEVNAME_R	sanitizer_common/sanitizer_platform_interceptors.h	530;"	d
SANITIZER_INTERCEPT_DLOPEN_DLCLOSE	sanitizer_common/sanitizer_platform_interceptors.h	439;"	d
SANITIZER_INTERCEPT_DRAND48_R	sanitizer_common/sanitizer_platform_interceptors.h	384;"	d
SANITIZER_INTERCEPT_ETHER_HOST	sanitizer_common/sanitizer_platform_interceptors.h	339;"	d
SANITIZER_INTERCEPT_ETHER_NTOA_ATON	sanitizer_common/sanitizer_platform_interceptors.h	338;"	d
SANITIZER_INTERCEPT_ETHER_R	sanitizer_common/sanitizer_platform_interceptors.h	341;"	d
SANITIZER_INTERCEPT_EVENTFD_READ_WRITE	sanitizer_common/sanitizer_platform_interceptors.h	462;"	d
SANITIZER_INTERCEPT_FACCESSAT	sanitizer_common/sanitizer_platform_interceptors.h	511;"	d
SANITIZER_INTERCEPT_FCLOSE	sanitizer_common/sanitizer_platform_interceptors.h	436;"	d
SANITIZER_INTERCEPT_FDEVNAME	sanitizer_common/sanitizer_platform_interceptors.h	572;"	d
SANITIZER_INTERCEPT_FFLUSH	sanitizer_common/sanitizer_platform_interceptors.h	435;"	d
SANITIZER_INTERCEPT_FGETGRENT_R	sanitizer_common/sanitizer_platform_interceptors.h	223;"	d
SANITIZER_INTERCEPT_FGETLN	sanitizer_common/sanitizer_platform_interceptors.h	531;"	d
SANITIZER_INTERCEPT_FGETPWENT	sanitizer_common/sanitizer_platform_interceptors.h	225;"	d
SANITIZER_INTERCEPT_FGETPWENT_R	sanitizer_common/sanitizer_platform_interceptors.h	228;"	d
SANITIZER_INTERCEPT_FGETS	sanitizer_common/sanitizer_platform_interceptors.h	182;"	d
SANITIZER_INTERCEPT_FOPEN	sanitizer_common/sanitizer_platform_interceptors.h	430;"	d
SANITIZER_INTERCEPT_FOPEN64	sanitizer_common/sanitizer_platform_interceptors.h	431;"	d
SANITIZER_INTERCEPT_FOPENCOOKIE	sanitizer_common/sanitizer_platform_interceptors.h	448;"	d
SANITIZER_INTERCEPT_FPARSELN	sanitizer_common/sanitizer_platform_interceptors.h	552;"	d
SANITIZER_INTERCEPT_FPUTS	sanitizer_common/sanitizer_platform_interceptors.h	183;"	d
SANITIZER_INTERCEPT_FREAD	sanitizer_common/sanitizer_platform_interceptors.h	180;"	d
SANITIZER_INTERCEPT_FREXP	sanitizer_common/sanitizer_platform_interceptors.h	215;"	d
SANITIZER_INTERCEPT_FREXPF_FREXPL	sanitizer_common/sanitizer_platform_interceptors.h	216;"	d
SANITIZER_INTERCEPT_FSEEK	sanitizer_common/sanitizer_platform_interceptors.h	560;"	d
SANITIZER_INTERCEPT_FTIME	sanitizer_common/sanitizer_platform_interceptors.h	424;"	d
SANITIZER_INTERCEPT_FTS	sanitizer_common/sanitizer_platform_interceptors.h	544;"	d
SANITIZER_INTERCEPT_FUNOPEN	sanitizer_common/sanitizer_platform_interceptors.h	568;"	d
SANITIZER_INTERCEPT_FUNOPEN2	sanitizer_common/sanitizer_platform_interceptors.h	569;"	d
SANITIZER_INTERCEPT_FWRITE	sanitizer_common/sanitizer_platform_interceptors.h	181;"	d
SANITIZER_INTERCEPT_GETADDRINFO	sanitizer_common/sanitizer_platform_interceptors.h	242;"	d
SANITIZER_INTERCEPT_GETADDRINFO	tsan/tsan_interceptors_posix.cpp	2221;"	d
SANITIZER_INTERCEPT_GETCWD	sanitizer_common/sanitizer_platform_interceptors.h	280;"	d
SANITIZER_INTERCEPT_GETENTROPY	sanitizer_common/sanitizer_platform_interceptors.h	583;"	d
SANITIZER_INTERCEPT_GETFSENT	sanitizer_common/sanitizer_platform_interceptors.h	570;"	d
SANITIZER_INTERCEPT_GETGROUPLIST	sanitizer_common/sanitizer_platform_interceptors.h	512;"	d
SANITIZER_INTERCEPT_GETGROUPS	sanitizer_common/sanitizer_platform_interceptors.h	311;"	d
SANITIZER_INTERCEPT_GETHOSTBYADDR_R	sanitizer_common/sanitizer_platform_interceptors.h	251;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME	sanitizer_common/sanitizer_platform_interceptors.h	245;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME2	sanitizer_common/sanitizer_platform_interceptors.h	246;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME2_R	sanitizer_common/sanitizer_platform_interceptors.h	249;"	d
SANITIZER_INTERCEPT_GETHOSTBYNAME_R	sanitizer_common/sanitizer_platform_interceptors.h	247;"	d
SANITIZER_INTERCEPT_GETHOSTENT_R	sanitizer_common/sanitizer_platform_interceptors.h	253;"	d
SANITIZER_INTERCEPT_GETIFADDRS	sanitizer_common/sanitizer_platform_interceptors.h	412;"	d
SANITIZER_INTERCEPT_GETITIMER	sanitizer_common/sanitizer_platform_interceptors.h	235;"	d
SANITIZER_INTERCEPT_GETLINE	sanitizer_common/sanitizer_platform_interceptors.h	392;"	d
SANITIZER_INTERCEPT_GETLOADAVG	sanitizer_common/sanitizer_platform_interceptors.h	477;"	d
SANITIZER_INTERCEPT_GETMNTENT	sanitizer_common/sanitizer_platform_interceptors.h	328;"	d
SANITIZER_INTERCEPT_GETMNTENT_R	sanitizer_common/sanitizer_platform_interceptors.h	329;"	d
SANITIZER_INTERCEPT_GETMNTINFO	sanitizer_common/sanitizer_platform_interceptors.h	539;"	d
SANITIZER_INTERCEPT_GETNAMEINFO	sanitizer_common/sanitizer_platform_interceptors.h	243;"	d
SANITIZER_INTERCEPT_GETPASS	sanitizer_common/sanitizer_platform_interceptors.h	443;"	d
SANITIZER_INTERCEPT_GETPEERNAME	sanitizer_common/sanitizer_platform_interceptors.h	265;"	d
SANITIZER_INTERCEPT_GETPWENT	sanitizer_common/sanitizer_platform_interceptors.h	221;"	d
SANITIZER_INTERCEPT_GETPWENT_R	sanitizer_common/sanitizer_platform_interceptors.h	226;"	d
SANITIZER_INTERCEPT_GETPWNAM_AND_FRIENDS	sanitizer_common/sanitizer_platform_interceptors.h	218;"	d
SANITIZER_INTERCEPT_GETPWNAM_R_AND_FRIENDS	sanitizer_common/sanitizer_platform_interceptors.h	219;"	d
SANITIZER_INTERCEPT_GETRANDOM	sanitizer_common/sanitizer_platform_interceptors.h	578;"	d
SANITIZER_INTERCEPT_GETRESID	sanitizer_common/sanitizer_platform_interceptors.h	411;"	d
SANITIZER_INTERCEPT_GETSOCKNAME	sanitizer_common/sanitizer_platform_interceptors.h	244;"	d
SANITIZER_INTERCEPT_GETSOCKOPT	sanitizer_common/sanitizer_platform_interceptors.h	255;"	d
SANITIZER_INTERCEPT_GETUSERSHELL	sanitizer_common/sanitizer_platform_interceptors.h	573;"	d
SANITIZER_INTERCEPT_GETVFSSTAT	sanitizer_common/sanitizer_platform_interceptors.h	541;"	d
SANITIZER_INTERCEPT_GETXATTR	sanitizer_common/sanitizer_platform_interceptors.h	410;"	d
SANITIZER_INTERCEPT_GET_CURRENT_DIR_NAME	sanitizer_common/sanitizer_platform_interceptors.h	281;"	d
SANITIZER_INTERCEPT_GID_FROM_GROUP	sanitizer_common/sanitizer_platform_interceptors.h	509;"	d
SANITIZER_INTERCEPT_GLOB	sanitizer_common/sanitizer_platform_interceptors.h	237;"	d
SANITIZER_INTERCEPT_GLOB64	sanitizer_common/sanitizer_platform_interceptors.h	238;"	d
SANITIZER_INTERCEPT_GROUP_FROM_GID	sanitizer_common/sanitizer_platform_interceptors.h	508;"	d
SANITIZER_INTERCEPT_ICONV	sanitizer_common/sanitizer_platform_interceptors.h	387;"	d
SANITIZER_INTERCEPT_IF_INDEXTONAME	sanitizer_common/sanitizer_platform_interceptors.h	414;"	d
SANITIZER_INTERCEPT_INET	sanitizer_common/sanitizer_platform_interceptors.h	240;"	d
SANITIZER_INTERCEPT_INET_ATON	sanitizer_common/sanitizer_platform_interceptors.h	267;"	d
SANITIZER_INTERCEPT_INITGROUPS	sanitizer_common/sanitizer_platform_interceptors.h	337;"	d
SANITIZER_INTERCEPT_IOCTL	sanitizer_common/sanitizer_platform_interceptors.h	266;"	d
SANITIZER_INTERCEPT_ISOC99_SCANF	sanitizer_common/sanitizer_platform_interceptors.h	204;"	d
SANITIZER_INTERCEPT_LGAMMA	sanitizer_common/sanitizer_platform_interceptors.h	380;"	d
SANITIZER_INTERCEPT_LGAMMAL	sanitizer_common/sanitizer_platform_interceptors.h	381;"	d
SANITIZER_INTERCEPT_LGAMMAL_R	sanitizer_common/sanitizer_platform_interceptors.h	383;"	d
SANITIZER_INTERCEPT_LGAMMA_R	sanitizer_common/sanitizer_platform_interceptors.h	382;"	d
SANITIZER_INTERCEPT_LIBIO_INTERNALS	sanitizer_common/sanitizer_platform_interceptors.h	429;"	d
SANITIZER_INTERCEPT_LISTXATTR	sanitizer_common/sanitizer_platform_interceptors.h	409;"	d
SANITIZER_INTERCEPT_LOCALTIME_AND_FRIENDS	sanitizer_common/sanitizer_platform_interceptors.h	200;"	d
SANITIZER_INTERCEPT_LSTAT	sanitizer_common/sanitizer_platform_interceptors.h	466;"	d
SANITIZER_INTERCEPT_MALLOC_USABLE_SIZE	sanitizer_common/sanitizer_platform_interceptors.h	498;"	d
SANITIZER_INTERCEPT_MALLOPT_AND_MALLINFO	sanitizer_common/sanitizer_platform_interceptors.h	482;"	d
SANITIZER_INTERCEPT_MBSNRTOWCS	sanitizer_common/sanitizer_platform_interceptors.h	284;"	d
SANITIZER_INTERCEPT_MBSTOWCS	sanitizer_common/sanitizer_platform_interceptors.h	283;"	d
SANITIZER_INTERCEPT_MCHECK_MPROBE	sanitizer_common/sanitizer_platform_interceptors.h	499;"	d
SANITIZER_INTERCEPT_MD2	sanitizer_common/sanitizer_platform_interceptors.h	561;"	d
SANITIZER_INTERCEPT_MD4	sanitizer_common/sanitizer_platform_interceptors.h	557;"	d
SANITIZER_INTERCEPT_MD5	sanitizer_common/sanitizer_platform_interceptors.h	559;"	d
SANITIZER_INTERCEPT_MEMALIGN	sanitizer_common/sanitizer_platform_interceptors.h	485;"	d
SANITIZER_INTERCEPT_MEMCHR	sanitizer_common/sanitizer_platform_interceptors.h	172;"	d
SANITIZER_INTERCEPT_MEMCMP	sanitizer_common/sanitizer_platform_interceptors.h	157;"	d
SANITIZER_INTERCEPT_MEMCPY	sanitizer_common/sanitizer_platform_interceptors.h	156;"	d
SANITIZER_INTERCEPT_MEMMEM	sanitizer_common/sanitizer_platform_interceptors.h	171;"	d
SANITIZER_INTERCEPT_MEMMOVE	sanitizer_common/sanitizer_platform_interceptors.h	155;"	d
SANITIZER_INTERCEPT_MEMRCHR	sanitizer_common/sanitizer_platform_interceptors.h	173;"	d
SANITIZER_INTERCEPT_MEMSET	sanitizer_common/sanitizer_platform_interceptors.h	154;"	d
SANITIZER_INTERCEPT_MINCORE	sanitizer_common/sanitizer_platform_interceptors.h	452;"	d
SANITIZER_INTERCEPT_MI_VECTOR_HASH	sanitizer_common/sanitizer_platform_interceptors.h	540;"	d
SANITIZER_INTERCEPT_MLOCKX	sanitizer_common/sanitizer_platform_interceptors.h	447;"	d
SANITIZER_INTERCEPT_MMAP	sanitizer_common/sanitizer_platform_interceptors.h	480;"	d
SANITIZER_INTERCEPT_MMAP64	sanitizer_common/sanitizer_platform_interceptors.h	481;"	d
SANITIZER_INTERCEPT_MODCTL	sanitizer_common/sanitizer_platform_interceptors.h	549;"	d
SANITIZER_INTERCEPT_MODF	sanitizer_common/sanitizer_platform_interceptors.h	259;"	d
SANITIZER_INTERCEPT_NAME_TO_HANDLE_AT	sanitizer_common/sanitizer_platform_interceptors.h	516;"	d
SANITIZER_INTERCEPT_NETENT	sanitizer_common/sanitizer_platform_interceptors.h	536;"	d
SANITIZER_INTERCEPT_NL_LANGINFO	sanitizer_common/sanitizer_platform_interceptors.h	548;"	d
SANITIZER_INTERCEPT_OBSTACK	sanitizer_common/sanitizer_platform_interceptors.h	434;"	d
SANITIZER_INTERCEPT_OPEN_BY_HANDLE_AT	sanitizer_common/sanitizer_platform_interceptors.h	517;"	d
SANITIZER_INTERCEPT_OPEN_MEMSTREAM	sanitizer_common/sanitizer_platform_interceptors.h	432;"	d
SANITIZER_INTERCEPT_PACCEPT	sanitizer_common/sanitizer_platform_interceptors.h	258;"	d
SANITIZER_INTERCEPT_PCLOSE	sanitizer_common/sanitizer_platform_interceptors.h	567;"	d
SANITIZER_INTERCEPT_POLL	sanitizer_common/sanitizer_platform_interceptors.h	312;"	d
SANITIZER_INTERCEPT_POPEN	sanitizer_common/sanitizer_platform_interceptors.h	565;"	d
SANITIZER_INTERCEPT_POPENVE	sanitizer_common/sanitizer_platform_interceptors.h	566;"	d
SANITIZER_INTERCEPT_PPOLL	sanitizer_common/sanitizer_platform_interceptors.h	313;"	d
SANITIZER_INTERCEPT_PRCTL	sanitizer_common/sanitizer_platform_interceptors.h	198;"	d
SANITIZER_INTERCEPT_PREAD	sanitizer_common/sanitizer_platform_interceptors.h	176;"	d
SANITIZER_INTERCEPT_PREAD64	sanitizer_common/sanitizer_platform_interceptors.h	186;"	d
SANITIZER_INTERCEPT_PREADV	sanitizer_common/sanitizer_platform_interceptors.h	192;"	d
SANITIZER_INTERCEPT_PREADV64	sanitizer_common/sanitizer_platform_interceptors.h	195;"	d
SANITIZER_INTERCEPT_PROCESS_VM_READV	sanitizer_common/sanitizer_platform_interceptors.h	453;"	d
SANITIZER_INTERCEPT_PROTOENT	sanitizer_common/sanitizer_platform_interceptors.h	534;"	d
SANITIZER_INTERCEPT_PROTOENT_R	sanitizer_common/sanitizer_platform_interceptors.h	535;"	d
SANITIZER_INTERCEPT_PTHREAD_ATFORK	sanitizer_common/sanitizer_platform_interceptors.h	582;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GET	sanitizer_common/sanitizer_platform_interceptors.h	346;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GETAFFINITY_NP	sanitizer_common/sanitizer_platform_interceptors.h	349;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GETINHERITSCHED	sanitizer_common/sanitizer_platform_interceptors.h	347;"	d
SANITIZER_INTERCEPT_PTHREAD_ATTR_GET_SCHED	sanitizer_common/sanitizer_platform_interceptors.h	350;"	d
SANITIZER_INTERCEPT_PTHREAD_BARRIERATTR_GETPSHARED	sanitizer_common/sanitizer_platform_interceptors.h	367;"	d
SANITIZER_INTERCEPT_PTHREAD_CONDATTR_GETCLOCK	sanitizer_common/sanitizer_platform_interceptors.h	365;"	d
SANITIZER_INTERCEPT_PTHREAD_CONDATTR_GETPSHARED	sanitizer_common/sanitizer_platform_interceptors.h	364;"	d
SANITIZER_INTERCEPT_PTHREAD_GETNAME_NP	sanitizer_common/sanitizer_platform_interceptors.h	403;"	d
SANITIZER_INTERCEPT_PTHREAD_GETSCHEDPARAM	sanitizer_common/sanitizer_platform_interceptors.h	241;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEX	sanitizer_common/sanitizer_platform_interceptors.h	398;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETPRIOCEILING	sanitizer_common/sanitizer_platform_interceptors.h	356;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETPROTOCOL	sanitizer_common/sanitizer_platform_interceptors.h	354;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETPSHARED	sanitizer_common/sanitizer_platform_interceptors.h	351;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETROBUST	sanitizer_common/sanitizer_platform_interceptors.h	358;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETROBUST_NP	sanitizer_common/sanitizer_platform_interceptors.h	360;"	d
SANITIZER_INTERCEPT_PTHREAD_MUTEXATTR_GETTYPE	sanitizer_common/sanitizer_platform_interceptors.h	353;"	d
SANITIZER_INTERCEPT_PTHREAD_RWLOCKATTR_GETKIND_NP	sanitizer_common/sanitizer_platform_interceptors.h	363;"	d
SANITIZER_INTERCEPT_PTHREAD_RWLOCKATTR_GETPSHARED	sanitizer_common/sanitizer_platform_interceptors.h	361;"	d
SANITIZER_INTERCEPT_PTHREAD_SETCANCEL	sanitizer_common/sanitizer_platform_interceptors.h	451;"	d
SANITIZER_INTERCEPT_PTHREAD_SETNAME_NP	sanitizer_common/sanitizer_platform_interceptors.h	401;"	d
SANITIZER_INTERCEPT_PTHREAD_SIGMASK	sanitizer_common/sanitizer_platform_interceptors.h	325;"	d
SANITIZER_INTERCEPT_PTHREAD_SIGMASK	tsan/tsan_interceptors_posix.cpp	2227;"	d
SANITIZER_INTERCEPT_PTRACE	sanitizer_common/sanitizer_platform_interceptors.h	275;"	d
SANITIZER_INTERCEPT_PTRACE	sanitizer_common/sanitizer_platform_interceptors.h	277;"	d
SANITIZER_INTERCEPT_PTSNAME	sanitizer_common/sanitizer_platform_interceptors.h	372;"	d
SANITIZER_INTERCEPT_PTSNAME_R	sanitizer_common/sanitizer_platform_interceptors.h	373;"	d
SANITIZER_INTERCEPT_PUTS	sanitizer_common/sanitizer_platform_interceptors.h	184;"	d
SANITIZER_INTERCEPT_PVALLOC	sanitizer_common/sanitizer_platform_interceptors.h	490;"	d
SANITIZER_INTERCEPT_PWRITE	sanitizer_common/sanitizer_platform_interceptors.h	178;"	d
SANITIZER_INTERCEPT_PWRITE64	sanitizer_common/sanitizer_platform_interceptors.h	187;"	d
SANITIZER_INTERCEPT_PWRITEV	sanitizer_common/sanitizer_platform_interceptors.h	194;"	d
SANITIZER_INTERCEPT_PWRITEV64	sanitizer_common/sanitizer_platform_interceptors.h	196;"	d
SANITIZER_INTERCEPT_QSORT	sanitizer_common/sanitizer_platform_interceptors.h	584;"	d
SANITIZER_INTERCEPT_QSORT_R	sanitizer_common/sanitizer_platform_interceptors.h	586;"	d
SANITIZER_INTERCEPT_RANDOM_R	sanitizer_common/sanitizer_platform_interceptors.h	345;"	d
SANITIZER_INTERCEPT_RAND_R	sanitizer_common/sanitizer_platform_interceptors.h	385;"	d
SANITIZER_INTERCEPT_READ	sanitizer_common/sanitizer_platform_interceptors.h	175;"	d
SANITIZER_INTERCEPT_READDIR	sanitizer_common/sanitizer_platform_interceptors.h	269;"	d
SANITIZER_INTERCEPT_READDIR64	sanitizer_common/sanitizer_platform_interceptors.h	270;"	d
SANITIZER_INTERCEPT_READLINK	sanitizer_common/sanitizer_platform_interceptors.h	519;"	d
SANITIZER_INTERCEPT_READLINKAT	sanitizer_common/sanitizer_platform_interceptors.h	526;"	d
SANITIZER_INTERCEPT_READV	sanitizer_common/sanitizer_platform_interceptors.h	189;"	d
SANITIZER_INTERCEPT_REALLOCARRAY	sanitizer_common/sanitizer_platform_interceptors.h	496;"	d
SANITIZER_INTERCEPT_REALPATH	sanitizer_common/sanitizer_platform_interceptors.h	298;"	d
SANITIZER_INTERCEPT_RECVMMSG	sanitizer_common/sanitizer_platform_interceptors.h	262;"	d
SANITIZER_INTERCEPT_RECVMSG	sanitizer_common/sanitizer_platform_interceptors.h	260;"	d
SANITIZER_INTERCEPT_RECV_RECVFROM	sanitizer_common/sanitizer_platform_interceptors.h	460;"	d
SANITIZER_INTERCEPT_REGEX	sanitizer_common/sanitizer_platform_interceptors.h	542;"	d
SANITIZER_INTERCEPT_REGEXSUB	sanitizer_common/sanitizer_platform_interceptors.h	543;"	d
SANITIZER_INTERCEPT_REMQUO	sanitizer_common/sanitizer_platform_interceptors.h	378;"	d
SANITIZER_INTERCEPT_REMQUOL	sanitizer_common/sanitizer_platform_interceptors.h	379;"	d
SANITIZER_INTERCEPT_RMD160	sanitizer_common/sanitizer_platform_interceptors.h	558;"	d
SANITIZER_INTERCEPT_SCANDIR	sanitizer_common/sanitizer_platform_interceptors.h	308;"	d
SANITIZER_INTERCEPT_SCANDIR64	sanitizer_common/sanitizer_platform_interceptors.h	310;"	d
SANITIZER_INTERCEPT_SCANF	sanitizer_common/sanitizer_platform_interceptors.h	203;"	d
SANITIZER_INTERCEPT_SCHED_GETAFFINITY	sanitizer_common/sanitizer_platform_interceptors.h	303;"	d
SANITIZER_INTERCEPT_SCHED_GETPARAM	sanitizer_common/sanitizer_platform_interceptors.h	304;"	d
SANITIZER_INTERCEPT_SEM	sanitizer_common/sanitizer_platform_interceptors.h	449;"	d
SANITIZER_INTERCEPT_SENDMMSG	sanitizer_common/sanitizer_platform_interceptors.h	263;"	d
SANITIZER_INTERCEPT_SENDMSG	sanitizer_common/sanitizer_platform_interceptors.h	261;"	d
SANITIZER_INTERCEPT_SEND_SENDTO	sanitizer_common/sanitizer_platform_interceptors.h	461;"	d
SANITIZER_INTERCEPT_SETLOCALE	sanitizer_common/sanitizer_platform_interceptors.h	279;"	d
SANITIZER_INTERCEPT_SETPWENT	sanitizer_common/sanitizer_platform_interceptors.h	230;"	d
SANITIZER_INTERCEPT_SETVBUF	sanitizer_common/sanitizer_platform_interceptors.h	537;"	d
SANITIZER_INTERCEPT_SHA1	sanitizer_common/sanitizer_platform_interceptors.h	556;"	d
SANITIZER_INTERCEPT_SHA2	sanitizer_common/sanitizer_platform_interceptors.h	562;"	d
SANITIZER_INTERCEPT_SHMCTL	sanitizer_common/sanitizer_platform_interceptors.h	342;"	d
SANITIZER_INTERCEPT_SIGALTSTACK	sanitizer_common/sanitizer_platform_interceptors.h	589;"	d
SANITIZER_INTERCEPT_SIGNAL_AND_SIGACTION	sanitizer_common/sanitizer_platform_interceptors.h	502;"	d
SANITIZER_INTERCEPT_SIGPENDING	sanitizer_common/sanitizer_platform_interceptors.h	323;"	d
SANITIZER_INTERCEPT_SIGPROCMASK	sanitizer_common/sanitizer_platform_interceptors.h	324;"	d
SANITIZER_INTERCEPT_SIGSETOPS	sanitizer_common/sanitizer_platform_interceptors.h	320;"	d
SANITIZER_INTERCEPT_SIGSET_LOGICOPS	sanitizer_common/sanitizer_platform_interceptors.h	322;"	d
SANITIZER_INTERCEPT_SIGTIMEDWAIT	sanitizer_common/sanitizer_platform_interceptors.h	319;"	d
SANITIZER_INTERCEPT_SIGWAIT	sanitizer_common/sanitizer_platform_interceptors.h	317;"	d
SANITIZER_INTERCEPT_SIGWAITINFO	sanitizer_common/sanitizer_platform_interceptors.h	318;"	d
SANITIZER_INTERCEPT_SINCOS	sanitizer_common/sanitizer_platform_interceptors.h	377;"	d
SANITIZER_INTERCEPT_SL_INIT	sanitizer_common/sanitizer_platform_interceptors.h	574;"	d
SANITIZER_INTERCEPT_STAT	sanitizer_common/sanitizer_platform_interceptors.h	464;"	d
SANITIZER_INTERCEPT_STATFS	sanitizer_common/sanitizer_platform_interceptors.h	330;"	d
SANITIZER_INTERCEPT_STATFS64	sanitizer_common/sanitizer_platform_interceptors.h	332;"	d
SANITIZER_INTERCEPT_STATVFS	sanitizer_common/sanitizer_platform_interceptors.h	334;"	d
SANITIZER_INTERCEPT_STATVFS1	sanitizer_common/sanitizer_platform_interceptors.h	553;"	d
SANITIZER_INTERCEPT_STATVFS64	sanitizer_common/sanitizer_platform_interceptors.h	336;"	d
SANITIZER_INTERCEPT_STRCASECMP	sanitizer_common/sanitizer_platform_interceptors.h	153;"	d
SANITIZER_INTERCEPT_STRCASESTR	sanitizer_common/sanitizer_platform_interceptors.h	145;"	d
SANITIZER_INTERCEPT_STRCHR	sanitizer_common/sanitizer_platform_interceptors.h	147;"	d
SANITIZER_INTERCEPT_STRCHRNUL	sanitizer_common/sanitizer_platform_interceptors.h	148;"	d
SANITIZER_INTERCEPT_STRCMP	sanitizer_common/sanitizer_platform_interceptors.h	143;"	d
SANITIZER_INTERCEPT_STRERROR	sanitizer_common/sanitizer_platform_interceptors.h	305;"	d
SANITIZER_INTERCEPT_STRERROR_R	sanitizer_common/sanitizer_platform_interceptors.h	306;"	d
SANITIZER_INTERCEPT_STRLCPY	sanitizer_common/sanitizer_platform_interceptors.h	513;"	d
SANITIZER_INTERCEPT_STRLEN	sanitizer_common/sanitizer_platform_interceptors.h	141;"	d
SANITIZER_INTERCEPT_STRMODE	sanitizer_common/sanitizer_platform_interceptors.h	532;"	d
SANITIZER_INTERCEPT_STRNDUP	sanitizer_common/sanitizer_platform_interceptors.h	161;"	d
SANITIZER_INTERCEPT_STRNLEN	sanitizer_common/sanitizer_platform_interceptors.h	142;"	d
SANITIZER_INTERCEPT_STRPBRK	sanitizer_common/sanitizer_platform_interceptors.h	151;"	d
SANITIZER_INTERCEPT_STRPTIME	sanitizer_common/sanitizer_platform_interceptors.h	201;"	d
SANITIZER_INTERCEPT_STRRCHR	sanitizer_common/sanitizer_platform_interceptors.h	149;"	d
SANITIZER_INTERCEPT_STRSPN	sanitizer_common/sanitizer_platform_interceptors.h	150;"	d
SANITIZER_INTERCEPT_STRSTR	sanitizer_common/sanitizer_platform_interceptors.h	144;"	d
SANITIZER_INTERCEPT_STRTOI	sanitizer_common/sanitizer_platform_interceptors.h	554;"	d
SANITIZER_INTERCEPT_STRTOIMAX	sanitizer_common/sanitizer_platform_interceptors.h	282;"	d
SANITIZER_INTERCEPT_STRTOK	sanitizer_common/sanitizer_platform_interceptors.h	146;"	d
SANITIZER_INTERCEPT_STRTONUM	sanitizer_common/sanitizer_platform_interceptors.h	551;"	d
SANITIZER_INTERCEPT_STRXFRM	sanitizer_common/sanitizer_platform_interceptors.h	287;"	d
SANITIZER_INTERCEPT_SYSCTL	sanitizer_common/sanitizer_platform_interceptors.h	545;"	d
SANITIZER_INTERCEPT_SYSCTLGETMIBINFO	sanitizer_common/sanitizer_platform_interceptors.h	547;"	d
SANITIZER_INTERCEPT_SYSINFO	sanitizer_common/sanitizer_platform_interceptors.h	268;"	d
SANITIZER_INTERCEPT_SYSMSG	sanitizer_common/sanitizer_platform_interceptors.h	264;"	d
SANITIZER_INTERCEPT_TCGETATTR	sanitizer_common/sanitizer_platform_interceptors.h	297;"	d
SANITIZER_INTERCEPT_TEMPNAM	sanitizer_common/sanitizer_platform_interceptors.h	376;"	d
SANITIZER_INTERCEPT_TEXTDOMAIN	sanitizer_common/sanitizer_platform_interceptors.h	152;"	d
SANITIZER_INTERCEPT_THR_EXIT	sanitizer_common/sanitizer_platform_interceptors.h	369;"	d
SANITIZER_INTERCEPT_TIME	sanitizer_common/sanitizer_platform_interceptors.h	236;"	d
SANITIZER_INTERCEPT_TIMERFD	sanitizer_common/sanitizer_platform_interceptors.h	445;"	d
SANITIZER_INTERCEPT_TIMES	sanitizer_common/sanitizer_platform_interceptors.h	389;"	d
SANITIZER_INTERCEPT_TLS_GET_ADDR	sanitizer_common/sanitizer_platform_interceptors.h	406;"	d
SANITIZER_INTERCEPT_TLS_GET_ADDR	tsan/tsan_interceptors_posix.cpp	2226;"	d
SANITIZER_INTERCEPT_TMPNAM	sanitizer_common/sanitizer_platform_interceptors.h	370;"	d
SANITIZER_INTERCEPT_TMPNAM_R	sanitizer_common/sanitizer_platform_interceptors.h	371;"	d
SANITIZER_INTERCEPT_TSEARCH	sanitizer_common/sanitizer_platform_interceptors.h	427;"	d
SANITIZER_INTERCEPT_TTYENT	sanitizer_common/sanitizer_platform_interceptors.h	533;"	d
SANITIZER_INTERCEPT_TTYNAME	sanitizer_common/sanitizer_platform_interceptors.h	374;"	d
SANITIZER_INTERCEPT_TTYNAME_R	sanitizer_common/sanitizer_platform_interceptors.h	375;"	d
SANITIZER_INTERCEPT_UID_FROM_USER	sanitizer_common/sanitizer_platform_interceptors.h	507;"	d
SANITIZER_INTERCEPT_UNAME	sanitizer_common/sanitizer_platform_interceptors.h	591;"	d
SANITIZER_INTERCEPT_USER_FROM_UID	sanitizer_common/sanitizer_platform_interceptors.h	506;"	d
SANITIZER_INTERCEPT_UTMP	sanitizer_common/sanitizer_platform_interceptors.h	472;"	d
SANITIZER_INTERCEPT_UTMPX	sanitizer_common/sanitizer_platform_interceptors.h	474;"	d
SANITIZER_INTERCEPT_VIS	sanitizer_common/sanitizer_platform_interceptors.h	564;"	d
SANITIZER_INTERCEPT_WAIT	sanitizer_common/sanitizer_platform_interceptors.h	239;"	d
SANITIZER_INTERCEPT_WCRTOMB	sanitizer_common/sanitizer_platform_interceptors.h	293;"	d
SANITIZER_INTERCEPT_WCSCAT	sanitizer_common/sanitizer_platform_interceptors.h	500;"	d
SANITIZER_INTERCEPT_WCSDUP	sanitizer_common/sanitizer_platform_interceptors.h	501;"	d
SANITIZER_INTERCEPT_WCSNRTOMBS	sanitizer_common/sanitizer_platform_interceptors.h	291;"	d
SANITIZER_INTERCEPT_WCSTOMBS	sanitizer_common/sanitizer_platform_interceptors.h	286;"	d
SANITIZER_INTERCEPT_WCSXFRM	sanitizer_common/sanitizer_platform_interceptors.h	289;"	d
SANITIZER_INTERCEPT_WCTOMB	sanitizer_common/sanitizer_platform_interceptors.h	295;"	d
SANITIZER_INTERCEPT_WORDEXP	sanitizer_common/sanitizer_platform_interceptors.h	314;"	d
SANITIZER_INTERCEPT_WRITE	sanitizer_common/sanitizer_platform_interceptors.h	177;"	d
SANITIZER_INTERCEPT_WRITEV	sanitizer_common/sanitizer_platform_interceptors.h	190;"	d
SANITIZER_INTERCEPT_XDR	sanitizer_common/sanitizer_platform_interceptors.h	425;"	d
SANITIZER_INTERCEPT_XDRREC	sanitizer_common/sanitizer_platform_interceptors.h	426;"	d
SANITIZER_INTERCEPT_XPG_STRERROR_R	sanitizer_common/sanitizer_platform_interceptors.h	307;"	d
SANITIZER_INTERCEPT__EXIT	sanitizer_common/sanitizer_platform_interceptors.h	395;"	d
SANITIZER_INTERCEPT___BZERO	sanitizer_common/sanitizer_platform_interceptors.h	422;"	d
SANITIZER_INTERCEPT___CXA_ATEXIT	sanitizer_common/sanitizer_platform_interceptors.h	580;"	d
SANITIZER_INTERCEPT___LIBC_MEMALIGN	sanitizer_common/sanitizer_platform_interceptors.h	487;"	d
SANITIZER_INTERCEPT___LIBC_MUTEX	sanitizer_common/sanitizer_platform_interceptors.h	400;"	d
SANITIZER_INTERCEPT___LXSTAT	sanitizer_common/sanitizer_platform_interceptors.h	469;"	d
SANITIZER_INTERCEPT___LXSTAT64	sanitizer_common/sanitizer_platform_interceptors.h	470;"	d
SANITIZER_INTERCEPT___PRINTF_CHK	sanitizer_common/sanitizer_platform_interceptors.h	212;"	d
SANITIZER_INTERCEPT___PTHREAD_MUTEX	sanitizer_common/sanitizer_platform_interceptors.h	399;"	d
SANITIZER_INTERCEPT___STRNDUP	sanitizer_common/sanitizer_platform_interceptors.h	162;"	d
SANITIZER_INTERCEPT___STRXFRM_L	sanitizer_common/sanitizer_platform_interceptors.h	288;"	d
SANITIZER_INTERCEPT___WCSXFRM_L	sanitizer_common/sanitizer_platform_interceptors.h	290;"	d
SANITIZER_INTERCEPT___XSTAT	sanitizer_common/sanitizer_platform_interceptors.h	467;"	d
SANITIZER_INTERCEPT___XSTAT64	sanitizer_common/sanitizer_platform_interceptors.h	468;"	d
SANITIZER_INTERCEPT___XUNAME	sanitizer_common/sanitizer_platform_interceptors.h	592;"	d
SANITIZER_INTERFACE_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	27;"	d
SANITIZER_INTERFACE_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	29;"	d
SANITIZER_INTERFACE_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	33;"	d
SANITIZER_INTERFACE_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	36;"	d
SANITIZER_INTERFACE_INTERNAL_H	sanitizer_common/sanitizer_interface_internal.h	18;"	d
SANITIZER_INTERFACE_WEAK_DEF	asan/asan_allocator.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_free_hook, void *ptr) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	asan/asan_allocator.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_malloc_hook,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	asan/asan_flags.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(const char*, __asan_default_options, void) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	asan/asan_report.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __asan_on_error, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	asan/asan_suppressions.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(const char *, __asan_default_suppressions, void) {$/;"	f	namespace:__asan
SANITIZER_INTERFACE_WEAK_DEF	lsan/lsan_common.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(const char *, __lsan_default_options, void) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sancov_flags.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(const char*, __sancov_default_options, void) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_common.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_report_error_summary,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_common_libcdep.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_sandbox_on_notify,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_gep, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard, u32 *guard) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard_init,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_indir, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_switch, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_8bit_counters_init, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_bool_flag_init, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_pcs_init, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp1, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp2, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_const_cmp8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div4, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_div8, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_gep, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard, u32* guard) {$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_guard_init,$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_pc_indir, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_cov_trace_switch, void) {}$/;"	f
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_internal_defs.h	60;"	d
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_internal_defs.h	63;"	d
SANITIZER_INTERFACE_WEAK_DEF	sanitizer_common/sanitizer_printf.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(void, __sanitizer_on_print, const char *str) {$/;"	f	namespace:__sanitizer
SANITIZER_INTERFACE_WEAK_DEF	ubsan/ubsan_flags.cpp	/^SANITIZER_INTERFACE_WEAK_DEF(const char *, __ubsan_default_options, void) {$/;"	f
SANITIZER_IOS	sanitizer_common/sanitizer_platform.h	50;"	d
SANITIZER_IOS	sanitizer_common/sanitizer_platform.h	52;"	d
SANITIZER_IOS	sanitizer_common/sanitizer_platform.h	61;"	d
SANITIZER_IOSSIM	sanitizer_common/sanitizer_platform.h	55;"	d
SANITIZER_IOSSIM	sanitizer_common/sanitizer_platform.h	57;"	d
SANITIZER_IOSSIM	sanitizer_common/sanitizer_platform.h	62;"	d
SANITIZER_LFSTACK_H	sanitizer_common/sanitizer_lfstack.h	17;"	d
SANITIZER_LIBBACKTRACE	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	29;"	d
SANITIZER_LIBBACKTRACE	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	22;"	d
SANITIZER_LIBC_H	sanitizer_common/sanitizer_libc.h	17;"	d
SANITIZER_LIBIGNORE_H	sanitizer_common/sanitizer_libignore.h	17;"	d
SANITIZER_LINUX	sanitizer_common/sanitizer_platform.h	23;"	d
SANITIZER_LINUX	sanitizer_common/sanitizer_platform.h	25;"	d
SANITIZER_LINUX_H	sanitizer_common/sanitizer_linux.h	13;"	d
SANITIZER_LINUX_SYSCALL_HOOKS_H	include/sanitizer/linux_syscall_hooks.h	21;"	d
SANITIZER_LINUX_USES_64BIT_SYSCALLS	sanitizer_common/sanitizer_linux.cpp	128;"	d
SANITIZER_LINUX_USES_64BIT_SYSCALLS	sanitizer_common/sanitizer_linux.cpp	130;"	d
SANITIZER_LIST_H	sanitizer_common/sanitizer_list.h	15;"	d
SANITIZER_LOCAL_ADDRES_SPACE_VIEW_H	sanitizer_common/sanitizer_local_address_space_view.h	29;"	d
SANITIZER_LSAN_INTERFACE_H	include/sanitizer/lsan_interface.h	14;"	d
SANITIZER_MAC	sanitizer_common/sanitizer_platform.h	47;"	d
SANITIZER_MAC	sanitizer_common/sanitizer_platform.h	60;"	d
SANITIZER_MAC_H	sanitizer_common/sanitizer_mac.h	13;"	d
SANITIZER_MADVISE_DONTNEED	sanitizer_common/sanitizer_platform.h	341;"	d
SANITIZER_MADVISE_DONTNEED	sanitizer_common/sanitizer_platform.h	343;"	d
SANITIZER_MEMPROF_INTERFACE_H	include/sanitizer/memprof_interface.h	14;"	d
SANITIZER_MIPS	sanitizer_common/sanitizer_platform.h	136;"	d
SANITIZER_MIPS	sanitizer_common/sanitizer_platform.h	145;"	d
SANITIZER_MIPS32	sanitizer_common/sanitizer_platform.h	138;"	d
SANITIZER_MIPS32	sanitizer_common/sanitizer_platform.h	141;"	d
SANITIZER_MIPS32	sanitizer_common/sanitizer_platform.h	146;"	d
SANITIZER_MIPS64	sanitizer_common/sanitizer_platform.h	139;"	d
SANITIZER_MIPS64	sanitizer_common/sanitizer_platform.h	142;"	d
SANITIZER_MIPS64	sanitizer_common/sanitizer_platform.h	147;"	d
SANITIZER_MMAP_RANGE_SIZE	sanitizer_common/sanitizer_platform.h	242;"	d
SANITIZER_MMAP_RANGE_SIZE	sanitizer_common/sanitizer_platform.h	244;"	d
SANITIZER_MMAP_RANGE_SIZE	sanitizer_common/sanitizer_platform.h	247;"	d
SANITIZER_MMAP_RANGE_SIZE	sanitizer_common/sanitizer_platform.h	251;"	d
SANITIZER_MMAP_RANGE_SIZE	sanitizer_common/sanitizer_platform.h	253;"	d
SANITIZER_MMAP_RANGE_SIZE	sanitizer_common/sanitizer_platform.h	256;"	d
SANITIZER_MMAP_RANGE_SIZE	sanitizer_common/sanitizer_platform.h	258;"	d
SANITIZER_MUTEX_H	sanitizer_common/sanitizer_mutex.h	14;"	d
SANITIZER_MYRIAD2	sanitizer_common/sanitizer_platform.h	211;"	d
SANITIZER_MYRIAD2	sanitizer_common/sanitizer_platform.h	213;"	d
SANITIZER_NETBSD	sanitizer_common/sanitizer_platform.h	35;"	d
SANITIZER_NETBSD	sanitizer_common/sanitizer_platform.h	37;"	d
SANITIZER_NETBSD_SYSCALL_HOOKS_H	include/sanitizer/netbsd_syscall_hooks.h	28;"	d
SANITIZER_NLDBL_VERSION	sanitizer_common/sanitizer_platform.h	322;"	d
SANITIZER_NON_UNIQUE_TYPEINFO	sanitizer_common/sanitizer_platform.h	312;"	d
SANITIZER_NON_UNIQUE_TYPEINFO	sanitizer_common/sanitizer_platform.h	314;"	d
SANITIZER_OS_TRACE	sanitizer_common/sanitizer_mac.cpp	41;"	d
SANITIZER_OS_TRACE	sanitizer_common/sanitizer_mac.cpp	44;"	d
SANITIZER_PERSISTENT_ALLOCATOR_H	sanitizer_common/sanitizer_persistent_allocator.h	14;"	d
SANITIZER_PLACEMENT_NEW_H	sanitizer_common/sanitizer_placement_new.h	16;"	d
SANITIZER_PLATFORM_H	sanitizer_common/sanitizer_platform.h	13;"	d
SANITIZER_PLATFORM_INTERCEPTORS_H	sanitizer_common/sanitizer_platform_interceptors.h	14;"	d
SANITIZER_PLATFORM_LIMITS_FREEBSD_H	sanitizer_common/sanitizer_platform_limits_freebsd.h	15;"	d
SANITIZER_PLATFORM_LIMITS_NETBSD_H	sanitizer_common/sanitizer_platform_limits_netbsd.h	15;"	d
SANITIZER_PLATFORM_LIMITS_POSIX_H	sanitizer_common/sanitizer_platform_limits_posix.h	15;"	d
SANITIZER_PLATFORM_LIMITS_SOLARIS_H	sanitizer_common/sanitizer_platform_limits_solaris.h	15;"	d
SANITIZER_POINTER_FORMAT_LENGTH	sanitizer_common/sanitizer_platform.h	295;"	d
SANITIZER_POINTER_FORMAT_LENGTH	sanitizer_common/sanitizer_platform.h	297;"	d
SANITIZER_POSIX	sanitizer_common/sanitizer_platform.h	107;"	d
SANITIZER_POSIX_H	sanitizer_common/sanitizer_posix.h	13;"	d
SANITIZER_PPC	sanitizer_common/sanitizer_platform.h	166;"	d
SANITIZER_PPC	sanitizer_common/sanitizer_platform.h	191;"	d
SANITIZER_PPC32	sanitizer_common/sanitizer_platform.h	168;"	d
SANITIZER_PPC32	sanitizer_common/sanitizer_platform.h	185;"	d
SANITIZER_PPC32	sanitizer_common/sanitizer_platform.h	192;"	d
SANITIZER_PPC64	sanitizer_common/sanitizer_platform.h	169;"	d
SANITIZER_PPC64	sanitizer_common/sanitizer_platform.h	186;"	d
SANITIZER_PPC64	sanitizer_common/sanitizer_platform.h	193;"	d
SANITIZER_PPC64V1	sanitizer_common/sanitizer_platform.h	178;"	d
SANITIZER_PPC64V1	sanitizer_common/sanitizer_platform.h	181;"	d
SANITIZER_PPC64V1	sanitizer_common/sanitizer_platform.h	187;"	d
SANITIZER_PPC64V1	sanitizer_common/sanitizer_platform.h	194;"	d
SANITIZER_PPC64V2	sanitizer_common/sanitizer_platform.h	179;"	d
SANITIZER_PPC64V2	sanitizer_common/sanitizer_platform.h	182;"	d
SANITIZER_PPC64V2	sanitizer_common/sanitizer_platform.h	188;"	d
SANITIZER_PPC64V2	sanitizer_common/sanitizer_platform.h	195;"	d
SANITIZER_PROCMAPS_H	sanitizer_common/sanitizer_procmaps.h	14;"	d
SANITIZER_PTRAUTH_H	sanitizer_common/sanitizer_ptrauth.h	10;"	d
SANITIZER_QUARANTINE_H	sanitizer_common/sanitizer_quarantine.h	17;"	d
SANITIZER_REPORT_DECORATOR_H	sanitizer_common/sanitizer_report_decorator.h	17;"	d
SANITIZER_RING_BUFFER_H	sanitizer_common/sanitizer_ring_buffer.h	13;"	d
SANITIZER_RISCV64	sanitizer_common/sanitizer_platform.h	217;"	d
SANITIZER_RISCV64	sanitizer_common/sanitizer_platform.h	219;"	d
SANITIZER_RTEMS	sanitizer_common/sanitizer_platform.h	102;"	d
SANITIZER_RTEMS	sanitizer_common/sanitizer_platform.h	104;"	d
SANITIZER_RTEMS_H	sanitizer_common/sanitizer_rtems.h	13;"	d
SANITIZER_S390	sanitizer_common/sanitizer_platform.h	151;"	d
SANITIZER_S390	sanitizer_common/sanitizer_platform.h	160;"	d
SANITIZER_S390_31	sanitizer_common/sanitizer_platform.h	153;"	d
SANITIZER_S390_31	sanitizer_common/sanitizer_platform.h	156;"	d
SANITIZER_S390_31	sanitizer_common/sanitizer_platform.h	161;"	d
SANITIZER_S390_64	sanitizer_common/sanitizer_platform.h	154;"	d
SANITIZER_S390_64	sanitizer_common/sanitizer_platform.h	157;"	d
SANITIZER_S390_64	sanitizer_common/sanitizer_platform.h	162;"	d
SANITIZER_SCUDO_INTERFACE_H_	include/sanitizer/scudo_interface.h	13;"	d
SANITIZER_SIGN_EXTENDED_ADDRESSES	sanitizer_common/sanitizer_platform.h	265;"	d
SANITIZER_SIGN_EXTENDED_ADDRESSES	sanitizer_common/sanitizer_platform.h	267;"	d
SANITIZER_SOLARIS	sanitizer_common/sanitizer_platform.h	41;"	d
SANITIZER_SOLARIS	sanitizer_common/sanitizer_platform.h	43;"	d
SANITIZER_SOLARIS32	sanitizer_common/sanitizer_platform.h	205;"	d
SANITIZER_SOLARIS32	sanitizer_common/sanitizer_platform.h	207;"	d
SANITIZER_STACKDEPOTBASE_H	sanitizer_common/sanitizer_stackdepotbase.h	14;"	d
SANITIZER_STACKDEPOT_H	sanitizer_common/sanitizer_stackdepot.h	14;"	d
SANITIZER_STACKTRACE_H	sanitizer_common/sanitizer_stacktrace.h	13;"	d
SANITIZER_STACKTRACE_PRINTER_H	sanitizer_common/sanitizer_stacktrace_printer.h	13;"	d
SANITIZER_STOPTHEWORLD_FUCHSIA_H	sanitizer_common/sanitizer_stoptheworld_fuchsia.h	10;"	d
SANITIZER_STOPTHEWORLD_H	sanitizer_common/sanitizer_stoptheworld.h	14;"	d
SANITIZER_STRINGIFY	sanitizer_common/sanitizer_internal_defs.h	22;"	d
SANITIZER_STRINGIFY_	sanitizer_common/sanitizer_internal_defs.h	21;"	d
SANITIZER_SUPPORTS_INIT_FOR_DLOPEN	sanitizer_common/sanitizer_platform.h	365;"	d
SANITIZER_SUPPORTS_INIT_FOR_DLOPEN	sanitizer_common/sanitizer_platform.h	367;"	d
SANITIZER_SUPPORTS_WEAK_HOOKS	sanitizer_common/sanitizer_internal_defs.h	72;"	d
SANITIZER_SUPPORTS_WEAK_HOOKS	sanitizer_common/sanitizer_internal_defs.h	78;"	d
SANITIZER_SUPPORTS_WEAK_HOOKS	sanitizer_common/sanitizer_internal_defs.h	80;"	d
SANITIZER_SUPPRESSIONS_H	sanitizer_common/sanitizer_suppressions.h	13;"	d
SANITIZER_SUPPRESS_LEAK_ON_PTHREAD_EXIT	sanitizer_common/sanitizer_platform.h	334;"	d
SANITIZER_SUPPRESS_LEAK_ON_PTHREAD_EXIT	sanitizer_common/sanitizer_platform.h	336;"	d
SANITIZER_SYMBOLIZER_FUCHSIA_H	sanitizer_common/sanitizer_symbolizer_fuchsia.h	14;"	d
SANITIZER_SYMBOLIZER_H	sanitizer_common/sanitizer_symbolizer.h	19;"	d
SANITIZER_SYMBOLIZER_INTERNAL_H	sanitizer_common/sanitizer_symbolizer_internal.h	14;"	d
SANITIZER_SYMBOLIZER_LIBBACKTRACE_H	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	14;"	d
SANITIZER_SYMBOLIZER_MAC_H	sanitizer_common/sanitizer_symbolizer_mac.h	15;"	d
SANITIZER_SYMBOLIZER_MARKUP	sanitizer_common/sanitizer_platform.h	356;"	d
SANITIZER_SYMBOLIZER_MARKUP	sanitizer_common/sanitizer_platform.h	358;"	d
SANITIZER_SYMBOLIZER_RTEMS_H	sanitizer_common/sanitizer_symbolizer_rtems.h	14;"	d
SANITIZER_SYMBOLIZER_WIN_H	sanitizer_common/sanitizer_dbghelp.h	15;"	d
SANITIZER_THREAD_REGISTRY_H	sanitizer_common/sanitizer_thread_registry.h	15;"	d
SANITIZER_TLS_GET_ADDR_H	sanitizer_common/sanitizer_tls_get_addr.h	29;"	d
SANITIZER_TLS_INITIAL_EXEC_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	43;"	d
SANITIZER_TLS_INITIAL_EXEC_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	46;"	d
SANITIZER_TSAN_INTERFACE_H	include/sanitizer/tsan_interface.h	14;"	d
SANITIZER_TVOS	sanitizer_common/sanitizer_platform.h	72;"	d
SANITIZER_TVOS	sanitizer_common/sanitizer_platform.h	74;"	d
SANITIZER_TYPE_TRAITS_H	sanitizer_common/sanitizer_type_traits.h	14;"	d
SANITIZER_UBSAN_INTERFACE_H	include/sanitizer/ubsan_interface.h	14;"	d
SANITIZER_USES_CANONICAL_LINUX_SYSCALLS	sanitizer_common/sanitizer_platform.h	275;"	d
SANITIZER_USES_CANONICAL_LINUX_SYSCALLS	sanitizer_common/sanitizer_platform.h	277;"	d
SANITIZER_USES_UID16_SYSCALLS	sanitizer_common/sanitizer_platform.h	289;"	d
SANITIZER_USES_UID16_SYSCALLS	sanitizer_common/sanitizer_platform.h	291;"	d
SANITIZER_USE_GETAUXVAL	sanitizer_common/sanitizer_getauxval.h	27;"	d
SANITIZER_USE_GETAUXVAL	sanitizer_common/sanitizer_getauxval.h	29;"	d
SANITIZER_USE_GETAUXVAL	sanitizer_common/sanitizer_getauxval.h	43;"	d
SANITIZER_USE_GETENTROPY	sanitizer_common/sanitizer_linux.cpp	146;"	d
SANITIZER_USE_GETENTROPY	sanitizer_common/sanitizer_linux.cpp	148;"	d
SANITIZER_USE_GETRANDOM	sanitizer_common/sanitizer_linux.cpp	140;"	d
SANITIZER_USE_GETRANDOM	sanitizer_common/sanitizer_linux.cpp	142;"	d
SANITIZER_VECTOR_H	sanitizer_common/sanitizer_vector.h	16;"	d
SANITIZER_WATCHOS	sanitizer_common/sanitizer_platform.h	66;"	d
SANITIZER_WATCHOS	sanitizer_common/sanitizer_platform.h	68;"	d
SANITIZER_WEAK_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	31;"	d
SANITIZER_WEAK_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	34;"	d
SANITIZER_WEAK_ATTRIBUTE	sanitizer_common/sanitizer_internal_defs.h	37;"	d
SANITIZER_WEAK_ATTRIBUTE	sanitizer_common/sanitizer_mac.cpp	/^                        off_t off) SANITIZER_WEAK_ATTRIBUTE;$/;"	m	namespace:__sanitizer
SANITIZER_WEAK_ATTRIBUTE	sanitizer_common/sanitizer_mac.cpp	/^extern "C" int __munmap(void *, size_t) SANITIZER_WEAK_ATTRIBUTE;$/;"	m	namespace:__sanitizer
SANITIZER_WEAK_ATTRIBUTE	sanitizer_common/sanitizer_mac.cpp	/^extern "C" pid_t __fork(void) SANITIZER_WEAK_ATTRIBUTE;$/;"	m	namespace:__sanitizer
SANITIZER_WEAK_CXX_DEFAULT_IMPL	sanitizer_common/sanitizer_internal_defs.h	201;"	d
SANITIZER_WEAK_DEFAULT_IMPL	sanitizer_common/sanitizer_internal_defs.h	199;"	d
SANITIZER_WEAK_IMPORT	tsan/tsan_dispatch_defs.h	60;"	d
SANITIZER_WEAK_IMPORT	tsan/tsan_dispatch_defs.h	62;"	d
SANITIZER_WINDOWS	sanitizer_common/sanitizer_platform.h	78;"	d
SANITIZER_WINDOWS	sanitizer_common/sanitizer_platform.h	80;"	d
SANITIZER_WINDOWS64	sanitizer_common/sanitizer_platform.h	84;"	d
SANITIZER_WINDOWS64	sanitizer_common/sanitizer_platform.h	86;"	d
SANITIZER_WIN_DEFS_H	sanitizer_common/sanitizer_win_defs.h	13;"	d
SANITIZER_WIN_DLL_THUNK_H	sanitizer_common/sanitizer_win_dll_thunk.h	14;"	d
SANITIZER_WIN_H	sanitizer_common/sanitizer_win.h	13;"	d
SANITIZER_WIN_TRACE	sanitizer_common/sanitizer_common.h	837;"	d
SANITIZER_WIN_TRACE	sanitizer_common/sanitizer_common.h	839;"	d
SANITIZER_WIN_WEAK_INTERCEPTION_H	sanitizer_common/sanitizer_win_weak_interception.h	12;"	d
SANITIZER_WORDSIZE	sanitizer_common/sanitizer_platform.h	112;"	d
SANITIZER_WORDSIZE	sanitizer_common/sanitizer_platform.h	114;"	d
SANITIZER_X32	sanitizer_common/sanitizer_platform.h	124;"	d
SANITIZER_X32	sanitizer_common/sanitizer_platform.h	126;"	d
SA_RESTORER	sanitizer_common/sanitizer_linux.cpp	801;"	d
SA_SIGINFO	tsan/tsan_interceptors_posix.cpp	/^const int SA_SIGINFO = 0x40;$/;"	v
SA_SIGINFO	tsan/tsan_interceptors_posix.cpp	/^const int SA_SIGINFO = 4;$/;"	v
SA_SIGINFO	tsan/tsan_interceptors_posix.cpp	/^const int SA_SIGINFO = 8;$/;"	v
SCOPED_ANNOTATION	tsan/tsan_interface_ann.cpp	59;"	d
SCOPED_ANNOTATION_RET	tsan/tsan_interface_ann.cpp	47;"	d
SCOPED_ATOMIC	tsan/tsan_interface_atomic.cpp	475;"	d
SCOPED_INTERCEPTOR_RAW	tsan/tsan_interceptors.h	33;"	d
SCOPED_JAVA_FUNC	tsan/tsan_interface_java.cpp	60;"	d
SCOPED_TSAN_INTERCEPTOR	tsan/tsan_interceptors.h	42;"	d
SCOPED_TSAN_INTERCEPTOR_USER_CALLBACK_END	tsan/tsan_interceptors.h	55;"	d
SCOPED_TSAN_INTERCEPTOR_USER_CALLBACK_START	tsan/tsan_interceptors.h	52;"	d
SEHHandler	asan/asan_win.cpp	/^static long WINAPI SEHHandler(EXCEPTION_POINTERS *info) {$/;"	f
SEPARATOR	builtins/assembly.h	18;"	d
SEPARATOR	builtins/assembly.h	20;"	d
SET	tsan/tsan_md5.cpp	146;"	d
SET	tsan/tsan_md5.cpp	26;"	d
SHA1_CTX_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned SHA1_CTX_sz = sizeof(SHA1_CTX);$/;"	m	namespace:__sanitizer
SHA1_return_length	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned SHA1_return_length = SHA1_DIGEST_STRING_LENGTH;$/;"	m	namespace:__sanitizer
SHA2_CONST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	2496;"	d
SHA2_CONST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	2507;"	d
SHA2_EXTERN	sanitizer_common/sanitizer_platform_limits_netbsd.h	2344;"	d
SHA2_EXTERN	sanitizer_common/sanitizer_platform_limits_netbsd.h	2355;"	d
SHADOW_GRANULARITY	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	257;"	d
SHADOW_GRANULARITY	asan/asan_mapping.h	257;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	202;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	205;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	207;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	209;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	211;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	213;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	215;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	217;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	219;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	223;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	225;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	227;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	229;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	231;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	233;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	235;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	237;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	239;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	241;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	243;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	245;"	d
SHADOW_OFFSET	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	247;"	d
SHADOW_OFFSET	asan/asan_mapping.h	202;"	d
SHADOW_OFFSET	asan/asan_mapping.h	205;"	d
SHADOW_OFFSET	asan/asan_mapping.h	207;"	d
SHADOW_OFFSET	asan/asan_mapping.h	209;"	d
SHADOW_OFFSET	asan/asan_mapping.h	211;"	d
SHADOW_OFFSET	asan/asan_mapping.h	213;"	d
SHADOW_OFFSET	asan/asan_mapping.h	215;"	d
SHADOW_OFFSET	asan/asan_mapping.h	217;"	d
SHADOW_OFFSET	asan/asan_mapping.h	219;"	d
SHADOW_OFFSET	asan/asan_mapping.h	223;"	d
SHADOW_OFFSET	asan/asan_mapping.h	225;"	d
SHADOW_OFFSET	asan/asan_mapping.h	227;"	d
SHADOW_OFFSET	asan/asan_mapping.h	229;"	d
SHADOW_OFFSET	asan/asan_mapping.h	231;"	d
SHADOW_OFFSET	asan/asan_mapping.h	233;"	d
SHADOW_OFFSET	asan/asan_mapping.h	235;"	d
SHADOW_OFFSET	asan/asan_mapping.h	237;"	d
SHADOW_OFFSET	asan/asan_mapping.h	239;"	d
SHADOW_OFFSET	asan/asan_mapping.h	241;"	d
SHADOW_OFFSET	asan/asan_mapping.h	243;"	d
SHADOW_OFFSET	asan/asan_mapping.h	245;"	d
SHADOW_OFFSET	asan/asan_mapping.h	247;"	d
SHADOW_SCALE	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	199;"	d
SHADOW_SCALE	asan/asan_mapping.h	199;"	d
SHUF	tsan/tsan_rtl.cpp	760;"	d
SIGABRT	tsan/tsan_interceptors_posix.cpp	/^const int SIGABRT = 6;$/;"	v
SIGACTION_SYMNAME	sanitizer_common/sanitizer_platform_limits_freebsd.h	652;"	d
SIGACTION_SYMNAME	sanitizer_common/sanitizer_platform_limits_netbsd.h	2413;"	d
SIGBUS	tsan/tsan_interceptors_posix.cpp	/^const int SIGBUS = 10;$/;"	v
SIGBUS	tsan/tsan_interceptors_posix.cpp	/^const int SIGBUS = 7;$/;"	v
SIGFPE	tsan/tsan_interceptors_posix.cpp	/^const int SIGFPE = 8;$/;"	v
SIGILL	tsan/tsan_interceptors_posix.cpp	/^const int SIGILL = 4;$/;"	v
SIGNAL_INTERCEPTOR_SIGACTION_IMPL	tsan/tsan_interceptors_posix.cpp	2363;"	d
SIGNAL_INTERCEPTOR_SIGNAL_IMPL	tsan/tsan_interceptors_posix.cpp	2366;"	d
SIGPIPE	tsan/tsan_interceptors_posix.cpp	/^const int SIGPIPE = 13;$/;"	v
SIGSEGV	tsan/tsan_interceptors_posix.cpp	/^const int SIGSEGV = 11;$/;"	v
SIGSYS	tsan/tsan_interceptors_posix.cpp	/^const int SIGSYS = 12;$/;"	v
SIGSYS	tsan/tsan_interceptors_posix.cpp	/^const int SIGSYS = 31;$/;"	v
SIGTERM	tsan/tsan_interceptors_posix.cpp	/^const int SIGTERM = 15;$/;"	v
SIGTRAP	tsan/tsan_interceptors_posix.cpp	/^const int SIGTRAP = 5;$/;"	v
SIG_BLOCK	hwasan/hwasan_interceptors.cpp	237;"	d
SIG_BLOCK	hwasan/hwasan_interceptors.cpp	302;"	d
SIG_SETMASK	hwasan/hwasan_interceptors.cpp	238;"	d
SIG_SETMASK	hwasan/hwasan_interceptors.cpp	303;"	d
SIG_SETMASK	tsan/tsan_interceptors_posix.cpp	/^const int SIG_SETMASK = 2;$/;"	v
SIG_SETMASK	tsan/tsan_interceptors_posix.cpp	/^const int SIG_SETMASK = 3;$/;"	v
SIOCADNAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	355;"	d
SIOCGNATL	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	358;"	d
SIOCGNATS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	357;"	d
SIOCPURGENAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	359;"	d
SIOCRMNAT	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	356;"	d
SIZEOF_STRUCT_USTAT	sanitizer_common/sanitizer_platform_limits_posix.cpp	235;"	d
SIZEOF_STRUCT_USTAT	sanitizer_common/sanitizer_platform_limits_posix.cpp	238;"	d
SIZE_T	interception/interception.h	/^typedef __sanitizer::uptr    SIZE_T;$/;"	t
SI_ANDROID	sanitizer_common/sanitizer_platform_interceptors.h	50;"	d
SI_ANDROID	sanitizer_common/sanitizer_platform_interceptors.h	52;"	d
SI_FREEBSD	sanitizer_common/sanitizer_platform_interceptors.h	56;"	d
SI_FREEBSD	sanitizer_common/sanitizer_platform_interceptors.h	58;"	d
SI_IOS	sanitizer_common/sanitizer_platform_interceptors.h	82;"	d
SI_IOS	sanitizer_common/sanitizer_platform_interceptors.h	84;"	d
SI_IOSSIM	sanitizer_common/sanitizer_platform_interceptors.h	88;"	d
SI_IOSSIM	sanitizer_common/sanitizer_platform_interceptors.h	90;"	d
SI_LINUX	sanitizer_common/sanitizer_platform_interceptors.h	68;"	d
SI_LINUX	sanitizer_common/sanitizer_platform_interceptors.h	70;"	d
SI_LINUX_NOT_ANDROID	sanitizer_common/sanitizer_platform_interceptors.h	44;"	d
SI_LINUX_NOT_ANDROID	sanitizer_common/sanitizer_platform_interceptors.h	46;"	d
SI_LINUX_NOT_FREEBSD	sanitizer_common/sanitizer_platform_interceptors.h	136;"	d
SI_LINUX_NOT_FREEBSD	sanitizer_common/sanitizer_platform_interceptors.h	138;"	d
SI_MAC	sanitizer_common/sanitizer_platform_interceptors.h	74;"	d
SI_MAC	sanitizer_common/sanitizer_platform_interceptors.h	77;"	d
SI_MAC_DEPLOYMENT_BELOW_10_10	sanitizer_common/sanitizer_platform_interceptors.h	522;"	d
SI_MAC_DEPLOYMENT_BELOW_10_10	sanitizer_common/sanitizer_platform_interceptors.h	524;"	d
SI_MAC_DEPLOYMENT_BELOW_10_7	sanitizer_common/sanitizer_platform_interceptors.h	165;"	d
SI_MAC_DEPLOYMENT_BELOW_10_7	sanitizer_common/sanitizer_platform_interceptors.h	167;"	d
SI_NETBSD	sanitizer_common/sanitizer_platform_interceptors.h	62;"	d
SI_NETBSD	sanitizer_common/sanitizer_platform_interceptors.h	64;"	d
SI_NOT_FUCHSIA	sanitizer_common/sanitizer_platform_interceptors.h	106;"	d
SI_NOT_FUCHSIA	sanitizer_common/sanitizer_platform_interceptors.h	108;"	d
SI_NOT_MAC	sanitizer_common/sanitizer_platform_interceptors.h	75;"	d
SI_NOT_MAC	sanitizer_common/sanitizer_platform_interceptors.h	78;"	d
SI_NOT_RTEMS	sanitizer_common/sanitizer_platform_interceptors.h	112;"	d
SI_NOT_RTEMS	sanitizer_common/sanitizer_platform_interceptors.h	114;"	d
SI_POSIX	sanitizer_common/sanitizer_platform_interceptors.h	21;"	d
SI_POSIX	sanitizer_common/sanitizer_platform_interceptors.h	23;"	d
SI_POSIX_NOT_MAC	sanitizer_common/sanitizer_platform_interceptors.h	130;"	d
SI_POSIX_NOT_MAC	sanitizer_common/sanitizer_platform_interceptors.h	132;"	d
SI_SOLARIS	sanitizer_common/sanitizer_platform_interceptors.h	118;"	d
SI_SOLARIS	sanitizer_common/sanitizer_platform_interceptors.h	120;"	d
SI_SOLARIS32	sanitizer_common/sanitizer_platform_interceptors.h	124;"	d
SI_SOLARIS32	sanitizer_common/sanitizer_platform_interceptors.h	126;"	d
SI_TVOS	sanitizer_common/sanitizer_platform_interceptors.h	100;"	d
SI_TVOS	sanitizer_common/sanitizer_platform_interceptors.h	102;"	d
SI_WATCHOS	sanitizer_common/sanitizer_platform_interceptors.h	94;"	d
SI_WATCHOS	sanitizer_common/sanitizer_platform_interceptors.h	96;"	d
SI_WINDOWS	sanitizer_common/sanitizer_platform_interceptors.h	27;"	d
SI_WINDOWS	sanitizer_common/sanitizer_platform_interceptors.h	29;"	d
SInt	ubsan/ubsan_diag.h	/^      SIntMax SInt;$/;"	m	union:__ubsan::Diag::Arg::__anon3
SIntMax	ubsan/ubsan_value.h	/^typedef s128 SIntMax;$/;"	t	namespace:__ubsan
SMBIOC_LOOKUP	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	428;"	d
SMBIOC_OPENSESSION	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	423;"	d
SMBIOC_OPENSHARE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	424;"	d
SMBIOC_READ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	429;"	d
SMBIOC_REQUEST	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	425;"	d
SMBIOC_SETFLAGS	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	427;"	d
SMBIOC_T2RQ	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	426;"	d
SMBIOC_WRITE	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	430;"	d
SP_REG	sanitizer_common/sanitizer_stoptheworld_mac.cpp	105;"	d
SP_REG	sanitizer_common/sanitizer_stoptheworld_mac.cpp	91;"	d
SP_REG	sanitizer_common/sanitizer_stoptheworld_mac.cpp	97;"	d
SP_REG	sanitizer_common/sanitizer_stoptheworld_mac.cpp	99;"	d
SSIZE_T	interception/interception.h	/^typedef __sanitizer::sptr    SSIZE_T;$/;"	t
STACK_BIAS	sanitizer_common/sanitizer_stacktrace_sparc.cpp	18;"	d
STACK_BIAS	sanitizer_common/sanitizer_stacktrace_sparc.cpp	20;"	d
START_BACKGROUND_THREAD_IN_ASAN_INTERNAL	asan/asan_rtl.cpp	387;"	d
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^STDCXX_INTERCEPTOR(bool, _ZNSt3__114__shared_count16__release_sharedEv,$/;"	f	namespace:__tsan
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^STDCXX_INTERCEPTOR(void, _ZNSt3__111__call_onceERVmPvPFvS2_E, void *flag,$/;"	f	namespace:__tsan
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^STDCXX_INTERCEPTOR(void, _ZNSt3__119__shared_weak_count16__release_sharedEv,$/;"	f	namespace:__tsan
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	430;"	d
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^STDCXX_INTERCEPTOR(int, __cxa_guard_acquire, atomic_uint32_t *g) {$/;"	f
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^STDCXX_INTERCEPTOR(void, __cxa_guard_abort, atomic_uint32_t *g) {$/;"	f
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^STDCXX_INTERCEPTOR(void, __cxa_guard_release, atomic_uint32_t *g) {$/;"	f
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	857;"	d
STDCXX_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	859;"	d
STEP	tsan/tsan_md5.cpp	145;"	d
STEP	tsan/tsan_md5.cpp	21;"	d
STRINGIFY	sanitizer_common/sanitizer_win_defs.h	44;"	d
STRINGIFY_	sanitizer_common/sanitizer_win_defs.h	43;"	d
STRIP_PC	sanitizer_common/sanitizer_ptrauth.h	21;"	d
SYMBOL_IS_FUNC	builtins/assembly.h	28;"	d
SYMBOL_IS_FUNC	builtins/assembly.h	39;"	d
SYMBOL_IS_FUNC	builtins/assembly.h	41;"	d
SYMBOL_IS_FUNC	builtins/assembly.h	57;"	d
SYMBOL_NAME	builtins/assembly.h	136;"	d
SancovFlags	sanitizer_common/sancov_flags.h	/^struct SancovFlags {$/;"	s	namespace:__sancov
SanitizerBreakOptimization	sanitizer_common/sanitizer_common.h	/^static inline void SanitizerBreakOptimization(void *arg) {$/;"	f	namespace:__sanitizer
SanitizerCommonDecorator	sanitizer_common/sanitizer_report_decorator.h	/^  SanitizerCommonDecorator() : ansi_(ColorizeReports()) {}$/;"	f	class:__sanitizer::SanitizerCommonDecorator
SanitizerCommonDecorator	sanitizer_common/sanitizer_report_decorator.h	/^class SanitizerCommonDecorator {$/;"	c	namespace:__sanitizer
SanitizerDumpCoverage	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static void SanitizerDumpCoverage(const uptr* unsorted_pcs, uptr len) {$/;"	f	namespace:__sancov::__anon40
SanitizerInitializeUnwinder	sanitizer_common/sanitizer_common.h	/^inline void SanitizerInitializeUnwinder() {}$/;"	f	namespace:__sanitizer
SanitizerInitializeUnwinder	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^void SanitizerInitializeUnwinder() {$/;"	f	namespace:__sanitizer
SanitizerToolName	sanitizer_common/sanitizer_common.cpp	/^const char *SanitizerToolName = "SanitizerTool";$/;"	m	namespace:__sanitizer
SavedFlagPtr	asan/asan_fake_stack.h	/^  static u8 **SavedFlagPtr(uptr x, uptr class_id) {$/;"	f	class:__asan::FakeStack
SavedStackAllocations	hwasan/hwasan_report.cpp	/^  SavedStackAllocations(StackAllocationsRingBuffer *rb) {$/;"	f	class:__hwasan::SavedStackAllocations
SavedStackAllocations	hwasan/hwasan_report.cpp	/^class SavedStackAllocations {$/;"	c	namespace:__hwasan
ScanGlobalRange	lsan/lsan_common.cpp	/^void ScanGlobalRange(uptr begin, uptr end, Frontier *frontier) {$/;"	f	namespace:__lsan
ScanRangeForPointers	lsan/lsan_common.cpp	/^void ScanRangeForPointers(uptr begin, uptr end,$/;"	f	namespace:__lsan
ScanRootRegion	lsan/lsan_common.cpp	/^void ScanRootRegion(Frontier *frontier, const RootRegion &root_region,$/;"	f	namespace:__lsan
Scare	asan/asan_scariness_score.h	/^  void Scare(int add_to_score, const char *reason) {$/;"	f	struct:__asan::ScarinessScoreBase
ScarinessScore	asan/asan_scariness_score.h	/^  ScarinessScore() {$/;"	f	struct:__asan::ScarinessScore
ScarinessScore	asan/asan_scariness_score.h	/^struct ScarinessScore : ScarinessScoreBase {$/;"	s	namespace:__asan
ScarinessScoreBase	asan/asan_scariness_score.h	/^struct ScarinessScoreBase {$/;"	s	namespace:__asan
ScheduleUnregisterGlobals	asan/asan_win_dynamic_runtime_thunk.cpp	/^int ScheduleUnregisterGlobals() {$/;"	f	namespace:__anon71
ScopedAllocatorErrorReport	sanitizer_common/sanitizer_allocator_report.cpp	/^  ScopedAllocatorErrorReport(const char *error_summary_,$/;"	f	class:__sanitizer::ScopedAllocatorErrorReport
ScopedAllocatorErrorReport	sanitizer_common/sanitizer_allocator_report.cpp	/^class ScopedAllocatorErrorReport {$/;"	c	namespace:__sanitizer
ScopedAnnotation	tsan/tsan_interface_ann.cpp	/^  ScopedAnnotation(ThreadState *thr, const char *aname, uptr pc)$/;"	f	class:__tsan::ScopedAnnotation
ScopedAnnotation	tsan/tsan_interface_ann.cpp	/^class ScopedAnnotation {$/;"	c	namespace:__tsan
ScopedAtomic	tsan/tsan_interface_atomic.cpp	/^  ScopedAtomic(ThreadState *thr, uptr pc, const volatile void *a,$/;"	f	class:ScopedAtomic
ScopedAtomic	tsan/tsan_interface_atomic.cpp	/^class ScopedAtomic {$/;"	c
ScopedDisabler	include/sanitizer/lsan_interface.h	/^  ScopedDisabler() { __lsan_disable(); }$/;"	f	class:__lsan::ScopedDisabler
ScopedDisabler	include/sanitizer/lsan_interface.h	/^class ScopedDisabler {$/;"	c	namespace:__lsan
ScopedErrorReportLock	sanitizer_common/sanitizer_common.h	/^class ScopedErrorReportLock {$/;"	c	namespace:__sanitizer
ScopedErrorReportLock	sanitizer_common/sanitizer_symbolizer_report.cpp	/^ScopedErrorReportLock::ScopedErrorReportLock() {$/;"	f	class:__sanitizer::ScopedErrorReportLock
ScopedGlobalProcessor	tsan/tsan_mman.cpp	/^ScopedGlobalProcessor::ScopedGlobalProcessor() {$/;"	f	class:__tsan::ScopedGlobalProcessor
ScopedGlobalProcessor	tsan/tsan_rtl.h	/^struct ScopedGlobalProcessor {$/;"	s	namespace:__tsan
ScopedHandle	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  ScopedHandle() : h_(nullptr) {}$/;"	f	struct:__sanitizer::__anon10::ScopedHandle
ScopedHandle	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  explicit ScopedHandle(HANDLE h) : h_(h) {}$/;"	f	struct:__sanitizer::__anon10::ScopedHandle
ScopedHandle	sanitizer_common/sanitizer_symbolizer_win.cpp	/^struct ScopedHandle {$/;"	s	namespace:__sanitizer::__anon10
ScopedIgnoreInterceptors	tsan/tsan_rtl.h	/^  ScopedIgnoreInterceptors() {$/;"	f	struct:__tsan::ScopedIgnoreInterceptors
ScopedIgnoreInterceptors	tsan/tsan_rtl.h	/^struct ScopedIgnoreInterceptors {$/;"	s	namespace:__tsan
ScopedInErrorReport	asan/asan_report.cpp	/^  explicit ScopedInErrorReport(bool fatal = false)$/;"	f	class:__asan::ScopedInErrorReport
ScopedInErrorReport	asan/asan_report.cpp	/^class ScopedInErrorReport {$/;"	c	namespace:__asan
ScopedInterceptor	tsan/tsan_interceptors.h	/^class ScopedInterceptor {$/;"	c	namespace:__tsan
ScopedInterceptor	tsan/tsan_interceptors_posix.cpp	/^ScopedInterceptor::ScopedInterceptor(ThreadState *thr, const char *fname,$/;"	f	class:ScopedInterceptor
ScopedInterceptorDisabler	lsan/lsan_common.h	/^  ScopedInterceptorDisabler() { DisableInThisThread(); }$/;"	f	struct:__lsan::ScopedInterceptorDisabler
ScopedInterceptorDisabler	lsan/lsan_common.h	/^struct ScopedInterceptorDisabler {$/;"	s	namespace:__lsan
ScopedJavaFunc	tsan/tsan_interface_java.cpp	/^  ScopedJavaFunc(ThreadState *thr, uptr pc)$/;"	f	class:__tsan::ScopedJavaFunc
ScopedJavaFunc	tsan/tsan_interface_java.cpp	/^class ScopedJavaFunc {$/;"	c	namespace:__tsan
ScopedReport	hwasan/hwasan_report.cpp	/^  ScopedReport(bool fatal = false) : error_message_(1), fatal(fatal) {$/;"	f	class:__hwasan::ScopedReport
ScopedReport	hwasan/hwasan_report.cpp	/^class ScopedReport {$/;"	c	namespace:__hwasan
ScopedReport	tsan/tsan_rtl.h	/^class ScopedReport : public ScopedReportBase {$/;"	c	namespace:__tsan
ScopedReport	tsan/tsan_rtl_report.cpp	/^ScopedReport::ScopedReport(ReportType typ, uptr tag)$/;"	f	class:__tsan::ScopedReport
ScopedReport	ubsan/ubsan_diag.cpp	/^ScopedReport::ScopedReport(ReportOptions Opts, Location SummaryLoc,$/;"	f	class:ScopedReport
ScopedReport	ubsan/ubsan_diag.h	/^class ScopedReport {$/;"	c	namespace:__ubsan
ScopedReportBase	tsan/tsan_rtl.h	/^class ScopedReportBase {$/;"	c	namespace:__tsan
ScopedReportBase	tsan/tsan_rtl_report.cpp	/^ScopedReportBase::ScopedReportBase(ReportType typ, uptr tag) {$/;"	f	class:__tsan::ScopedReportBase
ScopedSetTracerPID	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  explicit ScopedSetTracerPID(uptr tracer_pid) {$/;"	f	struct:__sanitizer::ScopedSetTracerPID
ScopedSetTracerPID	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^struct ScopedSetTracerPID {$/;"	s	namespace:__sanitizer
ScopedSetTracerPID	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  explicit ScopedSetTracerPID(uptr tracer_pid) {$/;"	f	struct:__sanitizer::ScopedSetTracerPID
ScopedSetTracerPID	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^struct ScopedSetTracerPID {$/;"	s	namespace:__sanitizer
ScopedStackSpaceWithGuard	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  explicit ScopedStackSpaceWithGuard(uptr stack_size) {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
ScopedStackSpaceWithGuard	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^class ScopedStackSpaceWithGuard {$/;"	c	namespace:__sanitizer
ScopedStackSpaceWithGuard	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  explicit ScopedStackSpaceWithGuard(uptr stack_size) {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
ScopedStackSpaceWithGuard	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^class ScopedStackSpaceWithGuard {$/;"	c	namespace:__sanitizer
ScopedSyscall	tsan/tsan_interceptors_posix.cpp	/^  explicit ScopedSyscall(ThreadState *thr)$/;"	f	struct:ScopedSyscall
ScopedSyscall	tsan/tsan_interceptors_posix.cpp	/^struct ScopedSyscall {$/;"	s
ScopedTaggingDisabler	hwasan/hwasan_thread.h	/^  ScopedTaggingDisabler() { GetCurrentThread()->DisableTagging(); }$/;"	f	struct:__hwasan::ScopedTaggingDisabler
ScopedTaggingDisabler	hwasan/hwasan_thread.h	/^struct ScopedTaggingDisabler {$/;"	s	namespace:__hwasan
ScopedUnwinding	asan/asan_stack.cpp	/^  explicit ScopedUnwinding(AsanThread *t) : thread(t) {$/;"	f	class:__asan::__anon70::ScopedUnwinding
ScopedUnwinding	asan/asan_stack.cpp	/^class ScopedUnwinding {$/;"	c	namespace:__asan::__anon70
SearchForModule	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^static const LoadedModule *SearchForModule(const ListOfModules &modules,$/;"	f	namespace:__sanitizer
SecondaryAllocatorName	sanitizer_common/sanitizer_allocator.cpp	/^const char *SecondaryAllocatorName = "LargeMmapAllocator";$/;"	m	namespace:__sanitizer
SendCommand	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *SymbolizerProcess::SendCommand(const char *command) {$/;"	f	class:__sanitizer::SymbolizerProcess
SendCommand	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  const char *SendCommand(const char *module_name, uptr module_offset) {$/;"	f	class:__sanitizer::final
SendCommandImpl	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^const char *SymbolizerProcess::SendCommandImpl(const char *command) {$/;"	f	class:__sanitizer::SymbolizerProcess
Set	asan/asan_allocator.cpp	/^  void Set(AsanChunk *p) {$/;"	f	class:__asan::LargeChunkHeader
Set	sanitizer_common/sanitizer_allocator_stats.h	/^  void Set(AllocatorStat i, uptr v) {$/;"	f	class:AllocatorStats
SetAbortMessage	sanitizer_common/sanitizer_common.h	/^inline void SetAbortMessage(const char *) {}$/;"	f	namespace:__sanitizer
SetAbortMessage	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void SetAbortMessage(const char *str) {$/;"	f	namespace:__sanitizer
SetAbortMessage	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void SetAbortMessage(const char *str) {}$/;"	f	namespace:__sanitizer
SetAbortMessage	sanitizer_common/sanitizer_win.cpp	/^void SetAbortMessage(const char *) {}$/;"	f	namespace:__sanitizer
SetAddr0AndSizeLog	tsan/tsan_rtl.h	/^  void SetAddr0AndSizeLog(u64 addr0, unsigned kAccessSizeLog) {$/;"	f	class:__tsan::Shadow
SetAddressSpaceUnlimited	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void SetAddressSpaceUnlimited() {$/;"	f	namespace:__sanitizer
SetAddressSpaceUnlimited	sanitizer_common/sanitizer_win.cpp	/^void SetAddressSpaceUnlimited() {$/;"	f	namespace:__sanitizer
SetAllocContext	asan/asan_allocator.cpp	/^  void SetAllocContext(u32 tid, u32 stack) {$/;"	f	class:__asan::ChunkHeader
SetAllocatorMayReturnNull	sanitizer_common/sanitizer_allocator.cpp	/^void SetAllocatorMayReturnNull(bool may_return_null) {$/;"	f	namespace:__sanitizer
SetAllocatorOutOfMemory	sanitizer_common/sanitizer_allocator.cpp	/^void SetAllocatorOutOfMemory() {$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	sanitizer_common/sanitizer_fuchsia.cpp	/^void SetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void SetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	sanitizer_common/sanitizer_rtems.cpp	/^void SetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
SetAlternateSignalStack	sanitizer_common/sanitizer_win.cpp	/^void SetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
SetAtomic	tsan/tsan_rtl.h	/^  void SetAtomic(bool kIsAtomic) {$/;"	f	class:__tsan::Shadow
SetCanPoisonMemory	asan/asan_poisoning.cpp	/^void SetCanPoisonMemory(bool value) {$/;"	f	namespace:__asan
SetCheckFailedCallback	sanitizer_common/sanitizer_termination.cpp	/^void SetCheckFailedCallback(CheckFailedCallbackType callback) {$/;"	f	namespace:__sanitizer
SetCommonFlagsDefaults	sanitizer_common/sanitizer_flags.h	/^inline void SetCommonFlagsDefaults() {$/;"	f	namespace:__sanitizer
SetCount	tsan/tsan_rtl_report.cpp	/^void ScopedReportBase::SetCount(int count) { rep_->count = count; }$/;"	f	class:__tsan::ScopedReportBase
SetCreated	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::SetCreated(uptr _user_id, u64 _unique_id,$/;"	f	class:__sanitizer::ThreadContextBase
SetCurrentThread	asan/asan_thread.cpp	/^void SetCurrentThread(AsanThread *t) {$/;"	f	namespace:__asan
SetCurrentThread	lsan/lsan_common_mac.cpp	/^void SetCurrentThread(u32 tid) { get_tls_val(true)->current_thread_id = tid; }$/;"	f	namespace:__lsan
SetCurrentThread	lsan/lsan_linux.cpp	/^void SetCurrentThread(u32 tid) { current_thread_tid = tid; }$/;"	f	namespace:__lsan
SetDead	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::SetDead() {$/;"	f	class:__sanitizer::ThreadContextBase
SetDefaults	asan/asan_flags.cpp	/^void Flags::SetDefaults() {$/;"	f	class:__asan::Flags
SetDefaults	hwasan/hwasan.cpp	/^void Flags::SetDefaults() {$/;"	f	class:__hwasan::Flags
SetDefaults	lsan/lsan_common.cpp	/^void Flags::SetDefaults() {$/;"	f	class:__lsan::Flags
SetDefaults	sanitizer_common/sancov_flags.cpp	/^void SancovFlags::SetDefaults() {$/;"	f	class:__sancov::SancovFlags
SetDefaults	sanitizer_common/sanitizer_flags.cpp	/^void CommonFlags::SetDefaults() {$/;"	f	class:__sanitizer::CommonFlags
SetDefaults	tsan/tsan_flags.cpp	/^void Flags::SetDefaults() {$/;"	f	class:__tsan::Flags
SetDefaults	ubsan/ubsan_flags.cpp	/^void Flags::SetDefaults() {$/;"	f	class:__ubsan::Flags
SetDestroyed	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::SetDestroyed() {$/;"	f	class:__sanitizer::ThreadContextBase
SetEnv	sanitizer_common/sanitizer_linux_libcdep.cpp	/^bool SetEnv(const char *name, const char *value) {$/;"	f	namespace:__sanitizer
SetErrnoOnNull	sanitizer_common/sanitizer_allocator_checks.h	/^inline void *SetErrnoOnNull(void *ptr) {$/;"	f	namespace:__sanitizer
SetErrnoToENOMEM	sanitizer_common/sanitizer_allocator_checks.cpp	/^void SetErrnoToENOMEM() {$/;"	f	namespace:__sanitizer
SetFinished	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::SetFinished() {$/;"	f	class:__sanitizer::ThreadContextBase
SetFlags	tsan/tsan_sync.h	/^  void SetFlags(u32 f) {$/;"	f	struct:__tsan::SyncVar
SetFreeContext	asan/asan_allocator.cpp	/^  void SetFreeContext(u32 tid, u32 stack) {$/;"	f	class:__asan::ChunkBase
SetFrom	asan/asan_allocator.cpp	/^void AllocatorOptions::SetFrom(const Flags *f, const CommonFlags *cf) {$/;"	f	class:__asan::AllocatorOptions
SetFromArray	sanitizer_common/sanitizer_allocator_primary32.h	/^    void SetFromArray(void *batch[], uptr count) {$/;"	f	struct:SizeClassAllocator32::TransferBatch
SetHistorySize	tsan/tsan_rtl.h	/^  void SetHistorySize(int hs) {$/;"	f	class:__tsan::FastState
SetIgnoreBit	tsan/tsan_rtl.h	/^  void SetIgnoreBit() { x_ |= kIgnoreBit; }$/;"	f	class:__tsan::FastState
SetJmp	tsan/tsan_interceptors_posix.cpp	/^static void SetJmp(ThreadState *thr, uptr sp) {$/;"	f
SetJoined	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::SetJoined(void *arg) {$/;"	f	class:__sanitizer::ThreadContextBase
SetLowLevelAllocateCallback	sanitizer_common/sanitizer_allocator.cpp	/^void SetLowLevelAllocateCallback(LowLevelAllocateCallback callback) {$/;"	f	namespace:__sanitizer
SetLowLevelAllocateMinAlignment	sanitizer_common/sanitizer_allocator.cpp	/^void SetLowLevelAllocateMinAlignment(uptr alignment) {$/;"	f	namespace:__sanitizer
SetMallocContextSize	asan/asan_stack.cpp	/^void SetMallocContextSize(u32 size) {$/;"	f	namespace:__asan
SetName	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::SetName(const char *new_name) {$/;"	f	class:__sanitizer::ThreadContextBase
SetNext	sanitizer_common/sanitizer_ring_buffer.h	/^  void SetNext(const T *next) {$/;"	f	class:__sanitizer::CompactRingBuffer
SetPrintfAndReportCallback	sanitizer_common/sanitizer_printf.cpp	/^void SetPrintfAndReportCallback(void (*callback)(const char *)) {$/;"	f	namespace:__sanitizer
SetReleaseToOSIntervalMs	sanitizer_common/sanitizer_allocator_combined.h	/^  void SetReleaseToOSIntervalMs(s32 release_to_os_interval_ms) {$/;"	f	class:CombinedAllocator
SetReleaseToOSIntervalMs	sanitizer_common/sanitizer_allocator_primary32.h	/^  void SetReleaseToOSIntervalMs(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator32
SetReleaseToOSIntervalMs	sanitizer_common/sanitizer_allocator_primary64.h	/^  void SetReleaseToOSIntervalMs(s32 release_to_os_interval_ms) {$/;"	f	class:SizeClassAllocator64
SetReportPath	sanitizer_common/sanitizer_file.cpp	/^void ReportFile::SetReportPath(const char *path) {$/;"	f	class:__sanitizer::ReportFile
SetRssLimitExceeded	asan/asan_allocator.cpp	/^  void SetRssLimitExceeded(bool limit_exceeded) {$/;"	f	struct:__asan::Allocator
SetSEHFilter	asan/asan_win_dynamic_runtime_thunk.cpp	/^static int SetSEHFilter() { return __asan_set_seh_filter(); }$/;"	f
SetSandboxingCallback	sanitizer_common/sanitizer_common_libcdep.cpp	/^void SetSandboxingCallback(void (*f)()) {$/;"	f	namespace:__sanitizer
SetShadow	asan/asan_fake_stack.cpp	/^ALWAYS_INLINE void SetShadow(uptr ptr, uptr size, uptr class_id, u64 magic) {$/;"	f	namespace:__asan
SetShadowRegionHugePageMode	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void SetShadowRegionHugePageMode(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
SetShadowRegionHugePageMode	sanitizer_common/sanitizer_win.cpp	/^void SetShadowRegionHugePageMode(uptr addr, uptr size) {$/;"	f	namespace:__sanitizer
SetSoftRssLimitExceededCallback	sanitizer_common/sanitizer_common_libcdep.cpp	/^void SetSoftRssLimitExceededCallback(void (*Callback)(bool exceeded)) {$/;"	f	namespace:__sanitizer
SetStackSizeLimitInBytes	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void SetStackSizeLimitInBytes(uptr limit) {$/;"	f	namespace:__sanitizer
SetStackSizeLimitInBytes	sanitizer_common/sanitizer_win.cpp	/^void SetStackSizeLimitInBytes(uptr limit) {$/;"	f	namespace:__sanitizer
SetStarted	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadContextBase::SetStarted(tid_t _os_id, ThreadType _thread_type,$/;"	f	class:__sanitizer::ThreadContextBase
SetTLSFakeStack	asan/asan_fake_stack.cpp	/^void SetTLSFakeStack(FakeStack *fs) { }$/;"	f	namespace:__asan
SetTLSFakeStack	asan/asan_fake_stack.cpp	/^void SetTLSFakeStack(FakeStack *fs) {$/;"	f	namespace:__asan
SetThreadName	asan/asan_interceptors.cpp	/^void SetThreadName(const char *name) {$/;"	f	namespace:__asan
SetThreadName	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::SetThreadName(u32 tid, const char *name) {$/;"	f	class:__sanitizer::ThreadRegistry
SetThreadNameByUserId	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::SetThreadNameByUserId(uptr user_id, const char *name) {$/;"	f	class:__sanitizer::ThreadRegistry
SetThreadStackAndTls	asan/asan_fuchsia.cpp	/^void AsanThread::SetThreadStackAndTls(const AsanThread::InitOptions *options) {$/;"	f	class:__asan::AsanThread
SetThreadStackAndTls	asan/asan_rtems.cpp	/^void AsanThread::SetThreadStackAndTls(const AsanThread::InitOptions *options) {$/;"	f	class:__asan::AsanThread
SetThreadStackAndTls	asan/asan_thread.cpp	/^void AsanThread::SetThreadStackAndTls(const InitOptions *options) {$/;"	f	class:__asan::AsanThread
SetThreadUserId	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::SetThreadUserId(u32 tid, uptr user_id) {$/;"	f	class:__sanitizer::ThreadRegistry
SetUsedSize	asan/asan_allocator.cpp	/^  void SetUsedSize(uptr size) {$/;"	f	class:__asan::ChunkHeader
SetUserDieCallback	sanitizer_common/sanitizer_termination.cpp	/^void SetUserDieCallback(DieCallbackType callback) {$/;"	f	namespace:__sanitizer
SetVerbosity	sanitizer_common/sanitizer_common.h	/^inline void SetVerbosity(int verbosity) {$/;"	f	namespace:__sanitizer
SetWrite	tsan/tsan_rtl.h	/^  void SetWrite(unsigned kAccessIsWrite) {$/;"	f	class:__tsan::Shadow
Setup	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  u32 Setup(u32 num_guards) {$/;"	f	class:__sancov::__anon45::final
Shadow	tsan/tsan_rtl.h	/^  explicit Shadow(const FastState &s)$/;"	f	class:__tsan::Shadow
Shadow	tsan/tsan_rtl.h	/^  explicit Shadow(u64 x)$/;"	f	class:__tsan::Shadow
Shadow	tsan/tsan_rtl.h	/^class Shadow : public FastState {$/;"	c	namespace:__tsan
ShadowAddressDescription	asan/asan_descriptions.h	/^struct ShadowAddressDescription {$/;"	s	namespace:__asan
ShadowBeg	tsan/tsan_platform.h	/^uptr ShadowBeg(void) {$/;"	f	namespace:__tsan
ShadowBounds	sanitizer_common/sanitizer_fuchsia.cpp	/^sanitizer_shadow_bounds_t ShadowBounds;$/;"	m	namespace:__sanitizer
ShadowByte	asan/asan_descriptions.h	/^  const char *ShadowByte(u8 byte) {$/;"	f	class:__asan::Decorator
ShadowEnd	tsan/tsan_platform.h	/^uptr ShadowEnd(void) {$/;"	f	namespace:__tsan
ShadowExceptionHandler	asan/asan_win.cpp	/^ShadowExceptionHandler(PEXCEPTION_POINTERS exception_pointers) {$/;"	f	namespace:__asan
ShadowNames	asan/asan_descriptions.h	/^static const char *const ShadowNames[] = {"low shadow", "shadow gap",$/;"	m	namespace:__asan
ShadowSegmentEndpoint	asan/asan_poisoning.cpp	/^  explicit ShadowSegmentEndpoint(uptr address) {$/;"	f	struct:__asan::ShadowSegmentEndpoint
ShadowSegmentEndpoint	asan/asan_poisoning.cpp	/^struct ShadowSegmentEndpoint {$/;"	s	namespace:__asan
ShadowToMem	hwasan/hwasan_mapping.h	/^inline uptr ShadowToMem(uptr shadow_addr) {$/;"	f	namespace:__hwasan
ShadowToMem	tsan/tsan_platform.h	/^uptr ShadowToMem(uptr s) {$/;"	f	namespace:__tsan
ShadowToMemImpl	tsan/tsan_platform.h	/^uptr ShadowToMemImpl(uptr s) {$/;"	f	namespace:__tsan
SharedInitCode	asan/asan_allocator.cpp	/^  void SharedInitCode(const AllocatorOptions &options) {$/;"	f	struct:__asan::Allocator
SharedPrintfCode	sanitizer_common/sanitizer_printf.cpp	/^static void NOINLINE SharedPrintfCode(bool append_pid, const char *format,$/;"	f	namespace:__sanitizer
SharedPrintfCodeNoBuffer	sanitizer_common/sanitizer_printf.cpp	/^static void NOINLINE SharedPrintfCodeNoBuffer(bool append_pid,$/;"	f	namespace:__sanitizer
SharedReAlloc	asan/asan_malloc_win.cpp	/^void *SharedReAlloc(ReAllocFunction reallocFunc, SizeFunction heapSizeFunc,$/;"	f	namespace:__asan
ShiftOutOfBoundsData	ubsan/ubsan_handlers.h	/^struct ShiftOutOfBoundsData {$/;"	s	namespace:__ubsan
ShouldLogAfterPrintf	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static bool ShouldLogAfterPrintf() { return true; }$/;"	f	namespace:__sanitizer
ShouldLogAfterPrintf	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static bool ShouldLogAfterPrintf() {$/;"	f	namespace:__sanitizer
ShouldMockFailureToOpen	sanitizer_common/sanitizer_posix.cpp	/^bool ShouldMockFailureToOpen(const char *path) {$/;"	f	namespace:__sanitizer
ShowStatsAndAbort	asan/asan_rtl.cpp	/^void ShowStatsAndAbort() {$/;"	f	namespace:__asan
SigCtx	tsan/tsan_interceptors_posix.cpp	/^static ThreadSignalContext *SigCtx(ThreadState *thr) {$/;"	f
SigTrap	hwasan/hwasan_checks.h	/^__attribute__((always_inline)) static void SigTrap(uptr p) {$/;"	f	namespace:__hwasan
SigTrap	hwasan/hwasan_checks.h	/^__attribute__((always_inline)) static void SigTrap(uptr p, uptr size) {$/;"	f	namespace:__hwasan
SignalContext	sanitizer_common/sanitizer_common.h	/^  SignalContext(void *siginfo, void *context)$/;"	f	struct:__sanitizer::SignalContext
SignalContext	sanitizer_common/sanitizer_common.h	/^struct SignalContext {$/;"	s	namespace:__sanitizer
SignalDesc	tsan/tsan_interceptors_posix.cpp	/^struct SignalDesc {$/;"	s	namespace:__tsan
SignalHandlerType	sanitizer_common/sanitizer_common.h	/^typedef void (*SignalHandlerType)(int, void *, void *);$/;"	t	namespace:__sanitizer
SignalSafeGetOrAllocate	tsan/tsan_platform_mac.cpp	/^static void *SignalSafeGetOrAllocate(uptr *dst, uptr size) {$/;"	f	namespace:__tsan
SignalUnsafeCall	tsan/tsan_mman.cpp	/^static void SignalUnsafeCall(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
Size	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static uptr Size(uptr class_id) {$/;"	f	class:SizeClassMap
Size	sanitizer_common/sanitizer_quarantine.h	/^  uptr Size() const {$/;"	f	class:__sanitizer::QuarantineCache
Size	sanitizer_common/sanitizer_vector.h	/^  uptr Size() const {$/;"	f	class:__sanitizer::Vector
Size	tsan/tsan_ignoreset.cpp	/^uptr IgnoreSet::Size() const {$/;"	f	class:__tsan::IgnoreSet
Size	tsan/tsan_mutexset.cpp	/^uptr MutexSet::Size() const {$/;"	f	class:__tsan::MutexSet
Size	tsan/tsan_mutexset.h	/^uptr MutexSet::Size() const { return 0; }$/;"	f	class:__tsan::MutexSet
SizeAdd	sanitizer_common/sanitizer_quarantine.h	/^  void SizeAdd(uptr add) {$/;"	f	class:__sanitizer::QuarantineCache
SizeClassAllocator32	sanitizer_common/sanitizer_allocator_primary32.h	/^class SizeClassAllocator32 {$/;"	c
SizeClassAllocator32FlagMasks	sanitizer_common/sanitizer_allocator_primary32.h	/^struct SizeClassAllocator32FlagMasks {  \/\/  Bit masks.$/;"	s
SizeClassAllocator32LocalCache	sanitizer_common/sanitizer_allocator_local_cache.h	/^struct SizeClassAllocator32LocalCache {$/;"	s
SizeClassAllocator64	sanitizer_common/sanitizer_allocator_primary64.h	/^class SizeClassAllocator64 {$/;"	c
SizeClassAllocator64FlagMasks	sanitizer_common/sanitizer_allocator_primary64.h	/^struct SizeClassAllocator64FlagMasks {  \/\/  Bit masks.$/;"	s
SizeClassAllocator64LocalCache	sanitizer_common/sanitizer_allocator_local_cache.h	/^struct SizeClassAllocator64LocalCache {$/;"	s
SizeClassMap	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  typedef __asan::SizeClassMap SizeClassMap;$/;"	t	struct:__asan::AP64
SizeClassMap	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^typedef DefaultSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^typedef VeryCompactSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^typedef VeryDenseSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	asan/asan_allocator.h	/^  typedef __asan::SizeClassMap SizeClassMap;$/;"	t	struct:__asan::AP64
SizeClassMap	asan/asan_allocator.h	/^typedef DefaultSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	asan/asan_allocator.h	/^typedef VeryCompactSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	asan/asan_allocator.h	/^typedef VeryDenseSizeClassMap SizeClassMap;$/;"	t	namespace:__asan
SizeClassMap	hwasan/hwasan_allocator.h	/^  typedef __sanitizer::VeryDenseSizeClassMap SizeClassMap;$/;"	t	struct:__hwasan::AP64
SizeClassMap	lsan/lsan_allocator.h	/^  typedef __sanitizer::CompactSizeClassMap SizeClassMap;$/;"	t	struct:__lsan::AP32
SizeClassMap	sanitizer_common/sanitizer_allocator_internal.h	/^  typedef InternalSizeClassMap SizeClassMap;$/;"	t	struct:__sanitizer::AP32
SizeClassMap	sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::SizeClassMapT SizeClassMap;$/;"	t	struct:SizeClassAllocator32LocalCache
SizeClassMap	sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::SizeClassMapT SizeClassMap;$/;"	t	struct:SizeClassAllocator64LocalCache
SizeClassMap	sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef typename Params::SizeClassMap SizeClassMap;$/;"	t	class:SizeClassAllocator32
SizeClassMap	sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef typename Params::SizeClassMap SizeClassMap;$/;"	t	class:SizeClassAllocator64
SizeClassMap	sanitizer_common/sanitizer_allocator_size_class_map.h	/^class SizeClassMap {$/;"	c
SizeClassMap	tsan/tsan_rtl.h	/^  typedef DefaultSizeClassMap SizeClassMap;$/;"	t	struct:__tsan::AP64
SizeClassMap	tsan/tsan_rtl.h	/^  typedef __sanitizer::CompactSizeClassMap SizeClassMap;$/;"	t	struct:__tsan::AP32
SizeClassMapT	sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef SizeClassMap SizeClassMapT;$/;"	t	class:SizeClassAllocator32
SizeClassMapT	sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef SizeClassMap SizeClassMapT;$/;"	t	class:SizeClassAllocator64
SizeInBytes	sanitizer_common/sanitizer_ring_buffer.h	/^  static uptr SizeInBytes(uptr Size) {$/;"	f	class:__sanitizer::RingBuffer
SizeInBytes	sanitizer_common/sanitizer_ring_buffer.h	/^  uptr SizeInBytes() { return SizeInBytes(size()); }$/;"	f	class:__sanitizer::RingBuffer
SizeLog	tsan/tsan_interface_atomic.cpp	/^static int SizeLog() {$/;"	f
SizeRequiredForFlags	asan/asan_fake_stack.h	/^  static uptr SizeRequiredForFlags(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
SizeRequiredForFrames	asan/asan_fake_stack.h	/^  static uptr SizeRequiredForFrames(uptr stack_size_log) {$/;"	f	class:__asan::FakeStack
SizeSub	sanitizer_common/sanitizer_quarantine.h	/^  void SizeSub(uptr sub) {$/;"	f	class:__sanitizer::QuarantineCache
SkipTsanInternalFrames	tsan/tsan_report.cpp	/^static SymbolizedStack *SkipTsanInternalFrames(SymbolizedStack *frames) {$/;"	f	namespace:__tsan
Sleep	tsan/tsan_report.cpp	/^  const char *Sleep()   { return Yellow(); }$/;"	f	class:__tsan::Decorator
SleepForMillis	sanitizer_common/sanitizer_fuchsia.cpp	/^void SleepForMillis(int millis) { internal_nanosleep(ZX_MSEC(millis)); }$/;"	f	namespace:__sanitizer
SleepForMillis	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void SleepForMillis(int millis) {$/;"	f	namespace:__sanitizer
SleepForMillis	sanitizer_common/sanitizer_rtems.cpp	/^void SleepForMillis(int millis) { usleep(millis * 1000); }$/;"	f	namespace:__sanitizer
SleepForMillis	sanitizer_common/sanitizer_win.cpp	/^void SleepForMillis(int millis) {$/;"	f	namespace:__sanitizer
SleepForSeconds	sanitizer_common/sanitizer_common_nolibc.cpp	/^void SleepForSeconds(int seconds) { internal_sleep(seconds); }$/;"	f	namespace:__sanitizer
SleepForSeconds	sanitizer_common/sanitizer_fuchsia.cpp	/^void SleepForSeconds(int seconds) { internal_sleep(seconds); }$/;"	f	namespace:__sanitizer
SleepForSeconds	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void SleepForSeconds(int seconds) {$/;"	f	namespace:__sanitizer
SleepForSeconds	sanitizer_common/sanitizer_rtems.cpp	/^void SleepForSeconds(int seconds) { sleep(seconds); }$/;"	f	namespace:__sanitizer
SleepForSeconds	sanitizer_common/sanitizer_win.cpp	/^void SleepForSeconds(int seconds) {$/;"	f	namespace:__sanitizer
SoftRssLimitExceededCallback	sanitizer_common/sanitizer_common_libcdep.cpp	/^static void (*SoftRssLimitExceededCallback)(bool exceeded);$/;"	m	namespace:__sanitizer
Sort	sanitizer_common/sanitizer_common.h	/^void Sort(T *v, uptr size, Compare comp = {}) {$/;"	f	namespace:__sanitizer
SourceLoc	ubsan/ubsan_diag.h	/^  SourceLocation SourceLoc;$/;"	m	class:__ubsan::Location
SourceLocation	ubsan/ubsan_value.h	/^  SourceLocation() : Filename(), Line(), Column() {}$/;"	f	class:__ubsan::SourceLocation
SourceLocation	ubsan/ubsan_value.h	/^  SourceLocation(const char *Filename, unsigned Line, unsigned Column)$/;"	f	class:__ubsan::SourceLocation
SourceLocation	ubsan/ubsan_value.h	/^class SourceLocation {$/;"	c	namespace:__ubsan
SpaceBeg	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr SpaceBeg() const {$/;"	f	class:SizeClassAllocator64
SpaceEnd	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr SpaceEnd() const { return  SpaceBeg() + kSpaceSize; }$/;"	f	class:SizeClassAllocator64
SpinMutex	sanitizer_common/sanitizer_mutex.h	/^  SpinMutex() {$/;"	f	class:__sanitizer::SpinMutex
SpinMutex	sanitizer_common/sanitizer_mutex.h	/^class SpinMutex : public StaticSpinMutex {$/;"	c	namespace:__sanitizer
SpinMutexLock	sanitizer_common/sanitizer_mutex.h	/^typedef GenericScopedLock<StaticSpinMutex> SpinMutexLock;$/;"	t	namespace:__sanitizer
SplitId	tsan/tsan_sync.h	/^  static uptr SplitId(u64 id, u64 *uid) {$/;"	f	struct:__tsan::SyncVar
Stack	ubsan/ubsan_diag.h	/^  SymbolizedStack *Stack;$/;"	m	class:__ubsan::SymbolizedStackHolder
StackAddressDescription	asan/asan_descriptions.h	/^struct StackAddressDescription {$/;"	s	namespace:__asan
StackAllocationsRingBuffer	hwasan/hwasan_thread.h	/^typedef __sanitizer::CompactRingBuffer<uptr> StackAllocationsRingBuffer;$/;"	t	namespace:__hwasan
StackBounds	asan/asan_thread.h	/^  struct StackBounds {$/;"	s	class:__asan::AsanThread
StackDepot	sanitizer_common/sanitizer_stackdepot.cpp	/^    StackDepot;$/;"	t	namespace:__sanitizer
StackDepotBase	sanitizer_common/sanitizer_stackdepotbase.h	/^class StackDepotBase {$/;"	c	namespace:__sanitizer
StackDepotGet	sanitizer_common/sanitizer_stackdepot.cpp	/^StackTrace StackDepotGet(u32 id) {$/;"	f	namespace:__sanitizer
StackDepotGetStats	sanitizer_common/sanitizer_common_libcdep.cpp	/^SANITIZER_WEAK_ATTRIBUTE StackDepotStats *StackDepotGetStats() {$/;"	f	namespace:__sanitizer
StackDepotGetStats	sanitizer_common/sanitizer_stackdepot.cpp	/^StackDepotStats *StackDepotGetStats() {$/;"	f	namespace:__sanitizer
StackDepotHandle	sanitizer_common/sanitizer_stackdepot.h	/^  StackDepotHandle() : node_(nullptr) {}$/;"	f	struct:__sanitizer::StackDepotHandle
StackDepotHandle	sanitizer_common/sanitizer_stackdepot.h	/^  explicit StackDepotHandle(StackDepotNode *node) : node_(node) {}$/;"	f	struct:__sanitizer::StackDepotHandle
StackDepotHandle	sanitizer_common/sanitizer_stackdepot.h	/^struct StackDepotHandle {$/;"	s	namespace:__sanitizer
StackDepotLockAll	sanitizer_common/sanitizer_stackdepot.cpp	/^void StackDepotLockAll() {$/;"	f	namespace:__sanitizer
StackDepotNode	sanitizer_common/sanitizer_stackdepot.cpp	/^struct StackDepotNode {$/;"	s	namespace:__sanitizer
StackDepotPrintAll	sanitizer_common/sanitizer_stackdepot.cpp	/^void StackDepotPrintAll() {$/;"	f	namespace:__sanitizer
StackDepotPut	sanitizer_common/sanitizer_stackdepot.cpp	/^u32 StackDepotPut(StackTrace stack) {$/;"	f	namespace:__sanitizer
StackDepotPut_WithHandle	sanitizer_common/sanitizer_stackdepot.cpp	/^StackDepotHandle StackDepotPut_WithHandle(StackTrace stack) {$/;"	f	namespace:__sanitizer
StackDepotReverseMap	sanitizer_common/sanitizer_stackdepot.cpp	/^StackDepotReverseMap::StackDepotReverseMap() {$/;"	f	class:__sanitizer::StackDepotReverseMap
StackDepotReverseMap	sanitizer_common/sanitizer_stackdepot.h	/^class StackDepotReverseMap {$/;"	c	namespace:__sanitizer
StackDepotStats	sanitizer_common/sanitizer_common.h	/^struct StackDepotStats {$/;"	s	namespace:__sanitizer
StackDepotUnlockAll	sanitizer_common/sanitizer_stackdepot.cpp	/^void StackDepotUnlockAll() {$/;"	f	namespace:__sanitizer
StackFrameAccess	asan/asan_thread.h	/^  struct StackFrameAccess {$/;"	s	class:__asan::AsanThread
StackSizeIsUnlimited	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool StackSizeIsUnlimited() {$/;"	f	namespace:__sanitizer
StackSizeIsUnlimited	sanitizer_common/sanitizer_win.cpp	/^bool StackSizeIsUnlimited() {$/;"	f	namespace:__sanitizer
StackStripMain	tsan/tsan_rtl_report.cpp	/^static void StackStripMain(SymbolizedStack *frames) {$/;"	f	namespace:__tsan
StackTrace	sanitizer_common/sanitizer_stacktrace.h	/^  StackTrace() : trace(nullptr), size(0), tag(0) {}$/;"	f	struct:__sanitizer::StackTrace
StackTrace	sanitizer_common/sanitizer_stacktrace.h	/^  StackTrace(const uptr *trace, u32 size) : trace(trace), size(size), tag(0) {}$/;"	f	struct:__sanitizer::StackTrace
StackTrace	sanitizer_common/sanitizer_stacktrace.h	/^  StackTrace(const uptr *trace, u32 size, u32 tag)$/;"	f	struct:__sanitizer::StackTrace
StackTrace	sanitizer_common/sanitizer_stacktrace.h	/^struct StackTrace {$/;"	s	namespace:__sanitizer
StackVarDescr	asan/asan_report.h	/^struct StackVarDescr {$/;"	s	namespace:__asan
StackWalk64	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::StackWalk64) *StackWalk64;$/;"	m	namespace:__sanitizer
StackWalk64	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::StackWalk64) *StackWalk64;$/;"	m	namespace:__sanitizer
Start	ubsan/ubsan_diag.h	/^  Location Start, End;$/;"	m	class:__ubsan::Range
StartBackgroundThread	tsan/tsan_rtl.cpp	/^static void StartBackgroundThread() {$/;"	f	namespace:__tsan
StartOfStorage	sanitizer_common/sanitizer_ring_buffer.h	/^  void *StartOfStorage() const {$/;"	f	class:__sanitizer::CompactRingBuffer
StartReportDeadlySignal	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^void StartReportDeadlySignal() {}$/;"	f	namespace:__sanitizer
StartReportDeadlySignal	sanitizer_common/sanitizer_symbolizer_report.cpp	/^void StartReportDeadlySignal() {$/;"	f	namespace:__sanitizer
StartSubprocess	sanitizer_common/sanitizer_posix_libcdep.cpp	/^pid_t StartSubprocess(const char *program, const char *const argv[],$/;"	f	namespace:__sanitizer
StartSubprocess	sanitizer_common/sanitizer_win.cpp	/^pid_t StartSubprocess(const char *program, const char *const argv[],$/;"	f	namespace:__sanitizer
StartSwitchFiber	asan/asan_thread.cpp	/^void AsanThread::StartSwitchFiber(FakeStack **fake_stack_save, uptr bottom,$/;"	f	class:__asan::AsanThread
StartSymbolizationHook	sanitizer_common/sanitizer_symbolizer.h	/^  typedef void (*StartSymbolizationHook)();$/;"	t	class:__sanitizer::final
StartSymbolizerSubprocess	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^bool SymbolizerProcess::StartSymbolizerSubprocess() {$/;"	f	class:__sanitizer::SymbolizerProcess
StartSymbolizerSubprocess	sanitizer_common/sanitizer_symbolizer_win.cpp	/^bool SymbolizerProcess::StartSymbolizerSubprocess() {$/;"	f	class:__sanitizer::SymbolizerProcess
StartThread	sanitizer_common/sanitizer_thread_registry.cpp	/^void ThreadRegistry::StartThread(u32 tid, tid_t os_id, ThreadType thread_type,$/;"	f	class:__sanitizer::ThreadRegistry
StatAggregate	tsan/tsan_stat.cpp	/^void StatAggregate(u64 *dst, u64 *src) {$/;"	f	namespace:__tsan
StatAnnotateBenignRace	tsan/tsan_stat.h	/^  StatAnnotateBenignRace,$/;"	e	enum:__tsan::StatType
StatAnnotateBenignRaceSized	tsan/tsan_stat.h	/^  StatAnnotateBenignRaceSized,$/;"	e	enum:__tsan::StatType
StatAnnotateCondVarSignal	tsan/tsan_stat.h	/^  StatAnnotateCondVarSignal,$/;"	e	enum:__tsan::StatType
StatAnnotateCondVarSignalAll	tsan/tsan_stat.h	/^  StatAnnotateCondVarSignalAll,$/;"	e	enum:__tsan::StatType
StatAnnotateCondVarWait	tsan/tsan_stat.h	/^  StatAnnotateCondVarWait,$/;"	e	enum:__tsan::StatType
StatAnnotateEnableRaceDetection	tsan/tsan_stat.h	/^  StatAnnotateEnableRaceDetection,$/;"	e	enum:__tsan::StatType
StatAnnotateExpectRace	tsan/tsan_stat.h	/^  StatAnnotateExpectRace,$/;"	e	enum:__tsan::StatType
StatAnnotateFlushExpectedRaces	tsan/tsan_stat.h	/^  StatAnnotateFlushExpectedRaces,$/;"	e	enum:__tsan::StatType
StatAnnotateFlushState	tsan/tsan_stat.h	/^  StatAnnotateFlushState,$/;"	e	enum:__tsan::StatType
StatAnnotateHappensAfter	tsan/tsan_stat.h	/^  StatAnnotateHappensAfter,$/;"	e	enum:__tsan::StatType
StatAnnotateHappensBefore	tsan/tsan_stat.h	/^  StatAnnotateHappensBefore,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreReadsBegin	tsan/tsan_stat.h	/^  StatAnnotateIgnoreReadsBegin,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreReadsEnd	tsan/tsan_stat.h	/^  StatAnnotateIgnoreReadsEnd,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreSyncBegin	tsan/tsan_stat.h	/^  StatAnnotateIgnoreSyncBegin,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreSyncEnd	tsan/tsan_stat.h	/^  StatAnnotateIgnoreSyncEnd,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreWritesBegin	tsan/tsan_stat.h	/^  StatAnnotateIgnoreWritesBegin,$/;"	e	enum:__tsan::StatType
StatAnnotateIgnoreWritesEnd	tsan/tsan_stat.h	/^  StatAnnotateIgnoreWritesEnd,$/;"	e	enum:__tsan::StatType
StatAnnotateMutexIsNotPHB	tsan/tsan_stat.h	/^  StatAnnotateMutexIsNotPHB,$/;"	e	enum:__tsan::StatType
StatAnnotateMutexIsUsedAsCondVar	tsan/tsan_stat.h	/^  StatAnnotateMutexIsUsedAsCondVar,$/;"	e	enum:__tsan::StatType
StatAnnotateNewMemory	tsan/tsan_stat.h	/^  StatAnnotateNewMemory,$/;"	e	enum:__tsan::StatType
StatAnnotateNoOp	tsan/tsan_stat.h	/^  StatAnnotateNoOp,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQCreate	tsan/tsan_stat.h	/^  StatAnnotatePCQCreate,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQDestroy	tsan/tsan_stat.h	/^  StatAnnotatePCQDestroy,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQGet	tsan/tsan_stat.h	/^  StatAnnotatePCQGet,$/;"	e	enum:__tsan::StatType
StatAnnotatePCQPut	tsan/tsan_stat.h	/^  StatAnnotatePCQPut,$/;"	e	enum:__tsan::StatType
StatAnnotatePublishMemoryRange	tsan/tsan_stat.h	/^  StatAnnotatePublishMemoryRange,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockAcquired	tsan/tsan_stat.h	/^  StatAnnotateRWLockAcquired,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockCreate	tsan/tsan_stat.h	/^  StatAnnotateRWLockCreate,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockCreateStatic	tsan/tsan_stat.h	/^  StatAnnotateRWLockCreateStatic,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockDestroy	tsan/tsan_stat.h	/^  StatAnnotateRWLockDestroy,$/;"	e	enum:__tsan::StatType
StatAnnotateRWLockReleased	tsan/tsan_stat.h	/^  StatAnnotateRWLockReleased,$/;"	e	enum:__tsan::StatType
StatAnnotateThreadName	tsan/tsan_stat.h	/^  StatAnnotateThreadName,$/;"	e	enum:__tsan::StatType
StatAnnotateTraceMemory	tsan/tsan_stat.h	/^  StatAnnotateTraceMemory,$/;"	e	enum:__tsan::StatType
StatAnnotateUnpublishMemoryRange	tsan/tsan_stat.h	/^  StatAnnotateUnpublishMemoryRange,$/;"	e	enum:__tsan::StatType
StatAnnotation	tsan/tsan_stat.h	/^  StatAnnotation,$/;"	e	enum:__tsan::StatType
StatAtomic	tsan/tsan_stat.h	/^  StatAtomic,$/;"	e	enum:__tsan::StatType
StatAtomic1	tsan/tsan_stat.h	/^  StatAtomic1,$/;"	e	enum:__tsan::StatType
StatAtomic16	tsan/tsan_stat.h	/^  StatAtomic16,$/;"	e	enum:__tsan::StatType
StatAtomic2	tsan/tsan_stat.h	/^  StatAtomic2,$/;"	e	enum:__tsan::StatType
StatAtomic4	tsan/tsan_stat.h	/^  StatAtomic4,$/;"	e	enum:__tsan::StatType
StatAtomic8	tsan/tsan_stat.h	/^  StatAtomic8,$/;"	e	enum:__tsan::StatType
StatAtomicAcq_Rel	tsan/tsan_stat.h	/^  StatAtomicAcq_Rel,$/;"	e	enum:__tsan::StatType
StatAtomicAcquire	tsan/tsan_stat.h	/^  StatAtomicAcquire,$/;"	e	enum:__tsan::StatType
StatAtomicCAS	tsan/tsan_stat.h	/^  StatAtomicCAS,$/;"	e	enum:__tsan::StatType
StatAtomicConsume	tsan/tsan_stat.h	/^  StatAtomicConsume,$/;"	e	enum:__tsan::StatType
StatAtomicExchange	tsan/tsan_stat.h	/^  StatAtomicExchange,$/;"	e	enum:__tsan::StatType
StatAtomicFence	tsan/tsan_stat.h	/^  StatAtomicFence,$/;"	e	enum:__tsan::StatType
StatAtomicFetchAdd	tsan/tsan_stat.h	/^  StatAtomicFetchAdd,$/;"	e	enum:__tsan::StatType
StatAtomicFetchAnd	tsan/tsan_stat.h	/^  StatAtomicFetchAnd,$/;"	e	enum:__tsan::StatType
StatAtomicFetchNand	tsan/tsan_stat.h	/^  StatAtomicFetchNand,$/;"	e	enum:__tsan::StatType
StatAtomicFetchOr	tsan/tsan_stat.h	/^  StatAtomicFetchOr,$/;"	e	enum:__tsan::StatType
StatAtomicFetchSub	tsan/tsan_stat.h	/^  StatAtomicFetchSub,$/;"	e	enum:__tsan::StatType
StatAtomicFetchXor	tsan/tsan_stat.h	/^  StatAtomicFetchXor,$/;"	e	enum:__tsan::StatType
StatAtomicLoad	tsan/tsan_stat.h	/^  StatAtomicLoad,$/;"	e	enum:__tsan::StatType
StatAtomicRelaxed	tsan/tsan_stat.h	/^  StatAtomicRelaxed,$/;"	e	enum:__tsan::StatType
StatAtomicRelease	tsan/tsan_stat.h	/^  StatAtomicRelease,$/;"	e	enum:__tsan::StatType
StatAtomicSeq_Cst	tsan/tsan_stat.h	/^  StatAtomicSeq_Cst,$/;"	e	enum:__tsan::StatType
StatAtomicStore	tsan/tsan_stat.h	/^  StatAtomicStore,$/;"	e	enum:__tsan::StatType
StatClockAcquire	tsan/tsan_stat.h	/^  StatClockAcquire,$/;"	e	enum:__tsan::StatType
StatClockAcquireEmpty	tsan/tsan_stat.h	/^  StatClockAcquireEmpty,$/;"	e	enum:__tsan::StatType
StatClockAcquireFastRelease	tsan/tsan_stat.h	/^  StatClockAcquireFastRelease,$/;"	e	enum:__tsan::StatType
StatClockAcquireFull	tsan/tsan_stat.h	/^  StatClockAcquireFull,$/;"	e	enum:__tsan::StatType
StatClockAcquireRelease	tsan/tsan_stat.h	/^  StatClockAcquireRelease,$/;"	e	enum:__tsan::StatType
StatClockAcquiredSomething	tsan/tsan_stat.h	/^  StatClockAcquiredSomething,$/;"	e	enum:__tsan::StatType
StatClockRelease	tsan/tsan_stat.h	/^  StatClockRelease,$/;"	e	enum:__tsan::StatType
StatClockReleaseAcquired	tsan/tsan_stat.h	/^  StatClockReleaseAcquired,$/;"	e	enum:__tsan::StatType
StatClockReleaseClearTail	tsan/tsan_stat.h	/^  StatClockReleaseClearTail,$/;"	e	enum:__tsan::StatType
StatClockReleaseFast	tsan/tsan_stat.h	/^  StatClockReleaseFast,$/;"	e	enum:__tsan::StatType
StatClockReleaseFull	tsan/tsan_stat.h	/^  StatClockReleaseFull,$/;"	e	enum:__tsan::StatType
StatClockReleaseResize	tsan/tsan_stat.h	/^  StatClockReleaseResize,$/;"	e	enum:__tsan::StatType
StatClockReleaseSlow	tsan/tsan_stat.h	/^  StatClockReleaseSlow,$/;"	e	enum:__tsan::StatType
StatClockStore	tsan/tsan_stat.h	/^  StatClockStore,$/;"	e	enum:__tsan::StatType
StatClockStoreFast	tsan/tsan_stat.h	/^  StatClockStoreFast,$/;"	e	enum:__tsan::StatType
StatClockStoreFull	tsan/tsan_stat.h	/^  StatClockStoreFull,$/;"	e	enum:__tsan::StatType
StatClockStoreResize	tsan/tsan_stat.h	/^  StatClockStoreResize,$/;"	e	enum:__tsan::StatType
StatClockStoreTail	tsan/tsan_stat.h	/^  StatClockStoreTail,$/;"	e	enum:__tsan::StatType
StatCnt	tsan/tsan_stat.h	/^  StatCnt$/;"	e	enum:__tsan::StatType
StatEvents	tsan/tsan_stat.h	/^  StatEvents,$/;"	e	enum:__tsan::StatType
StatFuncEnter	tsan/tsan_stat.h	/^  StatFuncEnter,$/;"	e	enum:__tsan::StatType
StatFuncExit	tsan/tsan_stat.h	/^  StatFuncExit,$/;"	e	enum:__tsan::StatType
StatInc	tsan/tsan_rtl.h	/^void ALWAYS_INLINE StatInc(ThreadState *thr, StatType typ, u64 n = 1) {$/;"	f	namespace:__tsan
StatMop	tsan/tsan_stat.h	/^  StatMop,$/;"	e	enum:__tsan::StatType
StatMop1	tsan/tsan_stat.h	/^  StatMop1,  \/\/ These must be consequtive.$/;"	e	enum:__tsan::StatType
StatMop2	tsan/tsan_stat.h	/^  StatMop2,$/;"	e	enum:__tsan::StatType
StatMop4	tsan/tsan_stat.h	/^  StatMop4,$/;"	e	enum:__tsan::StatType
StatMop8	tsan/tsan_stat.h	/^  StatMop8,$/;"	e	enum:__tsan::StatType
StatMopIgnored	tsan/tsan_stat.h	/^  StatMopIgnored,$/;"	e	enum:__tsan::StatType
StatMopRange	tsan/tsan_stat.h	/^  StatMopRange,$/;"	e	enum:__tsan::StatType
StatMopRangeRodata	tsan/tsan_stat.h	/^  StatMopRangeRodata,$/;"	e	enum:__tsan::StatType
StatMopRead	tsan/tsan_stat.h	/^  StatMopRead,$/;"	e	enum:__tsan::StatType
StatMopRodata	tsan/tsan_stat.h	/^  StatMopRodata,$/;"	e	enum:__tsan::StatType
StatMopSame	tsan/tsan_stat.h	/^  StatMopSame,$/;"	e	enum:__tsan::StatType
StatMopWrite	tsan/tsan_stat.h	/^  StatMopWrite,$/;"	e	enum:__tsan::StatType
StatMtxAnnotations	tsan/tsan_stat.h	/^  StatMtxAnnotations,$/;"	e	enum:__tsan::StatType
StatMtxAtExit	tsan/tsan_stat.h	/^  StatMtxAtExit,$/;"	e	enum:__tsan::StatType
StatMtxDeadlockDetector	tsan/tsan_stat.h	/^  StatMtxDeadlockDetector,$/;"	e	enum:__tsan::StatType
StatMtxFD	tsan/tsan_stat.h	/^  StatMtxFD,$/;"	e	enum:__tsan::StatType
StatMtxFired	tsan/tsan_stat.h	/^  StatMtxFired,$/;"	e	enum:__tsan::StatType
StatMtxGlobalProc	tsan/tsan_stat.h	/^  StatMtxGlobalProc,$/;"	e	enum:__tsan::StatType
StatMtxMBlock	tsan/tsan_stat.h	/^  StatMtxMBlock,$/;"	e	enum:__tsan::StatType
StatMtxRacy	tsan/tsan_stat.h	/^  StatMtxRacy,$/;"	e	enum:__tsan::StatType
StatMtxReport	tsan/tsan_stat.h	/^  StatMtxReport,$/;"	e	enum:__tsan::StatType
StatMtxSlab	tsan/tsan_stat.h	/^  StatMtxSlab,$/;"	e	enum:__tsan::StatType
StatMtxSyncTab	tsan/tsan_stat.h	/^  StatMtxSyncTab,$/;"	e	enum:__tsan::StatType
StatMtxSyncVar	tsan/tsan_stat.h	/^  StatMtxSyncVar,$/;"	e	enum:__tsan::StatType
StatMtxThreads	tsan/tsan_stat.h	/^  StatMtxThreads,$/;"	e	enum:__tsan::StatType
StatMtxTotal	tsan/tsan_stat.h	/^  StatMtxTotal,$/;"	e	enum:__tsan::StatType
StatMtxTrace	tsan/tsan_stat.h	/^  StatMtxTrace,$/;"	e	enum:__tsan::StatType
StatMutexCreate	tsan/tsan_stat.h	/^  StatMutexCreate,$/;"	e	enum:__tsan::StatType
StatMutexDestroy	tsan/tsan_stat.h	/^  StatMutexDestroy,$/;"	e	enum:__tsan::StatType
StatMutexLock	tsan/tsan_stat.h	/^  StatMutexLock,$/;"	e	enum:__tsan::StatType
StatMutexReadLock	tsan/tsan_stat.h	/^  StatMutexReadLock,$/;"	e	enum:__tsan::StatType
StatMutexReadUnlock	tsan/tsan_stat.h	/^  StatMutexReadUnlock,$/;"	e	enum:__tsan::StatType
StatMutexRecLock	tsan/tsan_stat.h	/^  StatMutexRecLock,$/;"	e	enum:__tsan::StatType
StatMutexRecUnlock	tsan/tsan_stat.h	/^  StatMutexRecUnlock,$/;"	e	enum:__tsan::StatType
StatMutexUnlock	tsan/tsan_stat.h	/^  StatMutexUnlock,$/;"	e	enum:__tsan::StatType
StatOutput	tsan/tsan_stat.cpp	/^void StatOutput(u64 *stat) {$/;"	f	namespace:__tsan
StatSet	tsan/tsan_rtl.h	/^void ALWAYS_INLINE StatSet(ThreadState *thr, StatType typ, u64 n) {$/;"	f	namespace:__tsan
StatShadowAnotherThread	tsan/tsan_stat.h	/^  StatShadowAnotherThread,$/;"	e	enum:__tsan::StatType
StatShadowIntersect	tsan/tsan_stat.h	/^  StatShadowIntersect,$/;"	e	enum:__tsan::StatType
StatShadowNonZero	tsan/tsan_stat.h	/^  StatShadowNonZero,  \/\/ Derived.$/;"	e	enum:__tsan::StatType
StatShadowNotIntersect	tsan/tsan_stat.h	/^  StatShadowNotIntersect,$/;"	e	enum:__tsan::StatType
StatShadowProcessed	tsan/tsan_stat.h	/^  StatShadowProcessed,$/;"	e	enum:__tsan::StatType
StatShadowReplace	tsan/tsan_stat.h	/^  StatShadowReplace,$/;"	e	enum:__tsan::StatType
StatShadowSameSize	tsan/tsan_stat.h	/^  StatShadowSameSize,$/;"	e	enum:__tsan::StatType
StatShadowSameThread	tsan/tsan_stat.h	/^  StatShadowSameThread,$/;"	e	enum:__tsan::StatType
StatShadowZero	tsan/tsan_stat.h	/^  StatShadowZero,$/;"	e	enum:__tsan::StatType
StatSyncAcquire	tsan/tsan_stat.h	/^  StatSyncAcquire,$/;"	e	enum:__tsan::StatType
StatSyncCreated	tsan/tsan_stat.h	/^  StatSyncCreated,$/;"	e	enum:__tsan::StatType
StatSyncDestroyed	tsan/tsan_stat.h	/^  StatSyncDestroyed,$/;"	e	enum:__tsan::StatType
StatSyncRelease	tsan/tsan_stat.h	/^  StatSyncRelease,$/;"	e	enum:__tsan::StatType
StatSyncReleaseStoreAcquire	tsan/tsan_stat.h	/^  StatSyncReleaseStoreAcquire,$/;"	e	enum:__tsan::StatType
StatThreadCreate	tsan/tsan_stat.h	/^  StatThreadCreate,$/;"	e	enum:__tsan::StatType
StatThreadFinish	tsan/tsan_stat.h	/^  StatThreadFinish,$/;"	e	enum:__tsan::StatType
StatThreadMaxAlive	tsan/tsan_stat.h	/^  StatThreadMaxAlive,$/;"	e	enum:__tsan::StatType
StatThreadMaxTid	tsan/tsan_stat.h	/^  StatThreadMaxTid,$/;"	e	enum:__tsan::StatType
StatThreadReuse	tsan/tsan_stat.h	/^  StatThreadReuse,$/;"	e	enum:__tsan::StatType
StatType	tsan/tsan_stat.h	/^enum StatType {$/;"	g	namespace:__tsan
Stat__tsan_mutex_create	tsan/tsan_stat.h	/^  Stat__tsan_mutex_create,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_destroy	tsan/tsan_stat.h	/^  Stat__tsan_mutex_destroy,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_divert	tsan/tsan_stat.h	/^  Stat__tsan_mutex_post_divert,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_lock	tsan/tsan_stat.h	/^  Stat__tsan_mutex_post_lock,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_signal	tsan/tsan_stat.h	/^  Stat__tsan_mutex_post_signal,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_post_unlock	tsan/tsan_stat.h	/^  Stat__tsan_mutex_post_unlock,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_divert	tsan/tsan_stat.h	/^  Stat__tsan_mutex_pre_divert,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_lock	tsan/tsan_stat.h	/^  Stat__tsan_mutex_pre_lock,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_signal	tsan/tsan_stat.h	/^  Stat__tsan_mutex_pre_signal,$/;"	e	enum:__tsan::StatType
Stat__tsan_mutex_pre_unlock	tsan/tsan_stat.h	/^  Stat__tsan_mutex_pre_unlock,$/;"	e	enum:__tsan::StatType
StaticSpinMutex	sanitizer_common/sanitizer_mutex.h	/^class StaticSpinMutex {$/;"	c	namespace:__sanitizer
Stats	sanitizer_common/sanitizer_allocator_primary64.h	/^  struct Stats {$/;"	s	class:SizeClassAllocator64
Stats	sanitizer_common/sanitizer_allocator_secondary.h	/^  struct Stats {$/;"	s	class:LargeMmapAllocator
StopBackgroundThread	tsan/tsan_rtl.cpp	/^static void StopBackgroundThread() {$/;"	f	namespace:__tsan
StopInitOrderChecking	asan/asan_globals.cpp	/^void StopInitOrderChecking() {$/;"	f	namespace:__asan
StopTheWorld	sanitizer_common/sanitizer_stoptheworld_fuchsia.cpp	/^void StopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__sanitizer
StopTheWorld	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^void StopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__sanitizer
StopTheWorld	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^void StopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__sanitizer
StopTheWorld	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^void StopTheWorld(StopTheWorldCallback callback, void *argument) {$/;"	f	namespace:__sanitizer
StopTheWorldCallback	sanitizer_common/sanitizer_stoptheworld.h	/^typedef void (*StopTheWorldCallback)($/;"	t	namespace:__sanitizer
StopTheWorldScope	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  StopTheWorldScope() {$/;"	f	class:__sanitizer::StopTheWorldScope
StopTheWorldScope	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^class StopTheWorldScope {$/;"	c	namespace:__sanitizer
StoreIfNotYetStored	tsan/tsan_rtl.cpp	/^void StoreIfNotYetStored(u64 *sp, u64 *s) {$/;"	f	namespace:__tsan
StoreShadow	tsan/tsan_rtl.cpp	/^void StoreShadow(u64 *sp, u64 s) {$/;"	f	namespace:__tsan
StoreTo	asan/asan_descriptions.h	/^  void StoreTo(AddressDescriptionData *dst) const { *dst = data; }$/;"	f	class:__asan::AddressDescription
StoredArgv	sanitizer_common/sanitizer_fuchsia.cpp	/^char **StoredArgv;$/;"	m	namespace:__sanitizer
StoredEnviron	sanitizer_common/sanitizer_fuchsia.cpp	/^char **StoredEnviron;$/;"	m	namespace:__sanitizer
StrCmp	interception/interception_linux.cpp	/^static int StrCmp(const char *s1, const char *s2) {$/;"	f	namespace:__interception
String	ubsan/ubsan_diag.h	/^      const char *String;$/;"	m	union:__ubsan::Diag::Arg::__anon3
StripFunctionName	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^static const char *StripFunctionName(const char *function, const char *prefix) {$/;"	f	namespace:__sanitizer
StripModuleName	sanitizer_common/sanitizer_common.cpp	/^const char *StripModuleName(const char *module) {$/;"	f	namespace:__sanitizer
StripPathPrefix	sanitizer_common/sanitizer_common.cpp	/^const char *StripPathPrefix(const char *filepath,$/;"	f	namespace:__sanitizer
StripPrefix	sanitizer_common/sanitizer_suppressions.cpp	/^static const char *StripPrefix(const char *str, const char *prefix) {$/;"	f	namespace:__sanitizer
Sub	sanitizer_common/sanitizer_allocator_stats.h	/^  void Sub(AllocatorStat i, uptr v) {$/;"	f	class:AllocatorStats
SubobjectTypeName	ubsan/ubsan_type_hash.h	/^  const char *SubobjectTypeName;$/;"	m	class:__ubsan::DynamicTypeInfo
SubstituteForFlagValue	sanitizer_common/sanitizer_flags.cpp	/^void SubstituteForFlagValue(const char *s, char *out, uptr out_size) {$/;"	f	namespace:__sanitizer
SummaryLoc	ubsan/ubsan_diag.h	/^  Location SummaryLoc;$/;"	m	class:__ubsan::ScopedReport
SupportsColoredOutput	sanitizer_common/sanitizer_posix_libcdep.cpp	/^bool SupportsColoredOutput(fd_t fd) {$/;"	f	namespace:__sanitizer
SupportsColoredOutput	sanitizer_common/sanitizer_rtems.cpp	/^bool SupportsColoredOutput(fd_t fd) { return false; }$/;"	f	namespace:__sanitizer
SupportsColoredOutput	sanitizer_common/sanitizer_win.cpp	/^bool SupportsColoredOutput(fd_t fd) {$/;"	f	namespace:__sanitizer
SupportsColors	sanitizer_common/sanitizer_symbolizer_report.cpp	/^bool ReportFile::SupportsColors() {$/;"	f	class:__sanitizer::ReportFile
SuppressErrorReport	asan/asan_report.cpp	/^static bool SuppressErrorReport(uptr pc) {$/;"	f	namespace:__asan
Suppression	sanitizer_common/sanitizer_suppressions.h	/^  Suppression() { internal_memset(this, 0, sizeof(*this)); }$/;"	f	struct:__sanitizer::Suppression
Suppression	sanitizer_common/sanitizer_suppressions.h	/^struct Suppression {$/;"	s	namespace:__sanitizer
SuppressionAt	sanitizer_common/sanitizer_suppressions.cpp	/^const Suppression *SuppressionContext::SuppressionAt(uptr i) const {$/;"	f	class:__sanitizer::SuppressionContext
SuppressionContext	sanitizer_common/sanitizer_suppressions.cpp	/^SuppressionContext::SuppressionContext(const char *suppression_types[],$/;"	f	class:__sanitizer::SuppressionContext
SuppressionContext	sanitizer_common/sanitizer_suppressions.h	/^class SuppressionContext {$/;"	c	namespace:__sanitizer
SuppressionCount	sanitizer_common/sanitizer_suppressions.cpp	/^uptr SuppressionContext::SuppressionCount() const {$/;"	f	class:__sanitizer::SuppressionContext
Suppressions	tsan/tsan_suppressions.cpp	/^SuppressionContext *Suppressions() {$/;"	f	namespace:__tsan
SuspendAllThreads	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^bool ThreadSuspender::SuspendAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
SuspendAllThreads	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^bool ThreadSuspender::SuspendAllThreads() {$/;"	f	class:__sanitizer::ThreadSuspender
SuspendThread	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^bool ThreadSuspender::SuspendThread(tid_t tid) {$/;"	f	class:__sanitizer::ThreadSuspender
SuspendedThreadInfo	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^} SuspendedThreadInfo;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon41
SuspendedThreadsList	sanitizer_common/sanitizer_stoptheworld.h	/^class SuspendedThreadsList {$/;"	c	namespace:__sanitizer
SuspendedThreadsListLinux	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  SuspendedThreadsListLinux() { thread_ids_.reserve(1024); }$/;"	f	class:__sanitizer::final
SuspendedThreadsListMac	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  SuspendedThreadsListMac() : threads_(1024) {}$/;"	f	class:__sanitizer::final
SuspendedThreadsListNetBSD	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  SuspendedThreadsListNetBSD() { thread_ids_.reserve(1024); }$/;"	f	class:__sanitizer::final
SwallowCache	sanitizer_common/sanitizer_allocator_combined.h	/^  void SwallowCache(AllocatorCache *cache) {$/;"	f	class:CombinedAllocator
Swap	sanitizer_common/sanitizer_common.h	/^template<class T> void Swap(T& a, T& b) {$/;"	f	namespace:__sanitizer
SymCleanup	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymCleanup) *SymCleanup;$/;"	m	namespace:__sanitizer
SymCleanup	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymCleanup) *SymCleanup;$/;"	m	namespace:__sanitizer
SymFromAddr	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymFromAddr) *SymFromAddr;$/;"	m	namespace:__sanitizer
SymFromAddr	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymFromAddr) *SymFromAddr;$/;"	m	namespace:__sanitizer
SymFunctionTableAccess64	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymFunctionTableAccess64) *SymFunctionTableAccess64;$/;"	m	namespace:__sanitizer
SymFunctionTableAccess64	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymFunctionTableAccess64) *SymFunctionTableAccess64;$/;"	m	namespace:__sanitizer
SymGetLineFromAddr64	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymGetLineFromAddr64) *SymGetLineFromAddr64;$/;"	m	namespace:__sanitizer
SymGetLineFromAddr64	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymGetLineFromAddr64) *SymGetLineFromAddr64;$/;"	m	namespace:__sanitizer
SymGetModuleBase64	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymGetModuleBase64) *SymGetModuleBase64;$/;"	m	namespace:__sanitizer
SymGetModuleBase64	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymGetModuleBase64) *SymGetModuleBase64;$/;"	m	namespace:__sanitizer
SymGetSearchPathW	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymGetSearchPathW) *SymGetSearchPathW;$/;"	m	namespace:__sanitizer
SymGetSearchPathW	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymGetSearchPathW) *SymGetSearchPathW;$/;"	m	namespace:__sanitizer
SymInitialize	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymInitialize) *SymInitialize;$/;"	m	namespace:__sanitizer
SymInitialize	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymInitialize) *SymInitialize;$/;"	m	namespace:__sanitizer
SymSetOptions	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymSetOptions) *SymSetOptions;$/;"	m	namespace:__sanitizer
SymSetOptions	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymSetOptions) *SymSetOptions;$/;"	m	namespace:__sanitizer
SymSetSearchPathW	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::SymSetSearchPathW) *SymSetSearchPathW;$/;"	m	namespace:__sanitizer
SymSetSearchPathW	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::SymSetSearchPathW) *SymSetSearchPathW;$/;"	m	namespace:__sanitizer
SymbolizeCallback	sanitizer_common/sanitizer_stacktrace.h	/^  typedef bool (*SymbolizeCallback)(const void *pc, char *out_buffer,$/;"	t	struct:__sanitizer::StackTrace
SymbolizeCode	tsan/tsan_symbolize.cpp	/^SymbolizedStack *SymbolizeCode(uptr addr) {$/;"	f	namespace:__tsan
SymbolizeCodeCallback	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^static void SymbolizeCodeCallback(void *vdata, uintptr_t addr,$/;"	f
SymbolizeCodeCallbackArg	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^struct SymbolizeCodeCallbackArg {$/;"	s	namespace:__sanitizer::__anon11
SymbolizeCodePCInfoCallback	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^static int SymbolizeCodePCInfoCallback(void *vdata, uintptr_t addr,$/;"	f
SymbolizeData	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual bool SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::SymbolizerTool
SymbolizeData	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^bool LibbacktraceSymbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
SymbolizeData	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool LLVMSymbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::LLVMSymbolizer
SymbolizeData	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool Symbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizeData	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^bool AtosSymbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::AtosSymbolizer
SymbolizeData	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^bool DlAddrSymbolizer::SymbolizeData(uptr addr, DataInfo *datainfo) {$/;"	f	class:__sanitizer::DlAddrSymbolizer
SymbolizeData	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^bool Symbolizer::SymbolizeData(uptr addr, DataInfo *info) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizeData	tsan/tsan_symbolize.cpp	/^ReportLocation *SymbolizeData(uptr addr) {$/;"	f	namespace:__tsan
SymbolizeDataCallback	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^static void SymbolizeDataCallback(void *vdata, uintptr_t, const char *symname,$/;"	f
SymbolizeFlush	tsan/tsan_symbolize.cpp	/^void SymbolizeFlush() {$/;"	f	namespace:__tsan
SymbolizeFrame	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual bool SymbolizeFrame(uptr addr, FrameInfo *info) {$/;"	f	class:__sanitizer::SymbolizerTool
SymbolizeFrame	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool LLVMSymbolizer::SymbolizeFrame(uptr addr, FrameInfo *info) {$/;"	f	class:__sanitizer::LLVMSymbolizer
SymbolizeFrame	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool Symbolizer::SymbolizeFrame(uptr addr, FrameInfo *info) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizePC	sanitizer_common/sanitizer_symbolizer_internal.h	/^  virtual bool SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::SymbolizerTool
SymbolizePC	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^bool LibbacktraceSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
SymbolizePC	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^SymbolizedStack *Symbolizer::SymbolizePC(uptr addr) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizePC	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool LLVMSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::LLVMSymbolizer
SymbolizePC	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^bool AtosSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::AtosSymbolizer
SymbolizePC	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^bool DlAddrSymbolizer::SymbolizePC(uptr addr, SymbolizedStack *stack) {$/;"	f	class:__sanitizer::DlAddrSymbolizer
SymbolizePC	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^SymbolizedStack *Symbolizer::SymbolizePC(uptr addr) {$/;"	f	class:__sanitizer::Symbolizer
SymbolizePC	sanitizer_common/sanitizer_symbolizer_win.cpp	/^bool WinSymbolizerTool::SymbolizePC(uptr addr, SymbolizedStack *frame) {$/;"	f	class:__sanitizer::WinSymbolizerTool
SymbolizeStack	tsan/tsan_rtl_report.cpp	/^static ReportStack *SymbolizeStack(StackTrace trace) {$/;"	f	namespace:__tsan
SymbolizeStackId	tsan/tsan_rtl_report.cpp	/^ReportStack *SymbolizeStackId(u32 stack_id) {$/;"	f	namespace:__tsan
SymbolizedLoc	ubsan/ubsan_diag.h	/^  const SymbolizedStack *SymbolizedLoc;  \/\/ Not owned.$/;"	m	class:__ubsan::Location
SymbolizedStack	sanitizer_common/sanitizer_symbolizer.cpp	/^SymbolizedStack::SymbolizedStack() : next(nullptr), info() {}$/;"	f	class:__sanitizer::SymbolizedStack
SymbolizedStack	sanitizer_common/sanitizer_symbolizer.h	/^struct SymbolizedStack {$/;"	s	namespace:__sanitizer
SymbolizedStackBuilder	tsan/tsan_symbolize.cpp	/^struct SymbolizedStackBuilder {$/;"	s	namespace:__tsan
SymbolizedStackHolder	ubsan/ubsan_diag.h	/^  explicit SymbolizedStackHolder(SymbolizedStack *Stack = nullptr)$/;"	f	class:__ubsan::SymbolizedStackHolder
SymbolizedStackHolder	ubsan/ubsan_diag.h	/^class SymbolizedStackHolder {$/;"	c	namespace:__ubsan
Symbolizer	sanitizer_common/sanitizer_symbolizer.cpp	/^Symbolizer::Symbolizer(IntrusiveList<SymbolizerTool> tools)$/;"	f	class:__sanitizer::Symbolizer
SymbolizerProcess	sanitizer_common/sanitizer_symbolizer_internal.h	/^class SymbolizerProcess {$/;"	c	namespace:__sanitizer
SymbolizerProcess	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^SymbolizerProcess::SymbolizerProcess(const char *path, bool use_posix_spawn)$/;"	f	class:__sanitizer::SymbolizerProcess
SymbolizerScope	sanitizer_common/sanitizer_symbolizer.cpp	/^Symbolizer::SymbolizerScope::SymbolizerScope(const Symbolizer *sym)$/;"	f	class:__sanitizer::Symbolizer::SymbolizerScope
SymbolizerScope	sanitizer_common/sanitizer_symbolizer.h	/^  class SymbolizerScope {$/;"	c	class:__sanitizer::final
SymbolizerTool	sanitizer_common/sanitizer_symbolizer_internal.h	/^  SymbolizerTool() : next(nullptr) { }$/;"	f	class:__sanitizer::SymbolizerTool
SymbolizerTool	sanitizer_common/sanitizer_symbolizer_internal.h	/^class SymbolizerTool {$/;"	c	namespace:__sanitizer
SyncAddressForObjCObject	tsan/tsan_interceptors_mac.cpp	/^static uptr SyncAddressForObjCObject(id obj, ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
SyncClock	tsan/tsan_clock.cpp	/^SyncClock::SyncClock() {$/;"	f	class:__tsan::SyncClock
SyncVar	tsan/tsan_sync.cpp	/^SyncVar::SyncVar()$/;"	f	class:__tsan::SyncVar
SyncVar	tsan/tsan_sync.h	/^struct SyncVar {$/;"	s	namespace:__tsan
TAG_ALLOC	sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_ALLOC = 1;$/;"	m	struct:__sanitizer::StackTrace
TAG_CUSTOM	sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_CUSTOM = 100; \/\/ Tool specific tags start here.$/;"	m	struct:__sanitizer::StackTrace
TAG_DEALLOC	sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_DEALLOC = 2;$/;"	m	struct:__sanitizer::StackTrace
TAG_UNKNOWN	sanitizer_common/sanitizer_stacktrace.h	/^  static const int TAG_UNKNOWN = 0;$/;"	m	struct:__sanitizer::StackTrace
TARGET_OS_IOS	sanitizer_common/sanitizer_mac.h	28;"	d
TARGET_OS_OSX	sanitizer_common/sanitizer_mac.h	22;"	d
TARGET_OS_TV	sanitizer_common/sanitizer_mac.h	31;"	d
TARGET_OS_WATCH	sanitizer_common/sanitizer_mac.h	34;"	d
TCK_ConstructorCall	ubsan/ubsan_handlers.cpp	/^  TCK_ConstructorCall,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_DowncastPointer	ubsan/ubsan_handlers.cpp	/^  TCK_DowncastPointer,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_DowncastReference	ubsan/ubsan_handlers.cpp	/^  TCK_DowncastReference,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_DynamicOperation	ubsan/ubsan_handlers.cpp	/^  TCK_DynamicOperation$/;"	e	enum:__ubsan::TypeCheckKind
TCK_Load	ubsan/ubsan_handlers.cpp	/^  TCK_Load,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_MemberAccess	ubsan/ubsan_handlers.cpp	/^  TCK_MemberAccess,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_MemberCall	ubsan/ubsan_handlers.cpp	/^  TCK_MemberCall,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_NonnullAssign	ubsan/ubsan_handlers.cpp	/^  TCK_NonnullAssign,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_ReferenceBinding	ubsan/ubsan_handlers.cpp	/^  TCK_ReferenceBinding,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_Store	ubsan/ubsan_handlers.cpp	/^  TCK_Store,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_Upcast	ubsan/ubsan_handlers.cpp	/^  TCK_Upcast,$/;"	e	enum:__ubsan::TypeCheckKind
TCK_UpcastToVirtualBase	ubsan/ubsan_handlers.cpp	/^  TCK_UpcastToVirtualBase,$/;"	e	enum:__ubsan::TypeCheckKind
TEB	asan/asan_win.cpp	/^} TEB, *PTEB;$/;"	t	namespace:__asan	typeref:struct:__asan::_TEB
TEB_RESERVED_FIELDS_THREAD_LOCAL_STORAGE_OFFSET	asan/asan_win.cpp	/^constexpr size_t TEB_RESERVED_FIELDS_THREAD_LOCAL_STORAGE_OFFSET = 11;$/;"	m	namespace:__asan
THREADLOCAL	sanitizer_common/sanitizer_internal_defs.h	213;"	d
THREADLOCAL	sanitizer_common/sanitizer_internal_defs.h	227;"	d
THREAD_CALLING_CONV	sanitizer_common/sanitizer_internal_defs.h	266;"	d
THREAD_CALLING_CONV	sanitizer_common/sanitizer_internal_defs.h	269;"	d
TK_Float	ubsan/ubsan_value.h	/^    TK_Float = 0x0001,$/;"	e	enum:__ubsan::TypeDescriptor::Kind
TK_Integer	ubsan/ubsan_value.h	/^    TK_Integer = 0x0000,$/;"	e	enum:__ubsan::TypeDescriptor::Kind
TK_Unknown	ubsan/ubsan_value.h	/^    TK_Unknown = 0xffff$/;"	e	enum:__ubsan::TypeDescriptor::Kind
TLS_SLOT_SANITIZER	sanitizer_common/sanitizer_linux.h	/^static const int TLS_SLOT_SANITIZER = 6;$/;"	m	namespace:__sanitizer
TSAN_CLOCK_H	tsan/tsan_clock.h	13;"	d
TSAN_COLLECT_STATS	tsan/tsan_defs.h	27;"	d
TSAN_CONTAINS_UBSAN	tsan/tsan_defs.h	32;"	d
TSAN_CONTAINS_UBSAN	tsan/tsan_defs.h	34;"	d
TSAN_DEFS_H	tsan/tsan_defs.h	14;"	d
TSAN_DENSE_ALLOC_H	tsan/tsan_dense_alloc.h	19;"	d
TSAN_DISPATCH_DEFS_H	tsan/tsan_dispatch_defs.h	13;"	d
TSAN_FD_H	tsan/tsan_fd.h	34;"	d
TSAN_FLAG	tsan/tsan_flags.cpp	34;"	d
TSAN_FLAG	tsan/tsan_flags.cpp	36;"	d
TSAN_FLAG	tsan/tsan_flags.cpp	42;"	d
TSAN_FLAG	tsan/tsan_flags.cpp	45;"	d
TSAN_FLAG	tsan/tsan_flags.h	22;"	d
TSAN_FLAG	tsan/tsan_flags.h	24;"	d
TSAN_FLAGS_H	tsan/tsan_flags.h	14;"	d
TSAN_IGNORESET_H	tsan/tsan_ignoreset.h	14;"	d
TSAN_INTERCEPT	tsan/tsan_interceptors_posix.cpp	299;"	d
TSAN_INTERCEPTOR	tsan/tsan_interceptors.h	58;"	d
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(dispatch_data_t, dispatch_data_create, const void *buffer,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(dispatch_io_t, dispatch_io_create, dispatch_io_type_t type,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(dispatch_io_t, dispatch_io_create_with_io,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(dispatch_io_t, dispatch_io_create_with_path,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(long_t, dispatch_group_wait, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(long_t, dispatch_semaphore_signal,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(long_t, dispatch_semaphore_wait, dispatch_semaphore_t dsema,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_after, dispatch_time_t when,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_after_f, dispatch_time_t when,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_apply, size_t iterations,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_apply_f, size_t iterations,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_group_async, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_group_async_f, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_group_leave, dispatch_group_t group) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_group_notify, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_group_notify_f, dispatch_group_t group,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_io_barrier, dispatch_io_t channel,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_io_close, dispatch_io_t channel,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_io_read, dispatch_io_t channel, off_t offset,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_io_write, dispatch_io_t channel, off_t offset,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_once, dispatch_once_t *predicate,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_once_f, dispatch_once_t *predicate,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_read, dispatch_fd_t fd, size_t length,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_resume, dispatch_object_t o) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_source_set_cancel_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_source_set_cancel_handler_f,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_source_set_event_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_source_set_event_handler_f,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_source_set_registration_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_source_set_registration_handler_f,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_libdispatch.cpp	/^TSAN_INTERCEPTOR(void, dispatch_write, dispatch_fd_t fd, dispatch_data_t data,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(bool, OSSpinLockTry, volatile OSSpinLock *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(bool, os_lock_trylock, void *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(bool, os_unfair_lock_trylock, os_unfair_lock_t lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(int, objc_sync_enter, id obj) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(int, objc_sync_exit, id obj) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(int, swapcontext, ucontext_t *oucp, const ucontext_t *ucp) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void *, OSAtomicDequeue, OSQueueHead *list, size_t offset) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void *, OSAtomicFifoDequeue, OSFifoQueueHead *list,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, OSAtomicEnqueue, OSQueueHead *list, void *item,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, OSAtomicFifoEnqueue, OSFifoQueueHead *list, void *item,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, OSSpinLockLock, volatile OSSpinLock *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, OSSpinLockUnlock, volatile OSSpinLock *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, os_lock_lock, void *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, os_lock_unlock, void *lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, os_unfair_lock_lock, os_unfair_lock_t lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, os_unfair_lock_lock_with_options, os_unfair_lock_t lock,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, os_unfair_lock_unlock, os_unfair_lock_t lock) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, xpc_connection_cancel, xpc_connection_t connection) {$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, xpc_connection_send_barrier, xpc_connection_t connection,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, xpc_connection_send_message_with_reply,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mac.cpp	/^TSAN_INTERCEPTOR(void, xpc_connection_set_event_handler,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mach_vm.cpp	/^TSAN_INTERCEPTOR(kern_return_t, mach_vm_allocate, vm_map_t target,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_mach_vm.cpp	/^TSAN_INTERCEPTOR(kern_return_t, mach_vm_deallocate, vm_map_t target,$/;"	f	namespace:__tsan
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(char *, strcpy, char *dst, const char *src) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(char*, strdup, const char *str) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(char*, strncpy, char *dst, char *src, uptr n) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, __close, int fd) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, __cxa_atexit, void (*f)(void *a), void *arg, void *dso) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, __fxstat, int version, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, __fxstat64, int version, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, atexit, void (*f)()) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, bind, int fd, void *addr, unsigned addrlen) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, close, int fd) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, closedir, void *dirp) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, connect, int fd, void *addr, unsigned addrlen) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, creat, const char *name, int mode) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, creat64, const char *name, int mode) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, dl_iterate_phdr, dl_iterate_phdr_cb_t cb, void *data) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, dup, int oldfd) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, dup2, int oldfd, int newfd) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, dup3, int oldfd, int newfd, int flags) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, epoll_create, int size) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, epoll_create1, int flags) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, epoll_ctl, int epfd, int op, int fd, void *ev) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, epoll_pwait, int epfd, void *ev, int cnt, int timeout,$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, epoll_wait, int epfd, void *ev, int cnt, int timeout) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, eventfd, unsigned initval, int flags) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, fork, int fake) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, fstat, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, fstat64, int fd, void *buf) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, getaddrinfo, void *node, void *service,$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, gettimeofday, void *tv, void *tz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, inotify_init, int fake) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, inotify_init1, int flags) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, kill, int pid, int sig) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, listen, int fd, int backlog) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, munmap, void *addr, long_t sz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, nanosleep, void *req, void *rem) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, on_exit, void(*f)(int, void*), void *arg) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, open, const char *name, int oflag, ...) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, open64, const char *name, int oflag, ...) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pause, int fake) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pipe, int *pipefd) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pipe2, int *pipefd, int flags) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, posix_memalign, void **memptr, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_barrier_destroy, void *b) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_barrier_init, void *b, void *a, unsigned count) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_barrier_wait, void *b) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_create,$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_detach, void *th) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_join, void *th, void **ret) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_kill, void *tid, int sig) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_mutex_destroy, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_mutex_init, void *m, void *a) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_mutex_timedlock, void *m, void *abstime) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_mutex_trylock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_once, void *o, void (*f)()) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_destroy, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_init, void *m, void *a) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_rdlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_timedrdlock, void *m, void *abstime) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_timedwrlock, void *m, void *abstime) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_tryrdlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_trywrlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_unlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_rwlock_wrlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_sigmask, int how, const __sanitizer_sigset_t *set,$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_spin_destroy, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_spin_init, void *m, int pshared) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_spin_lock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_spin_trylock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_spin_unlock, void *m) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_timedjoin_np, void *th, void **ret,$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, pthread_tryjoin_np, void *th, void **ret) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, raise, int sig) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, rmdir, char *path) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, sigblock, int mask) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, signalfd, int fd, void *mask, int flags) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, sigsetmask, int mask) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, sigsuspend, const __sanitizer_sigset_t *mask) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, socket, int domain, int type, int protocol) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, socketpair, int domain, int type, int protocol, int *fd) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, unlink, char *path) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, usleep, long_t usec) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(int, vfork, int fake) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(unsigned, sleep, unsigned sec) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(uptr, malloc_usable_size, void *p) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void *, __tls_get_addr, void *arg) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, __libc_memalign, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, aligned_alloc, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, calloc, uptr size, uptr n) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, malloc, uptr size) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, memalign, uptr align, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, pvalloc, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, realloc, void *p, uptr size) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, reallocarray, void *p, uptr size, uptr n) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, tmpfile, int fake) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, tmpfile64, int fake) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void*, valloc, uptr sz) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, __res_iclose, void *state, bool free_addr) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, _longjmp, uptr *env, int val) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, _lwp_exit) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, abort, int fake) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, cfree, void *p) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, free, void *p) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, longjmp_symname, uptr *env, int val) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, pthread_exit, void *retval) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, siglongjmp_symname, uptr *env, int val) {$/;"	f
TSAN_INTERCEPTOR	tsan/tsan_interceptors_posix.cpp	/^TSAN_INTERCEPTOR(void, thr_exit, tid_t *state) {$/;"	f
TSAN_INTERCEPTORS_H	tsan/tsan_interceptors.h	2;"	d
TSAN_INTERCEPTOR_NETBSD_ALIAS	tsan/tsan_interceptors.h	61;"	d
TSAN_INTERCEPTOR_NETBSD_ALIAS_THR	tsan/tsan_interceptors.h	64;"	d
TSAN_INTERCEPTOR_NETBSD_ALIAS_THR2	tsan/tsan_interceptors.h	67;"	d
TSAN_INTERCEPTOR_SETJMP	tsan/tsan_interceptors_posix.cpp	/^extern "C" int TSAN_INTERCEPTOR_SETJMP(void *env) {$/;"	f
TSAN_INTERCEPTOR_SETJMP	tsan/tsan_interceptors_posix.cpp	562;"	d
TSAN_INTERCEPTOR_SETJMP_	tsan/tsan_interceptors_posix.cpp	560;"	d
TSAN_INTERCEPTOR_SETJMP__	tsan/tsan_interceptors_posix.cpp	561;"	d
TSAN_INTERCEPTOR_SIGSETJMP	tsan/tsan_interceptors_posix.cpp	/^extern "C" int TSAN_INTERCEPTOR_SIGSETJMP(void *env) {$/;"	f
TSAN_INTERCEPTOR_SIGSETJMP	tsan/tsan_interceptors_posix.cpp	563;"	d
TSAN_INTERCEPT_VER	tsan/tsan_interceptors_posix.cpp	301;"	d
TSAN_INTERCEPT_VER	tsan/tsan_interceptors_posix.cpp	305;"	d
TSAN_INTERCEPT_VER	tsan/tsan_interceptors_posix.cpp	311;"	d
TSAN_INTERFACE_ANN_H	tsan/tsan_interface_ann.h	14;"	d
TSAN_INTERFACE_ATOMIC_H	include/sanitizer/tsan_interface_atomic.h	14;"	d
TSAN_INTERFACE_H	tsan/tsan_interface.h	16;"	d
TSAN_INTERFACE_JAVA_H	tsan/tsan_interface_java.h	24;"	d
TSAN_MAYBE_INTERCEPT_CREAT64	tsan/tsan_interceptors_posix.cpp	1565;"	d
TSAN_MAYBE_INTERCEPT_CREAT64	tsan/tsan_interceptors_posix.cpp	1567;"	d
TSAN_MAYBE_INTERCEPT_EPOLL	tsan/tsan_interceptors_posix.cpp	1858;"	d
TSAN_MAYBE_INTERCEPT_EPOLL	tsan/tsan_interceptors_posix.cpp	1865;"	d
TSAN_MAYBE_INTERCEPT_EVENTFD	tsan/tsan_interceptors_posix.cpp	1604;"	d
TSAN_MAYBE_INTERCEPT_EVENTFD	tsan/tsan_interceptors_posix.cpp	1606;"	d
TSAN_MAYBE_INTERCEPT_FSTAT64	tsan/tsan_interceptors_posix.cpp	1511;"	d
TSAN_MAYBE_INTERCEPT_FSTAT64	tsan/tsan_interceptors_posix.cpp	1513;"	d
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT	tsan/tsan_interceptors_posix.cpp	1632;"	d
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT	tsan/tsan_interceptors_posix.cpp	1634;"	d
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT1	tsan/tsan_interceptors_posix.cpp	1645;"	d
TSAN_MAYBE_INTERCEPT_INOTIFY_INIT1	tsan/tsan_interceptors_posix.cpp	1647;"	d
TSAN_MAYBE_INTERCEPT_MEMALIGN	tsan/tsan_interceptors_posix.cpp	796;"	d
TSAN_MAYBE_INTERCEPT_MEMALIGN	tsan/tsan_interceptors_posix.cpp	798;"	d
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS	tsan/tsan_interceptors_posix.cpp	302;"	d
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS	tsan/tsan_interceptors_posix.cpp	306;"	d
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS	tsan/tsan_interceptors_posix.cpp	312;"	d
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS_THR	tsan/tsan_interceptors_posix.cpp	303;"	d
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS_THR	tsan/tsan_interceptors_posix.cpp	308;"	d
TSAN_MAYBE_INTERCEPT_NETBSD_ALIAS_THR	tsan/tsan_interceptors_posix.cpp	313;"	d
TSAN_MAYBE_INTERCEPT_ON_EXIT	tsan/tsan_interceptors_posix.cpp	478;"	d
TSAN_MAYBE_INTERCEPT_ON_EXIT	tsan/tsan_interceptors_posix.cpp	480;"	d
TSAN_MAYBE_INTERCEPT_OPEN64	tsan/tsan_interceptors_posix.cpp	1542;"	d
TSAN_MAYBE_INTERCEPT_OPEN64	tsan/tsan_interceptors_posix.cpp	1544;"	d
TSAN_MAYBE_INTERCEPT_PVALLOC	tsan/tsan_interceptors_posix.cpp	827;"	d
TSAN_MAYBE_INTERCEPT_PVALLOC	tsan/tsan_interceptors_posix.cpp	829;"	d
TSAN_MAYBE_INTERCEPT_SIGNALFD	tsan/tsan_interceptors_posix.cpp	1619;"	d
TSAN_MAYBE_INTERCEPT_SIGNALFD	tsan/tsan_interceptors_posix.cpp	1621;"	d
TSAN_MAYBE_INTERCEPT_THR_EXIT	tsan/tsan_interceptors_posix.cpp	2587;"	d
TSAN_MAYBE_INTERCEPT_THR_EXIT	tsan/tsan_interceptors_posix.cpp	2589;"	d
TSAN_MAYBE_INTERCEPT_TMPFILE64	tsan/tsan_interceptors_posix.cpp	1774;"	d
TSAN_MAYBE_INTERCEPT_TMPFILE64	tsan/tsan_interceptors_posix.cpp	1776;"	d
TSAN_MAYBE_INTERCEPT__LWP_EXIT	tsan/tsan_interceptors_posix.cpp	2576;"	d
TSAN_MAYBE_INTERCEPT__LWP_EXIT	tsan/tsan_interceptors_posix.cpp	2578;"	d
TSAN_MAYBE_INTERCEPT___CLOSE	tsan/tsan_interceptors_posix.cpp	1705;"	d
TSAN_MAYBE_INTERCEPT___CLOSE	tsan/tsan_interceptors_posix.cpp	1707;"	d
TSAN_MAYBE_INTERCEPT___FXSTAT	tsan/tsan_interceptors_posix.cpp	1473;"	d
TSAN_MAYBE_INTERCEPT___FXSTAT	tsan/tsan_interceptors_posix.cpp	1475;"	d
TSAN_MAYBE_INTERCEPT___FXSTAT64	tsan/tsan_interceptors_posix.cpp	1499;"	d
TSAN_MAYBE_INTERCEPT___FXSTAT64	tsan/tsan_interceptors_posix.cpp	1501;"	d
TSAN_MAYBE_INTERCEPT___RES_ICLOSE	tsan/tsan_interceptors_posix.cpp	1722;"	d
TSAN_MAYBE_INTERCEPT___RES_ICLOSE	tsan/tsan_interceptors_posix.cpp	1724;"	d
TSAN_MID_APP_RANGE	tsan/tsan_platform.h	78;"	d
TSAN_MMAN_H	tsan/tsan_mman.h	13;"	d
TSAN_MUTEXSET_H	tsan/tsan_mutexset.h	14;"	d
TSAN_MUTEX_H	tsan/tsan_mutex.h	13;"	d
TSAN_NO_HISTORY	tsan/tsan_defs.h	23;"	d
TSAN_PLATFORM_H	tsan/tsan_platform.h	15;"	d
TSAN_REPORT_H	tsan/tsan_report.h	13;"	d
TSAN_RTL_H	tsan/tsan_rtl.h	26;"	d
TSAN_STACK_TRACE_H	tsan/tsan_stack_trace.h	13;"	d
TSAN_STAT_H	tsan/tsan_stat.h	14;"	d
TSAN_STRING_SETJMP	tsan/tsan_interceptors_posix.cpp	565;"	d
TSAN_STRING_SIGSETJMP	tsan/tsan_interceptors_posix.cpp	566;"	d
TSAN_SUPPRESSIONS_H	tsan/tsan_suppressions.h	13;"	d
TSAN_SYMBOLIZE_H	tsan/tsan_symbolize.h	13;"	d
TSAN_SYNC_H	tsan/tsan_sync.h	13;"	d
TSAN_SYSCALL	tsan/tsan_interceptors_posix.cpp	2429;"	d
TSAN_TRACE_H	tsan/tsan_trace.h	13;"	d
TSDDtor	asan/asan_thread.cpp	/^void AsanThread::TSDDtor(void *tsd) {$/;"	f	class:__asan::AsanThread
TagData	tsan/tsan_external.cpp	/^struct TagData {$/;"	s	namespace:__tsan
TagFromShadowStackFrame	tsan/tsan_external.cpp	/^uptr TagFromShadowStackFrame(uptr pc) {$/;"	f	namespace:__tsan
TagMemory	hwasan/hwasan_poisoning.cpp	/^uptr TagMemory(uptr p, uptr size, tag_t tag) {$/;"	f	namespace:__hwasan
TagMemoryAligned	hwasan/hwasan_poisoning.cpp	/^uptr TagMemoryAligned(uptr p, uptr size, tag_t tag) {$/;"	f	namespace:__hwasan
TaggedSize	hwasan/hwasan_allocator.cpp	/^static uptr TaggedSize(uptr size) {$/;"	f	namespace:__hwasan
TagsEqual	hwasan/hwasan_report.cpp	/^static bool TagsEqual(tag_t tag, tag_t *tag_ptr) {$/;"	f	namespace:__hwasan
TargetAlias	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int TargetAlias : 1;$/;"	m	struct:__anon31::__anon32
TargetAlias	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *TargetAlias;$/;"	m	struct:__anon31
TargetName	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int TargetName : 1;$/;"	m	struct:__anon31::__anon32
TargetName	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *TargetName;$/;"	m	struct:__anon31
TemplateMatch	sanitizer_common/sanitizer_common.cpp	/^bool TemplateMatch(const char *templ, const char *str) {$/;"	f	namespace:__sanitizer
TestOnlyReleaseTrampolineRegions	interception/interception_win.cpp	/^void TestOnlyReleaseTrampolineRegions() {$/;"	f	namespace:__interception
TestOnlyUnmap	sanitizer_common/sanitizer_allocator_bytemap.h	/^  void TestOnlyUnmap() {$/;"	f	class:TwoLevelByteMap
TestOnlyUnmap	sanitizer_common/sanitizer_allocator_combined.h	/^  void TestOnlyUnmap() { primary_.TestOnlyUnmap(); }$/;"	f	class:CombinedAllocator
TestOnlyUnmap	sanitizer_common/sanitizer_allocator_primary32.h	/^  void TestOnlyUnmap() {$/;"	f	class:SizeClassAllocator32
TestOnlyUnmap	sanitizer_common/sanitizer_allocator_primary64.h	/^  void TestOnlyUnmap() {$/;"	f	class:SizeClassAllocator64
Text	ubsan/ubsan_diag.h	/^  const char *Text;$/;"	m	class:__ubsan::Range
TgKill	sanitizer_common/sanitizer_linux.cpp	/^int TgKill(pid_t pid, tid_t tid, int sig) {$/;"	f	namespace:__sanitizer
TgKill	sanitizer_common/sanitizer_netbsd.cpp	/^int TgKill(pid_t pid, tid_t tid, int sig) {$/;"	f	namespace:__sanitizer
ThisT	sanitizer_common/sanitizer_allocator_primary32.h	/^  typedef SizeClassAllocator32<Params> ThisT;$/;"	t	class:SizeClassAllocator32
ThisT	sanitizer_common/sanitizer_allocator_primary64.h	/^  typedef SizeClassAllocator64<Params> ThisT;$/;"	t	class:SizeClassAllocator64
Thread	hwasan/hwasan_report.cpp	/^  const char *Thread() { return Green(); }$/;"	f	class:__hwasan::Decorator
Thread	hwasan/hwasan_thread.h	/^class Thread {$/;"	c	namespace:__hwasan
ThreadCallback	sanitizer_common/sanitizer_thread_registry.h	/^  typedef void (*ThreadCallback)(ThreadContextBase *tctx, void *arg);$/;"	t	class:__sanitizer::ThreadRegistry
ThreadCheckIgnore	tsan/tsan_rtl_thread.cpp	/^static void ThreadCheckIgnore(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadCheckIgnore	tsan/tsan_rtl_thread.cpp	/^static void ThreadCheckIgnore(ThreadState *thr) {}$/;"	f	namespace:__tsan
ThreadClock	tsan/tsan_clock.cpp	/^ThreadClock::ThreadClock(unsigned tid, unsigned reused)$/;"	f	class:__tsan::ThreadClock
ThreadConsumeTid	tsan/tsan_rtl_thread.cpp	/^int ThreadConsumeTid(ThreadState *thr, uptr pc, uptr uid) {$/;"	f	namespace:__tsan
ThreadContext	lsan/lsan_fuchsia.cpp	/^ThreadContext::ThreadContext(int tid) : ThreadContextLsanBase(tid) {}$/;"	f	class:__lsan::ThreadContext
ThreadContext	lsan/lsan_fuchsia.h	/^class ThreadContext : public ThreadContextLsanBase {$/;"	c	namespace:__lsan
ThreadContext	lsan/lsan_posix.cpp	/^ThreadContext::ThreadContext(int tid) : ThreadContextLsanBase(tid) {}$/;"	f	class:__lsan::ThreadContext
ThreadContext	tsan/tsan_rtl_thread.cpp	/^ThreadContext::ThreadContext(int tid)$/;"	f	class:__tsan::ThreadContext
ThreadContextBase	sanitizer_common/sanitizer_thread_registry.cpp	/^ThreadContextBase::ThreadContextBase(u32 tid)$/;"	f	class:__sanitizer::ThreadContextBase
ThreadContextBase	sanitizer_common/sanitizer_thread_registry.h	/^class ThreadContextBase {$/;"	c	namespace:__sanitizer
ThreadContextFactory	sanitizer_common/sanitizer_thread_registry.h	/^typedef ThreadContextBase* (*ThreadContextFactory)(u32 tid);$/;"	t	namespace:__sanitizer
ThreadContextLsanBase	lsan/lsan_thread.cpp	/^ThreadContextLsanBase::ThreadContextLsanBase(int tid)$/;"	f	class:__lsan::ThreadContextLsanBase
ThreadContextLsanBase	lsan/lsan_thread.h	/^class ThreadContextLsanBase : public ThreadContextBase {$/;"	c	namespace:__lsan
ThreadCount	sanitizer_common/sanitizer_stoptheworld.h	/^  virtual uptr ThreadCount() const { UNIMPLEMENTED(); }$/;"	f	class:__sanitizer::SuspendedThreadsList
ThreadCount	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^uptr SuspendedThreadsListLinux::ThreadCount() const {$/;"	f	class:__sanitizer::SuspendedThreadsListLinux
ThreadCount	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^uptr SuspendedThreadsListMac::ThreadCount() const {$/;"	f	class:__sanitizer::SuspendedThreadsListMac
ThreadCount	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^uptr SuspendedThreadsListNetBSD::ThreadCount() const {$/;"	f	class:__sanitizer::SuspendedThreadsListNetBSD
ThreadCount	tsan/tsan_rtl_thread.cpp	/^int ThreadCount(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadCreate	lsan/lsan_thread.cpp	/^u32 ThreadCreate(u32 parent_tid, uptr user_id, bool detached, void *arg) {$/;"	f	namespace:__lsan
ThreadCreate	tsan/tsan_rtl_thread.cpp	/^int ThreadCreate(ThreadState *thr, uptr pc, uptr uid, bool detached) {$/;"	f	namespace:__tsan
ThreadCreateHook	asan/asan_fuchsia.cpp	/^static void ThreadCreateHook(void *hook, bool aborted) {$/;"	f	namespace:__asan
ThreadCreateHook	asan/asan_rtems.cpp	/^static void ThreadCreateHook(void *hook, bool aborted) {$/;"	f	namespace:__asan
ThreadDescription	tsan/tsan_report.cpp	/^  const char *ThreadDescription()    { return Cyan(); }$/;"	f	class:__tsan::Decorator
ThreadDescriptorSize	sanitizer_common/sanitizer_linux_libcdep.cpp	/^uptr ThreadDescriptorSize() {$/;"	f	namespace:__sanitizer
ThreadDetach	lsan/lsan_thread.cpp	/^void ThreadDetach(u32 tid) {$/;"	f	namespace:__lsan
ThreadDetach	tsan/tsan_rtl_thread.cpp	/^void ThreadDetach(ThreadState *thr, uptr pc, int tid) {$/;"	f	namespace:__tsan
ThreadExitHook	asan/asan_fuchsia.cpp	/^static void ThreadExitHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadExitHook	asan/asan_rtems.cpp	/^static void ThreadExitHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadFinalize	tsan/tsan_rtl_thread.cpp	/^void ThreadFinalize(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadFinish	lsan/lsan_thread.cpp	/^void ThreadFinish() {$/;"	f	namespace:__lsan
ThreadFinish	tsan/tsan_rtl_thread.cpp	/^void ThreadFinish(ThreadState *thr) {$/;"	f	namespace:__tsan
ThreadIgnoreBegin	tsan/tsan_rtl.cpp	/^void ThreadIgnoreBegin(ThreadState *thr, uptr pc, bool save_stack) {$/;"	f	namespace:__tsan
ThreadIgnoreEnd	tsan/tsan_rtl.cpp	/^void ThreadIgnoreEnd(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ThreadIgnoreSyncBegin	tsan/tsan_rtl.cpp	/^void ThreadIgnoreSyncBegin(ThreadState *thr, uptr pc, bool save_stack) {$/;"	f	namespace:__tsan
ThreadIgnoreSyncEnd	tsan/tsan_rtl.cpp	/^void ThreadIgnoreSyncEnd(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
ThreadJoin	lsan/lsan_thread.cpp	/^void ThreadJoin(u32 tid) {$/;"	f	namespace:__lsan
ThreadJoin	tsan/tsan_rtl_thread.cpp	/^void ThreadJoin(ThreadState *thr, uptr pc, int tid) {$/;"	f	namespace:__tsan
ThreadLeak	tsan/tsan_rtl_thread.cpp	/^struct ThreadLeak {$/;"	s	namespace:__tsan
ThreadListHead	hwasan/hwasan_thread_list.h	/^  ThreadListHead() : list_(nullptr) {}$/;"	f	struct:__hwasan::ThreadListHead
ThreadListHead	hwasan/hwasan_thread_list.h	/^struct ThreadListHead {$/;"	s	namespace:__hwasan
ThreadLister	sanitizer_common/sanitizer_linux.cpp	/^ThreadLister::ThreadLister(pid_t pid) : pid_(pid), buffer_(4096) {$/;"	f	class:__sanitizer::ThreadLister
ThreadLister	sanitizer_common/sanitizer_linux.h	/^class ThreadLister {$/;"	c	namespace:__sanitizer
ThreadMutex	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^struct ThreadMutex {$/;"	s	namespace:__sanitizer
ThreadNotJoined	tsan/tsan_rtl_thread.cpp	/^void ThreadNotJoined(ThreadState *thr, uptr pc, int tid, uptr uid) {$/;"	f	namespace:__tsan
ThreadParam	lsan/lsan_interceptors.cpp	/^struct ThreadParam {$/;"	s	namespace:std
ThreadParam	tsan/tsan_interceptors_posix.cpp	/^struct ThreadParam {$/;"	s
ThreadRegistry	sanitizer_common/sanitizer_thread_registry.cpp	/^ThreadRegistry::ThreadRegistry(ThreadContextFactory factory, u32 max_threads,$/;"	f	class:__sanitizer::ThreadRegistry
ThreadRegistry	sanitizer_common/sanitizer_thread_registry.h	/^class ThreadRegistry {$/;"	c	namespace:__sanitizer
ThreadRegistryLock	sanitizer_common/sanitizer_thread_registry.h	/^typedef GenericScopedLock<ThreadRegistry> ThreadRegistryLock;$/;"	t	namespace:__sanitizer
ThreadSanitizerQuery	tsan/tsan_interface_ann.cpp	/^const char INTERFACE_ATTRIBUTE* ThreadSanitizerQuery(const char *query) {$/;"	f
ThreadSelf	sanitizer_common/sanitizer_linux_libcdep.cpp	/^uptr ThreadSelf() {$/;"	f	namespace:__sanitizer
ThreadSelfOffset	sanitizer_common/sanitizer_linux_libcdep.cpp	/^uptr ThreadSelfOffset() {$/;"	f	namespace:__sanitizer
ThreadSelfSegbase	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static void **ThreadSelfSegbase() {$/;"	f	namespace:__sanitizer
ThreadSelfTlsTcb	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static struct tls_tcb * ThreadSelfTlsTcb() {$/;"	f	namespace:__sanitizer
ThreadSetName	tsan/tsan_rtl_thread.cpp	/^void ThreadSetName(ThreadState *thr, const char *name) {$/;"	f	namespace:__tsan
ThreadSignalContext	tsan/tsan_interceptors_posix.cpp	/^struct ThreadSignalContext {$/;"	s	namespace:__tsan
ThreadStackContainsAddress	asan/asan_thread.cpp	/^static bool ThreadStackContainsAddress(ThreadContextBase *tctx_base,$/;"	f	namespace:__asan
ThreadStart	asan/asan_thread.cpp	/^thread_return_t AsanThread::ThreadStart($/;"	f	class:__asan::AsanThread
ThreadStart	lsan/lsan_fuchsia.cpp	/^void ThreadStart(u32 tid) {$/;"	f	namespace:__lsan
ThreadStart	lsan/lsan_posix.cpp	/^void ThreadStart(u32 tid, tid_t os_id, ThreadType thread_type) {$/;"	f	namespace:__lsan
ThreadStart	lsan/lsan_thread.cpp	/^void ThreadContextLsanBase::ThreadStart(u32 tid, tid_t os_id,$/;"	f	class:__lsan::ThreadContextLsanBase
ThreadStart	tsan/tsan_rtl_thread.cpp	/^void ThreadStart(ThreadState *thr, int tid, tid_t os_id,$/;"	f	namespace:__tsan
ThreadStartArg	hwasan/hwasan_interceptors.cpp	/^struct ThreadStartArg {$/;"	s
ThreadStartHook	asan/asan_fuchsia.cpp	/^static void ThreadStartHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadStartHook	asan/asan_rtems.cpp	/^static void ThreadStartHook(void *hook, uptr os_id) {$/;"	f	namespace:__asan
ThreadStartParam	asan/asan_interceptors.cpp	/^struct ThreadStartParam {$/;"	s
ThreadState	tsan/tsan_rtl.cpp	/^ThreadState::ThreadState(Context *ctx, int tid, int unique_id, u64 epoch,$/;"	f	class:__tsan::ThreadState
ThreadState	tsan/tsan_rtl.h	/^struct ThreadState {$/;"	s	namespace:__tsan
ThreadStats	hwasan/hwasan_thread_list.h	/^struct ThreadStats {$/;"	s	namespace:__hwasan
ThreadStatus	sanitizer_common/sanitizer_thread_registry.h	/^enum ThreadStatus {$/;"	g	namespace:__sanitizer
ThreadStatusCreated	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusCreated,   \/\/ Created but not yet running.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusDead	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusDead       \/\/ Joined, but some info is still available.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusFinished	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusFinished,  \/\/ Joinable thread is finished but not yet joined.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusInvalid	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusInvalid,   \/\/ Non-existent thread, data is invalid.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadStatusRunning	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatusRunning,   \/\/ The thread is currently running.$/;"	e	enum:__sanitizer::ThreadStatus
ThreadSuspender	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  explicit ThreadSuspender(pid_t pid, TracerThreadArgument *arg)$/;"	f	class:__sanitizer::ThreadSuspender
ThreadSuspender	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^class ThreadSuspender {$/;"	c	namespace:__sanitizer
ThreadSuspender	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  explicit ThreadSuspender(pid_t pid, TracerThreadArgument *arg)$/;"	f	class:__sanitizer::ThreadSuspender
ThreadSuspender	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^class ThreadSuspender {$/;"	c	namespace:__sanitizer
ThreadTid	lsan/lsan_thread.cpp	/^u32 ThreadTid(uptr uid) {$/;"	f	namespace:__lsan
ThreadTrace	tsan/tsan_rtl.cpp	/^Trace *ThreadTrace(int tid) {$/;"	f	namespace:__tsan
ThreadType	sanitizer_common/sanitizer_thread_registry.h	/^enum class ThreadType {$/;"	c	namespace:__sanitizer
TidWithIgnore	tsan/tsan_rtl.h	/^  u64 TidWithIgnore() const {$/;"	f	class:__tsan::FastState
TidsAreEqual	tsan/tsan_rtl.h	/^  static inline bool TidsAreEqual(const Shadow s1, const Shadow s2) {$/;"	f	class:__tsan::Shadow
TlsBaseAddr	sanitizer_common/sanitizer_mac.cpp	/^uptr TlsBaseAddr() {$/;"	f	namespace:__sanitizer
TlsExpansionSlots	asan/asan_win.cpp	/^  PVOID TlsExpansionSlots;$/;"	m	struct:__asan::_TEB
TlsGetAddrParam	sanitizer_common/sanitizer_tls_get_addr.cpp	/^struct TlsGetAddrParam {$/;"	s	namespace:__sanitizer
TlsPreTcbSize	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static uptr TlsPreTcbSize() {$/;"	f	namespace:__sanitizer
TlsSize	sanitizer_common/sanitizer_mac.cpp	/^uptr TlsSize() {$/;"	f	namespace:__sanitizer
TlsSlots	asan/asan_win.cpp	/^  PVOID TlsSlots[64];$/;"	m	struct:__asan::_TEB
ToLower	sanitizer_common/sanitizer_common.h	/^inline int ToLower(int c) {$/;"	f	namespace:__sanitizer
ToType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ToType;$/;"	m	struct:__ubsan::FloatCastOverflowData
ToType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ToType;$/;"	m	struct:__ubsan::FloatCastOverflowDataV2
ToType	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &ToType;$/;"	m	struct:__ubsan::ImplicitConversionData
TotalMemoryUsed	sanitizer_common/sanitizer_allocator_combined.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:CombinedAllocator
TotalMemoryUsed	sanitizer_common/sanitizer_allocator_primary32.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:SizeClassAllocator32
TotalMemoryUsed	sanitizer_common/sanitizer_allocator_primary64.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:SizeClassAllocator64
TotalMemoryUsed	sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr TotalMemoryUsed() {$/;"	f	class:LargeMmapAllocator
Trace	tsan/tsan_trace.h	/^  Trace()$/;"	f	struct:__tsan::Trace
Trace	tsan/tsan_trace.h	/^struct Trace {$/;"	s	namespace:__tsan
TraceAddEvent	tsan/tsan_rtl.h	/^void ALWAYS_INLINE TraceAddEvent(ThreadState *thr, FastState fs,$/;"	f	namespace:__tsan
TraceHeader	tsan/tsan_trace.h	/^  TraceHeader() : stack0(), epoch0() {}$/;"	f	struct:__tsan::TraceHeader
TraceHeader	tsan/tsan_trace.h	/^struct TraceHeader {$/;"	s	namespace:__tsan
TraceLoggingUnregister	sanitizer_common/sanitizer_win.cpp	44;"	d
TraceMemBeg	tsan/tsan_platform.h	/^uptr TraceMemBeg(void) {$/;"	f	namespace:__tsan
TraceMemEnd	tsan/tsan_platform.h	/^uptr TraceMemEnd(void) {$/;"	f	namespace:__tsan
TraceParts	tsan/tsan_rtl.cpp	/^uptr TraceParts() {$/;"	f	namespace:__tsan
TracePcGuard	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  void TracePcGuard(u32 *guard, uptr pc) {$/;"	f	class:__sancov::__anon45::final
TracePcGuard	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^  void TracePcGuard(u32* guard, uptr pc) {$/;"	f	class:__sancov::__anon40::TracePcGuardController
TracePcGuardController	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^class TracePcGuardController {$/;"	c	namespace:__sancov::__anon40
TraceSize	tsan/tsan_rtl.cpp	/^uptr TraceSize() {$/;"	f	namespace:__tsan
TraceSwitch	tsan/tsan_rtl.cpp	/^void TraceSwitch(ThreadState *thr) {$/;"	f	namespace:__tsan
TraceTopPC	tsan/tsan_rtl.cpp	/^uptr TraceTopPC(ThreadState *thr) {$/;"	f	namespace:__tsan
TracerThread	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static int TracerThread(void* argument) {$/;"	f	namespace:__sanitizer
TracerThread	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static int TracerThread(void *argument) {$/;"	f	namespace:__sanitizer
TracerThreadArgument	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^struct TracerThreadArgument {$/;"	s	namespace:__sanitizer
TracerThreadArgument	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^struct TracerThreadArgument {$/;"	s	namespace:__sanitizer
TracerThreadDieCallback	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static void TracerThreadDieCallback() {$/;"	f	namespace:__sanitizer
TracerThreadDieCallback	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static void TracerThreadDieCallback() {$/;"	f	namespace:__sanitizer
TracerThreadSignalHandler	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static void TracerThreadSignalHandler(int signum, __sanitizer_siginfo *siginfo,$/;"	f	namespace:__sanitizer
TracerThreadSignalHandler	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static void TracerThreadSignalHandler(int signum, __sanitizer_siginfo *siginfo,$/;"	f	namespace:__sanitizer
TrampolineMemoryRegion	interception/interception_win.cpp	/^struct TrampolineMemoryRegion {$/;"	s	namespace:__interception
TrampolineRegions	interception/interception_win.cpp	/^static TrampolineMemoryRegion TrampolineRegions[kMaxTrampolineRegion];$/;"	m	namespace:__interception
Transfer	sanitizer_common/sanitizer_quarantine.h	/^  void Transfer(QuarantineCache *from_cache) {$/;"	f	class:__sanitizer::QuarantineCache
TransferBatch	sanitizer_common/sanitizer_allocator_local_cache.h	/^  typedef typename Allocator::TransferBatch TransferBatch;$/;"	t	struct:SizeClassAllocator32LocalCache
TransferBatch	sanitizer_common/sanitizer_allocator_primary32.h	/^  struct TransferBatch {$/;"	s	class:SizeClassAllocator32
TranslateDigit	sanitizer_common/sanitizer_procmaps_common.cpp	/^static int TranslateDigit(char c) {$/;"	f	namespace:__sanitizer
Trap	sanitizer_common/sanitizer_internal_defs.h	/^inline void Trap() {$/;"	f	namespace:__sanitizer
TryLock	sanitizer_common/sanitizer_mutex.h	/^  bool TryLock() {$/;"	f	class:__sanitizer::StaticSpinMutex
TrySymInitialize	sanitizer_common/sanitizer_symbolizer_win.cpp	/^bool TrySymInitialize() {$/;"	f	namespace:__sanitizer::__anon9
TryToOverrideFunction	asan/asan_malloc_win.cpp	/^static void TryToOverrideFunction(const char *fname, uptr new_func) {$/;"	f	namespace:__asan
TsanCheckFailed	tsan/tsan_rtl_report.cpp	/^void TsanCheckFailed(const char *file, int line, const char *cond,$/;"	f	namespace:__tsan
TsanInterceptorContext	tsan/tsan_interceptors_posix.cpp	/^struct TsanInterceptorContext {$/;"	s
TsanOnDeadlySignal	tsan/tsan_rtl.cpp	/^static void TsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__tsan
TwoLevelBitVector	sanitizer_common/sanitizer_bitvector.h	/^class TwoLevelBitVector {$/;"	c	namespace:__sanitizer
TwoLevelByteMap	sanitizer_common/sanitizer_allocator_bytemap.h	/^class TwoLevelByteMap {$/;"	c
TwoRangesIntersect	tsan/tsan_rtl.h	/^  static ALWAYS_INLINE bool TwoRangesIntersect(Shadow s1, Shadow s2,$/;"	f	class:__tsan::Shadow
TwoRangesIntersectSlow	tsan/tsan_rtl.h	/^  static bool TwoRangesIntersectSlow(const Shadow s1, const Shadow s2) {$/;"	f	class:__tsan::Shadow
Type	sanitizer_common/sanitizer_atomic.h	/^  typedef s32 Type;$/;"	t	struct:__sanitizer::atomic_sint32_t
Type	sanitizer_common/sanitizer_atomic.h	/^  typedef u16 Type;$/;"	t	struct:__sanitizer::atomic_uint16_t
Type	sanitizer_common/sanitizer_atomic.h	/^  typedef u32 Type;$/;"	t	struct:__sanitizer::atomic_uint32_t
Type	sanitizer_common/sanitizer_atomic.h	/^  typedef u64 Type;$/;"	t	struct:__sanitizer::atomic_uint64_t
Type	sanitizer_common/sanitizer_atomic.h	/^  typedef u8 Type;$/;"	t	struct:__sanitizer::atomic_uint8_t
Type	sanitizer_common/sanitizer_atomic.h	/^  typedef uptr Type;$/;"	t	struct:__sanitizer::atomic_uintptr_t
Type	ubsan/ubsan_diag.h	/^  ErrorType Type;$/;"	m	class:__ubsan::ScopedReport
Type	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::AlignmentAssumptionData
Type	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::CFIBadIcallData
Type	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::CFICheckFailData
Type	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::InvalidValueData
Type	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::OverflowData
Type	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::TypeMismatchData
Type	ubsan/ubsan_handlers.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::VLABoundData
Type	ubsan/ubsan_handlers_cxx.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
Type	ubsan/ubsan_handlers_cxx.h	/^  const TypeDescriptor &Type;$/;"	m	struct:__ubsan::FunctionTypeMismatchData
Type	ubsan/ubsan_value.h	/^  const TypeDescriptor &Type;$/;"	m	class:__ubsan::Value
TypeCheckKind	ubsan/ubsan_handlers.cpp	/^enum TypeCheckKind {$/;"	g	namespace:__ubsan
TypeCheckKind	ubsan/ubsan_handlers.h	/^  unsigned char TypeCheckKind;$/;"	m	struct:__ubsan::TypeMismatchData
TypeCheckKind	ubsan/ubsan_handlers_cxx.h	/^  unsigned char TypeCheckKind;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
TypeCheckKinds	ubsan/ubsan_handlers.cpp	/^const char *TypeCheckKinds[] = {$/;"	m	namespace:__ubsan
TypeDescriptor	ubsan/ubsan_value.h	/^class TypeDescriptor {$/;"	c	namespace:__ubsan
TypeInfo	ubsan/ubsan_handlers_cxx.h	/^  void *TypeInfo;$/;"	m	struct:__ubsan::DynamicTypeCacheMissData
TypeInfo	ubsan/ubsan_type_hash_itanium.cpp	/^  std::type_info *TypeInfo;$/;"	m	struct:__anon4::VtablePrefix
TypeInfo	ubsan/ubsan_value.h	/^  u16 TypeInfo;$/;"	m	class:__ubsan::TypeDescriptor
TypeKind	ubsan/ubsan_value.h	/^  u16 TypeKind;$/;"	m	class:__ubsan::TypeDescriptor
TypeMismatchData	ubsan/ubsan_handlers.h	/^struct TypeMismatchData {$/;"	s	namespace:__ubsan
TypeName	ubsan/ubsan_diag.h	/^  TypeName(const char *Name) : Name(Name) {}$/;"	f	class:__ubsan::TypeName
TypeName	ubsan/ubsan_diag.h	/^class TypeName {$/;"	c	namespace:__ubsan
TypeName	ubsan/ubsan_value.h	/^  char TypeName[1];$/;"	m	class:__ubsan::TypeDescriptor
U32ComparisonFunction	sanitizer_common/sanitizer_common.cpp	/^typedef bool U32ComparisonFunction(const u32 &a, const u32 &b);$/;"	t	namespace:__sanitizer
UBSAN_CHECK	ubsan/ubsan_diag.cpp	399;"	d
UBSAN_CHECK	ubsan/ubsan_diag.cpp	401;"	d
UBSAN_CHECK	ubsan/ubsan_diag.cpp	60;"	d
UBSAN_CHECK	ubsan/ubsan_diag.cpp	64;"	d
UBSAN_CHECK	ubsan/ubsan_diag.cpp	71;"	d
UBSAN_CHECK	ubsan/ubsan_diag.cpp	75;"	d
UBSAN_CHECK	ubsan/ubsan_diag.h	124;"	d
UBSAN_CHECK	ubsan/ubsan_diag.h	126;"	d
UBSAN_DIAG_H	ubsan/ubsan_diag.h	13;"	d
UBSAN_FLAG	ubsan/ubsan_flags.cpp	36;"	d
UBSAN_FLAG	ubsan/ubsan_flags.cpp	38;"	d
UBSAN_FLAG	ubsan/ubsan_flags.cpp	42;"	d
UBSAN_FLAG	ubsan/ubsan_flags.cpp	45;"	d
UBSAN_FLAG	ubsan/ubsan_flags.h	24;"	d
UBSAN_FLAG	ubsan/ubsan_flags.h	26;"	d
UBSAN_FLAGS_H	ubsan/ubsan_flags.h	13;"	d
UBSAN_HANDLERS_CXX_H	ubsan/ubsan_handlers_cxx.h	14;"	d
UBSAN_HANDLERS_H	ubsan/ubsan_handlers.h	13;"	d
UBSAN_INIT_H	ubsan/ubsan_init.h	13;"	d
UBSAN_MONITOR_H	ubsan/ubsan_monitor.h	14;"	d
UBSAN_OVERFLOW_HANDLER	ubsan/ubsan_handlers.cpp	233;"	d
UBSAN_PLATFORM_H	ubsan/ubsan_platform.h	13;"	d
UBSAN_SIGNALS_STANDALONE_H	ubsan/ubsan_signals_standalone.h	15;"	d
UBSAN_TYPE_HASH_H	ubsan/ubsan_type_hash.h	13;"	d
UBSAN_VALUE_H	ubsan/ubsan_value.h	14;"	d
UBsanOnDeadlySignal	ubsan/ubsan_signals_standalone.cpp	/^static void UBsanOnDeadlySignal(int signo, void *siginfo, void *context) {$/;"	f	namespace:__ubsan
UINT32_MAX	sanitizer_common/sanitizer_internal_defs.h	351;"	d
UINT32_MAX	sanitizer_common/sanitizer_internal_defs.h	352;"	d
UINT64_MAX	sanitizer_common/sanitizer_internal_defs.h	357;"	d
UINT64_MAX	sanitizer_common/sanitizer_internal_defs.h	358;"	d
UINTMAX_T	interception/interception.h	/^typedef __sanitizer::u64     UINTMAX_T;$/;"	t
UINTPTR_MAX	sanitizer_common/sanitizer_internal_defs.h	359;"	d
UINTPTR_MAX	sanitizer_common/sanitizer_internal_defs.h	361;"	d
UINTPTR_MAX	sanitizer_common/sanitizer_internal_defs.h	363;"	d
UInt	ubsan/ubsan_diag.h	/^      UIntMax UInt;$/;"	m	union:__ubsan::Diag::Arg::__anon3
UIntMax	ubsan/ubsan_value.h	/^typedef u128 UIntMax;$/;"	t	namespace:__ubsan
UNIMPLEMENTED	sanitizer_common/sanitizer_internal_defs.h	330;"	d
UNKNOWN	sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	e	enum:__sanitizer::SignalContext::WriteFlag
UNLIKELY	sanitizer_common/sanitizer_internal_defs.h	215;"	d
UNLIKELY	sanitizer_common/sanitizer_internal_defs.h	229;"	d
UNREACHABLE	sanitizer_common/sanitizer_internal_defs.h	325;"	d
UNRECOVERABLE	ubsan/ubsan_handlers.h	26;"	d
UNREGISTERED	asan/asan_globals.cpp	/^  UNREGISTERED = 0,$/;"	e	enum:__asan::GlobalSymbolState
UNUSED	sanitizer_common/sanitizer_internal_defs.h	240;"	d
UNUSED	sanitizer_common/sanitizer_internal_defs.h	243;"	d
UNWIND_CONTINUE	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	54;"	d
UNWIND_CONTINUE	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	57;"	d
UNWIND_STOP	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	53;"	d
UNWIND_STOP	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	56;"	d
URIO_RECV_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	468;"	d
URIO_SEND_COMMAND	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	467;"	d
USED	sanitizer_common/sanitizer_internal_defs.h	241;"	d
USED	sanitizer_common/sanitizer_internal_defs.h	244;"	d
USE_THUMB_1	builtins/assembly.h	82;"	d
USE_THUMB_2	builtins/assembly.h	77;"	d
UbsanStandaloneInitializer	ubsan/ubsan_init_standalone.cpp	/^  UbsanStandaloneInitializer() {$/;"	f	class:__ubsan::UbsanStandaloneInitializer
UbsanStandaloneInitializer	ubsan/ubsan_init_standalone.cpp	/^class UbsanStandaloneInitializer {$/;"	c	namespace:__ubsan
UnDecorateSymbolName	sanitizer_common/sanitizer_dbghelp.h	/^extern decltype(::UnDecorateSymbolName) *UnDecorateSymbolName;$/;"	m	namespace:__sanitizer
UnDecorateSymbolName	sanitizer_common/sanitizer_symbolizer_win.cpp	/^decltype(::UnDecorateSymbolName) *UnDecorateSymbolName;$/;"	m	namespace:__sanitizer
UnalignedMemoryAccess	tsan/tsan_rtl.cpp	/^void UnalignedMemoryAccess(ThreadState *thr, uptr pc, uptr addr,$/;"	f	namespace:__tsan
UndefinedBehaviorReport	ubsan/ubsan_monitor.cpp	/^UndefinedBehaviorReport::UndefinedBehaviorReport(const char *IssueKind,$/;"	f	class:UndefinedBehaviorReport
UndefinedBehaviorReport	ubsan/ubsan_monitor.h	/^struct UndefinedBehaviorReport {$/;"	s	namespace:__ubsan
UniqueTid	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual int UniqueTid() { return 0; }$/;"	f	struct:__sanitizer::DDCallback
UnknownFlags	sanitizer_common/sanitizer_flag_parser.cpp	/^class UnknownFlags {$/;"	c	namespace:__sanitizer
Unlock	sanitizer_common/sanitizer_fuchsia.cpp	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	sanitizer_common/sanitizer_linux.cpp	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	sanitizer_common/sanitizer_mac.cpp	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	sanitizer_common/sanitizer_mutex.h	/^  void Unlock() {$/;"	f	class:__sanitizer::RWMutex
Unlock	sanitizer_common/sanitizer_mutex.h	/^  void Unlock() {$/;"	f	class:__sanitizer::StaticSpinMutex
Unlock	sanitizer_common/sanitizer_rtems.cpp	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	sanitizer_common/sanitizer_solaris.cpp	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	sanitizer_common/sanitizer_thread_registry.h	/^  void Unlock() { mtx_.Unlock(); }$/;"	f	class:__sanitizer::ThreadRegistry
Unlock	sanitizer_common/sanitizer_win.cpp	/^void BlockingMutex::Unlock() {$/;"	f	class:__sanitizer::BlockingMutex
Unlock	tsan/tsan_mutex.cpp	/^void InternalDeadlockDetector::Unlock(MutexType t) {$/;"	f	class:__tsan::InternalDeadlockDetector
Unlock	tsan/tsan_mutex.cpp	/^void Mutex::Unlock() {$/;"	f	class:__tsan::Mutex
UnlockAll	sanitizer_common/sanitizer_stackdepotbase.h	/^void StackDepotBase<Node, kReservedBits, kTabSizeLog>::UnlockAll() {$/;"	f	class:__sanitizer::StackDepotBase
UnlockAllocator	asan/asan_allocator.cpp	/^void UnlockAllocator() {$/;"	f	namespace:__lsan
UnlockAllocator	lsan/lsan_allocator.cpp	/^void UnlockAllocator() {$/;"	f	namespace:__lsan
UnlockThreadRegistry	asan/asan_thread.cpp	/^void UnlockThreadRegistry() {$/;"	f	namespace:__lsan
UnlockThreadRegistry	lsan/lsan_thread.cpp	/^void UnlockThreadRegistry() { thread_registry->Unlock(); }$/;"	f	namespace:__lsan
UnmangleLongJmpSp	tsan/tsan_platform_linux.cpp	/^static uptr UnmangleLongJmpSp(uptr mangled_sp) {$/;"	f	namespace:__tsan
Unmap	sanitizer_common/sanitizer_fuchsia.cpp	/^void ReservedAddressRange::Unmap(uptr addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
Unmap	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void ReservedAddressRange::Unmap(uptr addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
Unmap	sanitizer_common/sanitizer_win.cpp	/^void ReservedAddressRange::Unmap(uptr addr, uptr size) {$/;"	f	class:__sanitizer::ReservedAddressRange
UnmapFromTo	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void UnmapFromTo(uptr from, uptr to) {$/;"	f	namespace:__sanitizer
UnmapOrDie	sanitizer_common/sanitizer_fuchsia.cpp	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDie	sanitizer_common/sanitizer_posix.cpp	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDie	sanitizer_common/sanitizer_rtems.cpp	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDie	sanitizer_common/sanitizer_win.cpp	/^void UnmapOrDie(void *addr, uptr size) {$/;"	f	namespace:__sanitizer
UnmapOrDieVmar	sanitizer_common/sanitizer_fuchsia.cpp	/^void UnmapOrDieVmar(void *addr, uptr size, zx_handle_t target_vmar) {$/;"	f	namespace:__sanitizer
UnmapPackedCounterArrayBuffer	sanitizer_common/sanitizer_allocator_primary64.h	/^    void UnmapPackedCounterArrayBuffer(uptr buffer, uptr buffer_size) {$/;"	f	class:SizeClassAllocator64::MemoryMapper
UnmapShadow	tsan/tsan_rtl.cpp	/^void UnmapShadow(ThreadState *thr, uptr addr, uptr size) {$/;"	f	namespace:__tsan
UnmapWithCallback	sanitizer_common/sanitizer_allocator_primary32.h	/^  void UnmapWithCallback(uptr beg, uptr size) {$/;"	f	class:SizeClassAllocator32
UnmapWithCallbackOrDie	sanitizer_common/sanitizer_allocator_primary64.h	/^  void UnmapWithCallbackOrDie(uptr beg, uptr size) {$/;"	f	class:SizeClassAllocator64
UnpoisonDefaultStack	asan/asan_rtl.cpp	/^static void UnpoisonDefaultStack() {$/;"	f	namespace:__asan
UnpoisonFakeStack	asan/asan_rtl.cpp	/^static void UnpoisonFakeStack() {$/;"	f	namespace:__asan
UnpoisonStack	asan/asan_rtl.cpp	/^void UnpoisonStack(uptr bottom, uptr top, const char *type) {$/;"	f	namespace:__asan
UnreachableData	ubsan/ubsan_handlers.h	/^struct UnreachableData {$/;"	s	namespace:__ubsan
UnrefClockBlock	tsan/tsan_clock.cpp	/^static void UnrefClockBlock(ClockCache *c, u32 idx, uptr blocks) {$/;"	f	namespace:__tsan
Unregister	sanitizer_common/sanitizer_allocator_stats.h	/^  void Unregister(AllocatorStats *s) {$/;"	f	class:AllocatorGlobalStats
UnregisterGlobal	asan/asan_globals.cpp	/^static void UnregisterGlobal(const Global *g) {$/;"	f	namespace:__asan
UnregisterGlobals	asan/asan_win_dynamic_runtime_thunk.cpp	/^void UnregisterGlobals() {$/;"	f	namespace:__anon71
UnsetAlternateSignalStack	sanitizer_common/sanitizer_fuchsia.cpp	/^void UnsetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
UnsetAlternateSignalStack	sanitizer_common/sanitizer_posix_libcdep.cpp	/^void UnsetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
UnsetAlternateSignalStack	sanitizer_common/sanitizer_rtems.cpp	/^void UnsetAlternateSignalStack() {}$/;"	f	namespace:__sanitizer
UnsetAlternateSignalStack	sanitizer_common/sanitizer_win.cpp	/^void UnsetAlternateSignalStack() {$/;"	f	namespace:__sanitizer
Unshare	tsan/tsan_clock.cpp	/^void SyncClock::Unshare(ClockCache *c) {$/;"	f	class:__tsan::SyncClock
UnsuppressedLeakCount	lsan/lsan_common.cpp	/^uptr LeakReport::UnsuppressedLeakCount() {$/;"	f	class:__lsan::LeakReport
UntagAddr	hwasan/hwasan.h	/^static inline uptr UntagAddr(uptr tagged_addr) {$/;"	f
UntagPtr	hwasan/hwasan.h	/^static inline void *UntagPtr(const void *tagged_ptr) {$/;"	f
Unwind	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  virtual u32 Unwind() { return 0; }$/;"	f	struct:__sanitizer::DDCallback
Unwind	sanitizer_common/sanitizer_stacktrace.h	/^  void Unwind(uptr pc, uptr bp, void *context, bool request_fast,$/;"	f	struct:__sanitizer::BufferedStackTrace
Unwind	sanitizer_common/sanitizer_stacktrace_libcdep.cpp	/^void BufferedStackTrace::Unwind(u32 max_depth, uptr pc, uptr bp, void *context,$/;"	f	class:__sanitizer::BufferedStackTrace
UnwindFast	sanitizer_common/sanitizer_stacktrace.cpp	/^void BufferedStackTrace::UnwindFast(uptr pc, uptr bp, uptr stack_top,$/;"	f	class:__sanitizer::BufferedStackTrace
UnwindFast	sanitizer_common/sanitizer_stacktrace_sparc.cpp	/^void BufferedStackTrace::UnwindFast(uptr pc, uptr bp, uptr stack_top,$/;"	f	class:__sanitizer::BufferedStackTrace
UnwindImpl	asan/asan_stack.cpp	/^void __sanitizer::BufferedStackTrace::UnwindImpl($/;"	f	class:__sanitizer::BufferedStackTrace
UnwindImpl	hwasan/hwasan.cpp	/^void __sanitizer::BufferedStackTrace::UnwindImpl($/;"	f	class:__sanitizer::BufferedStackTrace
UnwindImpl	lsan/lsan.cpp	/^void __sanitizer::BufferedStackTrace::UnwindImpl($/;"	f	class:__sanitizer::BufferedStackTrace
UnwindImpl	tsan/tsan_stack_trace.cpp	/^void __sanitizer::BufferedStackTrace::UnwindImpl($/;"	f	class:__sanitizer::BufferedStackTrace
UnwindImpl	ubsan/ubsan_diag_standalone.cpp	/^void __sanitizer::BufferedStackTrace::UnwindImpl($/;"	f	class:__sanitizer::BufferedStackTrace
UnwindSignalStackCallbackType	sanitizer_common/sanitizer_common.h	/^typedef void (*UnwindSignalStackCallbackType)(const SignalContext &sig,$/;"	t	namespace:__sanitizer
UnwindSlow	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^void BufferedStackTrace::UnwindSlow(uptr pc, u32 max_depth) {$/;"	f	class:__sanitizer::BufferedStackTrace
UnwindSlow	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^void BufferedStackTrace::UnwindSlow(uptr pc, void *context, u32 max_depth) {$/;"	f	class:__sanitizer::BufferedStackTrace
UnwindSlow	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^void BufferedStackTrace::UnwindSlow(uptr pc, u32 max_depth) {$/;"	f	class:__sanitizer::BufferedStackTrace
UnwindSlow	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^void BufferedStackTrace::UnwindSlow(uptr pc, void *context, u32 max_depth) {$/;"	f	class:__sanitizer::BufferedStackTrace
UnwindSlow	sanitizer_common/sanitizer_unwind_win.cpp	/^void BufferedStackTrace::UnwindSlow(uptr pc, u32 max_depth) {$/;"	f	class:BufferedStackTrace
UnwindSlow	sanitizer_common/sanitizer_unwind_win.cpp	/^void BufferedStackTrace::UnwindSlow(uptr pc, void *context, u32 max_depth) {$/;"	f	class:BufferedStackTrace
UnwindTraceArg	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^struct UnwindTraceArg {$/;"	s	namespace:__sanitizer
UnwindTraceArg	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^struct UnwindTraceArg {$/;"	s	namespace:__sanitizer::__anon64
Unwind_GetIP	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^uptr Unwind_GetIP(struct _Unwind_Context *ctx) {$/;"	f	namespace:__sanitizer::__anon64
Unwind_Trace	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^_Unwind_Reason_Code Unwind_Trace(struct _Unwind_Context *ctx, void *param) {$/;"	f	namespace:__sanitizer
Unwind_Trace	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^_Unwind_Reason_Code Unwind_Trace(struct _Unwind_Context *ctx, void *param) {$/;"	f	namespace:__sanitizer::__anon64
UpdateAllocationStack	asan/asan_allocator.cpp	/^  bool UpdateAllocationStack(uptr addr, BufferedStackTrace *stack) {$/;"	f	struct:__asan::Allocator
UpdateClockCallback	tsan/tsan_rtl_mutex.cpp	/^static void UpdateClockCallback(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
UpdateCurrentThread	tsan/tsan_clock.cpp	/^void ThreadClock::UpdateCurrentThread(ClockCache *c, SyncClock *dst) const {$/;"	f	class:__tsan::ThreadClock
UpdateFlags	tsan/tsan_sync.h	/^  void UpdateFlags(u32 flagz) {$/;"	f	struct:__tsan::SyncVar
UpdateMemoryUsage	hwasan/hwasan.cpp	/^void UpdateMemoryUsage() {$/;"	f	namespace:__hwasan
UpdateMemoryUsage	hwasan/hwasan.cpp	/^void UpdateMemoryUsage() {}$/;"	f	namespace:__hwasan
UpdateProcessName	sanitizer_common/sanitizer_common.cpp	/^void UpdateProcessName() {$/;"	f	namespace:__sanitizer
UpdateSleepClockCallback	tsan/tsan_rtl_mutex.cpp	/^static void UpdateSleepClockCallback(ThreadContextBase *tctx_base, void *arg) {$/;"	f	namespace:__tsan
UptrComparisonFunction	sanitizer_common/sanitizer_common.cpp	/^typedef bool UptrComparisonFunction(const uptr &a, const uptr &b);$/;"	t	namespace:__sanitizer
UseLocalPool	asan/asan_malloc_linux.cpp	/^static inline bool UseLocalPool() {$/;"	f
UseODRIndicator	asan/asan_globals.cpp	/^static inline bool UseODRIndicator(const Global *g) {$/;"	f	namespace:__asan
UsedSize	asan/asan_allocator.cpp	/^  uptr UsedSize() const {$/;"	f	class:__asan::ChunkHeader
UsedSize	asan/asan_allocator.cpp	/^uptr AsanChunkView::UsedSize() const { return chunk_->UsedSize(); }$/;"	f	class:__asan::AsanChunkView
UsedSize	hwasan/hwasan_allocator.cpp	/^uptr HwasanChunkView::UsedSize() const {$/;"	f	class:__hwasan::HwasanChunkView
UserDieCallback	sanitizer_common/sanitizer_termination.cpp	/^static DieCallbackType UserDieCallback;$/;"	m	namespace:__sanitizer
UserRequestedAlignment	asan/asan_allocator.cpp	/^u32 AsanChunkView::UserRequestedAlignment() const {$/;"	f	class:__asan::AsanChunkView
VLABoundData	ubsan/ubsan_handlers.h	/^struct VLABoundData {$/;"	s	namespace:__ubsan
VMA_BITS	asan/asan_mapping_sparc64.h	22;"	d
VM_MEMORY_SANITIZER	sanitizer_common/sanitizer_mac.cpp	110;"	d
VPrintf	sanitizer_common/sanitizer_common.h	223;"	d
VReport	sanitizer_common/sanitizer_common.h	219;"	d
VSNPrintf	sanitizer_common/sanitizer_printf.cpp	/^int VSNPrintf(char *buff, int buff_length,$/;"	f	namespace:__sanitizer
Val	ubsan/ubsan_value.h	/^  ValueHandle Val;$/;"	m	class:__ubsan::Value
ValgrindSlowdown	tsan/tsan_interface_ann.cpp	/^double __attribute__((weak)) INTERFACE_ATTRIBUTE ValgrindSlowdown(void) {$/;"	f
Validate	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static void Validate() {$/;"	f	class:SizeClassMap
Value	ubsan/ubsan_value.h	/^  Value(const TypeDescriptor &Type, ValueHandle Val) : Type(Type), Val(Val) {}$/;"	f	class:__ubsan::Value
Value	ubsan/ubsan_value.h	/^class Value {$/;"	c	namespace:__ubsan
ValueHandle	ubsan/ubsan_value.h	/^typedef uptr ValueHandle;$/;"	t	namespace:__ubsan
VarSizeStackTrace	tsan/tsan_stack_trace.cpp	/^VarSizeStackTrace::VarSizeStackTrace()$/;"	f	class:__tsan::VarSizeStackTrace
VarSizeStackTrace	tsan/tsan_stack_trace.h	/^struct VarSizeStackTrace : public StackTrace {$/;"	s	namespace:__tsan
VdsoBeg	tsan/tsan_platform.h	/^uptr VdsoBeg(void) {$/;"	f	namespace:__tsan
Vector	sanitizer_common/sanitizer_vector.h	/^  Vector() : begin_(), end_(), last_() {}$/;"	f	class:__sanitizer::Vector
Vector	sanitizer_common/sanitizer_vector.h	/^class Vector {$/;"	c	namespace:__sanitizer
VectorOfGlobals	asan/asan_globals.cpp	/^typedef InternalMmapVector<DynInitGlobal> VectorOfGlobals;$/;"	t	namespace:__asan
Verbosity	sanitizer_common/sanitizer_common.h	/^inline int Verbosity() {$/;"	f	namespace:__sanitizer
VersionBase	sanitizer_common/sanitizer_mac.h	/^  VersionBase(u16 major, u16 minor) : major(major), minor(minor) {}$/;"	f	struct:__sanitizer::VersionBase
VersionBase	sanitizer_common/sanitizer_mac.h	/^struct VersionBase {$/;"	s	namespace:__sanitizer
VeryCompactSizeClassMap	sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<2, 5, 9, 16, 64, 14> VeryCompactSizeClassMap;$/;"	t
VeryDenseSizeClassMap	sanitizer_common/sanitizer_allocator_size_class_map.h	/^typedef SizeClassMap<2, 5, 9, 16, 8, 10> VeryDenseSizeClassMap;$/;"	t
VisitAllLiveThreads	hwasan/hwasan_thread_list.h	/^  void VisitAllLiveThreads(CB cb) {$/;"	f	class:__hwasan::HwasanThreadList
VptrMaxOffsetToTop	ubsan/ubsan_type_hash.h	/^const int VptrMaxOffsetToTop = 1<<20;$/;"	m	namespace:__ubsan
VptrTypeCacheSize	ubsan/ubsan_type_hash.h	/^const unsigned VptrTypeCacheSize = 128;$/;"	m	namespace:__ubsan
VtablePrefix	ubsan/ubsan_type_hash_itanium.cpp	/^struct VtablePrefix {$/;"	s	namespace:__anon4
WARN_UNUSED_RESULT	sanitizer_common/sanitizer_common.h	/^                             const char *name = nullptr) WARN_UNUSED_RESULT;$/;"	m	namespace:__sanitizer
WARN_UNUSED_RESULT	sanitizer_common/sanitizer_common.h	/^     WARN_UNUSED_RESULT;$/;"	m	namespace:__sanitizer
WARN_UNUSED_RESULT	sanitizer_common/sanitizer_internal_defs.h	217;"	d
WARN_UNUSED_RESULT	sanitizer_common/sanitizer_internal_defs.h	236;"	d
WEAK_DEFAULT_NAME	sanitizer_common/sanitizer_win_defs.h	89;"	d
WEAK_EXPORT_NAME	sanitizer_common/sanitizer_win_defs.h	91;"	d
WIDE	builtins/assembly.h	125;"	d
WIDE	builtins/assembly.h	127;"	d
WIN32_LEAN_AND_MEAN	asan/asan_win.cpp	16;"	d
WIN32_LEAN_AND_MEAN	asan/asan_win_dynamic_runtime_thunk.cpp	26;"	d
WIN32_LEAN_AND_MEAN	interception/interception_win.cpp	131;"	d
WIN32_LEAN_AND_MEAN	sanitizer_common/sanitizer_dbghelp.h	21;"	d
WIN32_LEAN_AND_MEAN	sanitizer_common/sanitizer_unwind_win.cpp	16;"	d
WIN32_LEAN_AND_MEAN	sanitizer_common/sanitizer_win.cpp	17;"	d
WINAPI	sanitizer_common/sanitizer_win_defs.h	20;"	d
WINAPI	sanitizer_common/sanitizer_win_defs.h	22;"	d
WIN_EXPORT	sanitizer_common/sanitizer_win_defs.h	75;"	d
WIN_EXPORT_PREFIX	sanitizer_common/sanitizer_win_defs.h	37;"	d
WIN_EXPORT_PREFIX	sanitizer_common/sanitizer_win_defs.h	39;"	d
WIN_FORCE_LINK	sanitizer_common/sanitizer_win_defs.h	72;"	d
WIN_SYM_PREFIX	sanitizer_common/sanitizer_win_defs.h	27;"	d
WIN_SYM_PREFIX	sanitizer_common/sanitizer_win_defs.h	29;"	d
WIN_WEAK_ALIAS	sanitizer_common/sanitizer_win_defs.h	68;"	d
WIN_WEAK_EXPORT_DEF	sanitizer_common/sanitizer_win_defs.h	168;"	d
WIN_WEAK_EXPORT_DEF	sanitizer_common/sanitizer_win_defs.h	96;"	d
WIN_WEAK_IMPORT_DEF	sanitizer_common/sanitizer_win_defs.h	105;"	d
WRAP	interception/interception.h	120;"	d
WRAP	interception/interception.h	126;"	d
WRAP	interception/interception.h	134;"	d
WRAP	interception/interception.h	139;"	d
WRAP	interception/interception.h	149;"	d
WRAPPER_NAME	interception/interception.h	121;"	d
WRAPPER_NAME	interception/interception.h	127;"	d
WRAPPER_NAME	interception/interception.h	135;"	d
WRAPPER_NAME	interception/interception.h	140;"	d
WRAPPER_NAME	interception/interception.h	150;"	d
WRITE	sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	e	enum:__sanitizer::SignalContext::WriteFlag
WTFAnnotateBenignRaceSized	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE WTFAnnotateBenignRaceSized($/;"	f
WTFAnnotateHappensAfter	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE WTFAnnotateHappensAfter(char *f, int l, uptr addr) {$/;"	f
WTFAnnotateHappensBefore	tsan/tsan_interface_ann.cpp	/^void INTERFACE_ATTRIBUTE WTFAnnotateHappensBefore(char *f, int l, uptr addr) {$/;"	f
WaitForProcess	sanitizer_common/sanitizer_posix_libcdep.cpp	/^int WaitForProcess(pid_t pid) {$/;"	f	namespace:__sanitizer
WaitForProcess	sanitizer_common/sanitizer_win.cpp	/^int WaitForProcess(pid_t pid) { return -1; }$/;"	f	namespace:__sanitizer
Warning	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Warning() const { return Red(); }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
White	sanitizer_common/sanitizer_report_decorator.h	/^  const char *White()   const { return ansi_ ? "\\033[1m\\033[37m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
WillUseFastUnwind	sanitizer_common/sanitizer_stacktrace.h	/^  static bool WillUseFastUnwind(bool request_fast_unwind) {$/;"	f	struct:__sanitizer::StackTrace
WinSymbolizerTool	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  WinSymbolizerTool() {}$/;"	f	class:__sanitizer::__anon9::final
WordIsPoisoned	asan/asan_poisoning.cpp	/^bool WordIsPoisoned(uptr addr) {$/;"	f	namespace:__lsan
WordIsPoisoned	lsan/lsan.cpp	/^bool WordIsPoisoned(uptr addr) {$/;"	f	namespace:__lsan
Worker	sanitizer_common/sanitizer_thread_registry.h	/^  Worker,  \/\/ macOS Grand Central Dispatch (GCD) worker thread$/;"	m	class:__sanitizer::ThreadType
WrOnly	sanitizer_common/sanitizer_file.h	/^  WrOnly,$/;"	e	enum:__sanitizer::FileAccessMode
Write	sanitizer_common/sanitizer_posix.cpp	/^void ReportFile::Write(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::ReportFile
Write	sanitizer_common/sanitizer_rtems.cpp	/^void ReportFile::Write(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::ReportFile
Write	sanitizer_common/sanitizer_win.cpp	/^void ReportFile::Write(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::ReportFile
WriteBranch	interception/interception_win.cpp	/^static void WriteBranch($/;"	f	namespace:__interception
WriteDirectBranch	interception/interception_win.cpp	/^static void WriteDirectBranch(uptr from, uptr target) {$/;"	f	namespace:__interception
WriteFlag	sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	g	struct:__sanitizer::SignalContext
WriteIndirectJumpInstruction	interception/interception_win.cpp	/^static void WriteIndirectJumpInstruction(uptr from, uptr indirect_target) {$/;"	f	namespace:__interception
WriteJumpInstruction	interception/interception_win.cpp	/^static void WriteJumpInstruction(uptr from, uptr target) {$/;"	f	namespace:__interception
WriteMemoryProfile	tsan/tsan_platform_linux.cpp	/^void WriteMemoryProfile(char *buf, uptr buf_size, uptr nthread, uptr nlive) {$/;"	f	namespace:__tsan
WriteMemoryProfile	tsan/tsan_platform_mac.cpp	/^void WriteMemoryProfile(char *buf, uptr buf_size, uptr nthread, uptr nlive) {$/;"	f	namespace:__tsan
WriteMemoryProfile	tsan/tsan_platform_windows.cpp	/^void WriteMemoryProfile(char *buf, uptr buf_size, uptr nthread, uptr nlive) {$/;"	f	namespace:__tsan
WriteModuleCoverage	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static void WriteModuleCoverage(char* file_path, const char* module_name,$/;"	f	namespace:__sancov::__anon40
WriteOneLineToSyslog	sanitizer_common/sanitizer_common.h	/^inline void WriteOneLineToSyslog(const char *s) {}$/;"	f	namespace:__sanitizer
WriteOneLineToSyslog	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void WriteOneLineToSyslog(const char *s) { syslog(LOG_INFO, "%s", s); }$/;"	f	namespace:__sanitizer
WriteOneLineToSyslog	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void WriteOneLineToSyslog(const char *s) {$/;"	f	namespace:__sanitizer
WriteOneLineToSyslog	sanitizer_common/sanitizer_mac.cpp	/^void WriteOneLineToSyslog(const char *s) {$/;"	f	namespace:__sanitizer
WritePadding	interception/interception_win.cpp	/^static void WritePadding(uptr from, uptr size) {$/;"	f	namespace:__interception
WriteShortJumpInstruction	interception/interception_win.cpp	/^static void WriteShortJumpInstruction(uptr from, uptr target) {$/;"	f	namespace:__interception
WriteToFile	sanitizer_common/sanitizer_posix.cpp	/^bool WriteToFile(fd_t fd, const void *buff, uptr buff_size, uptr *bytes_written,$/;"	f	namespace:__sanitizer
WriteToFile	sanitizer_common/sanitizer_rtems.cpp	/^bool WriteToFile(fd_t fd, const void *buff, uptr buff_size, uptr *bytes_written,$/;"	f	namespace:__sanitizer
WriteToFile	sanitizer_common/sanitizer_win.cpp	/^bool WriteToFile(fd_t fd, const void *buff, uptr buff_size, uptr *bytes_written,$/;"	f	namespace:__sanitizer
WriteToSymbolizer	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^bool SymbolizerProcess::WriteToSymbolizer(const char *buffer, uptr length) {$/;"	f	class:__sanitizer::SymbolizerProcess
WriteToSyslog	sanitizer_common/sanitizer_common_libcdep.cpp	/^void WriteToSyslog(const char *msg) {$/;"	f	namespace:__sanitizer
WriteToSyslog	sanitizer_common/sanitizer_common_nolibc.cpp	/^void WriteToSyslog(const char *buffer) {}$/;"	f	namespace:__sanitizer
XDR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(XDR);$/;"	v
XDR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(XDR);$/;"	v
XDR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(XDR);$/;"	v
XElf32_Phdr	sanitizer_common/sanitizer_freebsd.h	/^} XElf32_Phdr;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon63
Yellow	sanitizer_common/sanitizer_report_decorator.h	/^  const char *Yellow()  const { return ansi_ ? "\\033[1m\\033[33m" : ""; }$/;"	f	class:__sanitizer::SanitizerCommonDecorator
_CrtDbgReport	asan/asan_malloc_win.cpp	/^int _CrtDbgReport(int, const char*, int,$/;"	f
_CrtDbgReportW	asan/asan_malloc_win.cpp	/^int _CrtDbgReportW(int reportType, const wchar_t*, int,$/;"	f
_CrtSetReportMode	asan/asan_malloc_win.cpp	/^int _CrtSetReportMode(int, int) {$/;"	f
_DARWIN_USE_64_BIT_INODE	sanitizer_common/sanitizer_mac.cpp	21;"	d
_DYNAMIC	asan/asan_linux.cpp	/^extern "C" void* _DYNAMIC;$/;"	v
_DYNAMIC	sanitizer_common/sanitizer_linux.cpp	/^extern "C" __attribute__((weak)) void* _DYNAMIC;$/;"	m	namespace:__sanitizer
_FILE_OFFSET_BITS	sanitizer_common/sanitizer_platform_limits_posix.cpp	23;"	d
_FILE_OFFSET_BITS	sanitizer_common/sanitizer_procmaps_solaris.cpp	18;"	d
_GNU_SOURCE	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	24;"	d
_IO_backup_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_backup_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_buf_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_buf_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_buf_end	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_buf_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_read_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_read_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_read_end	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_read_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_read_ptr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_read_ptr;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_save_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_save_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_save_end	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_save_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_write_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_write_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_write_end	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_write_end;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_IO_write_ptr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *_IO_write_ptr;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_KERNEL	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	80;"	d
_KERNEL	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	82;"	d
_KMEMUSER	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	18;"	d
_LINUX_IN_H	include/system/linux/mroute.h	5;"	d
_MM_MALLOC_H_INCLUDED	tsan/tsan_rtl.cpp	33;"	d
_REAL	sanitizer_common/sanitizer_netbsd.cpp	88;"	d
_REAL	sanitizer_common/sanitizer_solaris.cpp	45;"	d
_REAL64	sanitizer_common/sanitizer_solaris.cpp	53;"	d
_RTLD_SOURCE	sanitizer_common/sanitizer_linux_libcdep.cpp	32;"	d
_TEB	asan/asan_win.cpp	/^typedef struct _TEB {$/;"	s	namespace:__asan
__ARM_FEATURE_CLZ	builtins/assembly.h	104;"	d
__C_specific_handler	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(__C_specific_handler);$/;"	v
__GLIBC_PREREQ	sanitizer_common/sanitizer_glibc_version.h	23;"	d
__INT64_C	sanitizer_common/sanitizer_internal_defs.h	338;"	d
__INT64_C	sanitizer_common/sanitizer_internal_defs.h	341;"	d
__INT64_C	sanitizer_common/sanitizer_internal_defs.h	344;"	d
__LEGACY_PT_LWPINFO	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	20;"	d
__MM_MALLOC_H	tsan/tsan_rtl.cpp	34;"	d
__SANITIZER_TASK_VM_INFO_COUNT	sanitizer_common/sanitizer_mac.cpp	1097;"	d
__TSAN_HAS_INT128	include/sanitizer/tsan_interface_atomic.h	27;"	d
__TSAN_HAS_INT128	include/sanitizer/tsan_interface_atomic.h	29;"	d
__TSAN_HAS_INT128	tsan/tsan_interface.h	201;"	d
__TSAN_HAS_INT128	tsan/tsan_interface.h	203;"	d
__UINT64_C	sanitizer_common/sanitizer_internal_defs.h	339;"	d
__UINT64_C	sanitizer_common/sanitizer_internal_defs.h	342;"	d
__UINT64_C	sanitizer_common/sanitizer_internal_defs.h	345;"	d
___unused	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned long ___unused[4];$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
___unused	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long ___unused[4];$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
__ai_pad0	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int __ai_pad0;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
__asan	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^namespace __asan {$/;"	n
__asan	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_flags.h	/^namespace __asan {$/;"	n
__asan	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors.h	/^namespace __asan {$/;"	n
__asan	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	/^namespace __asan {$/;"	n
__asan	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^namespace __asan {$/;"	n
__asan	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^namespace __asan {$/;"	n
__asan	asan/asan_activation.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_activation.h	/^namespace __asan {$/;"	n
__asan	asan/asan_allocator.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_allocator.h	/^namespace __asan {$/;"	n
__asan	asan/asan_descriptions.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_descriptions.h	/^namespace __asan {$/;"	n
__asan	asan/asan_errors.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_errors.h	/^namespace __asan {$/;"	n
__asan	asan/asan_fake_stack.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_fake_stack.h	/^namespace __asan {$/;"	n
__asan	asan/asan_flags.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_flags.h	/^namespace __asan {$/;"	n
__asan	asan/asan_fuchsia.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_globals.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_globals_win.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_interceptors.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_interceptors.h	/^namespace __asan {$/;"	n
__asan	asan/asan_interceptors_memintrinsics.h	/^namespace __asan {$/;"	n
__asan	asan/asan_internal.h	/^namespace __asan {$/;"	n
__asan	asan/asan_linux.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_mac.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_malloc_linux.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_malloc_win.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_mapping.h	/^namespace __asan {$/;"	n
__asan	asan/asan_mapping_myriad.h	/^namespace __asan {$/;"	n
__asan	asan/asan_mapping_sparc64.h	/^namespace __asan {$/;"	n
__asan	asan/asan_memory_profile.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_poisoning.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_poisoning.h	/^namespace __asan {$/;"	n
__asan	asan/asan_posix.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_premap_shadow.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_premap_shadow.h	/^namespace __asan {$/;"	n
__asan	asan/asan_report.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_report.h	/^namespace __asan {$/;"	n
__asan	asan/asan_rtems.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_rtl.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_scariness_score.h	/^namespace __asan {$/;"	n
__asan	asan/asan_shadow_setup.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_stack.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_stack.h	/^namespace __asan {$/;"	n
__asan	asan/asan_stats.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_stats.h	/^namespace __asan {$/;"	n
__asan	asan/asan_suppressions.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_suppressions.h	/^namespace __asan {$/;"	n
__asan	asan/asan_thread.cpp	/^namespace __asan {$/;"	n
__asan	asan/asan_thread.h	/^namespace __asan {$/;"	n
__asan	asan/asan_win.cpp	/^namespace __asan {$/;"	n
__asan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __asan {$/;"	n
__asan_addr_is_in_fake_stack	asan/asan_fake_stack.cpp	/^void *__asan_addr_is_in_fake_stack(void *fake_stack, void *addr, void **beg,$/;"	f
__asan_address_is_poisoned	asan/asan_poisoning.cpp	/^int __asan_address_is_poisoned(void const volatile *addr) {$/;"	f
__asan_after_dynamic_init	asan/asan_globals.cpp	/^void __asan_after_dynamic_init() {$/;"	f
__asan_alloca_poison	asan/asan_fake_stack.cpp	/^void __asan_alloca_poison(uptr addr, uptr size) {$/;"	f
__asan_allocas_unpoison	asan/asan_fake_stack.cpp	/^void __asan_allocas_unpoison(uptr top, uptr bottom) {$/;"	f
__asan_before_dynamic_init	asan/asan_globals.cpp	/^void __asan_before_dynamic_init(const char *module_name) {$/;"	f
__asan_describe_address	asan/asan_report.cpp	/^void __asan_describe_address(uptr addr) {$/;"	f
__asan_dso_reg_hook	asan/asan_globals_win.cpp	/^void (*const __asan_dso_reg_hook)() = &register_dso_globals;$/;"	m	namespace:__asan
__asan_dso_unreg_hook	asan/asan_globals_win.cpp	/^void (*const __asan_dso_unreg_hook)() = &unregister_dso_globals;$/;"	m	namespace:__asan
__asan_exp_loadN	asan/asan_rtl.cpp	/^void __asan_exp_loadN(uptr addr, uptr size, u32 exp) {$/;"	f	namespace:__asan
__asan_exp_storeN	asan/asan_rtl.cpp	/^void __asan_exp_storeN(uptr addr, uptr size, u32 exp) {$/;"	f	namespace:__asan
__asan_extra_spill_area	asan/asan_rtl.cpp	/^extern "C" void *__asan_extra_spill_area() {$/;"	f
__asan_get_alloc_stack	asan/asan_debugging.cpp	/^uptr __asan_get_alloc_stack(uptr addr, uptr *trace, uptr size, u32 *thread_id) {$/;"	f
__asan_get_current_fake_stack	asan/asan_fake_stack.cpp	/^void *__asan_get_current_fake_stack() { return GetFakeStackFast(); }$/;"	f
__asan_get_free_stack	asan/asan_debugging.cpp	/^uptr __asan_get_free_stack(uptr addr, uptr *trace, uptr size, u32 *thread_id) {$/;"	f
__asan_get_report_access_size	asan/asan_report.cpp	/^uptr __asan_get_report_access_size() {$/;"	f
__asan_get_report_access_type	asan/asan_report.cpp	/^int __asan_get_report_access_type() {$/;"	f
__asan_get_report_address	asan/asan_report.cpp	/^uptr __asan_get_report_address() {$/;"	f
__asan_get_report_bp	asan/asan_report.cpp	/^uptr __asan_get_report_bp() {$/;"	f
__asan_get_report_description	asan/asan_report.cpp	/^const char *__asan_get_report_description() {$/;"	f
__asan_get_report_pc	asan/asan_report.cpp	/^uptr __asan_get_report_pc() {$/;"	f
__asan_get_report_sp	asan/asan_report.cpp	/^uptr __asan_get_report_sp() {$/;"	f
__asan_get_shadow_mapping	asan/asan_debugging.cpp	/^void __asan_get_shadow_mapping(uptr *shadow_scale, uptr *shadow_offset) {$/;"	f
__asan_get_shadow_memory_dynamic_address	asan/asan_win.cpp	/^uptr __asan_get_shadow_memory_dynamic_address() {$/;"	f
__asan_global	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^  struct __asan_global {$/;"	s
__asan_global	asan/asan_interface_internal.h	/^  struct __asan_global {$/;"	s
__asan_global_source_location	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^  struct __asan_global_source_location {$/;"	s
__asan_global_source_location	asan/asan_interface_internal.h	/^  struct __asan_global_source_location {$/;"	s
__asan_globals_end	asan/asan_globals_win.cpp	/^    ALIGNED(sizeof(__asan_global)) __asan_global __asan_globals_end = {};$/;"	m	namespace:__asan
__asan_globals_start	asan/asan_globals_win.cpp	/^    ALIGNED(sizeof(__asan_global)) __asan_global __asan_globals_start = {};$/;"	m	namespace:__asan
__asan_handle_no_return	asan/asan_rtl.cpp	/^void NOINLINE __asan_handle_no_return() {$/;"	f
__asan_handle_vfork	asan/asan_rtl.cpp	/^void __asan_handle_vfork(void *sp) {$/;"	f
__asan_init	asan/asan_rtl.cpp	/^void __asan_init() {$/;"	f
__asan_initialize_cloned_variables	asan/asan_win_dynamic_runtime_thunk.cpp	/^__declspec(allocate(".CRT$XIB")) int (*__asan_initialize_cloned_variables)() =$/;"	v
__asan_internal_memcmp	libbacktrace/bridge.cc	/^__asan_internal_memcmp (const void *s1, const void *s2, size_t n)$/;"	f
__asan_internal_memcpy	libbacktrace/bridge.cc	/^__asan_internal_memcpy (void *dest, const void *src, size_t n)$/;"	f
__asan_internal_memset	libbacktrace/bridge.cc	/^__asan_internal_memset (void *dest, int c, size_t n)$/;"	f
__asan_internal_strcmp	libbacktrace/bridge.cc	/^__asan_internal_strcmp (const char *s1, const char *s2)$/;"	f
__asan_internal_strlen	libbacktrace/bridge.cc	/^__asan_internal_strlen (const char *str)$/;"	f
__asan_internal_strncmp	libbacktrace/bridge.cc	/^__asan_internal_strncmp (const char *s1, const char *s2, size_t n)$/;"	f
__asan_internal_strnlen	libbacktrace/bridge.cc	/^__asan_internal_strnlen (const char *str, size_t n)$/;"	f
__asan_loadN	asan/asan_rtl.cpp	/^void __asan_loadN(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_loadN_noabort	asan/asan_rtl.cpp	/^void __asan_loadN_noabort(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_load_cxx_array_cookie	asan/asan_poisoning.cpp	/^uptr __asan_load_cxx_array_cookie(uptr *p) {$/;"	f
__asan_locate_address	asan/asan_debugging.cpp	/^const char *__asan_locate_address(uptr addr, char *name, uptr name_size,$/;"	f
__asan_memcpy	asan/asan_interceptors_memintrinsics.cpp	/^void *__asan_memcpy(void *to, const void *from, uptr size) {$/;"	f
__asan_memmove	asan/asan_interceptors_memintrinsics.cpp	/^void *__asan_memmove(void *to, const void *from, uptr size) {$/;"	f
__asan_memset	asan/asan_interceptors_memintrinsics.cpp	/^void *__asan_memset(void *block, int c, uptr size) {$/;"	f
__asan_option_detect_stack_use_after_return	asan/asan_rtl.cpp	/^int __asan_option_detect_stack_use_after_return;  \/\/ Global interface symbol.$/;"	v
__asan_option_detect_stack_use_after_return	asan/asan_win_dll_thunk.cpp	/^int __asan_option_detect_stack_use_after_return;$/;"	v
__asan_option_detect_stack_use_after_return	asan/asan_win_dynamic_runtime_thunk.cpp	/^int __asan_option_detect_stack_use_after_return;$/;"	v
__asan_poison_cxx_array_cookie	asan/asan_poisoning.cpp	/^void __asan_poison_cxx_array_cookie(uptr p) {$/;"	f
__asan_poison_intra_object_redzone	asan/asan_poisoning.cpp	/^void __asan_poison_intra_object_redzone(uptr ptr, uptr size) {$/;"	f
__asan_poison_memory_region	asan/asan_poisoning.cpp	/^void __asan_poison_memory_region(void const volatile *addr, uptr size) {$/;"	f
__asan_poison_stack_memory	asan/asan_poisoning.cpp	/^void __asan_poison_stack_memory(uptr addr, uptr size) {$/;"	f
__asan_preinit	asan/asan_win_dll_thunk.cpp	/^__declspec(allocate(".CRT$XIB")) int (*__asan_preinit)() = asan_dll_thunk_init;$/;"	v
__asan_premap_shadow	asan/asan_premap_shadow.cpp	/^decltype(__asan_shadow)* __asan_premap_shadow() {$/;"	f
__asan_print_accumulated_stats	asan/asan_stats.cpp	/^void __asan_print_accumulated_stats() {$/;"	f
__asan_region_is_poisoned	asan/asan_poisoning.cpp	/^uptr __asan_region_is_poisoned(uptr beg, uptr size) {$/;"	f
__asan_register_elf_globals	asan/asan_globals.cpp	/^void __asan_register_elf_globals(uptr *flag, void *start, void *stop) {$/;"	f
__asan_register_globals	asan/asan_globals.cpp	/^void __asan_register_globals(__asan_global *globals, uptr n) {$/;"	f
__asan_register_image_globals	asan/asan_globals.cpp	/^void __asan_register_image_globals(uptr *flag) {$/;"	f
__asan_report_error	asan/asan_report.cpp	/^void __asan_report_error(uptr pc, uptr bp, uptr sp, uptr addr, int is_write,$/;"	f
__asan_report_present	asan/asan_report.cpp	/^int __asan_report_present() {$/;"	f
__asan_rt_version	asan/asan_linux.cpp	/^asan_rt_version_t  __asan_rt_version;$/;"	v
__asan_schedule_unregister_globals	asan/asan_win_dynamic_runtime_thunk.cpp	/^int (*__asan_schedule_unregister_globals)() = ScheduleUnregisterGlobals;$/;"	v
__asan_seh_interceptor	asan/asan_win_dynamic_runtime_thunk.cpp	/^__declspec(allocate(".CRT$XCAB")) int (*__asan_seh_interceptor)() =$/;"	v
__asan_set_death_callback	asan/asan_rtl.cpp	/^void NOINLINE __asan_set_death_callback(void (*callback)(void)) {$/;"	f
__asan_set_error_report_callback	asan/asan_report.cpp	/^void NOINLINE __asan_set_error_report_callback(void (*callback)(const char*)) {$/;"	f
__asan_set_seh_filter	asan/asan_win.cpp	/^extern "C" SANITIZER_INTERFACE_ATTRIBUTE int __asan_set_seh_filter() {$/;"	f	namespace:__asan
__asan_set_shadow_00	asan/asan_poisoning.cpp	/^void __asan_set_shadow_00(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f1	asan/asan_poisoning.cpp	/^void __asan_set_shadow_f1(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f2	asan/asan_poisoning.cpp	/^void __asan_set_shadow_f2(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f3	asan/asan_poisoning.cpp	/^void __asan_set_shadow_f3(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f5	asan/asan_poisoning.cpp	/^void __asan_set_shadow_f5(uptr addr, uptr size) {$/;"	f
__asan_set_shadow_f8	asan/asan_poisoning.cpp	/^void __asan_set_shadow_f8(uptr addr, uptr size) {$/;"	f
__asan_shadow_memory_dynamic_address	asan/asan_rtl.cpp	/^uptr __asan_shadow_memory_dynamic_address;  \/\/ Global interface symbol.$/;"	v
__asan_shadow_memory_dynamic_address	asan/asan_win_dll_thunk.cpp	/^uptr __asan_shadow_memory_dynamic_address;$/;"	v
__asan_shadow_memory_dynamic_address	asan/asan_win_dynamic_runtime_thunk.cpp	/^void* __asan_shadow_memory_dynamic_address;$/;"	v
__asan_should_detect_stack_use_after_return	asan/asan_win.cpp	/^int __asan_should_detect_stack_use_after_return() {$/;"	f
__asan_storeN	asan/asan_rtl.cpp	/^void __asan_storeN(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_storeN_noabort	asan/asan_rtl.cpp	/^void __asan_storeN_noabort(uptr addr, uptr size) {$/;"	f	namespace:__asan
__asan_test_only_reported_buggy_pointer	asan/asan_rtl.cpp	/^uptr *__asan_test_only_reported_buggy_pointer;  \/\/ Used only for testing asan.$/;"	v
__asan_tls_exit	asan/asan_win.cpp	/^__declspec(allocate(".CRT$XLY")) void(NTAPI *__asan_tls_exit)($/;"	m	namespace:__asan
__asan_tls_init	asan/asan_win.cpp	/^__declspec(allocate(".CRT$XLAB")) void(NTAPI *__asan_tls_init)($/;"	m	namespace:__asan
__asan_tls_init	asan/asan_win_dll_thunk.cpp	/^__declspec(allocate(".CRT$XLAB")) void (WINAPI *__asan_tls_init)(void *,$/;"	v
__asan_tls_init	asan/asan_win_dynamic_runtime_thunk.cpp	/^__declspec(allocate(".CRT$XLAB")) void (NTAPI *__asan_tls_init)(void *,$/;"	v
__asan_unhandled_exception_filter	asan/asan_win.cpp	/^long __asan_unhandled_exception_filter(EXCEPTION_POINTERS *info) {$/;"	f
__asan_unpoison_intra_object_redzone	asan/asan_poisoning.cpp	/^void __asan_unpoison_intra_object_redzone(uptr ptr, uptr size) {$/;"	f
__asan_unpoison_memory_region	asan/asan_poisoning.cpp	/^void __asan_unpoison_memory_region(void const volatile *addr, uptr size) {$/;"	f
__asan_unpoison_stack_memory	asan/asan_poisoning.cpp	/^void __asan_unpoison_stack_memory(uptr addr, uptr size) {$/;"	f
__asan_unregister_elf_globals	asan/asan_globals.cpp	/^void __asan_unregister_elf_globals(uptr *flag, void *start, void *stop) {$/;"	f
__asan_unregister_globals	asan/asan_globals.cpp	/^void __asan_unregister_globals(__asan_global *globals, uptr n) {$/;"	f
__asan_unregister_image_globals	asan/asan_globals.cpp	/^void __asan_unregister_image_globals(uptr *flag) {$/;"	f
__asan_update_allocation_context	asan/asan_allocator.cpp	/^int __asan_update_allocation_context(void* addr) {$/;"	f
__asan_version_mismatch_check	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_init_version.h	38;"	d
__asan_version_mismatch_check	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_init_version.h	40;"	d
__asan_version_mismatch_check	asan/asan_init_version.h	38;"	d
__asan_version_mismatch_check	asan/asan_init_version.h	40;"	d
__asan_version_mismatch_check	asan/asan_rtl.cpp	/^void __asan_version_mismatch_check() {$/;"	f
__base_class_type_info	ubsan/ubsan_type_hash_itanium.cpp	/^class __base_class_type_info {$/;"	c	namespace:__cxxabiv1
__base_type	ubsan/ubsan_type_hash_itanium.cpp	/^  const __class_type_info *__base_type;$/;"	m	class:__cxxabiv1::__base_class_type_info
__base_type	ubsan/ubsan_type_hash_itanium.cpp	/^  const __class_type_info *__base_type;$/;"	m	class:__cxxabiv1::__si_class_type_info
__bits	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int __bits[4];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
__bits	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int __bits[4];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
__bits	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int __bits[4];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
__class_type_info	ubsan/ubsan_type_hash_itanium.cpp	/^class __class_type_info : public std::type_info {$/;"	c	namespace:__cxxabiv1
__crashreporter_info__	sanitizer_common/sanitizer_mac.h	/^static const char *__crashreporter_info__ __attribute__((__used__)) =$/;"	v
__crashreporter_info_buff__	sanitizer_common/sanitizer_mac.h	/^static char __crashreporter_info_buff__[__sanitizer::kErrorMessageBufferSize] =$/;"	v
__cxxabiv1	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^namespace __cxxabiv1 {$/;"	n
__cxxabiv1	ubsan/ubsan_type_hash_itanium.cpp	/^namespace __cxxabiv1 {$/;"	n
__dfsan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __dfsan {$/;"	n
__dll_thunk_init	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^extern "C" int __dll_thunk_init() {$/;"	f
__dll_thunk_preinit	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^__declspec(allocate(".CRT$XIB")) int (*__dll_thunk_preinit)() =$/;"	v
__dll_thunk_tls_init	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^__declspec(allocate(".CRT$XLAB")) void (WINAPI *__dll_thunk_tls_init)(void *,$/;"	v
__dsan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __dsan {$/;"	n
__errno_location	sanitizer_common/sanitizer_errno.h	25;"	d
__errno_location	sanitizer_common/sanitizer_errno.h	28;"	d
__errno_location	sanitizer_common/sanitizer_errno.h	30;"	d
__errno_location	sanitizer_common/sanitizer_errno.h	32;"	d
__fsid_val	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    s32 __fsid_val[2];$/;"	m	struct:statvfs90::__anon39
__get_tls	sanitizer_common/sanitizer_linux.h	122;"	d
__get_tls	sanitizer_common/sanitizer_linux.h	125;"	d
__get_tls	sanitizer_common/sanitizer_linux.h	130;"	d
__get_tls	sanitizer_common/sanitizer_linux.h	138;"	d
__get_tls	sanitizer_common/sanitizer_linux.h	141;"	d
__glibc_reserved1	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long __glibc_reserved1;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__glibc_reserved2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long __glibc_reserved2;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__has_attribute	sanitizer_common/sanitizer_internal_defs.h	125;"	d
__has_feature	include/sanitizer/common_interface_defs.h	20;"	d
__has_feature	sanitizer_common/sanitizer_internal_defs.h	120;"	d
__hw_jmp_buf	hwasan/hwasan.h	/^typedef struct __hw_jmp_buf_struct __hw_jmp_buf[1];$/;"	t	typeref:struct:__hw_jmp_buf_struct
__hw_jmp_buf_struct	hwasan/hwasan.h	/^struct __hw_jmp_buf_struct {$/;"	s
__hw_register_buf	hwasan/hwasan.h	/^typedef unsigned long long __hw_register_buf[22];$/;"	t
__hw_sigjmp_buf	hwasan/hwasan.h	/^typedef struct __hw_jmp_buf_struct __hw_sigjmp_buf[1];$/;"	t	typeref:struct:__hw_jmp_buf_struct
__hw_sigset_t	hwasan/hwasan.h	/^typedef unsigned long __hw_sigset_t;$/;"	t
__hwasan	hwasan/hwasan.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_allocator.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_allocator.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_checks.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_dynamic_shadow.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_dynamic_shadow.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_flags.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_globals.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_globals.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_interceptors.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_linux.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_malloc_bisect.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_mapping.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_poisoning.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_poisoning.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_report.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_report.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_thread.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_thread.h	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_thread_list.cpp	/^namespace __hwasan {$/;"	n
__hwasan	hwasan/hwasan_thread_list.h	/^namespace __hwasan {$/;"	n
__hwasan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __hwasan {$/;"	n
__hwasan_default_options	hwasan/hwasan.cpp	/^const char* __hwasan_default_options() { return ""; }$/;"	f
__hwasan_disable_allocator_tagging	hwasan/hwasan_allocator.cpp	/^void __hwasan_disable_allocator_tagging() {$/;"	f
__hwasan_enable_allocator_tagging	hwasan/hwasan_allocator.cpp	/^void __hwasan_enable_allocator_tagging() {$/;"	f
__hwasan_extra_spill_area	hwasan/hwasan.cpp	/^extern "C" void *__hwasan_extra_spill_area() {$/;"	f
__hwasan_generate_tag	hwasan/hwasan.cpp	/^u8 __hwasan_generate_tag() {$/;"	f
__hwasan_handle_longjmp	hwasan/hwasan.cpp	/^void __hwasan_handle_longjmp(const void *sp_dst) {$/;"	f
__hwasan_handle_vfork	hwasan/hwasan.cpp	/^void __hwasan_handle_vfork(const void *sp_dst) {$/;"	f
__hwasan_init	hwasan/hwasan.cpp	/^void __hwasan_init() {$/;"	f
__hwasan_init_frames	hwasan/hwasan.cpp	/^void __hwasan_init_frames(uptr beg, uptr end) {}$/;"	f
__hwasan_init_static	hwasan/hwasan.cpp	/^void __hwasan_init_static() {$/;"	f
__hwasan_load1	hwasan/hwasan.cpp	/^void __hwasan_load1(uptr p) {$/;"	f
__hwasan_load16	hwasan/hwasan.cpp	/^void __hwasan_load16(uptr p) {$/;"	f
__hwasan_load16_noabort	hwasan/hwasan.cpp	/^void __hwasan_load16_noabort(uptr p) {$/;"	f
__hwasan_load1_noabort	hwasan/hwasan.cpp	/^void __hwasan_load1_noabort(uptr p) {$/;"	f
__hwasan_load2	hwasan/hwasan.cpp	/^void __hwasan_load2(uptr p) {$/;"	f
__hwasan_load2_noabort	hwasan/hwasan.cpp	/^void __hwasan_load2_noabort(uptr p) {$/;"	f
__hwasan_load4	hwasan/hwasan.cpp	/^void __hwasan_load4(uptr p) {$/;"	f
__hwasan_load4_noabort	hwasan/hwasan.cpp	/^void __hwasan_load4_noabort(uptr p) {$/;"	f
__hwasan_load8	hwasan/hwasan.cpp	/^void __hwasan_load8(uptr p) {$/;"	f
__hwasan_load8_noabort	hwasan/hwasan.cpp	/^void __hwasan_load8_noabort(uptr p) {$/;"	f
__hwasan_loadN	hwasan/hwasan.cpp	/^void __hwasan_loadN(uptr p, uptr sz) {$/;"	f
__hwasan_loadN_noabort	hwasan/hwasan.cpp	/^void __hwasan_loadN_noabort(uptr p, uptr sz) {$/;"	f
__hwasan_memcpy	hwasan/hwasan_memintrinsics.cpp	/^void *__hwasan_memcpy(void *to, const void *from, uptr size) {$/;"	f
__hwasan_memmove	hwasan/hwasan_memintrinsics.cpp	/^void *__hwasan_memmove(void *to, const void *from, uptr size) {$/;"	f
__hwasan_memset	hwasan/hwasan_memintrinsics.cpp	/^void *__hwasan_memset(void *block, int c, uptr size) {$/;"	f
__hwasan_personality_wrapper	hwasan/hwasan_exceptions.cpp	/^__hwasan_personality_wrapper(int version, _Unwind_Action actions,$/;"	f
__hwasan_premap_shadow	hwasan/hwasan_dynamic_shadow.cpp	/^decltype(__hwasan_shadow)* __hwasan_premap_shadow() {$/;"	f
__hwasan_print_memory_usage	hwasan/hwasan.cpp	/^void __hwasan_print_memory_usage() {$/;"	f
__hwasan_print_shadow	hwasan/hwasan.cpp	/^void __hwasan_print_shadow(const void *p, uptr sz) {$/;"	f
__hwasan_shadow_memory_dynamic_address	hwasan/hwasan.cpp	/^uptr __hwasan_shadow_memory_dynamic_address;  \/\/ Global interface symbol.$/;"	v
__hwasan_store1	hwasan/hwasan.cpp	/^void __hwasan_store1(uptr p) {$/;"	f
__hwasan_store16	hwasan/hwasan.cpp	/^void __hwasan_store16(uptr p) {$/;"	f
__hwasan_store16_noabort	hwasan/hwasan.cpp	/^void __hwasan_store16_noabort(uptr p) {$/;"	f
__hwasan_store1_noabort	hwasan/hwasan.cpp	/^void __hwasan_store1_noabort(uptr p) {$/;"	f
__hwasan_store2	hwasan/hwasan.cpp	/^void __hwasan_store2(uptr p) {$/;"	f
__hwasan_store2_noabort	hwasan/hwasan.cpp	/^void __hwasan_store2_noabort(uptr p) {$/;"	f
__hwasan_store4	hwasan/hwasan.cpp	/^void __hwasan_store4(uptr p) {$/;"	f
__hwasan_store4_noabort	hwasan/hwasan.cpp	/^void __hwasan_store4_noabort(uptr p) {$/;"	f
__hwasan_store8	hwasan/hwasan.cpp	/^void __hwasan_store8(uptr p) {$/;"	f
__hwasan_store8_noabort	hwasan/hwasan.cpp	/^void __hwasan_store8_noabort(uptr p) {$/;"	f
__hwasan_storeN	hwasan/hwasan.cpp	/^void __hwasan_storeN(uptr p, uptr sz) {$/;"	f
__hwasan_storeN_noabort	hwasan/hwasan.cpp	/^void __hwasan_storeN_noabort(uptr p, uptr sz) {$/;"	f
__hwasan_tag_memory	hwasan/hwasan.cpp	/^void __hwasan_tag_memory(uptr p, u8 tag, uptr sz) {$/;"	f
__hwasan_tag_mismatch	hwasan/hwasan_tag_mismatch_aarch64.S	/^__hwasan_tag_mismatch:$/;"	l
__hwasan_tag_mismatch4	hwasan/hwasan_linux.cpp	/^void __hwasan_tag_mismatch4(uptr addr, uptr access_info, uptr *registers_frame,$/;"	f
__hwasan_tag_mismatch_v2	hwasan/hwasan_tag_mismatch_aarch64.S	/^__hwasan_tag_mismatch_v2:$/;"	l
__hwasan_tag_pointer	hwasan/hwasan.cpp	/^uptr __hwasan_tag_pointer(uptr p, u8 tag) {$/;"	f
__hwasan_test_shadow	hwasan/hwasan.cpp	/^sptr __hwasan_test_shadow(const void *p, uptr sz) {$/;"	f
__hwasan_thread_enter	hwasan/hwasan_linux.cpp	/^extern "C" void __hwasan_thread_enter() {$/;"	f	namespace:__hwasan
__hwasan_thread_exit	hwasan/hwasan_linux.cpp	/^extern "C" void __hwasan_thread_exit() {$/;"	f	namespace:__hwasan
__hwasan_tls	hwasan/hwasan_linux.cpp	/^THREADLOCAL uptr __hwasan_tls;$/;"	v
__intercept_seh	asan/asan_win.cpp	/^__declspec(allocate(".CRT$XCAB")) int (*__intercept_seh)() =$/;"	m	namespace:__asan
__interception	interception/interception.h	/^namespace __interception {$/;"	n
__interception	interception/interception_linux.cpp	/^namespace __interception {$/;"	n
__interception	interception/interception_linux.h	/^namespace __interception {$/;"	n
__interception	interception/interception_win.cpp	/^namespace __interception {$/;"	n
__interception	interception/interception_win.h	/^namespace __interception {$/;"	n
__interception	sanitizer_common/sanitizer_internal_defs.h	/^namespace __interception {$/;"	n
__interceptor___sigsetjmp	tsan/tsan_interceptors_posix.cpp	/^extern "C" int __interceptor___sigsetjmp(void *env) {$/;"	f
__interceptor__setjmp	tsan/tsan_interceptors_posix.cpp	/^extern "C" int __interceptor__setjmp(void *env) {$/;"	f
__interceptor_setjmp	hwasan/hwasan_setjmp.S	/^__interceptor_setjmp:$/;"	l
__interceptor_setjmp_bionic	hwasan/hwasan_setjmp.S	/^__interceptor_setjmp_bionic:$/;"	l
__interceptor_sigsetjmp	hwasan/hwasan_setjmp.S	/^__interceptor_sigsetjmp:$/;"	l
__jmpbuf	hwasan/hwasan.h	/^  __hw_register_buf __jmpbuf; \/\/ Calling environment.$/;"	m	struct:__hw_jmp_buf_struct
__kernel_fd_set	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__kernel_fd_set);$/;"	v
__kernel_gid_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__kernel_gid_t);$/;"	v
__kernel_loff_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__kernel_loff_t);$/;"	v
__kernel_off_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__kernel_off_t);$/;"	v
__kernel_old_gid_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__kernel_old_gid_t);$/;"	v
__kernel_old_uid_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__kernel_old_uid_t);$/;"	v
__kernel_uid_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__kernel_uid_t);$/;"	v
__key	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int __key;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__libc_free	sanitizer_common/sanitizer_allocator.cpp	48;"	d
__libc_malloc	sanitizer_common/sanitizer_allocator.cpp	38;"	d
__libc_memalign	sanitizer_common/sanitizer_allocator.cpp	/^static void *__libc_memalign(uptr alignment, uptr size) {$/;"	f	namespace:__sanitizer
__libc_realloc	sanitizer_common/sanitizer_allocator.cpp	47;"	d
__libc_stack_end	tsan/tsan_platform_linux.cpp	/^extern "C" void *__libc_stack_end;$/;"	v
__libc_stack_end	tsan/tsan_platform_linux.cpp	/^void *__libc_stack_end = 0;$/;"	v
__local_asan_dyninit	asan/asan_rtl.cpp	/^static bool UNUSED __local_asan_dyninit = [] {$/;"	m	namespace:__asan
__local_asan_preinit	asan/asan_preinit.cpp	/^  void (*__local_asan_preinit)(void) = __asan_init;$/;"	v
__local_lsan_preinit	lsan/lsan_preinit.cpp	/^  void (*__local_lsan_preinit)(void) = __lsan_init;$/;"	v
__local_tsan_preinit	tsan/tsan_preinit.cpp	/^void (*__local_tsan_preinit)(void) = __tsan_init;$/;"	v
__local_ubsan_preinit	ubsan/ubsan_init_standalone_preinit.cpp	/^__attribute__((section(".preinit_array"), used)) void (*__local_ubsan_preinit)($/;"	v
__lsan	asan/asan_allocator.cpp	/^namespace __lsan {$/;"	n
__lsan	asan/asan_poisoning.cpp	/^namespace __lsan {$/;"	n
__lsan	asan/asan_thread.cpp	/^namespace __lsan {$/;"	n
__lsan	include/sanitizer/lsan_interface.h	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan.h	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_allocator.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_allocator.h	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_common.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_common.h	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_common_fuchsia.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_common_linux.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_common_mac.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_fuchsia.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_fuchsia.h	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_interceptors.cpp	/^namespace __lsan {$/;"	n	namespace:std
__lsan	lsan/lsan_linux.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_mac.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_posix.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_posix.h	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_thread.cpp	/^namespace __lsan {$/;"	n
__lsan	lsan/lsan_thread.h	/^namespace __lsan {$/;"	n
__lsan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __lsan {$/;"	n
__lsan_default_suppressions	lsan/lsan_common.cpp	/^const char *__lsan_default_suppressions() {$/;"	f
__lsan_disable	lsan/lsan_common.cpp	/^void __lsan_disable() {$/;"	f
__lsan_do_leak_check	lsan/lsan_common.cpp	/^void __lsan_do_leak_check() {$/;"	f
__lsan_do_recoverable_leak_check	lsan/lsan_common.cpp	/^int __lsan_do_recoverable_leak_check() {$/;"	f
__lsan_enable	lsan/lsan_common.cpp	/^void __lsan_enable() {$/;"	f
__lsan_ignore_object	lsan/lsan_common.cpp	/^void __lsan_ignore_object(const void *p) {$/;"	f
__lsan_init	lsan/lsan.cpp	/^extern "C" void __lsan_init() {$/;"	f
__lsan_is_turned_off	lsan/lsan_common.cpp	/^int __lsan_is_turned_off() {$/;"	f
__lsan_register_root_region	lsan/lsan_common.cpp	/^void __lsan_register_root_region(const void *begin, uptr size) {$/;"	f
__lsan_thread_start_func	lsan/lsan_interceptors.cpp	/^extern "C" void *__lsan_thread_start_func(void *arg) {$/;"	f	namespace:std
__lsan_unregister_root_region	lsan/lsan_common.cpp	/^void __lsan_unregister_root_region(const void *begin, uptr size) {$/;"	f
__mask_was_saved	hwasan/hwasan.h	/^  int __mask_was_saved;       \/\/ Saved the signal mask?$/;"	m	struct:__hw_jmp_buf_struct
__memprof	sanitizer_common/sanitizer_internal_defs.h	/^namespace __memprof {$/;"	n
__mmap_alloc_aligned	sanitizer_common/sanitizer_rtems.cpp	32;"	d
__mmap_free	sanitizer_common/sanitizer_rtems.cpp	33;"	d
__mmap_memset	sanitizer_common/sanitizer_rtems.cpp	34;"	d
__msan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __msan {$/;"	n
__need_res_state	tsan/tsan_platform_linux.cpp	52;"	d
__offset_flags	ubsan/ubsan_type_hash_itanium.cpp	/^  long __offset_flags;$/;"	m	class:__cxxabiv1::__base_class_type_info
__offset_flags_masks	ubsan/ubsan_type_hash_itanium.cpp	/^  enum __offset_flags_masks {$/;"	g	class:__cxxabiv1::__base_class_type_info
__offset_shift	ubsan/ubsan_type_hash_itanium.cpp	/^    __offset_shift = 8$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__pad1	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u32 __pad1;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__pad2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u32 __pad2;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__pad2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned short __pad2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__pad3	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u32 __pad3;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__progname	sanitizer_common/sanitizer_linux_libcdep.cpp	/^extern "C" SANITIZER_WEAK_ATTRIBUTE char *__progname;$/;"	m	namespace:__sanitizer
__public_mask	ubsan/ubsan_type_hash_itanium.cpp	/^    __public_mask = 0x2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__run_atexit	sanitizer_common/sanitizer_win.cpp	/^__declspec(allocate(".CRT$XID")) int (*__run_atexit)() = RunAtexit;$/;"	m	namespace:__sanitizer
__sancov	sanitizer_common/sancov_flags.cpp	/^namespace __sancov {$/;"	n
__sancov	sanitizer_common/sancov_flags.h	/^namespace __sancov {$/;"	n
__sancov	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^namespace __sancov {$/;"	n
__sancov	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^namespace __sancov {$/;"	n
__sancov_lowest_stack	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_TLS_INITIAL_EXEC_ATTRIBUTE uptr __sancov_lowest_stack;$/;"	v
__sanitizer	asan/asan_thread.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lsan/lsan_common.h	/^namespace __sanitizer {$/;"	n
__sanitizer	lsan/lsan_posix.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_addrhashmap.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_allocator.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_allocator.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_allocator_checks.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_allocator_checks.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_allocator_internal.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_allocator_report.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_allocator_report.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_atomic.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_atomic_clang.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_atomic_clang_mips.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_atomic_clang_other.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_atomic_clang_x86.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_atomic_msvc.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_bitvector.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_bvgraph.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_common.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_common.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_common_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_common_nolibc.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_coverage_win_dynamic_runtime_thunk.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_dbghelp.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_deadlock_detector.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_errno.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_errno_codes.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_file.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_file.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_flag_parser.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_flag_parser.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_flags.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_flags.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_freebsd.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_fuchsia.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_fuchsia.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_hash.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_internal_defs.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_lfstack.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_libc.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_libc.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_libignore.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_libignore.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_linux.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_linux.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_linux_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_linux_s390.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_list.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_local_address_space_view.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_mac.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_mac.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_mac_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_mutex.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_netbsd.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_persistent_allocator.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_persistent_allocator.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_linux.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_posix.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_platform_limits_solaris.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_posix.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_posix.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_posix_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_printf.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_procmaps.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_procmaps_bsd.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_procmaps_common.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_procmaps_fuchsia.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_procmaps_linux.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_procmaps_mac.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_procmaps_solaris.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_quarantine.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_report_decorator.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_ring_buffer.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_rtems.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_solaris.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stackdepot.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stackdepot.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stackdepotbase.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stacktrace.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stacktrace.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stacktrace_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stacktrace_printer.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stacktrace_sparc.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stoptheworld.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stoptheworld_fuchsia.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stoptheworld_fuchsia.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_suppressions.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_suppressions.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_internal.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_mac.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_report.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_rtems.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_symbolizer_win.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_termination.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_thread_registry.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_thread_registry.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_tls_get_addr.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_tls_get_addr.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_type_traits.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_type_traits.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_vector.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_win.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_win.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_win_dll_thunk.h	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_win_dynamic_runtime_thunk.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_win_weak_interception.cpp	/^namespace __sanitizer {$/;"	n
__sanitizer	sanitizer_common/sanitizer_win_weak_interception.h	/^namespace __sanitizer {$/;"	n
__sanitizer	ubsan/ubsan_flags.h	/^namespace __sanitizer {$/;"	n
__sanitizer_FILE	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef void __sanitizer_FILE;$/;"	t	namespace:__sanitizer
__sanitizer_FILE	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_FILE {$/;"	s	namespace:__sanitizer
__sanitizer_FILE	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_FILE {$/;"	s	namespace:__sanitizer
__sanitizer_FILE	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef void __sanitizer_FILE;$/;"	t	namespace:__sanitizer
__sanitizer_FILE	sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef void __sanitizer_FILE;$/;"	t	namespace:__sanitizer
__sanitizer_XDR	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_XDR {$/;"	s	namespace:__sanitizer
__sanitizer_XDR	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_XDR {$/;"	s	namespace:__sanitizer
__sanitizer_XDR_DECODE	sanitizer_common/sanitizer_platform_limits_posix.h	/^const int __sanitizer_XDR_DECODE = 1;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_DECODE	sanitizer_common/sanitizer_platform_limits_solaris.h	/^const int __sanitizer_XDR_DECODE = 1;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_ENCODE	sanitizer_common/sanitizer_platform_limits_posix.h	/^const int __sanitizer_XDR_ENCODE = 0;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_ENCODE	sanitizer_common/sanitizer_platform_limits_solaris.h	/^const int __sanitizer_XDR_ENCODE = 0;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_FREE	sanitizer_common/sanitizer_platform_limits_posix.h	/^const int __sanitizer_XDR_FREE = 2;$/;"	m	namespace:__sanitizer
__sanitizer_XDR_FREE	sanitizer_common/sanitizer_platform_limits_solaris.h	/^const int __sanitizer_XDR_FREE = 2;$/;"	m	namespace:__sanitizer
__sanitizer___kernel_fd_set	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^} __sanitizer___kernel_fd_set;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon46
__sanitizer___kernel_fd_set	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^} __sanitizer___kernel_fd_set;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon15
__sanitizer___kernel_fd_set	sanitizer_common/sanitizer_platform_limits_posix.h	/^} __sanitizer___kernel_fd_set;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon54
__sanitizer___kernel_gid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_gid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned short __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_gid_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef u32 __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_gid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_gid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned short __sanitizer___kernel_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_loff_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef long long __sanitizer___kernel_loff_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_loff_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long long __sanitizer___kernel_loff_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef long long __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef u64 __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_off_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long long __sanitizer___kernel_off_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_gid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned int __sanitizer___kernel_old_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_gid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned short __sanitizer___kernel_old_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_gid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned int __sanitizer___kernel_old_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_gid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned short __sanitizer___kernel_old_gid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_uid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned int __sanitizer___kernel_old_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_uid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned short __sanitizer___kernel_old_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_uid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned int __sanitizer___kernel_old_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_old_uid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned short __sanitizer___kernel_old_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned short __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef u32 __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___kernel_uid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned short __sanitizer___kernel_uid_t;$/;"	t	namespace:__sanitizer
__sanitizer___libc_memalign	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer___libc_memalign(uptr alignment, uptr size) {$/;"	f
__sanitizer___sysctl_args	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer___sysctl_args {$/;"	s	namespace:__sanitizer
__sanitizer___sysctl_args	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer___sysctl_args {$/;"	s	namespace:__sanitizer
__sanitizer__obstack_chunk	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer__obstack_chunk {$/;"	s
__sanitizer_acquire_crash_state	sanitizer_common/sanitizer_common.cpp	/^int __sanitizer_acquire_crash_state() {$/;"	f
__sanitizer_addrinfo	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_addrinfo	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_addrinfo	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_addrinfo	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_addrinfo {$/;"	s	namespace:__sanitizer
__sanitizer_aiocb	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_aiocb {$/;"	s	namespace:__sanitizer
__sanitizer_aligned_alloc	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_aligned_alloc(uptr alignment, uptr size) {$/;"	f
__sanitizer_annotate_contiguous_container	asan/asan_poisoning.cpp	/^void __sanitizer_annotate_contiguous_container(const void *beg_p,$/;"	f
__sanitizer_before_thread_create_hook	asan/asan_fuchsia.cpp	/^void *__sanitizer_before_thread_create_hook(thrd_t thread, bool detached,$/;"	f
__sanitizer_before_thread_create_hook	asan/asan_rtems.cpp	/^void *__sanitizer_before_thread_create_hook(uptr thread, bool detached,$/;"	f
__sanitizer_before_thread_create_hook	lsan/lsan_fuchsia.cpp	/^void *__sanitizer_before_thread_create_hook(thrd_t thread, bool detached,$/;"	f
__sanitizer_bufsiz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const unsigned long __sanitizer_bufsiz = BUFSIZ;$/;"	m	namespace:__sanitizer
__sanitizer_bufsiz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned long __sanitizer_bufsiz = BUFSIZ;$/;"	m	namespace:__sanitizer
__sanitizer_bufsiz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const unsigned long __sanitizer_bufsiz = BUFSIZ;$/;"	m	namespace:__sanitizer
__sanitizer_calloc	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_calloc(uptr nmemb, uptr size) {$/;"	f
__sanitizer_cap_rights	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_cap_rights {$/;"	s	namespace:__sanitizer
__sanitizer_cap_rights_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef struct __sanitizer_cap_rights __sanitizer_cap_rights_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__sanitizer_cap_rights
__sanitizer_cdbr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_cdbr {$/;"	s	namespace:__sanitizer
__sanitizer_cdbw	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_cdbw {$/;"	s	namespace:__sanitizer
__sanitizer_cfree	hwasan/hwasan_interceptors.cpp	/^void __sanitizer_cfree(void *ptr) {$/;"	f
__sanitizer_clock_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef int __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long long __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clock_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef long __sanitizer_clock_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef int __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef int __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_clockid_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef int __sanitizer_clockid_t;$/;"	t	namespace:__sanitizer
__sanitizer_cmsghdr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_cmsghdr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_cmsghdr	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_cmsghdr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_cmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_contiguous_container_find_bad_address	asan/asan_poisoning.cpp	/^const void *__sanitizer_contiguous_container_find_bad_address($/;"	f
__sanitizer_cookie_io_close	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef int (*__sanitizer_cookie_io_close)(void *cookie);$/;"	t
__sanitizer_cookie_io_functions_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_cookie_io_functions_t {$/;"	s
__sanitizer_cookie_io_read	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef uptr (*__sanitizer_cookie_io_read)(void *cookie, char *buf, uptr size);$/;"	t
__sanitizer_cookie_io_seek	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef int (*__sanitizer_cookie_io_seek)(void *cookie, u64 *offset,$/;"	t
__sanitizer_cookie_io_write	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef uptr (*__sanitizer_cookie_io_write)(void *cookie, const char *buf,$/;"	t
__sanitizer_cov_dump	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_cov_dump() {$/;"	f
__sanitizer_cov_dump	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_cov_dump() {$/;"	f
__sanitizer_cov_reset	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_cov_reset() {$/;"	f
__sanitizer_dirent	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_dirent {$/;"	s	namespace:__sanitizer
__sanitizer_dirent64	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_dirent64 {$/;"	s	namespace:__sanitizer
__sanitizer_dirent64	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_dirent64 {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dl_phdr_info	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_dl_phdr_info {$/;"	s	namespace:__sanitizer
__sanitizer_dump_coverage	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_coverage(const uptr *pcs,$/;"	f
__sanitizer_dump_coverage	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_coverage(const uptr* pcs,$/;"	f
__sanitizer_dump_trace_pc_guard_coverage	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_trace_pc_guard_coverage() {$/;"	f
__sanitizer_dump_trace_pc_guard_coverage	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^SANITIZER_INTERFACE_ATTRIBUTE void __sanitizer_dump_trace_pc_guard_coverage() {$/;"	f
__sanitizer_early_init	asan/asan_rtems.cpp	/^void __sanitizer_early_init() {$/;"	f
__sanitizer_esr_context	sanitizer_common/sanitizer_linux.cpp	/^struct __sanitizer_esr_context {$/;"	s	namespace:__sanitizer
__sanitizer_ether_addr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_ether_addr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_ether_addr	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_ether_addr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ether_addr {$/;"	s	namespace:__sanitizer
__sanitizer_exit	asan/asan_rtems.cpp	/^void __sanitizer_exit() {$/;"	f
__sanitizer_file_handle	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_file_handle {$/;"	s	namespace:__sanitizer
__sanitizer_finish_switch_fiber	asan/asan_thread.cpp	/^void __sanitizer_finish_switch_fiber(void* fakestack,$/;"	f
__sanitizer_free	hwasan/hwasan_interceptors.cpp	/^void __sanitizer_free(void *ptr) {$/;"	f
__sanitizer_free_hook	lsan/lsan_allocator.cpp	/^void __sanitizer_free_hook(void *ptr) {$/;"	f
__sanitizer_free_hook	tsan/tsan_mman.cpp	/^void __sanitizer_free_hook(void *ptr) {$/;"	f
__sanitizer_get_allocated_size	asan/asan_allocator.cpp	/^uptr __sanitizer_get_allocated_size(const void *p) {$/;"	f
__sanitizer_get_allocated_size	hwasan/hwasan_allocator.cpp	/^uptr __sanitizer_get_allocated_size(const void *p) { return AllocationSize(p); }$/;"	f
__sanitizer_get_allocated_size	lsan/lsan_allocator.cpp	/^uptr __sanitizer_get_allocated_size(const void *p) {$/;"	f
__sanitizer_get_allocated_size	tsan/tsan_mman.cpp	/^uptr __sanitizer_get_allocated_size(const void *p) {$/;"	f
__sanitizer_get_current_allocated_bytes	asan/asan_stats.cpp	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	hwasan/hwasan_allocator.cpp	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	lsan/lsan_allocator.cpp	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_current_allocated_bytes	tsan/tsan_mman.cpp	/^uptr __sanitizer_get_current_allocated_bytes() {$/;"	f
__sanitizer_get_estimated_allocated_size	asan/asan_allocator.cpp	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) {$/;"	f
__sanitizer_get_estimated_allocated_size	hwasan/hwasan_allocator.cpp	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) { return size; }$/;"	f
__sanitizer_get_estimated_allocated_size	lsan/lsan_allocator.cpp	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) { return size; }$/;"	f
__sanitizer_get_estimated_allocated_size	tsan/tsan_mman.cpp	/^uptr __sanitizer_get_estimated_allocated_size(uptr size) {$/;"	f
__sanitizer_get_free_bytes	asan/asan_stats.cpp	/^uptr __sanitizer_get_free_bytes() {$/;"	f
__sanitizer_get_free_bytes	hwasan/hwasan_allocator.cpp	/^uptr __sanitizer_get_free_bytes() { return 1; }$/;"	f
__sanitizer_get_free_bytes	lsan/lsan_allocator.cpp	/^uptr __sanitizer_get_free_bytes() { return 0; }$/;"	f
__sanitizer_get_free_bytes	tsan/tsan_mman.cpp	/^uptr __sanitizer_get_free_bytes() {$/;"	f
__sanitizer_get_heap_size	asan/asan_stats.cpp	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	hwasan/hwasan_allocator.cpp	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	lsan/lsan_allocator.cpp	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_heap_size	tsan/tsan_mman.cpp	/^uptr __sanitizer_get_heap_size() {$/;"	f
__sanitizer_get_link_map_by_dlopen_handle	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^void *__sanitizer_get_link_map_by_dlopen_handle(void *handle) {$/;"	f	namespace:__sanitizer
__sanitizer_get_link_map_by_dlopen_handle	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^void *__sanitizer_get_link_map_by_dlopen_handle(void *handle) {$/;"	f	namespace:__sanitizer
__sanitizer_get_module_and_offset_for_pc	sanitizer_common/sanitizer_stacktrace_libcdep.cpp	/^int __sanitizer_get_module_and_offset_for_pc(uptr pc, char *module_name,$/;"	f
__sanitizer_get_ownership	asan/asan_allocator.cpp	/^int __sanitizer_get_ownership(const void *p) {$/;"	f
__sanitizer_get_ownership	hwasan/hwasan_allocator.cpp	/^int __sanitizer_get_ownership(const void *p) { return AllocationSize(p) != 0; }$/;"	f
__sanitizer_get_ownership	lsan/lsan_allocator.cpp	/^int __sanitizer_get_ownership(const void *p) { return Metadata(p) != nullptr; }$/;"	f
__sanitizer_get_ownership	tsan/tsan_mman.cpp	/^int __sanitizer_get_ownership(const void *p) {$/;"	f
__sanitizer_get_unmapped_bytes	asan/asan_stats.cpp	/^uptr __sanitizer_get_unmapped_bytes() {$/;"	f
__sanitizer_get_unmapped_bytes	hwasan/hwasan_allocator.cpp	/^uptr __sanitizer_get_unmapped_bytes() { return 1; }$/;"	f
__sanitizer_get_unmapped_bytes	lsan/lsan_allocator.cpp	/^uptr __sanitizer_get_unmapped_bytes() { return 0; }$/;"	f
__sanitizer_get_unmapped_bytes	tsan/tsan_mman.cpp	/^uptr __sanitizer_get_unmapped_bytes() {$/;"	f
__sanitizer_glob_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_glob_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_glob_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_glob_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_glob_t {$/;"	s	namespace:__sanitizer
__sanitizer_group	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_group	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_group	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_group	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_group {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_hostent	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_hostent {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifaddrs	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ifaddrs {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_ifconf	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ifconf {$/;"	s	namespace:__sanitizer
__sanitizer_in_addr_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_in_addr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_in_addr_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_in_addr_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  uptr __sanitizer_in_addr_sz(int af) {$/;"	f	namespace:__sanitizer
__sanitizer_install_malloc_and_free_hooks	sanitizer_common/sanitizer_common.cpp	/^int __sanitizer_install_malloc_and_free_hooks(void (*malloc_hook)(const void *,$/;"	f
__sanitizer_io_event	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_io_event {$/;"	s	namespace:__sanitizer
__sanitizer_io_event	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_io_event {$/;"	s	namespace:__sanitizer
__sanitizer_iocb	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_iocb {$/;"	s	namespace:__sanitizer
__sanitizer_iocb	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_iocb {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_iovec	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_iovec {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_ipc_perm	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_ipc_perm {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_itimerval	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_itimerval {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigaction_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_kernel_sigaction_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigaction_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_kernel_sigaction_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigaction_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_kernel_sigaction_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigset_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef __sanitizer_sigset_t __sanitizer_kernel_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_kernel_sigset_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef __sanitizer_sigset_t __sanitizer_kernel_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_kernel_sigset_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_kernel_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_kernel_sigset_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_kernel_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_lwpid_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_lwpid_t;$/;"	t	namespace:__sanitizer
__sanitizer_mallinfo	hwasan/hwasan_interceptors.cpp	/^struct __sanitizer_struct_mallinfo __sanitizer_mallinfo() {$/;"	f
__sanitizer_malloc	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_malloc(uptr size) {$/;"	f
__sanitizer_malloc_hook	lsan/lsan_allocator.cpp	/^void __sanitizer_malloc_hook(void *ptr, uptr size) {$/;"	f
__sanitizer_malloc_hook	tsan/tsan_mman.cpp	/^void __sanitizer_malloc_hook(void *ptr, uptr size) {$/;"	f
__sanitizer_malloc_stats	hwasan/hwasan_interceptors.cpp	/^void __sanitizer_malloc_stats(void) {$/;"	f
__sanitizer_malloc_usable_size	hwasan/hwasan_interceptors.cpp	/^uptr __sanitizer_malloc_usable_size(const void *ptr) {$/;"	f
__sanitizer_mallopt	hwasan/hwasan_interceptors.cpp	/^int __sanitizer_mallopt(int cmd, int value) {$/;"	f
__sanitizer_memalign	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_memalign(uptr alignment, uptr size) {$/;"	f
__sanitizer_mmsghdr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_mmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_mmsghdr	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_mmsghdr {$/;"	s	namespace:__sanitizer
__sanitizer_mntent	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_mntent {$/;"	s	namespace:__sanitizer
__sanitizer_modctl_load	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef struct __sanitizer_modctl_load {$/;"	s	namespace:__sanitizer
__sanitizer_modctl_load_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^} __sanitizer_modctl_load_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__sanitizer_modctl_load
__sanitizer_msghdr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_msghdr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_msghdr	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_msghdr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_msghdr {$/;"	s	namespace:__sanitizer
__sanitizer_netent	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_netent {$/;"	s	namespace:__sanitizer
__sanitizer_nfds_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned long __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nfds_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef unsigned long __sanitizer_nfds_t;$/;"	t	namespace:__sanitizer
__sanitizer_nvlist_ref_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct __sanitizer_nvlist_ref_t {$/;"	s	namespace:__sanitizer
__sanitizer_obstack	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_obstack {$/;"	s
__sanitizer_passwd	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_passwd	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_passwd	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_passwd	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_passwd {$/;"	s	namespace:__sanitizer
__sanitizer_perf_event_attr	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_perf_event_attr {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_pollfd	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_pollfd {$/;"	s	namespace:__sanitizer
__sanitizer_posix_memalign	hwasan/hwasan_interceptors.cpp	/^int __sanitizer_posix_memalign(void **memptr, uptr alignment, uptr size) {$/;"	f
__sanitizer_print_memory_profile	asan/asan_memory_profile.cpp	/^void __sanitizer_print_memory_profile(uptr top_percent,$/;"	f
__sanitizer_print_stack_trace	asan/asan_stack.cpp	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	hwasan/hwasan.cpp	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	lsan/lsan.cpp	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	tsan/tsan_rtl_report.cpp	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_print_stack_trace	ubsan/ubsan_diag_standalone.cpp	/^void __sanitizer_print_stack_trace() {$/;"	f
__sanitizer_process_exit_hook	lsan/lsan_common_fuchsia.cpp	/^int __sanitizer_process_exit_hook(int status) {$/;"	f
__sanitizer_protoent	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_protoent {$/;"	s	namespace:__sanitizer
__sanitizer_protoent	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_protoent {$/;"	s	namespace:__sanitizer
__sanitizer_pthread_attr_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^union __sanitizer_pthread_attr_t {$/;"	u	namespace:__sanitizer
__sanitizer_pthread_attr_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^} __sanitizer_pthread_attr_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__anon16
__sanitizer_pthread_attr_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^union __sanitizer_pthread_attr_t {$/;"	u	namespace:__sanitizer
__sanitizer_pthread_attr_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^union __sanitizer_pthread_attr_t {$/;"	u	namespace:__sanitizer
__sanitizer_pthread_key_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned long __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_pthread_key_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef unsigned __sanitizer_pthread_key_t;$/;"	t	namespace:__sanitizer
__sanitizer_ptr_cmp	asan/asan_report.cpp	/^void __sanitizer_ptr_cmp(void *a, void *b) {$/;"	f
__sanitizer_ptr_sub	asan/asan_report.cpp	/^void __sanitizer_ptr_sub(void *a, void *b) {$/;"	f
__sanitizer_ptrace_io_desc	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ptrace_io_desc {$/;"	s	namespace:__sanitizer
__sanitizer_ptrace_lwpinfo	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ptrace_lwpinfo {$/;"	s	namespace:__sanitizer
__sanitizer_ptrace_lwpstatus	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ptrace_lwpstatus {$/;"	s	namespace:__sanitizer
__sanitizer_purge_allocator	asan/asan_allocator.cpp	/^void __sanitizer_purge_allocator() {$/;"	f
__sanitizer_pvalloc	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_pvalloc(uptr size) {$/;"	f
__sanitizer_realloc	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_realloc(void *ptr, uptr size) {$/;"	f
__sanitizer_reallocarray	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_reallocarray(void *ptr, uptr nmemb, uptr size) {$/;"	f
__sanitizer_regmatch	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_regmatch {$/;"	s	namespace:__sanitizer
__sanitizer_sandbox_arguments	include/sanitizer/common_interface_defs.h	/^} __sanitizer_sandbox_arguments;$/;"	t	typeref:struct:__anon1
__sanitizer_sandbox_arguments	sanitizer_common/sanitizer_interface_internal.h	/^  } __sanitizer_sandbox_arguments;$/;"	t	typeref:struct:__anon44
__sanitizer_sem_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_sem_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_sem_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_sem_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_sem_t {$/;"	s	namespace:__sanitizer
__sanitizer_set_death_callback	sanitizer_common/sanitizer_termination.cpp	/^void __sanitizer_set_death_callback(void (*callback)(void)) {$/;"	f
__sanitizer_set_report_fd	sanitizer_common/sanitizer_file.cpp	/^void __sanitizer_set_report_fd(void *fd) {$/;"	f
__sanitizer_set_report_fd	sanitizer_common/sanitizer_fuchsia.cpp	/^void __sanitizer_set_report_fd(void *fd) {$/;"	f
__sanitizer_set_report_path	sanitizer_common/sanitizer_file.cpp	/^void __sanitizer_set_report_path(const char *path) {$/;"	f
__sanitizer_set_report_path	sanitizer_common/sanitizer_fuchsia.cpp	/^void __sanitizer_set_report_path(const char *path) {$/;"	f
__sanitizer_shmid_ds	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_shmid_ds	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_shmid_ds	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_shmid_ds	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_shmid_ds {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_sigaction {$/;"	s	namespace:__sanitizer
__sanitizer_sigaction13	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigaction13 {$/;"	s	namespace:__sanitizer
__sanitizer_sigaltstack	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigaltstack {$/;"	s	namespace:__sanitizer
__sanitizer_sigevent	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigevent {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_siginfo	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_siginfo {$/;"	s	namespace:__sanitizer
__sanitizer_sigset13_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned int __sanitizer_sigset13_t;$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_sigset_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_sigset_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_sigset_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned __sanitizer_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned long __sanitizer_sigset_t;$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef unsigned long __sanitizer_sigset_t[16 \/ sizeof(unsigned long)];$/;"	t	namespace:__sanitizer
__sanitizer_sigset_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_sigset_t {$/;"	s	namespace:__sanitizer
__sanitizer_sigval	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^union __sanitizer_sigval {$/;"	u	namespace:__sanitizer
__sanitizer_socklen_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef unsigned int __sanitizer_socklen_t;$/;"	t	namespace:__sanitizer
__sanitizer_start_switch_fiber	asan/asan_thread.cpp	/^void __sanitizer_start_switch_fiber(void **fakestacksave, const void *bottom,$/;"	f
__sanitizer_startup_hook	sanitizer_common/sanitizer_fuchsia.cpp	/^void __sanitizer_startup_hook(int argc, char **argv, char **envp,$/;"	f
__sanitizer_struct_mallinfo	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_struct_mallinfo {$/;"	s	namespace:__sanitizer
__sanitizer_suseconds_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef long __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_suseconds_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef int __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_suseconds_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_suseconds_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef long __sanitizer_suseconds_t;$/;"	t	namespace:__sanitizer
__sanitizer_symbolize_global	sanitizer_common/sanitizer_stacktrace_libcdep.cpp	/^void __sanitizer_symbolize_global(uptr data_addr, const char *fmt,$/;"	f
__sanitizer_symbolize_pc	sanitizer_common/sanitizer_stacktrace_libcdep.cpp	/^void __sanitizer_symbolize_pc(uptr pc, const char *fmt, char *out_buf,$/;"	f
__sanitizer_syscall_post_____semctl50	include/sanitizer/netbsd_syscall_hooks.h	2455;"	d
__sanitizer_syscall_post_____sigtimedwait50	include/sanitizer/netbsd_syscall_hooks.h	2373;"	d
__sanitizer_syscall_post____lwp_park60	include/sanitizer/netbsd_syscall_hooks.h	2700;"	d
__sanitizer_syscall_post___acl_aclcheck_fd	include/sanitizer/netbsd_syscall_hooks.h	2830;"	d
__sanitizer_syscall_post___acl_aclcheck_file	include/sanitizer/netbsd_syscall_hooks.h	2824;"	d
__sanitizer_syscall_post___acl_aclcheck_link	include/sanitizer/netbsd_syscall_hooks.h	2782;"	d
__sanitizer_syscall_post___acl_delete_fd	include/sanitizer/netbsd_syscall_hooks.h	2818;"	d
__sanitizer_syscall_post___acl_delete_file	include/sanitizer/netbsd_syscall_hooks.h	2812;"	d
__sanitizer_syscall_post___acl_delete_link	include/sanitizer/netbsd_syscall_hooks.h	2776;"	d
__sanitizer_syscall_post___acl_get_fd	include/sanitizer/netbsd_syscall_hooks.h	2800;"	d
__sanitizer_syscall_post___acl_get_file	include/sanitizer/netbsd_syscall_hooks.h	2788;"	d
__sanitizer_syscall_post___acl_get_link	include/sanitizer/netbsd_syscall_hooks.h	2764;"	d
__sanitizer_syscall_post___acl_set_fd	include/sanitizer/netbsd_syscall_hooks.h	2806;"	d
__sanitizer_syscall_post___acl_set_file	include/sanitizer/netbsd_syscall_hooks.h	2794;"	d
__sanitizer_syscall_post___acl_set_link	include/sanitizer/netbsd_syscall_hooks.h	2770;"	d
__sanitizer_syscall_post___adjtime50	include/sanitizer/netbsd_syscall_hooks.h	2315;"	d
__sanitizer_syscall_post___aio_suspend50	include/sanitizer/netbsd_syscall_hooks.h	2434;"	d
__sanitizer_syscall_post___clock_getres50	include/sanitizer/netbsd_syscall_hooks.h	2361;"	d
__sanitizer_syscall_post___clock_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2349;"	d
__sanitizer_syscall_post___clock_settime50	include/sanitizer/netbsd_syscall_hooks.h	2355;"	d
__sanitizer_syscall_post___clone	include/sanitizer/netbsd_syscall_hooks.h	1523;"	d
__sanitizer_syscall_post___fhopen40	include/sanitizer/netbsd_syscall_hooks.h	2171;"	d
__sanitizer_syscall_post___fhstat50	include/sanitizer/netbsd_syscall_hooks.h	2518;"	d
__sanitizer_syscall_post___fhstatvfs140	include/sanitizer/netbsd_syscall_hooks.h	2857;"	d
__sanitizer_syscall_post___fhstatvfs190	include/sanitizer/netbsd_syscall_hooks.h	2757;"	d
__sanitizer_syscall_post___fstat50	include/sanitizer/netbsd_syscall_hooks.h	2444;"	d
__sanitizer_syscall_post___fstatvfs190	include/sanitizer/netbsd_syscall_hooks.h	2750;"	d
__sanitizer_syscall_post___futex	include/sanitizer/netbsd_syscall_hooks.h	863;"	d
__sanitizer_syscall_post___futex_get_robust_list	include/sanitizer/netbsd_syscall_hooks.h	878;"	d
__sanitizer_syscall_post___futex_set_robust_list	include/sanitizer/netbsd_syscall_hooks.h	872;"	d
__sanitizer_syscall_post___futimes50	include/sanitizer/netbsd_syscall_hooks.h	2326;"	d
__sanitizer_syscall_post___getcwd	include/sanitizer/netbsd_syscall_hooks.h	1577;"	d
__sanitizer_syscall_post___getdents30	include/sanitizer/netbsd_syscall_hooks.h	2138;"	d
__sanitizer_syscall_post___getfh30	include/sanitizer/netbsd_syscall_hooks.h	2165;"	d
__sanitizer_syscall_post___getitimer50	include/sanitizer/netbsd_syscall_hooks.h	2343;"	d
__sanitizer_syscall_post___getlogin	include/sanitizer/netbsd_syscall_hooks.h	287;"	d
__sanitizer_syscall_post___getrusage50	include/sanitizer/netbsd_syscall_hooks.h	2474;"	d
__sanitizer_syscall_post___gettimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2298;"	d
__sanitizer_syscall_post___getvfsstat90	include/sanitizer/netbsd_syscall_hooks.h	2738;"	d
__sanitizer_syscall_post___kevent50	include/sanitizer/netbsd_syscall_hooks.h	2411;"	d
__sanitizer_syscall_post___lfs_segwait50	include/sanitizer/netbsd_syscall_hooks.h	2321;"	d
__sanitizer_syscall_post___lstat50	include/sanitizer/netbsd_syscall_hooks.h	2448;"	d
__sanitizer_syscall_post___lutimes50	include/sanitizer/netbsd_syscall_hooks.h	2331;"	d
__sanitizer_syscall_post___mknod50	include/sanitizer/netbsd_syscall_hooks.h	2512;"	d
__sanitizer_syscall_post___mount50	include/sanitizer/netbsd_syscall_hooks.h	2238;"	d
__sanitizer_syscall_post___mq_timedreceive50	include/sanitizer/netbsd_syscall_hooks.h	2391;"	d
__sanitizer_syscall_post___mq_timedsend50	include/sanitizer/netbsd_syscall_hooks.h	2381;"	d
__sanitizer_syscall_post___msgctl50	include/sanitizer/netbsd_syscall_hooks.h	2468;"	d
__sanitizer_syscall_post___msync13	include/sanitizer/netbsd_syscall_hooks.h	1468;"	d
__sanitizer_syscall_post___nanosleep50	include/sanitizer/netbsd_syscall_hooks.h	2367;"	d
__sanitizer_syscall_post___ntp_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2496;"	d
__sanitizer_syscall_post___pollts50	include/sanitizer/netbsd_syscall_hooks.h	2427;"	d
__sanitizer_syscall_post___posix_chown	include/sanitizer/netbsd_syscall_hooks.h	1502;"	d
__sanitizer_syscall_post___posix_fadvise50	include/sanitizer/netbsd_syscall_hooks.h	2282;"	d
__sanitizer_syscall_post___posix_fchown	include/sanitizer/netbsd_syscall_hooks.h	1508;"	d
__sanitizer_syscall_post___posix_lchown	include/sanitizer/netbsd_syscall_hooks.h	1514;"	d
__sanitizer_syscall_post___posix_rename	include/sanitizer/netbsd_syscall_hooks.h	1427;"	d
__sanitizer_syscall_post___pselect50	include/sanitizer/netbsd_syscall_hooks.h	2420;"	d
__sanitizer_syscall_post___quotactl	include/sanitizer/netbsd_syscall_hooks.h	2658;"	d
__sanitizer_syscall_post___select50	include/sanitizer/netbsd_syscall_hooks.h	2291;"	d
__sanitizer_syscall_post___setitimer50	include/sanitizer/netbsd_syscall_hooks.h	2337;"	d
__sanitizer_syscall_post___setlogin	include/sanitizer/netbsd_syscall_hooks.h	292;"	d
__sanitizer_syscall_post___settimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2304;"	d
__sanitizer_syscall_post___shmctl50	include/sanitizer/netbsd_syscall_hooks.h	2462;"	d
__sanitizer_syscall_post___sigaction_sigtramp	include/sanitizer/netbsd_syscall_hooks.h	1784;"	d
__sanitizer_syscall_post___sigaltstack14	include/sanitizer/netbsd_syscall_hooks.h	1492;"	d
__sanitizer_syscall_post___sigpending14	include/sanitizer/netbsd_syscall_hooks.h	1558;"	d
__sanitizer_syscall_post___sigprocmask14	include/sanitizer/netbsd_syscall_hooks.h	1563;"	d
__sanitizer_syscall_post___sigsuspend14	include/sanitizer/netbsd_syscall_hooks.h	1568;"	d
__sanitizer_syscall_post___socket30	include/sanitizer/netbsd_syscall_hooks.h	2159;"	d
__sanitizer_syscall_post___stat50	include/sanitizer/netbsd_syscall_hooks.h	2439;"	d
__sanitizer_syscall_post___statvfs190	include/sanitizer/netbsd_syscall_hooks.h	2744;"	d
__sanitizer_syscall_post___syscall	include/sanitizer/netbsd_syscall_hooks.h	1058;"	d
__sanitizer_syscall_post___sysctl	include/sanitizer/netbsd_syscall_hooks.h	1088;"	d
__sanitizer_syscall_post___timer_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2490;"	d
__sanitizer_syscall_post___timer_settime50	include/sanitizer/netbsd_syscall_hooks.h	2482;"	d
__sanitizer_syscall_post___utimes50	include/sanitizer/netbsd_syscall_hooks.h	2309;"	d
__sanitizer_syscall_post___vfork14	include/sanitizer/netbsd_syscall_hooks.h	1497;"	d
__sanitizer_syscall_post___wait450	include/sanitizer/netbsd_syscall_hooks.h	2505;"	d
__sanitizer_syscall_post__ksem_close	include/sanitizer/netbsd_syscall_hooks.h	1320;"	d
__sanitizer_syscall_post__ksem_destroy	include/sanitizer/netbsd_syscall_hooks.h	1342;"	d
__sanitizer_syscall_post__ksem_getvalue	include/sanitizer/netbsd_syscall_hooks.h	1337;"	d
__sanitizer_syscall_post__ksem_init	include/sanitizer/netbsd_syscall_hooks.h	1302;"	d
__sanitizer_syscall_post__ksem_open	include/sanitizer/netbsd_syscall_hooks.h	1309;"	d
__sanitizer_syscall_post__ksem_post	include/sanitizer/netbsd_syscall_hooks.h	1324;"	d
__sanitizer_syscall_post__ksem_timedwait	include/sanitizer/netbsd_syscall_hooks.h	1347;"	d
__sanitizer_syscall_post__ksem_trywait	include/sanitizer/netbsd_syscall_hooks.h	1332;"	d
__sanitizer_syscall_post__ksem_unlink	include/sanitizer/netbsd_syscall_hooks.h	1316;"	d
__sanitizer_syscall_post__ksem_wait	include/sanitizer/netbsd_syscall_hooks.h	1328;"	d
__sanitizer_syscall_post__llseek	include/sanitizer/linux_syscall_hooks.h	1965;"	d
__sanitizer_syscall_post__lwp_continue	include/sanitizer/netbsd_syscall_hooks.h	1673;"	d
__sanitizer_syscall_post__lwp_create	include/sanitizer/netbsd_syscall_hooks.h	1650;"	d
__sanitizer_syscall_post__lwp_ctl	include/sanitizer/netbsd_syscall_hooks.h	1734;"	d
__sanitizer_syscall_post__lwp_detach	include/sanitizer/netbsd_syscall_hooks.h	1695;"	d
__sanitizer_syscall_post__lwp_exit	include/sanitizer/netbsd_syscall_hooks.h	1655;"	d
__sanitizer_syscall_post__lwp_getname	include/sanitizer/netbsd_syscall_hooks.h	1728;"	d
__sanitizer_syscall_post__lwp_getprivate	include/sanitizer/netbsd_syscall_hooks.h	1681;"	d
__sanitizer_syscall_post__lwp_kill	include/sanitizer/netbsd_syscall_hooks.h	1690;"	d
__sanitizer_syscall_post__lwp_self	include/sanitizer/netbsd_syscall_hooks.h	1659;"	d
__sanitizer_syscall_post__lwp_setname	include/sanitizer/netbsd_syscall_hooks.h	1722;"	d
__sanitizer_syscall_post__lwp_setprivate	include/sanitizer/netbsd_syscall_hooks.h	1685;"	d
__sanitizer_syscall_post__lwp_suspend	include/sanitizer/netbsd_syscall_hooks.h	1669;"	d
__sanitizer_syscall_post__lwp_unpark	include/sanitizer/netbsd_syscall_hooks.h	1710;"	d
__sanitizer_syscall_post__lwp_unpark_all	include/sanitizer/netbsd_syscall_hooks.h	1716;"	d
__sanitizer_syscall_post__lwp_wait	include/sanitizer/netbsd_syscall_hooks.h	1664;"	d
__sanitizer_syscall_post__lwp_wakeup	include/sanitizer/netbsd_syscall_hooks.h	1677;"	d
__sanitizer_syscall_post__newselect	include/sanitizer/linux_syscall_hooks.h	1972;"	d
__sanitizer_syscall_post__pset_bind	include/sanitizer/netbsd_syscall_hooks.h	2272;"	d
__sanitizer_syscall_post__sched_getaffinity	include/sanitizer/netbsd_syscall_hooks.h	1841;"	d
__sanitizer_syscall_post__sched_getparam	include/sanitizer/netbsd_syscall_hooks.h	1823;"	d
__sanitizer_syscall_post__sched_protect	include/sanitizer/netbsd_syscall_hooks.h	1852;"	d
__sanitizer_syscall_post__sched_setaffinity	include/sanitizer/netbsd_syscall_hooks.h	1832;"	d
__sanitizer_syscall_post__sched_setparam	include/sanitizer/netbsd_syscall_hooks.h	1814;"	d
__sanitizer_syscall_post__sysctl	include/sanitizer/linux_syscall_hooks.h	2002;"	d
__sanitizer_syscall_post_accept	include/sanitizer/linux_syscall_hooks.h	1090;"	d
__sanitizer_syscall_post_accept	include/sanitizer/netbsd_syscall_hooks.h	193;"	d
__sanitizer_syscall_post_accept4	include/sanitizer/linux_syscall_hooks.h	1096;"	d
__sanitizer_syscall_post_access	include/sanitizer/linux_syscall_hooks.h	816;"	d
__sanitizer_syscall_post_access	include/sanitizer/netbsd_syscall_hooks.h	210;"	d
__sanitizer_syscall_post_acct	include/sanitizer/linux_syscall_hooks.h	154;"	d
__sanitizer_syscall_post_acct	include/sanitizer/netbsd_syscall_hooks.h	296;"	d
__sanitizer_syscall_post_add_key	include/sanitizer/linux_syscall_hooks.h	1462;"	d
__sanitizer_syscall_post_adjtimex	include/sanitizer/linux_syscall_hooks.h	41;"	d
__sanitizer_syscall_post_afs_syscall	include/sanitizer/linux_syscall_hooks.h	1933;"	d
__sanitizer_syscall_post_afssys	include/sanitizer/netbsd_syscall_hooks.h	1131;"	d
__sanitizer_syscall_post_aio_cancel	include/sanitizer/netbsd_syscall_hooks.h	2192;"	d
__sanitizer_syscall_post_aio_error	include/sanitizer/netbsd_syscall_hooks.h	2197;"	d
__sanitizer_syscall_post_aio_fsync	include/sanitizer/netbsd_syscall_hooks.h	2201;"	d
__sanitizer_syscall_post_aio_read	include/sanitizer/netbsd_syscall_hooks.h	2206;"	d
__sanitizer_syscall_post_aio_return	include/sanitizer/netbsd_syscall_hooks.h	2210;"	d
__sanitizer_syscall_post_aio_write	include/sanitizer/netbsd_syscall_hooks.h	2221;"	d
__sanitizer_syscall_post_alarm	include/sanitizer/linux_syscall_hooks.h	56;"	d
__sanitizer_syscall_post_arch_prctl	include/sanitizer/linux_syscall_hooks.h	1934;"	d
__sanitizer_syscall_post_bdflush	include/sanitizer/linux_syscall_hooks.h	450;"	d
__sanitizer_syscall_post_bind	include/sanitizer/linux_syscall_hooks.h	1080;"	d
__sanitizer_syscall_post_bind	include/sanitizer/netbsd_syscall_hooks.h	553;"	d
__sanitizer_syscall_post_break	include/sanitizer/linux_syscall_hooks.h	1935;"	d
__sanitizer_syscall_post_break	include/sanitizer/netbsd_syscall_hooks.h	121;"	d
__sanitizer_syscall_post_brk	include/sanitizer/linux_syscall_hooks.h	607;"	d
__sanitizer_syscall_post_capget	include/sanitizer/linux_syscall_hooks.h	158;"	d
__sanitizer_syscall_post_capset	include/sanitizer/linux_syscall_hooks.h	162;"	d
__sanitizer_syscall_post_chdir	include/sanitizer/linux_syscall_hooks.h	1026;"	d
__sanitizer_syscall_post_chdir	include/sanitizer/netbsd_syscall_hooks.h	97;"	d
__sanitizer_syscall_post_chflags	include/sanitizer/netbsd_syscall_hooks.h	215;"	d
__sanitizer_syscall_post_chmod	include/sanitizer/linux_syscall_hooks.h	703;"	d
__sanitizer_syscall_post_chmod	include/sanitizer/netbsd_syscall_hooks.h	111;"	d
__sanitizer_syscall_post_chown	include/sanitizer/linux_syscall_hooks.h	824;"	d
__sanitizer_syscall_post_chown	include/sanitizer/netbsd_syscall_hooks.h	116;"	d
__sanitizer_syscall_post_chown16	include/sanitizer/linux_syscall_hooks.h	841;"	d
__sanitizer_syscall_post_chown32	include/sanitizer/linux_syscall_hooks.h	1936;"	d
__sanitizer_syscall_post_chroot	include/sanitizer/linux_syscall_hooks.h	677;"	d
__sanitizer_syscall_post_chroot	include/sanitizer/netbsd_syscall_hooks.h	345;"	d
__sanitizer_syscall_post_clock_adjtime	include/sanitizer/linux_syscall_hooks.h	232;"	d
__sanitizer_syscall_post_clock_getcpuclockid2	include/sanitizer/netbsd_syscall_hooks.h	2731;"	d
__sanitizer_syscall_post_clock_getres	include/sanitizer/linux_syscall_hooks.h	237;"	d
__sanitizer_syscall_post_clock_gettime	include/sanitizer/linux_syscall_hooks.h	227;"	d
__sanitizer_syscall_post_clock_nanosleep	include/sanitizer/linux_syscall_hooks.h	244;"	d
__sanitizer_syscall_post_clock_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	2690;"	d
__sanitizer_syscall_post_clock_settime	include/sanitizer/linux_syscall_hooks.h	222;"	d
__sanitizer_syscall_post_clone	include/sanitizer/linux_syscall_hooks.h	1937;"	d
__sanitizer_syscall_post_close	include/sanitizer/linux_syscall_hooks.h	812;"	d
__sanitizer_syscall_post_close	include/sanitizer/netbsd_syscall_hooks.h	69;"	d
__sanitizer_syscall_post_compat_09_ogetdomainname	include/sanitizer/netbsd_syscall_hooks.h	837;"	d
__sanitizer_syscall_post_compat_09_osetdomainname	include/sanitizer/netbsd_syscall_hooks.h	844;"	d
__sanitizer_syscall_post_compat_09_ouname	include/sanitizer/netbsd_syscall_hooks.h	850;"	d
__sanitizer_syscall_post_compat_10_omsgsys	include/sanitizer/netbsd_syscall_hooks.h	899;"	d
__sanitizer_syscall_post_compat_10_osemsys	include/sanitizer/netbsd_syscall_hooks.h	887;"	d
__sanitizer_syscall_post_compat_10_oshmsys	include/sanitizer/netbsd_syscall_hooks.h	911;"	d
__sanitizer_syscall_post_compat_12_fstat12	include/sanitizer/netbsd_syscall_hooks.h	996;"	d
__sanitizer_syscall_post_compat_12_getdirentries	include/sanitizer/netbsd_syscall_hooks.h	1038;"	d
__sanitizer_syscall_post_compat_12_lstat12	include/sanitizer/netbsd_syscall_hooks.h	1002;"	d
__sanitizer_syscall_post_compat_12_msync	include/sanitizer/netbsd_syscall_hooks.h	369;"	d
__sanitizer_syscall_post_compat_12_oreboot	include/sanitizer/netbsd_syscall_hooks.h	316;"	d
__sanitizer_syscall_post_compat_12_oswapon	include/sanitizer/netbsd_syscall_hooks.h	449;"	d
__sanitizer_syscall_post_compat_12_stat12	include/sanitizer/netbsd_syscall_hooks.h	990;"	d
__sanitizer_syscall_post_compat_13_sigaction13	include/sanitizer/netbsd_syscall_hooks.h	272;"	d
__sanitizer_syscall_post_compat_13_sigaltstack13	include/sanitizer/netbsd_syscall_hooks.h	305;"	d
__sanitizer_syscall_post_compat_13_sigpending13	include/sanitizer/netbsd_syscall_hooks.h	300;"	d
__sanitizer_syscall_post_compat_13_sigprocmask13	include/sanitizer/netbsd_syscall_hooks.h	281;"	d
__sanitizer_syscall_post_compat_13_sigreturn13	include/sanitizer/netbsd_syscall_hooks.h	547;"	d
__sanitizer_syscall_post_compat_13_sigsuspend13	include/sanitizer/netbsd_syscall_hooks.h	586;"	d
__sanitizer_syscall_post_compat_14___semctl	include/sanitizer/netbsd_syscall_hooks.h	1148;"	d
__sanitizer_syscall_post_compat_14_msgctl	include/sanitizer/netbsd_syscall_hooks.h	1172;"	d
__sanitizer_syscall_post_compat_14_shmctl	include/sanitizer/netbsd_syscall_hooks.h	1205;"	d
__sanitizer_syscall_post_compat_16___sigaction14	include/sanitizer/netbsd_syscall_hooks.h	1552;"	d
__sanitizer_syscall_post_compat_16___sigreturn14	include/sanitizer/netbsd_syscall_hooks.h	1572;"	d
__sanitizer_syscall_post_compat_20_fhstatfs	include/sanitizer/netbsd_syscall_hooks.h	1599;"	d
__sanitizer_syscall_post_compat_20_fstatfs	include/sanitizer/netbsd_syscall_hooks.h	823;"	d
__sanitizer_syscall_post_compat_20_getfsstat	include/sanitizer/netbsd_syscall_hooks.h	126;"	d
__sanitizer_syscall_post_compat_20_statfs	include/sanitizer/netbsd_syscall_hooks.h	817;"	d
__sanitizer_syscall_post_compat_30___fhstat30	include/sanitizer/netbsd_syscall_hooks.h	2148;"	d
__sanitizer_syscall_post_compat_30___fstat13	include/sanitizer/netbsd_syscall_hooks.h	1480;"	d
__sanitizer_syscall_post_compat_30___lstat13	include/sanitizer/netbsd_syscall_hooks.h	1486;"	d
__sanitizer_syscall_post_compat_30___stat13	include/sanitizer/netbsd_syscall_hooks.h	1474;"	d
__sanitizer_syscall_post_compat_30_fhopen	include/sanitizer/netbsd_syscall_hooks.h	1587;"	d
__sanitizer_syscall_post_compat_30_fhstat	include/sanitizer/netbsd_syscall_hooks.h	1593;"	d
__sanitizer_syscall_post_compat_30_fhstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1891;"	d
__sanitizer_syscall_post_compat_30_getdents	include/sanitizer/netbsd_syscall_hooks.h	1439;"	d
__sanitizer_syscall_post_compat_30_getfh	include/sanitizer/netbsd_syscall_hooks.h	831;"	d
__sanitizer_syscall_post_compat_30_ntp_gettime	include/sanitizer/netbsd_syscall_hooks.h	937;"	d
__sanitizer_syscall_post_compat_30_socket	include/sanitizer/netbsd_syscall_hooks.h	511;"	d
__sanitizer_syscall_post_compat_40_mount	include/sanitizer/netbsd_syscall_hooks.h	142;"	d
__sanitizer_syscall_post_compat_43_fstat43	include/sanitizer/netbsd_syscall_hooks.h	350;"	d
__sanitizer_syscall_post_compat_43_lstat43	include/sanitizer/netbsd_syscall_hooks.h	242;"	d
__sanitizer_syscall_post_compat_43_oaccept	include/sanitizer/netbsd_syscall_hooks.h	523;"	d
__sanitizer_syscall_post_compat_43_ocreat	include/sanitizer/netbsd_syscall_hooks.h	83;"	d
__sanitizer_syscall_post_compat_43_oftruncate	include/sanitizer/netbsd_syscall_hooks.h	690;"	d
__sanitizer_syscall_post_compat_43_ogetdirentries	include/sanitizer/netbsd_syscall_hooks.h	809;"	d
__sanitizer_syscall_post_compat_43_ogetdtablesize	include/sanitizer/netbsd_syscall_hooks.h	471;"	d
__sanitizer_syscall_post_compat_43_ogethostid	include/sanitizer/netbsd_syscall_hooks.h	751;"	d
__sanitizer_syscall_post_compat_43_ogethostname	include/sanitizer/netbsd_syscall_hooks.h	460;"	d
__sanitizer_syscall_post_compat_43_ogetkerninfo	include/sanitizer/netbsd_syscall_hooks.h	357;"	d
__sanitizer_syscall_post_compat_43_ogetpagesize	include/sanitizer/netbsd_syscall_hooks.h	364;"	d
__sanitizer_syscall_post_compat_43_ogetpeername	include/sanitizer/netbsd_syscall_hooks.h	746;"	d
__sanitizer_syscall_post_compat_43_ogetrlimit	include/sanitizer/netbsd_syscall_hooks.h	760;"	d
__sanitizer_syscall_post_compat_43_ogetsockname	include/sanitizer/netbsd_syscall_hooks.h	792;"	d
__sanitizer_syscall_post_compat_43_okillpg	include/sanitizer/netbsd_syscall_hooks.h	772;"	d
__sanitizer_syscall_post_compat_43_olseek	include/sanitizer/netbsd_syscall_hooks.h	132;"	d
__sanitizer_syscall_post_compat_43_ommap	include/sanitizer/netbsd_syscall_hooks.h	384;"	d
__sanitizer_syscall_post_compat_43_oquota	include/sanitizer/netbsd_syscall_hooks.h	787;"	d
__sanitizer_syscall_post_compat_43_orecv	include/sanitizer/netbsd_syscall_hooks.h	541;"	d
__sanitizer_syscall_post_compat_43_orecvfrom	include/sanitizer/netbsd_syscall_hooks.h	662;"	d
__sanitizer_syscall_post_compat_43_orecvmsg	include/sanitizer/netbsd_syscall_hooks.h	597;"	d
__sanitizer_syscall_post_compat_43_osend	include/sanitizer/netbsd_syscall_hooks.h	534;"	d
__sanitizer_syscall_post_compat_43_osendmsg	include/sanitizer/netbsd_syscall_hooks.h	603;"	d
__sanitizer_syscall_post_compat_43_osethostid	include/sanitizer/netbsd_syscall_hooks.h	755;"	d
__sanitizer_syscall_post_compat_43_osethostname	include/sanitizer/netbsd_syscall_hooks.h	466;"	d
__sanitizer_syscall_post_compat_43_osetrlimit	include/sanitizer/netbsd_syscall_hooks.h	766;"	d
__sanitizer_syscall_post_compat_43_osigblock	include/sanitizer/netbsd_syscall_hooks.h	578;"	d
__sanitizer_syscall_post_compat_43_osigsetmask	include/sanitizer/netbsd_syscall_hooks.h	582;"	d
__sanitizer_syscall_post_compat_43_osigstack	include/sanitizer/netbsd_syscall_hooks.h	591;"	d
__sanitizer_syscall_post_compat_43_osigvec	include/sanitizer/netbsd_syscall_hooks.h	573;"	d
__sanitizer_syscall_post_compat_43_otruncate	include/sanitizer/netbsd_syscall_hooks.h	684;"	d
__sanitizer_syscall_post_compat_43_owait	include/sanitizer/netbsd_syscall_hooks.h	445;"	d
__sanitizer_syscall_post_compat_43_stat43	include/sanitizer/netbsd_syscall_hooks.h	233;"	d
__sanitizer_syscall_post_compat_50_____semctl13	include/sanitizer/netbsd_syscall_hooks.h	1607;"	d
__sanitizer_syscall_post_compat_50___fhstat40	include/sanitizer/netbsd_syscall_hooks.h	2186;"	d
__sanitizer_syscall_post_compat_50___fstat30	include/sanitizer/netbsd_syscall_hooks.h	2126;"	d
__sanitizer_syscall_post_compat_50___lstat30	include/sanitizer/netbsd_syscall_hooks.h	2132;"	d
__sanitizer_syscall_post_compat_50___msgctl13	include/sanitizer/netbsd_syscall_hooks.h	1615;"	d
__sanitizer_syscall_post_compat_50___ntp_gettime30	include/sanitizer/netbsd_syscall_hooks.h	2153;"	d
__sanitizer_syscall_post_compat_50___shmctl13	include/sanitizer/netbsd_syscall_hooks.h	1621;"	d
__sanitizer_syscall_post_compat_50___sigtimedwait	include/sanitizer/netbsd_syscall_hooks.h	1287;"	d
__sanitizer_syscall_post_compat_50___stat30	include/sanitizer/netbsd_syscall_hooks.h	2120;"	d
__sanitizer_syscall_post_compat_50__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	1702;"	d
__sanitizer_syscall_post_compat_50_adjtime	include/sanitizer/netbsd_syscall_hooks.h	740;"	d
__sanitizer_syscall_post_compat_50_aio_suspend	include/sanitizer/netbsd_syscall_hooks.h	2215;"	d
__sanitizer_syscall_post_compat_50_clock_getres	include/sanitizer/netbsd_syscall_hooks.h	1233;"	d
__sanitizer_syscall_post_compat_50_clock_gettime	include/sanitizer/netbsd_syscall_hooks.h	1221;"	d
__sanitizer_syscall_post_compat_50_clock_settime	include/sanitizer/netbsd_syscall_hooks.h	1227;"	d
__sanitizer_syscall_post_compat_50_futimes	include/sanitizer/netbsd_syscall_hooks.h	1109;"	d
__sanitizer_syscall_post_compat_50_getitimer	include/sanitizer/netbsd_syscall_hooks.h	454;"	d
__sanitizer_syscall_post_compat_50_getrusage	include/sanitizer/netbsd_syscall_hooks.h	616;"	d
__sanitizer_syscall_post_compat_50_gettimeofday	include/sanitizer/netbsd_syscall_hooks.h	610;"	d
__sanitizer_syscall_post_compat_50_kevent	include/sanitizer/netbsd_syscall_hooks.h	1805;"	d
__sanitizer_syscall_post_compat_50_lfs_segwait	include/sanitizer/netbsd_syscall_hooks.h	984;"	d
__sanitizer_syscall_post_compat_50_lutimes	include/sanitizer/netbsd_syscall_hooks.h	1462;"	d
__sanitizer_syscall_post_compat_50_mknod	include/sanitizer/netbsd_syscall_hooks.h	106;"	d
__sanitizer_syscall_post_compat_50_mq_timedreceive	include/sanitizer/netbsd_syscall_hooks.h	1416;"	d
__sanitizer_syscall_post_compat_50_mq_timedsend	include/sanitizer/netbsd_syscall_hooks.h	1406;"	d
__sanitizer_syscall_post_compat_50_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	1269;"	d
__sanitizer_syscall_post_compat_50_pollts	include/sanitizer/netbsd_syscall_hooks.h	2031;"	d
__sanitizer_syscall_post_compat_50_pselect	include/sanitizer/netbsd_syscall_hooks.h	2023;"	d
__sanitizer_syscall_post_compat_50_quotactl	include/sanitizer/netbsd_syscall_hooks.h	781;"	d
__sanitizer_syscall_post_compat_50_select	include/sanitizer/netbsd_syscall_hooks.h	493;"	d
__sanitizer_syscall_post_compat_50_setitimer	include/sanitizer/netbsd_syscall_hooks.h	440;"	d
__sanitizer_syscall_post_compat_50_settimeofday	include/sanitizer/netbsd_syscall_hooks.h	644;"	d
__sanitizer_syscall_post_compat_50_timer_gettime	include/sanitizer/netbsd_syscall_hooks.h	1259;"	d
__sanitizer_syscall_post_compat_50_timer_settime	include/sanitizer/netbsd_syscall_hooks.h	1251;"	d
__sanitizer_syscall_post_compat_50_utimes	include/sanitizer/netbsd_syscall_hooks.h	733;"	d
__sanitizer_syscall_post_compat_50_wait4	include/sanitizer/netbsd_syscall_hooks.h	75;"	d
__sanitizer_syscall_post_compat_60__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	2401;"	d
__sanitizer_syscall_post_compat_60_sa_enable	include/sanitizer/netbsd_syscall_hooks.h	1759;"	d
__sanitizer_syscall_post_compat_60_sa_preempt	include/sanitizer/netbsd_syscall_hooks.h	1773;"	d
__sanitizer_syscall_post_compat_60_sa_register	include/sanitizer/netbsd_syscall_hooks.h	1746;"	d
__sanitizer_syscall_post_compat_60_sa_setconcurrency	include/sanitizer/netbsd_syscall_hooks.h	1764;"	d
__sanitizer_syscall_post_compat_60_sa_stacks	include/sanitizer/netbsd_syscall_hooks.h	1754;"	d
__sanitizer_syscall_post_compat_60_sa_yield	include/sanitizer/netbsd_syscall_hooks.h	1769;"	d
__sanitizer_syscall_post_compat_90_fhstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	2178;"	d
__sanitizer_syscall_post_compat_90_fstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1885;"	d
__sanitizer_syscall_post_compat_90_getvfsstat	include/sanitizer/netbsd_syscall_hooks.h	1872;"	d
__sanitizer_syscall_post_compat_90_statvfs1	include/sanitizer/netbsd_syscall_hooks.h	1879;"	d
__sanitizer_syscall_post_connect	include/sanitizer/linux_syscall_hooks.h	1085;"	d
__sanitizer_syscall_post_connect	include/sanitizer/netbsd_syscall_hooks.h	517;"	d
__sanitizer_syscall_post_creat	include/sanitizer/linux_syscall_hooks.h	802;"	d
__sanitizer_syscall_post_create_module	include/sanitizer/linux_syscall_hooks.h	1938;"	d
__sanitizer_syscall_post_delete_module	include/sanitizer/linux_syscall_hooks.h	374;"	d
__sanitizer_syscall_post_dup	include/sanitizer/linux_syscall_hooks.h	728;"	d
__sanitizer_syscall_post_dup	include/sanitizer/netbsd_syscall_hooks.h	247;"	d
__sanitizer_syscall_post_dup2	include/sanitizer/linux_syscall_hooks.h	732;"	d
__sanitizer_syscall_post_dup2	include/sanitizer/netbsd_syscall_hooks.h	475;"	d
__sanitizer_syscall_post_dup3	include/sanitizer/linux_syscall_hooks.h	736;"	d
__sanitizer_syscall_post_dup3	include/sanitizer/netbsd_syscall_hooks.h	2530;"	d
__sanitizer_syscall_post_epoll_create	include/sanitizer/linux_syscall_hooks.h	1200;"	d
__sanitizer_syscall_post_epoll_create1	include/sanitizer/linux_syscall_hooks.h	1204;"	d
__sanitizer_syscall_post_epoll_ctl	include/sanitizer/linux_syscall_hooks.h	1209;"	d
__sanitizer_syscall_post_epoll_ctl_old	include/sanitizer/linux_syscall_hooks.h	1939;"	d
__sanitizer_syscall_post_epoll_pwait	include/sanitizer/linux_syscall_hooks.h	1224;"	d
__sanitizer_syscall_post_epoll_wait	include/sanitizer/linux_syscall_hooks.h	1215;"	d
__sanitizer_syscall_post_epoll_wait_old	include/sanitizer/linux_syscall_hooks.h	1940;"	d
__sanitizer_syscall_post_eventfd	include/sanitizer/linux_syscall_hooks.h	1734;"	d
__sanitizer_syscall_post_eventfd2	include/sanitizer/linux_syscall_hooks.h	1738;"	d
__sanitizer_syscall_post_execve	include/sanitizer/linux_syscall_hooks.h	1941;"	d
__sanitizer_syscall_post_execve	include/sanitizer/netbsd_syscall_hooks.h	336;"	d
__sanitizer_syscall_post_exit	include/sanitizer/linux_syscall_hooks.h	337;"	d
__sanitizer_syscall_post_exit	include/sanitizer/netbsd_syscall_hooks.h	44;"	d
__sanitizer_syscall_post_exit_group	include/sanitizer/linux_syscall_hooks.h	341;"	d
__sanitizer_syscall_post_extattr_delete_fd	include/sanitizer/netbsd_syscall_hooks.h	1956;"	d
__sanitizer_syscall_post_extattr_delete_file	include/sanitizer/netbsd_syscall_hooks.h	1928;"	d
__sanitizer_syscall_post_extattr_delete_link	include/sanitizer/netbsd_syscall_hooks.h	1984;"	d
__sanitizer_syscall_post_extattr_get_fd	include/sanitizer/netbsd_syscall_hooks.h	1948;"	d
__sanitizer_syscall_post_extattr_get_file	include/sanitizer/netbsd_syscall_hooks.h	1919;"	d
__sanitizer_syscall_post_extattr_get_link	include/sanitizer/netbsd_syscall_hooks.h	1975;"	d
__sanitizer_syscall_post_extattr_list_fd	include/sanitizer/netbsd_syscall_hooks.h	1994;"	d
__sanitizer_syscall_post_extattr_list_file	include/sanitizer/netbsd_syscall_hooks.h	2004;"	d
__sanitizer_syscall_post_extattr_list_link	include/sanitizer/netbsd_syscall_hooks.h	2014;"	d
__sanitizer_syscall_post_extattr_set_fd	include/sanitizer/netbsd_syscall_hooks.h	1938;"	d
__sanitizer_syscall_post_extattr_set_file	include/sanitizer/netbsd_syscall_hooks.h	1909;"	d
__sanitizer_syscall_post_extattr_set_link	include/sanitizer/netbsd_syscall_hooks.h	1965;"	d
__sanitizer_syscall_post_extattrctl	include/sanitizer/netbsd_syscall_hooks.h	1899;"	d
__sanitizer_syscall_post_faccessat	include/sanitizer/linux_syscall_hooks.h	1615;"	d
__sanitizer_syscall_post_faccessat	include/sanitizer/netbsd_syscall_hooks.h	2585;"	d
__sanitizer_syscall_post_fadvise64	include/sanitizer/linux_syscall_hooks.h	1942;"	d
__sanitizer_syscall_post_fadvise64_64	include/sanitizer/linux_syscall_hooks.h	1943;"	d
__sanitizer_syscall_post_fallocate	include/sanitizer/linux_syscall_hooks.h	1944;"	d
__sanitizer_syscall_post_fanotify_init	include/sanitizer/linux_syscall_hooks.h	1945;"	d
__sanitizer_syscall_post_fanotify_mark	include/sanitizer/linux_syscall_hooks.h	1946;"	d
__sanitizer_syscall_post_fchdir	include/sanitizer/linux_syscall_hooks.h	1030;"	d
__sanitizer_syscall_post_fchdir	include/sanitizer/netbsd_syscall_hooks.h	101;"	d
__sanitizer_syscall_post_fchflags	include/sanitizer/netbsd_syscall_hooks.h	220;"	d
__sanitizer_syscall_post_fchmod	include/sanitizer/linux_syscall_hooks.h	707;"	d
__sanitizer_syscall_post_fchmod	include/sanitizer/netbsd_syscall_hooks.h	655;"	d
__sanitizer_syscall_post_fchmodat	include/sanitizer/linux_syscall_hooks.h	1621;"	d
__sanitizer_syscall_post_fchmodat	include/sanitizer/netbsd_syscall_hooks.h	2592;"	d
__sanitizer_syscall_post_fchown	include/sanitizer/linux_syscall_hooks.h	835;"	d
__sanitizer_syscall_post_fchown	include/sanitizer/netbsd_syscall_hooks.h	650;"	d
__sanitizer_syscall_post_fchown16	include/sanitizer/linux_syscall_hooks.h	852;"	d
__sanitizer_syscall_post_fchown32	include/sanitizer/linux_syscall_hooks.h	1947;"	d
__sanitizer_syscall_post_fchownat	include/sanitizer/linux_syscall_hooks.h	1628;"	d
__sanitizer_syscall_post_fchownat	include/sanitizer/netbsd_syscall_hooks.h	2600;"	d
__sanitizer_syscall_post_fchroot	include/sanitizer/netbsd_syscall_hooks.h	1582;"	d
__sanitizer_syscall_post_fcntl	include/sanitizer/linux_syscall_hooks.h	711;"	d
__sanitizer_syscall_post_fcntl	include/sanitizer/netbsd_syscall_hooks.h	486;"	d
__sanitizer_syscall_post_fcntl64	include/sanitizer/linux_syscall_hooks.h	715;"	d
__sanitizer_syscall_post_fdatasync	include/sanitizer/linux_syscall_hooks.h	446;"	d
__sanitizer_syscall_post_fdatasync	include/sanitizer/netbsd_syscall_hooks.h	1274;"	d
__sanitizer_syscall_post_fdiscard	include/sanitizer/netbsd_syscall_hooks.h	2715;"	d
__sanitizer_syscall_post_fexecve	include/sanitizer/netbsd_syscall_hooks.h	2607;"	d
__sanitizer_syscall_post_fgetxattr	include/sanitizer/linux_syscall_hooks.h	572;"	d
__sanitizer_syscall_post_fgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2079;"	d
__sanitizer_syscall_post_fktrace	include/sanitizer/netbsd_syscall_hooks.h	1529;"	d
__sanitizer_syscall_post_flistxattr	include/sanitizer/linux_syscall_hooks.h	590;"	d
__sanitizer_syscall_post_flistxattr	include/sanitizer/netbsd_syscall_hooks.h	2098;"	d
__sanitizer_syscall_post_flock	include/sanitizer/linux_syscall_hooks.h	750;"	d
__sanitizer_syscall_post_flock	include/sanitizer/netbsd_syscall_hooks.h	695;"	d
__sanitizer_syscall_post_fork	include/sanitizer/linux_syscall_hooks.h	1831;"	d
__sanitizer_syscall_post_fork	include/sanitizer/netbsd_syscall_hooks.h	47;"	d
__sanitizer_syscall_post_fpathconf	include/sanitizer/netbsd_syscall_hooks.h	1012;"	d
__sanitizer_syscall_post_fremovexattr	include/sanitizer/linux_syscall_hooks.h	603;"	d
__sanitizer_syscall_post_fremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2114;"	d
__sanitizer_syscall_post_fsetxattr	include/sanitizer/linux_syscall_hooks.h	553;"	d
__sanitizer_syscall_post_fsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2056;"	d
__sanitizer_syscall_post_fstat	include/sanitizer/linux_syscall_hooks.h	505;"	d
__sanitizer_syscall_post_fstat64	include/sanitizer/linux_syscall_hooks.h	529;"	d
__sanitizer_syscall_post_fstatat	include/sanitizer/netbsd_syscall_hooks.h	2613;"	d
__sanitizer_syscall_post_fstatat64	include/sanitizer/linux_syscall_hooks.h	1648;"	d
__sanitizer_syscall_post_fstatfs	include/sanitizer/linux_syscall_hooks.h	492;"	d
__sanitizer_syscall_post_fstatfs64	include/sanitizer/linux_syscall_hooks.h	496;"	d
__sanitizer_syscall_post_fstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	2852;"	d
__sanitizer_syscall_post_fsync	include/sanitizer/linux_syscall_hooks.h	442;"	d
__sanitizer_syscall_post_fsync	include/sanitizer/netbsd_syscall_hooks.h	500;"	d
__sanitizer_syscall_post_fsync_range	include/sanitizer/netbsd_syscall_hooks.h	1860;"	d
__sanitizer_syscall_post_ftime	include/sanitizer/linux_syscall_hooks.h	1948;"	d
__sanitizer_syscall_post_ftruncate	include/sanitizer/linux_syscall_hooks.h	475;"	d
__sanitizer_syscall_post_ftruncate	include/sanitizer/netbsd_syscall_hooks.h	1080;"	d
__sanitizer_syscall_post_ftruncate64	include/sanitizer/linux_syscall_hooks.h	1949;"	d
__sanitizer_syscall_post_futex	include/sanitizer/linux_syscall_hooks.h	1950;"	d
__sanitizer_syscall_post_futimens	include/sanitizer/netbsd_syscall_hooks.h	2653;"	d
__sanitizer_syscall_post_futimesat	include/sanitizer/linux_syscall_hooks.h	1609;"	d
__sanitizer_syscall_post_get_kernel_syms	include/sanitizer/linux_syscall_hooks.h	1955;"	d
__sanitizer_syscall_post_get_mempolicy	include/sanitizer/linux_syscall_hooks.h	1530;"	d
__sanitizer_syscall_post_get_robust_list	include/sanitizer/linux_syscall_hooks.h	1692;"	d
__sanitizer_syscall_post_get_thread_area	include/sanitizer/linux_syscall_hooks.h	1959;"	d
__sanitizer_syscall_post_getcontext	include/sanitizer/netbsd_syscall_hooks.h	1641;"	d
__sanitizer_syscall_post_getcpu	include/sanitizer/linux_syscall_hooks.h	1701;"	d
__sanitizer_syscall_post_getcwd	include/sanitizer/linux_syscall_hooks.h	1018;"	d
__sanitizer_syscall_post_getdents	include/sanitizer/linux_syscall_hooks.h	1051;"	d
__sanitizer_syscall_post_getdents64	include/sanitizer/linux_syscall_hooks.h	1057;"	d
__sanitizer_syscall_post_getegid	include/sanitizer/linux_syscall_hooks.h	74;"	d
__sanitizer_syscall_post_getegid	include/sanitizer/netbsd_syscall_hooks.h	253;"	d
__sanitizer_syscall_post_getegid16	include/sanitizer/linux_syscall_hooks.h	927;"	d
__sanitizer_syscall_post_getegid32	include/sanitizer/linux_syscall_hooks.h	1951;"	d
__sanitizer_syscall_post_geteuid	include/sanitizer/linux_syscall_hooks.h	68;"	d
__sanitizer_syscall_post_geteuid	include/sanitizer/netbsd_syscall_hooks.h	159;"	d
__sanitizer_syscall_post_geteuid16	include/sanitizer/linux_syscall_hooks.h	919;"	d
__sanitizer_syscall_post_geteuid32	include/sanitizer/linux_syscall_hooks.h	1952;"	d
__sanitizer_syscall_post_getgid	include/sanitizer/linux_syscall_hooks.h	71;"	d
__sanitizer_syscall_post_getgid	include/sanitizer/netbsd_syscall_hooks.h	276;"	d
__sanitizer_syscall_post_getgid16	include/sanitizer/linux_syscall_hooks.h	923;"	d
__sanitizer_syscall_post_getgid32	include/sanitizer/linux_syscall_hooks.h	1953;"	d
__sanitizer_syscall_post_getgroups	include/sanitizer/linux_syscall_hooks.h	101;"	d
__sanitizer_syscall_post_getgroups	include/sanitizer/netbsd_syscall_hooks.h	420;"	d
__sanitizer_syscall_post_getgroups16	include/sanitizer/linux_syscall_hooks.h	904;"	d
__sanitizer_syscall_post_getgroups32	include/sanitizer/linux_syscall_hooks.h	1954;"	d
__sanitizer_syscall_post_gethostname	include/sanitizer/linux_syscall_hooks.h	1231;"	d
__sanitizer_syscall_post_getitimer	include/sanitizer/linux_syscall_hooks.h	180;"	d
__sanitizer_syscall_post_getpeername	include/sanitizer/linux_syscall_hooks.h	1108;"	d
__sanitizer_syscall_post_getpeername	include/sanitizer/netbsd_syscall_hooks.h	199;"	d
__sanitizer_syscall_post_getpgid	include/sanitizer/linux_syscall_hooks.h	90;"	d
__sanitizer_syscall_post_getpgid	include/sanitizer/netbsd_syscall_hooks.h	1114;"	d
__sanitizer_syscall_post_getpgrp	include/sanitizer/linux_syscall_hooks.h	93;"	d
__sanitizer_syscall_post_getpgrp	include/sanitizer/netbsd_syscall_hooks.h	430;"	d
__sanitizer_syscall_post_getpid	include/sanitizer/linux_syscall_hooks.h	59;"	d
__sanitizer_syscall_post_getpid	include/sanitizer/netbsd_syscall_hooks.h	136;"	d
__sanitizer_syscall_post_getpmsg	include/sanitizer/linux_syscall_hooks.h	1956;"	d
__sanitizer_syscall_post_getppid	include/sanitizer/linux_syscall_hooks.h	62;"	d
__sanitizer_syscall_post_getppid	include/sanitizer/netbsd_syscall_hooks.h	237;"	d
__sanitizer_syscall_post_getpriority	include/sanitizer/linux_syscall_hooks.h	310;"	d
__sanitizer_syscall_post_getpriority	include/sanitizer/netbsd_syscall_hooks.h	528;"	d
__sanitizer_syscall_post_getrandom	include/sanitizer/netbsd_syscall_hooks.h	480;"	d
__sanitizer_syscall_post_getresgid	include/sanitizer/linux_syscall_hooks.h	85;"	d
__sanitizer_syscall_post_getresgid16	include/sanitizer/linux_syscall_hooks.h	890;"	d
__sanitizer_syscall_post_getresgid32	include/sanitizer/linux_syscall_hooks.h	1957;"	d
__sanitizer_syscall_post_getresuid	include/sanitizer/linux_syscall_hooks.h	79;"	d
__sanitizer_syscall_post_getresuid16	include/sanitizer/linux_syscall_hooks.h	879;"	d
__sanitizer_syscall_post_getresuid32	include/sanitizer/linux_syscall_hooks.h	1958;"	d
__sanitizer_syscall_post_getrlimit	include/sanitizer/linux_syscall_hooks.h	1255;"	d
__sanitizer_syscall_post_getrlimit	include/sanitizer/netbsd_syscall_hooks.h	1026;"	d
__sanitizer_syscall_post_getrusage	include/sanitizer/linux_syscall_hooks.h	1275;"	d
__sanitizer_syscall_post_getsid	include/sanitizer/linux_syscall_hooks.h	97;"	d
__sanitizer_syscall_post_getsid	include/sanitizer/netbsd_syscall_hooks.h	1519;"	d
__sanitizer_syscall_post_getsockname	include/sanitizer/linux_syscall_hooks.h	1102;"	d
__sanitizer_syscall_post_getsockname	include/sanitizer/netbsd_syscall_hooks.h	205;"	d
__sanitizer_syscall_post_getsockopt	include/sanitizer/linux_syscall_hooks.h	1073;"	d
__sanitizer_syscall_post_getsockopt	include/sanitizer/netbsd_syscall_hooks.h	623;"	d
__sanitizer_syscall_post_getsockopt2	include/sanitizer/netbsd_syscall_hooks.h	1019;"	d
__sanitizer_syscall_post_gettid	include/sanitizer/linux_syscall_hooks.h	48;"	d
__sanitizer_syscall_post_gettimeofday	include/sanitizer/linux_syscall_hooks.h	33;"	d
__sanitizer_syscall_post_getuid	include/sanitizer/linux_syscall_hooks.h	65;"	d
__sanitizer_syscall_post_getuid	include/sanitizer/netbsd_syscall_hooks.h	156;"	d
__sanitizer_syscall_post_getuid16	include/sanitizer/linux_syscall_hooks.h	915;"	d
__sanitizer_syscall_post_getuid32	include/sanitizer/linux_syscall_hooks.h	1960;"	d
__sanitizer_syscall_post_getvfsstat	include/sanitizer/netbsd_syscall_hooks.h	2842;"	d
__sanitizer_syscall_post_getxattr	include/sanitizer/linux_syscall_hooks.h	560;"	d
__sanitizer_syscall_post_getxattr	include/sanitizer/netbsd_syscall_hooks.h	2063;"	d
__sanitizer_syscall_post_gtty	include/sanitizer/linux_syscall_hooks.h	1961;"	d
__sanitizer_syscall_post_idle	include/sanitizer/linux_syscall_hooks.h	1962;"	d
__sanitizer_syscall_post_init_module	include/sanitizer/linux_syscall_hooks.h	369;"	d
__sanitizer_syscall_post_inotify_add_watch	include/sanitizer/linux_syscall_hooks.h	1546;"	d
__sanitizer_syscall_post_inotify_init	include/sanitizer/linux_syscall_hooks.h	1537;"	d
__sanitizer_syscall_post_inotify_init1	include/sanitizer/linux_syscall_hooks.h	1541;"	d
__sanitizer_syscall_post_inotify_rm_watch	include/sanitizer/linux_syscall_hooks.h	1551;"	d
__sanitizer_syscall_post_io_cancel	include/sanitizer/linux_syscall_hooks.h	779;"	d
__sanitizer_syscall_post_io_destroy	include/sanitizer/linux_syscall_hooks.h	758;"	d
__sanitizer_syscall_post_io_getevents	include/sanitizer/linux_syscall_hooks.h	765;"	d
__sanitizer_syscall_post_io_setup	include/sanitizer/linux_syscall_hooks.h	754;"	d
__sanitizer_syscall_post_io_submit	include/sanitizer/linux_syscall_hooks.h	773;"	d
__sanitizer_syscall_post_ioctl	include/sanitizer/linux_syscall_hooks.h	746;"	d
__sanitizer_syscall_post_ioctl	include/sanitizer/netbsd_syscall_hooks.h	311;"	d
__sanitizer_syscall_post_ioperm	include/sanitizer/linux_syscall_hooks.h	741;"	d
__sanitizer_syscall_post_iopl	include/sanitizer/linux_syscall_hooks.h	1963;"	d
__sanitizer_syscall_post_ioprio_get	include/sanitizer/linux_syscall_hooks.h	1492;"	d
__sanitizer_syscall_post_ioprio_set	include/sanitizer/linux_syscall_hooks.h	1487;"	d
__sanitizer_syscall_post_ipc	include/sanitizer/linux_syscall_hooks.h	1352;"	d
__sanitizer_syscall_post_issetugid	include/sanitizer/netbsd_syscall_hooks.h	1631;"	d
__sanitizer_syscall_post_kexec_load	include/sanitizer/linux_syscall_hooks.h	330;"	d
__sanitizer_syscall_post_keyctl	include/sanitizer/linux_syscall_hooks.h	1480;"	d
__sanitizer_syscall_post_kill	include/sanitizer/linux_syscall_hooks.h	405;"	d
__sanitizer_syscall_post_kill	include/sanitizer/netbsd_syscall_hooks.h	228;"	d
__sanitizer_syscall_post_kqueue	include/sanitizer/netbsd_syscall_hooks.h	1798;"	d
__sanitizer_syscall_post_kqueue1	include/sanitizer/netbsd_syscall_hooks.h	2535;"	d
__sanitizer_syscall_post_ktrace	include/sanitizer/netbsd_syscall_hooks.h	265;"	d
__sanitizer_syscall_post_lchflags	include/sanitizer/netbsd_syscall_hooks.h	1626;"	d
__sanitizer_syscall_post_lchmod	include/sanitizer/netbsd_syscall_hooks.h	1450;"	d
__sanitizer_syscall_post_lchown	include/sanitizer/linux_syscall_hooks.h	830;"	d
__sanitizer_syscall_post_lchown	include/sanitizer/netbsd_syscall_hooks.h	1456;"	d
__sanitizer_syscall_post_lchown16	include/sanitizer/linux_syscall_hooks.h	847;"	d
__sanitizer_syscall_post_lchown32	include/sanitizer/linux_syscall_hooks.h	1964;"	d
__sanitizer_syscall_post_lfs_bmapv	include/sanitizer/netbsd_syscall_hooks.h	966;"	d
__sanitizer_syscall_post_lfs_markv	include/sanitizer/netbsd_syscall_hooks.h	972;"	d
__sanitizer_syscall_post_lfs_segclean	include/sanitizer/netbsd_syscall_hooks.h	978;"	d
__sanitizer_syscall_post_lgetxattr	include/sanitizer/linux_syscall_hooks.h	566;"	d
__sanitizer_syscall_post_lgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2071;"	d
__sanitizer_syscall_post_link	include/sanitizer/linux_syscall_hooks.h	687;"	d
__sanitizer_syscall_post_link	include/sanitizer/netbsd_syscall_hooks.h	88;"	d
__sanitizer_syscall_post_linkat	include/sanitizer/linux_syscall_hooks.h	1594;"	d
__sanitizer_syscall_post_linkat	include/sanitizer/netbsd_syscall_hooks.h	2549;"	d
__sanitizer_syscall_post_lio_listio	include/sanitizer/netbsd_syscall_hooks.h	2227;"	d
__sanitizer_syscall_post_listen	include/sanitizer/linux_syscall_hooks.h	1181;"	d
__sanitizer_syscall_post_listen	include/sanitizer/netbsd_syscall_hooks.h	566;"	d
__sanitizer_syscall_post_listxattr	include/sanitizer/linux_syscall_hooks.h	578;"	d
__sanitizer_syscall_post_listxattr	include/sanitizer/netbsd_syscall_hooks.h	2086;"	d
__sanitizer_syscall_post_llistxattr	include/sanitizer/linux_syscall_hooks.h	584;"	d
__sanitizer_syscall_post_llistxattr	include/sanitizer/netbsd_syscall_hooks.h	2092;"	d
__sanitizer_syscall_post_llseek	include/sanitizer/linux_syscall_hooks.h	947;"	d
__sanitizer_syscall_post_lock	include/sanitizer/linux_syscall_hooks.h	1966;"	d
__sanitizer_syscall_post_lookup_dcookie	include/sanitizer/linux_syscall_hooks.h	1039;"	d
__sanitizer_syscall_post_lpathconf	include/sanitizer/netbsd_syscall_hooks.h	2835;"	d
__sanitizer_syscall_post_lremovexattr	include/sanitizer/linux_syscall_hooks.h	599;"	d
__sanitizer_syscall_post_lremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2109;"	d
__sanitizer_syscall_post_lseek	include/sanitizer/linux_syscall_hooks.h	939;"	d
__sanitizer_syscall_post_lseek	include/sanitizer/netbsd_syscall_hooks.h	1067;"	d
__sanitizer_syscall_post_lsetxattr	include/sanitizer/linux_syscall_hooks.h	545;"	d
__sanitizer_syscall_post_lsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2047;"	d
__sanitizer_syscall_post_lstat	include/sanitizer/linux_syscall_hooks.h	501;"	d
__sanitizer_syscall_post_lstat64	include/sanitizer/linux_syscall_hooks.h	533;"	d
__sanitizer_syscall_post_madvise	include/sanitizer/linux_syscall_hooks.h	662;"	d
__sanitizer_syscall_post_madvise	include/sanitizer/netbsd_syscall_hooks.h	406;"	d
__sanitizer_syscall_post_madvise1	include/sanitizer/linux_syscall_hooks.h	1967;"	d
__sanitizer_syscall_post_mbind	include/sanitizer/linux_syscall_hooks.h	1520;"	d
__sanitizer_syscall_post_migrate_pages	include/sanitizer/linux_syscall_hooks.h	1503;"	d
__sanitizer_syscall_post_mincore	include/sanitizer/linux_syscall_hooks.h	667;"	d
__sanitizer_syscall_post_mincore	include/sanitizer/netbsd_syscall_hooks.h	414;"	d
__sanitizer_syscall_post_minherit	include/sanitizer/netbsd_syscall_hooks.h	1445;"	d
__sanitizer_syscall_post_mkdir	include/sanitizer/linux_syscall_hooks.h	1022;"	d
__sanitizer_syscall_post_mkdir	include/sanitizer/netbsd_syscall_hooks.h	724;"	d
__sanitizer_syscall_post_mkdirat	include/sanitizer/linux_syscall_hooks.h	1574;"	d
__sanitizer_syscall_post_mkdirat	include/sanitizer/netbsd_syscall_hooks.h	2578;"	d
__sanitizer_syscall_post_mkfifo	include/sanitizer/netbsd_syscall_hooks.h	699;"	d
__sanitizer_syscall_post_mkfifoat	include/sanitizer/netbsd_syscall_hooks.h	2564;"	d
__sanitizer_syscall_post_mknod	include/sanitizer/linux_syscall_hooks.h	682;"	d
__sanitizer_syscall_post_mknodat	include/sanitizer/linux_syscall_hooks.h	1568;"	d
__sanitizer_syscall_post_mknodat	include/sanitizer/netbsd_syscall_hooks.h	2571;"	d
__sanitizer_syscall_post_mlock	include/sanitizer/linux_syscall_hooks.h	645;"	d
__sanitizer_syscall_post_mlock	include/sanitizer/netbsd_syscall_hooks.h	1095;"	d
__sanitizer_syscall_post_mlockall	include/sanitizer/linux_syscall_hooks.h	653;"	d
__sanitizer_syscall_post_mlockall	include/sanitizer/netbsd_syscall_hooks.h	1278;"	d
__sanitizer_syscall_post_mmap	include/sanitizer/linux_syscall_hooks.h	1969;"	d
__sanitizer_syscall_post_mmap	include/sanitizer/netbsd_syscall_hooks.h	1047;"	d
__sanitizer_syscall_post_mmap2	include/sanitizer/linux_syscall_hooks.h	1968;"	d
__sanitizer_syscall_post_mmap_pgoff	include/sanitizer/linux_syscall_hooks.h	1780;"	d
__sanitizer_syscall_post_modctl	include/sanitizer/netbsd_syscall_hooks.h	1298;"	d
__sanitizer_syscall_post_modify_ldt	include/sanitizer/linux_syscall_hooks.h	1970;"	d
__sanitizer_syscall_post_mount	include/sanitizer/linux_syscall_hooks.h	456;"	d
__sanitizer_syscall_post_move_pages	include/sanitizer/linux_syscall_hooks.h	1511;"	d
__sanitizer_syscall_post_mprotect	include/sanitizer/linux_syscall_hooks.h	612;"	d
__sanitizer_syscall_post_mprotect	include/sanitizer/netbsd_syscall_hooks.h	400;"	d
__sanitizer_syscall_post_mpx	include/sanitizer/linux_syscall_hooks.h	1971;"	d
__sanitizer_syscall_post_mq_close	include/sanitizer/netbsd_syscall_hooks.h	1359;"	d
__sanitizer_syscall_post_mq_getattr	include/sanitizer/netbsd_syscall_hooks.h	1368;"	d
__sanitizer_syscall_post_mq_getsetattr	include/sanitizer/linux_syscall_hooks.h	1395;"	d
__sanitizer_syscall_post_mq_notify	include/sanitizer/linux_syscall_hooks.h	1389;"	d
__sanitizer_syscall_post_mq_notify	include/sanitizer/netbsd_syscall_hooks.h	1380;"	d
__sanitizer_syscall_post_mq_open	include/sanitizer/linux_syscall_hooks.h	1360;"	d
__sanitizer_syscall_post_mq_open	include/sanitizer/netbsd_syscall_hooks.h	1353;"	d
__sanitizer_syscall_post_mq_receive	include/sanitizer/netbsd_syscall_hooks.h	1396;"	d
__sanitizer_syscall_post_mq_send	include/sanitizer/netbsd_syscall_hooks.h	1387;"	d
__sanitizer_syscall_post_mq_setattr	include/sanitizer/netbsd_syscall_hooks.h	1374;"	d
__sanitizer_syscall_post_mq_timedreceive	include/sanitizer/linux_syscall_hooks.h	1382;"	d
__sanitizer_syscall_post_mq_timedsend	include/sanitizer/linux_syscall_hooks.h	1372;"	d
__sanitizer_syscall_post_mq_unlink	include/sanitizer/linux_syscall_hooks.h	1365;"	d
__sanitizer_syscall_post_mq_unlink	include/sanitizer/netbsd_syscall_hooks.h	1363;"	d
__sanitizer_syscall_post_mremap	include/sanitizer/linux_syscall_hooks.h	620;"	d
__sanitizer_syscall_post_mremap	include/sanitizer/netbsd_syscall_hooks.h	2248;"	d
__sanitizer_syscall_post_msgctl	include/sanitizer/linux_syscall_hooks.h	1302;"	d
__sanitizer_syscall_post_msgget	include/sanitizer/linux_syscall_hooks.h	1283;"	d
__sanitizer_syscall_post_msgget	include/sanitizer/netbsd_syscall_hooks.h	1177;"	d
__sanitizer_syscall_post_msgrcv	include/sanitizer/linux_syscall_hooks.h	1295;"	d
__sanitizer_syscall_post_msgrcv	include/sanitizer/netbsd_syscall_hooks.h	1191;"	d
__sanitizer_syscall_post_msgsnd	include/sanitizer/linux_syscall_hooks.h	1288;"	d
__sanitizer_syscall_post_msgsnd	include/sanitizer/netbsd_syscall_hooks.h	1183;"	d
__sanitizer_syscall_post_msync	include/sanitizer/linux_syscall_hooks.h	636;"	d
__sanitizer_syscall_post_munlock	include/sanitizer/linux_syscall_hooks.h	649;"	d
__sanitizer_syscall_post_munlock	include/sanitizer/netbsd_syscall_hooks.h	1099;"	d
__sanitizer_syscall_post_munlockall	include/sanitizer/linux_syscall_hooks.h	657;"	d
__sanitizer_syscall_post_munlockall	include/sanitizer/netbsd_syscall_hooks.h	1282;"	d
__sanitizer_syscall_post_munmap	include/sanitizer/linux_syscall_hooks.h	641;"	d
__sanitizer_syscall_post_munmap	include/sanitizer/netbsd_syscall_hooks.h	395;"	d
__sanitizer_syscall_post_name_to_handle_at	include/sanitizer/linux_syscall_hooks.h	1793;"	d
__sanitizer_syscall_post_nanosleep	include/sanitizer/linux_syscall_hooks.h	52;"	d
__sanitizer_syscall_post_newfstat	include/sanitizer/linux_syscall_hooks.h	517;"	d
__sanitizer_syscall_post_newfstatat	include/sanitizer/linux_syscall_hooks.h	1642;"	d
__sanitizer_syscall_post_newlstat	include/sanitizer/linux_syscall_hooks.h	513;"	d
__sanitizer_syscall_post_newstat	include/sanitizer/linux_syscall_hooks.h	509;"	d
__sanitizer_syscall_post_newuname	include/sanitizer/linux_syscall_hooks.h	1243;"	d
__sanitizer_syscall_post_nfsservctl	include/sanitizer/linux_syscall_hooks.h	1973;"	d
__sanitizer_syscall_post_nfssvc	include/sanitizer/netbsd_syscall_hooks.h	801;"	d
__sanitizer_syscall_post_ni_syscall	include/sanitizer/linux_syscall_hooks.h	1449;"	d
__sanitizer_syscall_post_nice	include/sanitizer/linux_syscall_hooks.h	250;"	d
__sanitizer_syscall_post_ntp_adjtime	include/sanitizer/netbsd_syscall_hooks.h	942;"	d
__sanitizer_syscall_post_old_getrlimit	include/sanitizer/linux_syscall_hooks.h	1259;"	d
__sanitizer_syscall_post_old_mmap	include/sanitizer/linux_syscall_hooks.h	1787;"	d
__sanitizer_syscall_post_old_readdir	include/sanitizer/linux_syscall_hooks.h	1743;"	d
__sanitizer_syscall_post_old_select	include/sanitizer/linux_syscall_hooks.h	1196;"	d
__sanitizer_syscall_post_oldfstat	include/sanitizer/linux_syscall_hooks.h	1974;"	d
__sanitizer_syscall_post_oldlstat	include/sanitizer/linux_syscall_hooks.h	1975;"	d
__sanitizer_syscall_post_oldolduname	include/sanitizer/linux_syscall_hooks.h	1976;"	d
__sanitizer_syscall_post_oldstat	include/sanitizer/linux_syscall_hooks.h	1977;"	d
__sanitizer_syscall_post_oldumount	include/sanitizer/linux_syscall_hooks.h	467;"	d
__sanitizer_syscall_post_olduname	include/sanitizer/linux_syscall_hooks.h	1251;"	d
__sanitizer_syscall_post_open	include/sanitizer/linux_syscall_hooks.h	807;"	d
__sanitizer_syscall_post_open	include/sanitizer/netbsd_syscall_hooks.h	64;"	d
__sanitizer_syscall_post_open_by_handle_at	include/sanitizer/linux_syscall_hooks.h	1801;"	d
__sanitizer_syscall_post_openat	include/sanitizer/linux_syscall_hooks.h	1636;"	d
__sanitizer_syscall_post_openat	include/sanitizer/netbsd_syscall_hooks.h	2627;"	d
__sanitizer_syscall_post_paccept	include/sanitizer/netbsd_syscall_hooks.h	2541;"	d
__sanitizer_syscall_post_pathconf	include/sanitizer/netbsd_syscall_hooks.h	1007;"	d
__sanitizer_syscall_post_pause	include/sanitizer/linux_syscall_hooks.h	435;"	d
__sanitizer_syscall_post_pciconfig_iobase	include/sanitizer/linux_syscall_hooks.h	1401;"	d
__sanitizer_syscall_post_pciconfig_read	include/sanitizer/linux_syscall_hooks.h	1407;"	d
__sanitizer_syscall_post_pciconfig_write	include/sanitizer/linux_syscall_hooks.h	1413;"	d
__sanitizer_syscall_post_perf_event_open	include/sanitizer/linux_syscall_hooks.h	1771;"	d
__sanitizer_syscall_post_personality	include/sanitizer/linux_syscall_hooks.h	166;"	d
__sanitizer_syscall_post_pipe	include/sanitizer/linux_syscall_hooks.h	720;"	d
__sanitizer_syscall_post_pipe	include/sanitizer/netbsd_syscall_hooks.h	250;"	d
__sanitizer_syscall_post_pipe2	include/sanitizer/linux_syscall_hooks.h	724;"	d
__sanitizer_syscall_post_pipe2	include/sanitizer/netbsd_syscall_hooks.h	2524;"	d
__sanitizer_syscall_post_pivot_root	include/sanitizer/linux_syscall_hooks.h	672;"	d
__sanitizer_syscall_post_poll	include/sanitizer/linux_syscall_hooks.h	1185;"	d
__sanitizer_syscall_post_poll	include/sanitizer/netbsd_syscall_hooks.h	1124;"	d
__sanitizer_syscall_post_posix_fadvise	include/sanitizer/netbsd_syscall_hooks.h	2143;"	d
__sanitizer_syscall_post_posix_fallocate	include/sanitizer/netbsd_syscall_hooks.h	2708;"	d
__sanitizer_syscall_post_posix_spawn	include/sanitizer/netbsd_syscall_hooks.h	2666;"	d
__sanitizer_syscall_post_ppoll	include/sanitizer/linux_syscall_hooks.h	1758;"	d
__sanitizer_syscall_post_prctl	include/sanitizer/linux_syscall_hooks.h	1978;"	d
__sanitizer_syscall_post_pread	include/sanitizer/netbsd_syscall_hooks.h	923;"	d
__sanitizer_syscall_post_pread64	include/sanitizer/linux_syscall_hooks.h	977;"	d
__sanitizer_syscall_post_pread64	include/sanitizer/linux_syscall_hooks.h	990;"	d
__sanitizer_syscall_post_preadv	include/sanitizer/linux_syscall_hooks.h	1005;"	d
__sanitizer_syscall_post_preadv	include/sanitizer/netbsd_syscall_hooks.h	1537;"	d
__sanitizer_syscall_post_prlimit64	include/sanitizer/linux_syscall_hooks.h	1269;"	d
__sanitizer_syscall_post_process_vm_readv	include/sanitizer/linux_syscall_hooks.h	1814;"	d
__sanitizer_syscall_post_process_vm_writev	include/sanitizer/linux_syscall_hooks.h	1824;"	d
__sanitizer_syscall_post_prof	include/sanitizer/linux_syscall_hooks.h	1980;"	d
__sanitizer_syscall_post_profil	include/sanitizer/linux_syscall_hooks.h	1979;"	d
__sanitizer_syscall_post_profil	include/sanitizer/netbsd_syscall_hooks.h	258;"	d
__sanitizer_syscall_post_pselect6	include/sanitizer/linux_syscall_hooks.h	1750;"	d
__sanitizer_syscall_post_pset_assign	include/sanitizer/netbsd_syscall_hooks.h	2264;"	d
__sanitizer_syscall_post_pset_create	include/sanitizer/netbsd_syscall_hooks.h	2255;"	d
__sanitizer_syscall_post_pset_destroy	include/sanitizer/netbsd_syscall_hooks.h	2259;"	d
__sanitizer_syscall_post_ptrace	include/sanitizer/linux_syscall_hooks.h	1454;"	d
__sanitizer_syscall_post_ptrace	include/sanitizer/netbsd_syscall_hooks.h	164;"	d
__sanitizer_syscall_post_putpmsg	include/sanitizer/linux_syscall_hooks.h	1981;"	d
__sanitizer_syscall_post_pwrite	include/sanitizer/netbsd_syscall_hooks.h	931;"	d
__sanitizer_syscall_post_pwrite64	include/sanitizer/linux_syscall_hooks.h	983;"	d
__sanitizer_syscall_post_pwrite64	include/sanitizer/linux_syscall_hooks.h	997;"	d
__sanitizer_syscall_post_pwritev	include/sanitizer/linux_syscall_hooks.h	1012;"	d
__sanitizer_syscall_post_pwritev	include/sanitizer/netbsd_syscall_hooks.h	1545;"	d
__sanitizer_syscall_post_query_module	include/sanitizer/linux_syscall_hooks.h	1982;"	d
__sanitizer_syscall_post_quotactl	include/sanitizer/linux_syscall_hooks.h	1045;"	d
__sanitizer_syscall_post_rasctl	include/sanitizer/netbsd_syscall_hooks.h	1794;"	d
__sanitizer_syscall_post_read	include/sanitizer/linux_syscall_hooks.h	954;"	d
__sanitizer_syscall_post_read	include/sanitizer/netbsd_syscall_hooks.h	52;"	d
__sanitizer_syscall_post_readahead	include/sanitizer/linux_syscall_hooks.h	1983;"	d
__sanitizer_syscall_post_readdir	include/sanitizer/linux_syscall_hooks.h	1984;"	d
__sanitizer_syscall_post_readlink	include/sanitizer/linux_syscall_hooks.h	797;"	d
__sanitizer_syscall_post_readlink	include/sanitizer/netbsd_syscall_hooks.h	330;"	d
__sanitizer_syscall_post_readlinkat	include/sanitizer/linux_syscall_hooks.h	1654;"	d
__sanitizer_syscall_post_readlinkat	include/sanitizer/netbsd_syscall_hooks.h	2635;"	d
__sanitizer_syscall_post_readv	include/sanitizer/linux_syscall_hooks.h	959;"	d
__sanitizer_syscall_post_readv	include/sanitizer/netbsd_syscall_hooks.h	632;"	d
__sanitizer_syscall_post_reboot	include/sanitizer/linux_syscall_hooks.h	319;"	d
__sanitizer_syscall_post_reboot	include/sanitizer/netbsd_syscall_hooks.h	1118;"	d
__sanitizer_syscall_post_recv	include/sanitizer/linux_syscall_hooks.h	1140;"	d
__sanitizer_syscall_post_recvfrom	include/sanitizer/linux_syscall_hooks.h	1147;"	d
__sanitizer_syscall_post_recvfrom	include/sanitizer/netbsd_syscall_hooks.h	185;"	d
__sanitizer_syscall_post_recvmmsg	include/sanitizer/linux_syscall_hooks.h	1160;"	d
__sanitizer_syscall_post_recvmmsg	include/sanitizer/netbsd_syscall_hooks.h	2675;"	d
__sanitizer_syscall_post_recvmsg	include/sanitizer/linux_syscall_hooks.h	1154;"	d
__sanitizer_syscall_post_recvmsg	include/sanitizer/netbsd_syscall_hooks.h	171;"	d
__sanitizer_syscall_post_remap_file_pages	include/sanitizer/linux_syscall_hooks.h	629;"	d
__sanitizer_syscall_post_removexattr	include/sanitizer/linux_syscall_hooks.h	595;"	d
__sanitizer_syscall_post_removexattr	include/sanitizer/netbsd_syscall_hooks.h	2103;"	d
__sanitizer_syscall_post_rename	include/sanitizer/linux_syscall_hooks.h	699;"	d
__sanitizer_syscall_post_rename	include/sanitizer/netbsd_syscall_hooks.h	679;"	d
__sanitizer_syscall_post_renameat	include/sanitizer/linux_syscall_hooks.h	1602;"	d
__sanitizer_syscall_post_renameat	include/sanitizer/netbsd_syscall_hooks.h	2557;"	d
__sanitizer_syscall_post_request_key	include/sanitizer/linux_syscall_hooks.h	1472;"	d
__sanitizer_syscall_post_restart_syscall	include/sanitizer/linux_syscall_hooks.h	324;"	d
__sanitizer_syscall_post_revoke	include/sanitizer/netbsd_syscall_hooks.h	320;"	d
__sanitizer_syscall_post_rmdir	include/sanitizer/linux_syscall_hooks.h	1034;"	d
__sanitizer_syscall_post_rmdir	include/sanitizer/netbsd_syscall_hooks.h	728;"	d
__sanitizer_syscall_post_rt_sigaction	include/sanitizer/linux_syscall_hooks.h	1845;"	d
__sanitizer_syscall_post_rt_sigpending	include/sanitizer/linux_syscall_hooks.h	386;"	d
__sanitizer_syscall_post_rt_sigprocmask	include/sanitizer/linux_syscall_hooks.h	380;"	d
__sanitizer_syscall_post_rt_sigqueueinfo	include/sanitizer/linux_syscall_hooks.h	419;"	d
__sanitizer_syscall_post_rt_sigreturn	include/sanitizer/linux_syscall_hooks.h	1985;"	d
__sanitizer_syscall_post_rt_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1986;"	d
__sanitizer_syscall_post_rt_sigtimedwait	include/sanitizer/linux_syscall_hooks.h	393;"	d
__sanitizer_syscall_post_rt_tgsigqueueinfo	include/sanitizer/linux_syscall_hooks.h	400;"	d
__sanitizer_syscall_post_sched_get_priority_max	include/sanitizer/linux_syscall_hooks.h	290;"	d
__sanitizer_syscall_post_sched_get_priority_min	include/sanitizer/linux_syscall_hooks.h	294;"	d
__sanitizer_syscall_post_sched_getaffinity	include/sanitizer/linux_syscall_hooks.h	280;"	d
__sanitizer_syscall_post_sched_getparam	include/sanitizer/linux_syscall_hooks.h	268;"	d
__sanitizer_syscall_post_sched_getscheduler	include/sanitizer/linux_syscall_hooks.h	264;"	d
__sanitizer_syscall_post_sched_rr_get_interval	include/sanitizer/linux_syscall_hooks.h	299;"	d
__sanitizer_syscall_post_sched_setaffinity	include/sanitizer/linux_syscall_hooks.h	273;"	d
__sanitizer_syscall_post_sched_setparam	include/sanitizer/linux_syscall_hooks.h	260;"	d
__sanitizer_syscall_post_sched_setscheduler	include/sanitizer/linux_syscall_hooks.h	255;"	d
__sanitizer_syscall_post_sched_yield	include/sanitizer/linux_syscall_hooks.h	286;"	d
__sanitizer_syscall_post_sched_yield	include/sanitizer/netbsd_syscall_hooks.h	1848;"	d
__sanitizer_syscall_post_security	include/sanitizer/linux_syscall_hooks.h	1987;"	d
__sanitizer_syscall_post_select	include/sanitizer/linux_syscall_hooks.h	1191;"	d
__sanitizer_syscall_post_semconfig	include/sanitizer/netbsd_syscall_hooks.h	1167;"	d
__sanitizer_syscall_post_semctl	include/sanitizer/linux_syscall_hooks.h	1319;"	d
__sanitizer_syscall_post_semget	include/sanitizer/linux_syscall_hooks.h	1308;"	d
__sanitizer_syscall_post_semget	include/sanitizer/netbsd_syscall_hooks.h	1156;"	d
__sanitizer_syscall_post_semop	include/sanitizer/linux_syscall_hooks.h	1313;"	d
__sanitizer_syscall_post_semop	include/sanitizer/netbsd_syscall_hooks.h	1162;"	d
__sanitizer_syscall_post_semtimedop	include/sanitizer/linux_syscall_hooks.h	1325;"	d
__sanitizer_syscall_post_send	include/sanitizer/linux_syscall_hooks.h	1114;"	d
__sanitizer_syscall_post_sendfile	include/sanitizer/linux_syscall_hooks.h	785;"	d
__sanitizer_syscall_post_sendfile64	include/sanitizer/linux_syscall_hooks.h	791;"	d
__sanitizer_syscall_post_sendmmsg	include/sanitizer/linux_syscall_hooks.h	1134;"	d
__sanitizer_syscall_post_sendmmsg	include/sanitizer/netbsd_syscall_hooks.h	2682;"	d
__sanitizer_syscall_post_sendmsg	include/sanitizer/linux_syscall_hooks.h	1128;"	d
__sanitizer_syscall_post_sendmsg	include/sanitizer/netbsd_syscall_hooks.h	177;"	d
__sanitizer_syscall_post_sendto	include/sanitizer/linux_syscall_hooks.h	1121;"	d
__sanitizer_syscall_post_sendto	include/sanitizer/netbsd_syscall_hooks.h	706;"	d
__sanitizer_syscall_post_set_mempolicy	include/sanitizer/linux_syscall_hooks.h	1497;"	d
__sanitizer_syscall_post_set_robust_list	include/sanitizer/linux_syscall_hooks.h	1697;"	d
__sanitizer_syscall_post_set_thread_area	include/sanitizer/linux_syscall_hooks.h	1996;"	d
__sanitizer_syscall_post_set_tid_address	include/sanitizer/linux_syscall_hooks.h	364;"	d
__sanitizer_syscall_post_setcontext	include/sanitizer/netbsd_syscall_hooks.h	1645;"	d
__sanitizer_syscall_post_setdomainname	include/sanitizer/linux_syscall_hooks.h	1239;"	d
__sanitizer_syscall_post_setegid	include/sanitizer/netbsd_syscall_hooks.h	957;"	d
__sanitizer_syscall_post_seteuid	include/sanitizer/netbsd_syscall_hooks.h	961;"	d
__sanitizer_syscall_post_setfsgid	include/sanitizer/linux_syscall_hooks.h	138;"	d
__sanitizer_syscall_post_setfsgid16	include/sanitizer/linux_syscall_hooks.h	899;"	d
__sanitizer_syscall_post_setfsgid32	include/sanitizer/linux_syscall_hooks.h	1988;"	d
__sanitizer_syscall_post_setfsuid	include/sanitizer/linux_syscall_hooks.h	134;"	d
__sanitizer_syscall_post_setfsuid16	include/sanitizer/linux_syscall_hooks.h	895;"	d
__sanitizer_syscall_post_setfsuid32	include/sanitizer/linux_syscall_hooks.h	1989;"	d
__sanitizer_syscall_post_setgid	include/sanitizer/linux_syscall_hooks.h	110;"	d
__sanitizer_syscall_post_setgid	include/sanitizer/netbsd_syscall_hooks.h	953;"	d
__sanitizer_syscall_post_setgid16	include/sanitizer/linux_syscall_hooks.h	861;"	d
__sanitizer_syscall_post_setgid32	include/sanitizer/linux_syscall_hooks.h	1990;"	d
__sanitizer_syscall_post_setgroups	include/sanitizer/linux_syscall_hooks.h	149;"	d
__sanitizer_syscall_post_setgroups	include/sanitizer/netbsd_syscall_hooks.h	426;"	d
__sanitizer_syscall_post_setgroups16	include/sanitizer/linux_syscall_hooks.h	910;"	d
__sanitizer_syscall_post_setgroups32	include/sanitizer/linux_syscall_hooks.h	1991;"	d
__sanitizer_syscall_post_sethostname	include/sanitizer/linux_syscall_hooks.h	1235;"	d
__sanitizer_syscall_post_setitimer	include/sanitizer/linux_syscall_hooks.h	185;"	d
__sanitizer_syscall_post_setns	include/sanitizer/linux_syscall_hooks.h	1807;"	d
__sanitizer_syscall_post_setpgid	include/sanitizer/linux_syscall_hooks.h	142;"	d
__sanitizer_syscall_post_setpgid	include/sanitizer/netbsd_syscall_hooks.h	434;"	d
__sanitizer_syscall_post_setpriority	include/sanitizer/linux_syscall_hooks.h	305;"	d
__sanitizer_syscall_post_setpriority	include/sanitizer/netbsd_syscall_hooks.h	505;"	d
__sanitizer_syscall_post_setregid	include/sanitizer/linux_syscall_hooks.h	106;"	d
__sanitizer_syscall_post_setregid	include/sanitizer/netbsd_syscall_hooks.h	674;"	d
__sanitizer_syscall_post_setregid16	include/sanitizer/linux_syscall_hooks.h	857;"	d
__sanitizer_syscall_post_setregid32	include/sanitizer/linux_syscall_hooks.h	1992;"	d
__sanitizer_syscall_post_setresgid	include/sanitizer/linux_syscall_hooks.h	129;"	d
__sanitizer_syscall_post_setresgid16	include/sanitizer/linux_syscall_hooks.h	884;"	d
__sanitizer_syscall_post_setresgid32	include/sanitizer/linux_syscall_hooks.h	1993;"	d
__sanitizer_syscall_post_setresuid	include/sanitizer/linux_syscall_hooks.h	123;"	d
__sanitizer_syscall_post_setresuid16	include/sanitizer/linux_syscall_hooks.h	873;"	d
__sanitizer_syscall_post_setresuid32	include/sanitizer/linux_syscall_hooks.h	1994;"	d
__sanitizer_syscall_post_setreuid	include/sanitizer/linux_syscall_hooks.h	114;"	d
__sanitizer_syscall_post_setreuid	include/sanitizer/netbsd_syscall_hooks.h	669;"	d
__sanitizer_syscall_post_setreuid16	include/sanitizer/linux_syscall_hooks.h	865;"	d
__sanitizer_syscall_post_setreuid32	include/sanitizer/linux_syscall_hooks.h	1995;"	d
__sanitizer_syscall_post_setrlimit	include/sanitizer/linux_syscall_hooks.h	1264;"	d
__sanitizer_syscall_post_setrlimit	include/sanitizer/netbsd_syscall_hooks.h	1031;"	d
__sanitizer_syscall_post_setsid	include/sanitizer/linux_syscall_hooks.h	145;"	d
__sanitizer_syscall_post_setsid	include/sanitizer/netbsd_syscall_hooks.h	776;"	d
__sanitizer_syscall_post_setsockopt	include/sanitizer/linux_syscall_hooks.h	1064;"	d
__sanitizer_syscall_post_setsockopt	include/sanitizer/netbsd_syscall_hooks.h	560;"	d
__sanitizer_syscall_post_settimeofday	include/sanitizer/linux_syscall_hooks.h	37;"	d
__sanitizer_syscall_post_setuid	include/sanitizer/linux_syscall_hooks.h	118;"	d
__sanitizer_syscall_post_setuid	include/sanitizer/netbsd_syscall_hooks.h	153;"	d
__sanitizer_syscall_post_setuid16	include/sanitizer/linux_syscall_hooks.h	869;"	d
__sanitizer_syscall_post_setuid32	include/sanitizer/linux_syscall_hooks.h	1997;"	d
__sanitizer_syscall_post_setxattr	include/sanitizer/linux_syscall_hooks.h	538;"	d
__sanitizer_syscall_post_setxattr	include/sanitizer/netbsd_syscall_hooks.h	2039;"	d
__sanitizer_syscall_post_sgetmask	include/sanitizer/linux_syscall_hooks.h	424;"	d
__sanitizer_syscall_post_shmat	include/sanitizer/linux_syscall_hooks.h	1331;"	d
__sanitizer_syscall_post_shmat	include/sanitizer/netbsd_syscall_hooks.h	1199;"	d
__sanitizer_syscall_post_shmctl	include/sanitizer/linux_syscall_hooks.h	1345;"	d
__sanitizer_syscall_post_shmdt	include/sanitizer/linux_syscall_hooks.h	1341;"	d
__sanitizer_syscall_post_shmdt	include/sanitizer/netbsd_syscall_hooks.h	1210;"	d
__sanitizer_syscall_post_shmget	include/sanitizer/linux_syscall_hooks.h	1336;"	d
__sanitizer_syscall_post_shmget	include/sanitizer/netbsd_syscall_hooks.h	1215;"	d
__sanitizer_syscall_post_shutdown	include/sanitizer/linux_syscall_hooks.h	314;"	d
__sanitizer_syscall_post_shutdown	include/sanitizer/netbsd_syscall_hooks.h	712;"	d
__sanitizer_syscall_post_sigaction	include/sanitizer/linux_syscall_hooks.h	1839;"	d
__sanitizer_syscall_post_sigaltstack	include/sanitizer/linux_syscall_hooks.h	1850;"	d
__sanitizer_syscall_post_signal	include/sanitizer/linux_syscall_hooks.h	432;"	d
__sanitizer_syscall_post_signalfd	include/sanitizer/linux_syscall_hooks.h	1707;"	d
__sanitizer_syscall_post_signalfd4	include/sanitizer/linux_syscall_hooks.h	1713;"	d
__sanitizer_syscall_post_sigpending	include/sanitizer/linux_syscall_hooks.h	170;"	d
__sanitizer_syscall_post_sigprocmask	include/sanitizer/linux_syscall_hooks.h	175;"	d
__sanitizer_syscall_post_sigqueueinfo	include/sanitizer/netbsd_syscall_hooks.h	1293;"	d
__sanitizer_syscall_post_sigreturn	include/sanitizer/linux_syscall_hooks.h	1998;"	d
__sanitizer_syscall_post_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1999;"	d
__sanitizer_syscall_post_socket	include/sanitizer/linux_syscall_hooks.h	1166;"	d
__sanitizer_syscall_post_socketcall	include/sanitizer/linux_syscall_hooks.h	1177;"	d
__sanitizer_syscall_post_socketpair	include/sanitizer/linux_syscall_hooks.h	1172;"	d
__sanitizer_syscall_post_socketpair	include/sanitizer/netbsd_syscall_hooks.h	718;"	d
__sanitizer_syscall_post_splice	include/sanitizer/linux_syscall_hooks.h	1672;"	d
__sanitizer_syscall_post_spu_create	include/sanitizer/linux_syscall_hooks.h	1562;"	d
__sanitizer_syscall_post_spu_run	include/sanitizer/linux_syscall_hooks.h	1556;"	d
__sanitizer_syscall_post_ssetmask	include/sanitizer/linux_syscall_hooks.h	428;"	d
__sanitizer_syscall_post_stat	include/sanitizer/linux_syscall_hooks.h	479;"	d
__sanitizer_syscall_post_stat64	include/sanitizer/linux_syscall_hooks.h	525;"	d
__sanitizer_syscall_post_statfs	include/sanitizer/linux_syscall_hooks.h	483;"	d
__sanitizer_syscall_post_statfs64	include/sanitizer/linux_syscall_hooks.h	487;"	d
__sanitizer_syscall_post_statvfs1	include/sanitizer/netbsd_syscall_hooks.h	2847;"	d
__sanitizer_syscall_post_stime	include/sanitizer/linux_syscall_hooks.h	29;"	d
__sanitizer_syscall_post_stty	include/sanitizer/linux_syscall_hooks.h	2000;"	d
__sanitizer_syscall_post_swapctl	include/sanitizer/netbsd_syscall_hooks.h	1433;"	d
__sanitizer_syscall_post_swapoff	include/sanitizer/linux_syscall_hooks.h	1423;"	d
__sanitizer_syscall_post_swapon	include/sanitizer/linux_syscall_hooks.h	1418;"	d
__sanitizer_syscall_post_symlink	include/sanitizer/linux_syscall_hooks.h	691;"	d
__sanitizer_syscall_post_symlink	include/sanitizer/netbsd_syscall_hooks.h	324;"	d
__sanitizer_syscall_post_symlinkat	include/sanitizer/linux_syscall_hooks.h	1586;"	d
__sanitizer_syscall_post_symlinkat	include/sanitizer/netbsd_syscall_hooks.h	2642;"	d
__sanitizer_syscall_post_sync	include/sanitizer/linux_syscall_hooks.h	438;"	d
__sanitizer_syscall_post_sync	include/sanitizer/netbsd_syscall_hooks.h	224;"	d
__sanitizer_syscall_post_sync_file_range	include/sanitizer/linux_syscall_hooks.h	2001;"	d
__sanitizer_syscall_post_syncfs	include/sanitizer/linux_syscall_hooks.h	1764;"	d
__sanitizer_syscall_post_sysarch	include/sanitizer/netbsd_syscall_hooks.h	854;"	d
__sanitizer_syscall_post_syscall	include/sanitizer/netbsd_syscall_hooks.h	36;"	d
__sanitizer_syscall_post_sysctl	include/sanitizer/linux_syscall_hooks.h	1427;"	d
__sanitizer_syscall_post_sysfs	include/sanitizer/linux_syscall_hooks.h	1435;"	d
__sanitizer_syscall_post_sysinfo	include/sanitizer/linux_syscall_hooks.h	1431;"	d
__sanitizer_syscall_post_syslog	include/sanitizer/linux_syscall_hooks.h	1440;"	d
__sanitizer_syscall_post_tee	include/sanitizer/linux_syscall_hooks.h	1686;"	d
__sanitizer_syscall_post_tgkill	include/sanitizer/linux_syscall_hooks.h	409;"	d
__sanitizer_syscall_post_time	include/sanitizer/linux_syscall_hooks.h	25;"	d
__sanitizer_syscall_post_timer_create	include/sanitizer/linux_syscall_hooks.h	192;"	d
__sanitizer_syscall_post_timer_create	include/sanitizer/netbsd_syscall_hooks.h	1239;"	d
__sanitizer_syscall_post_timer_delete	include/sanitizer/linux_syscall_hooks.h	218;"	d
__sanitizer_syscall_post_timer_delete	include/sanitizer/netbsd_syscall_hooks.h	1244;"	d
__sanitizer_syscall_post_timer_getoverrun	include/sanitizer/linux_syscall_hooks.h	204;"	d
__sanitizer_syscall_post_timer_getoverrun	include/sanitizer/netbsd_syscall_hooks.h	1264;"	d
__sanitizer_syscall_post_timer_gettime	include/sanitizer/linux_syscall_hooks.h	199;"	d
__sanitizer_syscall_post_timer_settime	include/sanitizer/linux_syscall_hooks.h	211;"	d
__sanitizer_syscall_post_timerfd_create	include/sanitizer/linux_syscall_hooks.h	1719;"	d
__sanitizer_syscall_post_timerfd_gettime	include/sanitizer/linux_syscall_hooks.h	1730;"	d
__sanitizer_syscall_post_timerfd_settime	include/sanitizer/linux_syscall_hooks.h	1725;"	d
__sanitizer_syscall_post_times	include/sanitizer/linux_syscall_hooks.h	45;"	d
__sanitizer_syscall_post_tkill	include/sanitizer/linux_syscall_hooks.h	414;"	d
__sanitizer_syscall_post_truncate	include/sanitizer/linux_syscall_hooks.h	471;"	d
__sanitizer_syscall_post_truncate	include/sanitizer/netbsd_syscall_hooks.h	1074;"	d
__sanitizer_syscall_post_truncate64	include/sanitizer/linux_syscall_hooks.h	2003;"	d
__sanitizer_syscall_post_tuxcall	include/sanitizer/linux_syscall_hooks.h	2004;"	d
__sanitizer_syscall_post_ugetrlimit	include/sanitizer/linux_syscall_hooks.h	2005;"	d
__sanitizer_syscall_post_ulimit	include/sanitizer/linux_syscall_hooks.h	2006;"	d
__sanitizer_syscall_post_umask	include/sanitizer/linux_syscall_hooks.h	1279;"	d
__sanitizer_syscall_post_umask	include/sanitizer/netbsd_syscall_hooks.h	341;"	d
__sanitizer_syscall_post_umount	include/sanitizer/linux_syscall_hooks.h	463;"	d
__sanitizer_syscall_post_umount2	include/sanitizer/linux_syscall_hooks.h	2007;"	d
__sanitizer_syscall_post_uname	include/sanitizer/linux_syscall_hooks.h	1247;"	d
__sanitizer_syscall_post_undelete	include/sanitizer/netbsd_syscall_hooks.h	1104;"	d
__sanitizer_syscall_post_unlink	include/sanitizer/linux_syscall_hooks.h	695;"	d
__sanitizer_syscall_post_unlink	include/sanitizer/netbsd_syscall_hooks.h	92;"	d
__sanitizer_syscall_post_unlinkat	include/sanitizer/linux_syscall_hooks.h	1580;"	d
__sanitizer_syscall_post_unlinkat	include/sanitizer/netbsd_syscall_hooks.h	2648;"	d
__sanitizer_syscall_post_unmount	include/sanitizer/netbsd_syscall_hooks.h	148;"	d
__sanitizer_syscall_post_unshare	include/sanitizer/linux_syscall_hooks.h	1665;"	d
__sanitizer_syscall_post_uselib	include/sanitizer/linux_syscall_hooks.h	1445;"	d
__sanitizer_syscall_post_ustat	include/sanitizer/linux_syscall_hooks.h	521;"	d
__sanitizer_syscall_post_utime	include/sanitizer/linux_syscall_hooks.h	931;"	d
__sanitizer_syscall_post_utimensat	include/sanitizer/linux_syscall_hooks.h	1660;"	d
__sanitizer_syscall_post_utimensat	include/sanitizer/netbsd_syscall_hooks.h	2620;"	d
__sanitizer_syscall_post_utimes	include/sanitizer/linux_syscall_hooks.h	935;"	d
__sanitizer_syscall_post_utrace	include/sanitizer/netbsd_syscall_hooks.h	1636;"	d
__sanitizer_syscall_post_uuidgen	include/sanitizer/netbsd_syscall_hooks.h	1866;"	d
__sanitizer_syscall_post_vadvise	include/sanitizer/netbsd_syscall_hooks.h	391;"	d
__sanitizer_syscall_post_vfork	include/sanitizer/linux_syscall_hooks.h	1835;"	d
__sanitizer_syscall_post_vfork	include/sanitizer/netbsd_syscall_hooks.h	373;"	d
__sanitizer_syscall_post_vhangup	include/sanitizer/linux_syscall_hooks.h	819;"	d
__sanitizer_syscall_post_vm86	include/sanitizer/linux_syscall_hooks.h	2009;"	d
__sanitizer_syscall_post_vm86old	include/sanitizer/linux_syscall_hooks.h	2008;"	d
__sanitizer_syscall_post_vmsplice	include/sanitizer/linux_syscall_hooks.h	1680;"	d
__sanitizer_syscall_post_vserver	include/sanitizer/linux_syscall_hooks.h	2010;"	d
__sanitizer_syscall_post_wait4	include/sanitizer/linux_syscall_hooks.h	346;"	d
__sanitizer_syscall_post_wait6	include/sanitizer/netbsd_syscall_hooks.h	2723;"	d
__sanitizer_syscall_post_waitid	include/sanitizer/linux_syscall_hooks.h	352;"	d
__sanitizer_syscall_post_waitpid	include/sanitizer/linux_syscall_hooks.h	359;"	d
__sanitizer_syscall_post_write	include/sanitizer/linux_syscall_hooks.h	964;"	d
__sanitizer_syscall_post_write	include/sanitizer/netbsd_syscall_hooks.h	58;"	d
__sanitizer_syscall_post_writev	include/sanitizer/linux_syscall_hooks.h	969;"	d
__sanitizer_syscall_post_writev	include/sanitizer/netbsd_syscall_hooks.h	638;"	d
__sanitizer_syscall_pre_____semctl50	include/sanitizer/netbsd_syscall_hooks.h	2451;"	d
__sanitizer_syscall_pre_____sigtimedwait50	include/sanitizer/netbsd_syscall_hooks.h	2370;"	d
__sanitizer_syscall_pre____lwp_park60	include/sanitizer/netbsd_syscall_hooks.h	2695;"	d
__sanitizer_syscall_pre___acl_aclcheck_fd	include/sanitizer/netbsd_syscall_hooks.h	2827;"	d
__sanitizer_syscall_pre___acl_aclcheck_file	include/sanitizer/netbsd_syscall_hooks.h	2821;"	d
__sanitizer_syscall_pre___acl_aclcheck_link	include/sanitizer/netbsd_syscall_hooks.h	2779;"	d
__sanitizer_syscall_pre___acl_delete_fd	include/sanitizer/netbsd_syscall_hooks.h	2815;"	d
__sanitizer_syscall_pre___acl_delete_file	include/sanitizer/netbsd_syscall_hooks.h	2809;"	d
__sanitizer_syscall_pre___acl_delete_link	include/sanitizer/netbsd_syscall_hooks.h	2773;"	d
__sanitizer_syscall_pre___acl_get_fd	include/sanitizer/netbsd_syscall_hooks.h	2797;"	d
__sanitizer_syscall_pre___acl_get_file	include/sanitizer/netbsd_syscall_hooks.h	2785;"	d
__sanitizer_syscall_pre___acl_get_link	include/sanitizer/netbsd_syscall_hooks.h	2761;"	d
__sanitizer_syscall_pre___acl_set_fd	include/sanitizer/netbsd_syscall_hooks.h	2803;"	d
__sanitizer_syscall_pre___acl_set_file	include/sanitizer/netbsd_syscall_hooks.h	2791;"	d
__sanitizer_syscall_pre___acl_set_link	include/sanitizer/netbsd_syscall_hooks.h	2767;"	d
__sanitizer_syscall_pre___adjtime50	include/sanitizer/netbsd_syscall_hooks.h	2312;"	d
__sanitizer_syscall_pre___aio_suspend50	include/sanitizer/netbsd_syscall_hooks.h	2431;"	d
__sanitizer_syscall_pre___clock_getres50	include/sanitizer/netbsd_syscall_hooks.h	2358;"	d
__sanitizer_syscall_pre___clock_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2346;"	d
__sanitizer_syscall_pre___clock_settime50	include/sanitizer/netbsd_syscall_hooks.h	2352;"	d
__sanitizer_syscall_pre___clone	include/sanitizer/netbsd_syscall_hooks.h	1521;"	d
__sanitizer_syscall_pre___fhopen40	include/sanitizer/netbsd_syscall_hooks.h	2168;"	d
__sanitizer_syscall_pre___fhstat50	include/sanitizer/netbsd_syscall_hooks.h	2515;"	d
__sanitizer_syscall_pre___fhstatvfs140	include/sanitizer/netbsd_syscall_hooks.h	2855;"	d
__sanitizer_syscall_pre___fhstatvfs190	include/sanitizer/netbsd_syscall_hooks.h	2753;"	d
__sanitizer_syscall_pre___fstat50	include/sanitizer/netbsd_syscall_hooks.h	2442;"	d
__sanitizer_syscall_pre___fstatvfs190	include/sanitizer/netbsd_syscall_hooks.h	2747;"	d
__sanitizer_syscall_pre___futex	include/sanitizer/netbsd_syscall_hooks.h	857;"	d
__sanitizer_syscall_pre___futex_get_robust_list	include/sanitizer/netbsd_syscall_hooks.h	875;"	d
__sanitizer_syscall_pre___futex_set_robust_list	include/sanitizer/netbsd_syscall_hooks.h	869;"	d
__sanitizer_syscall_pre___futimes50	include/sanitizer/netbsd_syscall_hooks.h	2324;"	d
__sanitizer_syscall_pre___getcwd	include/sanitizer/netbsd_syscall_hooks.h	1575;"	d
__sanitizer_syscall_pre___getdents30	include/sanitizer/netbsd_syscall_hooks.h	2135;"	d
__sanitizer_syscall_pre___getfh30	include/sanitizer/netbsd_syscall_hooks.h	2162;"	d
__sanitizer_syscall_pre___getitimer50	include/sanitizer/netbsd_syscall_hooks.h	2340;"	d
__sanitizer_syscall_pre___getlogin	include/sanitizer/netbsd_syscall_hooks.h	284;"	d
__sanitizer_syscall_pre___getrusage50	include/sanitizer/netbsd_syscall_hooks.h	2471;"	d
__sanitizer_syscall_pre___gettimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2295;"	d
__sanitizer_syscall_pre___getvfsstat90	include/sanitizer/netbsd_syscall_hooks.h	2735;"	d
__sanitizer_syscall_pre___kevent50	include/sanitizer/netbsd_syscall_hooks.h	2406;"	d
__sanitizer_syscall_pre___lfs_segwait50	include/sanitizer/netbsd_syscall_hooks.h	2318;"	d
__sanitizer_syscall_pre___lstat50	include/sanitizer/netbsd_syscall_hooks.h	2446;"	d
__sanitizer_syscall_pre___lutimes50	include/sanitizer/netbsd_syscall_hooks.h	2329;"	d
__sanitizer_syscall_pre___mknod50	include/sanitizer/netbsd_syscall_hooks.h	2509;"	d
__sanitizer_syscall_pre___mount50	include/sanitizer/netbsd_syscall_hooks.h	2234;"	d
__sanitizer_syscall_pre___mq_timedreceive50	include/sanitizer/netbsd_syscall_hooks.h	2386;"	d
__sanitizer_syscall_pre___mq_timedsend50	include/sanitizer/netbsd_syscall_hooks.h	2376;"	d
__sanitizer_syscall_pre___msgctl50	include/sanitizer/netbsd_syscall_hooks.h	2465;"	d
__sanitizer_syscall_pre___msync13	include/sanitizer/netbsd_syscall_hooks.h	1465;"	d
__sanitizer_syscall_pre___nanosleep50	include/sanitizer/netbsd_syscall_hooks.h	2364;"	d
__sanitizer_syscall_pre___ntp_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2494;"	d
__sanitizer_syscall_pre___pollts50	include/sanitizer/netbsd_syscall_hooks.h	2424;"	d
__sanitizer_syscall_pre___posix_chown	include/sanitizer/netbsd_syscall_hooks.h	1499;"	d
__sanitizer_syscall_pre___posix_fadvise50	include/sanitizer/netbsd_syscall_hooks.h	2277;"	d
__sanitizer_syscall_pre___posix_fchown	include/sanitizer/netbsd_syscall_hooks.h	1505;"	d
__sanitizer_syscall_pre___posix_lchown	include/sanitizer/netbsd_syscall_hooks.h	1511;"	d
__sanitizer_syscall_pre___posix_rename	include/sanitizer/netbsd_syscall_hooks.h	1424;"	d
__sanitizer_syscall_pre___pselect50	include/sanitizer/netbsd_syscall_hooks.h	2416;"	d
__sanitizer_syscall_pre___quotactl	include/sanitizer/netbsd_syscall_hooks.h	2656;"	d
__sanitizer_syscall_pre___select50	include/sanitizer/netbsd_syscall_hooks.h	2287;"	d
__sanitizer_syscall_pre___setitimer50	include/sanitizer/netbsd_syscall_hooks.h	2334;"	d
__sanitizer_syscall_pre___setlogin	include/sanitizer/netbsd_syscall_hooks.h	290;"	d
__sanitizer_syscall_pre___settimeofday50	include/sanitizer/netbsd_syscall_hooks.h	2301;"	d
__sanitizer_syscall_pre___shmctl50	include/sanitizer/netbsd_syscall_hooks.h	2459;"	d
__sanitizer_syscall_pre___sigaction_sigtramp	include/sanitizer/netbsd_syscall_hooks.h	1779;"	d
__sanitizer_syscall_pre___sigaltstack14	include/sanitizer/netbsd_syscall_hooks.h	1489;"	d
__sanitizer_syscall_pre___sigpending14	include/sanitizer/netbsd_syscall_hooks.h	1556;"	d
__sanitizer_syscall_pre___sigprocmask14	include/sanitizer/netbsd_syscall_hooks.h	1560;"	d
__sanitizer_syscall_pre___sigsuspend14	include/sanitizer/netbsd_syscall_hooks.h	1566;"	d
__sanitizer_syscall_pre___socket30	include/sanitizer/netbsd_syscall_hooks.h	2156;"	d
__sanitizer_syscall_pre___stat50	include/sanitizer/netbsd_syscall_hooks.h	2437;"	d
__sanitizer_syscall_pre___statvfs190	include/sanitizer/netbsd_syscall_hooks.h	2741;"	d
__sanitizer_syscall_pre___syscall	include/sanitizer/netbsd_syscall_hooks.h	1052;"	d
__sanitizer_syscall_pre___sysctl	include/sanitizer/netbsd_syscall_hooks.h	1083;"	d
__sanitizer_syscall_pre___timer_gettime50	include/sanitizer/netbsd_syscall_hooks.h	2487;"	d
__sanitizer_syscall_pre___timer_settime50	include/sanitizer/netbsd_syscall_hooks.h	2477;"	d
__sanitizer_syscall_pre___utimes50	include/sanitizer/netbsd_syscall_hooks.h	2307;"	d
__sanitizer_syscall_pre___vfork14	include/sanitizer/netbsd_syscall_hooks.h	1495;"	d
__sanitizer_syscall_pre___wait450	include/sanitizer/netbsd_syscall_hooks.h	2501;"	d
__sanitizer_syscall_pre__ksem_close	include/sanitizer/netbsd_syscall_hooks.h	1318;"	d
__sanitizer_syscall_pre__ksem_destroy	include/sanitizer/netbsd_syscall_hooks.h	1340;"	d
__sanitizer_syscall_pre__ksem_getvalue	include/sanitizer/netbsd_syscall_hooks.h	1334;"	d
__sanitizer_syscall_pre__ksem_init	include/sanitizer/netbsd_syscall_hooks.h	1300;"	d
__sanitizer_syscall_pre__ksem_open	include/sanitizer/netbsd_syscall_hooks.h	1305;"	d
__sanitizer_syscall_pre__ksem_post	include/sanitizer/netbsd_syscall_hooks.h	1322;"	d
__sanitizer_syscall_pre__ksem_timedwait	include/sanitizer/netbsd_syscall_hooks.h	1344;"	d
__sanitizer_syscall_pre__ksem_trywait	include/sanitizer/netbsd_syscall_hooks.h	1330;"	d
__sanitizer_syscall_pre__ksem_unlink	include/sanitizer/netbsd_syscall_hooks.h	1314;"	d
__sanitizer_syscall_pre__ksem_wait	include/sanitizer/netbsd_syscall_hooks.h	1326;"	d
__sanitizer_syscall_pre__llseek	include/sanitizer/linux_syscall_hooks.h	1886;"	d
__sanitizer_syscall_pre__lwp_continue	include/sanitizer/netbsd_syscall_hooks.h	1671;"	d
__sanitizer_syscall_pre__lwp_create	include/sanitizer/netbsd_syscall_hooks.h	1647;"	d
__sanitizer_syscall_pre__lwp_ctl	include/sanitizer/netbsd_syscall_hooks.h	1731;"	d
__sanitizer_syscall_pre__lwp_detach	include/sanitizer/netbsd_syscall_hooks.h	1693;"	d
__sanitizer_syscall_pre__lwp_exit	include/sanitizer/netbsd_syscall_hooks.h	1653;"	d
__sanitizer_syscall_pre__lwp_getname	include/sanitizer/netbsd_syscall_hooks.h	1725;"	d
__sanitizer_syscall_pre__lwp_getprivate	include/sanitizer/netbsd_syscall_hooks.h	1679;"	d
__sanitizer_syscall_pre__lwp_kill	include/sanitizer/netbsd_syscall_hooks.h	1687;"	d
__sanitizer_syscall_pre__lwp_self	include/sanitizer/netbsd_syscall_hooks.h	1657;"	d
__sanitizer_syscall_pre__lwp_setname	include/sanitizer/netbsd_syscall_hooks.h	1719;"	d
__sanitizer_syscall_pre__lwp_setprivate	include/sanitizer/netbsd_syscall_hooks.h	1683;"	d
__sanitizer_syscall_pre__lwp_suspend	include/sanitizer/netbsd_syscall_hooks.h	1667;"	d
__sanitizer_syscall_pre__lwp_unpark	include/sanitizer/netbsd_syscall_hooks.h	1707;"	d
__sanitizer_syscall_pre__lwp_unpark_all	include/sanitizer/netbsd_syscall_hooks.h	1713;"	d
__sanitizer_syscall_pre__lwp_wait	include/sanitizer/netbsd_syscall_hooks.h	1661;"	d
__sanitizer_syscall_pre__lwp_wakeup	include/sanitizer/netbsd_syscall_hooks.h	1675;"	d
__sanitizer_syscall_pre__newselect	include/sanitizer/linux_syscall_hooks.h	1893;"	d
__sanitizer_syscall_pre__pset_bind	include/sanitizer/netbsd_syscall_hooks.h	2267;"	d
__sanitizer_syscall_pre__sched_getaffinity	include/sanitizer/netbsd_syscall_hooks.h	1837;"	d
__sanitizer_syscall_pre__sched_getparam	include/sanitizer/netbsd_syscall_hooks.h	1819;"	d
__sanitizer_syscall_pre__sched_protect	include/sanitizer/netbsd_syscall_hooks.h	1850;"	d
__sanitizer_syscall_pre__sched_setaffinity	include/sanitizer/netbsd_syscall_hooks.h	1828;"	d
__sanitizer_syscall_pre__sched_setparam	include/sanitizer/netbsd_syscall_hooks.h	1810;"	d
__sanitizer_syscall_pre__sysctl	include/sanitizer/linux_syscall_hooks.h	1923;"	d
__sanitizer_syscall_pre_accept	include/sanitizer/linux_syscall_hooks.h	1088;"	d
__sanitizer_syscall_pre_accept	include/sanitizer/netbsd_syscall_hooks.h	190;"	d
__sanitizer_syscall_pre_accept4	include/sanitizer/linux_syscall_hooks.h	1093;"	d
__sanitizer_syscall_pre_access	include/sanitizer/linux_syscall_hooks.h	814;"	d
__sanitizer_syscall_pre_access	include/sanitizer/netbsd_syscall_hooks.h	208;"	d
__sanitizer_syscall_pre_acct	include/sanitizer/linux_syscall_hooks.h	152;"	d
__sanitizer_syscall_pre_acct	include/sanitizer/netbsd_syscall_hooks.h	294;"	d
__sanitizer_syscall_pre_add_key	include/sanitizer/linux_syscall_hooks.h	1457;"	d
__sanitizer_syscall_pre_adjtimex	include/sanitizer/linux_syscall_hooks.h	39;"	d
__sanitizer_syscall_pre_afs_syscall	include/sanitizer/linux_syscall_hooks.h	1854;"	d
__sanitizer_syscall_pre_afssys	include/sanitizer/netbsd_syscall_hooks.h	1127;"	d
__sanitizer_syscall_pre_aio_cancel	include/sanitizer/netbsd_syscall_hooks.h	2189;"	d
__sanitizer_syscall_pre_aio_error	include/sanitizer/netbsd_syscall_hooks.h	2195;"	d
__sanitizer_syscall_pre_aio_fsync	include/sanitizer/netbsd_syscall_hooks.h	2199;"	d
__sanitizer_syscall_pre_aio_read	include/sanitizer/netbsd_syscall_hooks.h	2204;"	d
__sanitizer_syscall_pre_aio_return	include/sanitizer/netbsd_syscall_hooks.h	2208;"	d
__sanitizer_syscall_pre_aio_write	include/sanitizer/netbsd_syscall_hooks.h	2219;"	d
__sanitizer_syscall_pre_alarm	include/sanitizer/linux_syscall_hooks.h	54;"	d
__sanitizer_syscall_pre_arch_prctl	include/sanitizer/linux_syscall_hooks.h	1855;"	d
__sanitizer_syscall_pre_bdflush	include/sanitizer/linux_syscall_hooks.h	448;"	d
__sanitizer_syscall_pre_bind	include/sanitizer/linux_syscall_hooks.h	1078;"	d
__sanitizer_syscall_pre_bind	include/sanitizer/netbsd_syscall_hooks.h	550;"	d
__sanitizer_syscall_pre_break	include/sanitizer/linux_syscall_hooks.h	1856;"	d
__sanitizer_syscall_pre_break	include/sanitizer/netbsd_syscall_hooks.h	119;"	d
__sanitizer_syscall_pre_brk	include/sanitizer/linux_syscall_hooks.h	605;"	d
__sanitizer_syscall_pre_capget	include/sanitizer/linux_syscall_hooks.h	156;"	d
__sanitizer_syscall_pre_capset	include/sanitizer/linux_syscall_hooks.h	160;"	d
__sanitizer_syscall_pre_chdir	include/sanitizer/linux_syscall_hooks.h	1024;"	d
__sanitizer_syscall_pre_chdir	include/sanitizer/netbsd_syscall_hooks.h	95;"	d
__sanitizer_syscall_pre_chflags	include/sanitizer/netbsd_syscall_hooks.h	213;"	d
__sanitizer_syscall_pre_chmod	include/sanitizer/linux_syscall_hooks.h	701;"	d
__sanitizer_syscall_pre_chmod	include/sanitizer/netbsd_syscall_hooks.h	109;"	d
__sanitizer_syscall_pre_chown	include/sanitizer/linux_syscall_hooks.h	821;"	d
__sanitizer_syscall_pre_chown	include/sanitizer/netbsd_syscall_hooks.h	113;"	d
__sanitizer_syscall_pre_chown16	include/sanitizer/linux_syscall_hooks.h	838;"	d
__sanitizer_syscall_pre_chown32	include/sanitizer/linux_syscall_hooks.h	1857;"	d
__sanitizer_syscall_pre_chroot	include/sanitizer/linux_syscall_hooks.h	675;"	d
__sanitizer_syscall_pre_chroot	include/sanitizer/netbsd_syscall_hooks.h	343;"	d
__sanitizer_syscall_pre_clock_adjtime	include/sanitizer/linux_syscall_hooks.h	230;"	d
__sanitizer_syscall_pre_clock_getcpuclockid2	include/sanitizer/netbsd_syscall_hooks.h	2728;"	d
__sanitizer_syscall_pre_clock_getres	include/sanitizer/linux_syscall_hooks.h	235;"	d
__sanitizer_syscall_pre_clock_gettime	include/sanitizer/linux_syscall_hooks.h	225;"	d
__sanitizer_syscall_pre_clock_nanosleep	include/sanitizer/linux_syscall_hooks.h	240;"	d
__sanitizer_syscall_pre_clock_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	2686;"	d
__sanitizer_syscall_pre_clock_settime	include/sanitizer/linux_syscall_hooks.h	220;"	d
__sanitizer_syscall_pre_clone	include/sanitizer/linux_syscall_hooks.h	1858;"	d
__sanitizer_syscall_pre_close	include/sanitizer/linux_syscall_hooks.h	810;"	d
__sanitizer_syscall_pre_close	include/sanitizer/netbsd_syscall_hooks.h	67;"	d
__sanitizer_syscall_pre_compat_09_ogetdomainname	include/sanitizer/netbsd_syscall_hooks.h	834;"	d
__sanitizer_syscall_pre_compat_09_osetdomainname	include/sanitizer/netbsd_syscall_hooks.h	841;"	d
__sanitizer_syscall_pre_compat_09_ouname	include/sanitizer/netbsd_syscall_hooks.h	848;"	d
__sanitizer_syscall_pre_compat_10_omsgsys	include/sanitizer/netbsd_syscall_hooks.h	895;"	d
__sanitizer_syscall_pre_compat_10_osemsys	include/sanitizer/netbsd_syscall_hooks.h	883;"	d
__sanitizer_syscall_pre_compat_10_oshmsys	include/sanitizer/netbsd_syscall_hooks.h	908;"	d
__sanitizer_syscall_pre_compat_12_fstat12	include/sanitizer/netbsd_syscall_hooks.h	993;"	d
__sanitizer_syscall_pre_compat_12_getdirentries	include/sanitizer/netbsd_syscall_hooks.h	1034;"	d
__sanitizer_syscall_pre_compat_12_lstat12	include/sanitizer/netbsd_syscall_hooks.h	999;"	d
__sanitizer_syscall_pre_compat_12_msync	include/sanitizer/netbsd_syscall_hooks.h	366;"	d
__sanitizer_syscall_pre_compat_12_oreboot	include/sanitizer/netbsd_syscall_hooks.h	314;"	d
__sanitizer_syscall_pre_compat_12_oswapon	include/sanitizer/netbsd_syscall_hooks.h	447;"	d
__sanitizer_syscall_pre_compat_12_stat12	include/sanitizer/netbsd_syscall_hooks.h	987;"	d
__sanitizer_syscall_pre_compat_13_sigaction13	include/sanitizer/netbsd_syscall_hooks.h	269;"	d
__sanitizer_syscall_pre_compat_13_sigaltstack13	include/sanitizer/netbsd_syscall_hooks.h	302;"	d
__sanitizer_syscall_pre_compat_13_sigpending13	include/sanitizer/netbsd_syscall_hooks.h	298;"	d
__sanitizer_syscall_pre_compat_13_sigprocmask13	include/sanitizer/netbsd_syscall_hooks.h	278;"	d
__sanitizer_syscall_pre_compat_13_sigreturn13	include/sanitizer/netbsd_syscall_hooks.h	545;"	d
__sanitizer_syscall_pre_compat_13_sigsuspend13	include/sanitizer/netbsd_syscall_hooks.h	584;"	d
__sanitizer_syscall_pre_compat_14___semctl	include/sanitizer/netbsd_syscall_hooks.h	1144;"	d
__sanitizer_syscall_pre_compat_14_msgctl	include/sanitizer/netbsd_syscall_hooks.h	1169;"	d
__sanitizer_syscall_pre_compat_14_shmctl	include/sanitizer/netbsd_syscall_hooks.h	1202;"	d
__sanitizer_syscall_pre_compat_16___sigaction14	include/sanitizer/netbsd_syscall_hooks.h	1549;"	d
__sanitizer_syscall_pre_compat_16___sigreturn14	include/sanitizer/netbsd_syscall_hooks.h	1570;"	d
__sanitizer_syscall_pre_compat_20_fhstatfs	include/sanitizer/netbsd_syscall_hooks.h	1596;"	d
__sanitizer_syscall_pre_compat_20_fstatfs	include/sanitizer/netbsd_syscall_hooks.h	820;"	d
__sanitizer_syscall_pre_compat_20_getfsstat	include/sanitizer/netbsd_syscall_hooks.h	123;"	d
__sanitizer_syscall_pre_compat_20_statfs	include/sanitizer/netbsd_syscall_hooks.h	814;"	d
__sanitizer_syscall_pre_compat_30___fhstat30	include/sanitizer/netbsd_syscall_hooks.h	2145;"	d
__sanitizer_syscall_pre_compat_30___fstat13	include/sanitizer/netbsd_syscall_hooks.h	1477;"	d
__sanitizer_syscall_pre_compat_30___lstat13	include/sanitizer/netbsd_syscall_hooks.h	1483;"	d
__sanitizer_syscall_pre_compat_30___stat13	include/sanitizer/netbsd_syscall_hooks.h	1471;"	d
__sanitizer_syscall_pre_compat_30_fhopen	include/sanitizer/netbsd_syscall_hooks.h	1584;"	d
__sanitizer_syscall_pre_compat_30_fhstat	include/sanitizer/netbsd_syscall_hooks.h	1590;"	d
__sanitizer_syscall_pre_compat_30_fhstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1888;"	d
__sanitizer_syscall_pre_compat_30_getdents	include/sanitizer/netbsd_syscall_hooks.h	1436;"	d
__sanitizer_syscall_pre_compat_30_getfh	include/sanitizer/netbsd_syscall_hooks.h	828;"	d
__sanitizer_syscall_pre_compat_30_ntp_gettime	include/sanitizer/netbsd_syscall_hooks.h	935;"	d
__sanitizer_syscall_pre_compat_30_socket	include/sanitizer/netbsd_syscall_hooks.h	508;"	d
__sanitizer_syscall_pre_compat_40_mount	include/sanitizer/netbsd_syscall_hooks.h	138;"	d
__sanitizer_syscall_pre_compat_43_fstat43	include/sanitizer/netbsd_syscall_hooks.h	347;"	d
__sanitizer_syscall_pre_compat_43_lstat43	include/sanitizer/netbsd_syscall_hooks.h	239;"	d
__sanitizer_syscall_pre_compat_43_oaccept	include/sanitizer/netbsd_syscall_hooks.h	520;"	d
__sanitizer_syscall_pre_compat_43_ocreat	include/sanitizer/netbsd_syscall_hooks.h	80;"	d
__sanitizer_syscall_pre_compat_43_oftruncate	include/sanitizer/netbsd_syscall_hooks.h	687;"	d
__sanitizer_syscall_pre_compat_43_ogetdirentries	include/sanitizer/netbsd_syscall_hooks.h	804;"	d
__sanitizer_syscall_pre_compat_43_ogetdtablesize	include/sanitizer/netbsd_syscall_hooks.h	469;"	d
__sanitizer_syscall_pre_compat_43_ogethostid	include/sanitizer/netbsd_syscall_hooks.h	749;"	d
__sanitizer_syscall_pre_compat_43_ogethostname	include/sanitizer/netbsd_syscall_hooks.h	457;"	d
__sanitizer_syscall_pre_compat_43_ogetkerninfo	include/sanitizer/netbsd_syscall_hooks.h	353;"	d
__sanitizer_syscall_pre_compat_43_ogetpagesize	include/sanitizer/netbsd_syscall_hooks.h	362;"	d
__sanitizer_syscall_pre_compat_43_ogetpeername	include/sanitizer/netbsd_syscall_hooks.h	743;"	d
__sanitizer_syscall_pre_compat_43_ogetrlimit	include/sanitizer/netbsd_syscall_hooks.h	757;"	d
__sanitizer_syscall_pre_compat_43_ogetsockname	include/sanitizer/netbsd_syscall_hooks.h	789;"	d
__sanitizer_syscall_pre_compat_43_okillpg	include/sanitizer/netbsd_syscall_hooks.h	769;"	d
__sanitizer_syscall_pre_compat_43_olseek	include/sanitizer/netbsd_syscall_hooks.h	129;"	d
__sanitizer_syscall_pre_compat_43_ommap	include/sanitizer/netbsd_syscall_hooks.h	379;"	d
__sanitizer_syscall_pre_compat_43_oquota	include/sanitizer/netbsd_syscall_hooks.h	785;"	d
__sanitizer_syscall_pre_compat_43_orecv	include/sanitizer/netbsd_syscall_hooks.h	538;"	d
__sanitizer_syscall_pre_compat_43_orecvfrom	include/sanitizer/netbsd_syscall_hooks.h	657;"	d
__sanitizer_syscall_pre_compat_43_orecvmsg	include/sanitizer/netbsd_syscall_hooks.h	594;"	d
__sanitizer_syscall_pre_compat_43_osend	include/sanitizer/netbsd_syscall_hooks.h	531;"	d
__sanitizer_syscall_pre_compat_43_osendmsg	include/sanitizer/netbsd_syscall_hooks.h	600;"	d
__sanitizer_syscall_pre_compat_43_osethostid	include/sanitizer/netbsd_syscall_hooks.h	753;"	d
__sanitizer_syscall_pre_compat_43_osethostname	include/sanitizer/netbsd_syscall_hooks.h	463;"	d
__sanitizer_syscall_pre_compat_43_osetrlimit	include/sanitizer/netbsd_syscall_hooks.h	763;"	d
__sanitizer_syscall_pre_compat_43_osigblock	include/sanitizer/netbsd_syscall_hooks.h	576;"	d
__sanitizer_syscall_pre_compat_43_osigsetmask	include/sanitizer/netbsd_syscall_hooks.h	580;"	d
__sanitizer_syscall_pre_compat_43_osigstack	include/sanitizer/netbsd_syscall_hooks.h	588;"	d
__sanitizer_syscall_pre_compat_43_osigvec	include/sanitizer/netbsd_syscall_hooks.h	570;"	d
__sanitizer_syscall_pre_compat_43_otruncate	include/sanitizer/netbsd_syscall_hooks.h	681;"	d
__sanitizer_syscall_pre_compat_43_owait	include/sanitizer/netbsd_syscall_hooks.h	443;"	d
__sanitizer_syscall_pre_compat_43_stat43	include/sanitizer/netbsd_syscall_hooks.h	230;"	d
__sanitizer_syscall_pre_compat_50_____semctl13	include/sanitizer/netbsd_syscall_hooks.h	1602;"	d
__sanitizer_syscall_pre_compat_50___fhstat40	include/sanitizer/netbsd_syscall_hooks.h	2183;"	d
__sanitizer_syscall_pre_compat_50___fstat30	include/sanitizer/netbsd_syscall_hooks.h	2123;"	d
__sanitizer_syscall_pre_compat_50___lstat30	include/sanitizer/netbsd_syscall_hooks.h	2129;"	d
__sanitizer_syscall_pre_compat_50___msgctl13	include/sanitizer/netbsd_syscall_hooks.h	1612;"	d
__sanitizer_syscall_pre_compat_50___ntp_gettime30	include/sanitizer/netbsd_syscall_hooks.h	2151;"	d
__sanitizer_syscall_pre_compat_50___shmctl13	include/sanitizer/netbsd_syscall_hooks.h	1618;"	d
__sanitizer_syscall_pre_compat_50___sigtimedwait	include/sanitizer/netbsd_syscall_hooks.h	1284;"	d
__sanitizer_syscall_pre_compat_50___stat30	include/sanitizer/netbsd_syscall_hooks.h	2117;"	d
__sanitizer_syscall_pre_compat_50__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	1697;"	d
__sanitizer_syscall_pre_compat_50_adjtime	include/sanitizer/netbsd_syscall_hooks.h	737;"	d
__sanitizer_syscall_pre_compat_50_aio_suspend	include/sanitizer/netbsd_syscall_hooks.h	2212;"	d
__sanitizer_syscall_pre_compat_50_clock_getres	include/sanitizer/netbsd_syscall_hooks.h	1230;"	d
__sanitizer_syscall_pre_compat_50_clock_gettime	include/sanitizer/netbsd_syscall_hooks.h	1218;"	d
__sanitizer_syscall_pre_compat_50_clock_settime	include/sanitizer/netbsd_syscall_hooks.h	1224;"	d
__sanitizer_syscall_pre_compat_50_futimes	include/sanitizer/netbsd_syscall_hooks.h	1106;"	d
__sanitizer_syscall_pre_compat_50_getitimer	include/sanitizer/netbsd_syscall_hooks.h	451;"	d
__sanitizer_syscall_pre_compat_50_getrusage	include/sanitizer/netbsd_syscall_hooks.h	613;"	d
__sanitizer_syscall_pre_compat_50_gettimeofday	include/sanitizer/netbsd_syscall_hooks.h	607;"	d
__sanitizer_syscall_pre_compat_50_kevent	include/sanitizer/netbsd_syscall_hooks.h	1800;"	d
__sanitizer_syscall_pre_compat_50_lfs_segwait	include/sanitizer/netbsd_syscall_hooks.h	981;"	d
__sanitizer_syscall_pre_compat_50_lutimes	include/sanitizer/netbsd_syscall_hooks.h	1459;"	d
__sanitizer_syscall_pre_compat_50_mknod	include/sanitizer/netbsd_syscall_hooks.h	103;"	d
__sanitizer_syscall_pre_compat_50_mq_timedreceive	include/sanitizer/netbsd_syscall_hooks.h	1411;"	d
__sanitizer_syscall_pre_compat_50_mq_timedsend	include/sanitizer/netbsd_syscall_hooks.h	1401;"	d
__sanitizer_syscall_pre_compat_50_nanosleep	include/sanitizer/netbsd_syscall_hooks.h	1266;"	d
__sanitizer_syscall_pre_compat_50_pollts	include/sanitizer/netbsd_syscall_hooks.h	2028;"	d
__sanitizer_syscall_pre_compat_50_pselect	include/sanitizer/netbsd_syscall_hooks.h	2019;"	d
__sanitizer_syscall_pre_compat_50_quotactl	include/sanitizer/netbsd_syscall_hooks.h	778;"	d
__sanitizer_syscall_pre_compat_50_select	include/sanitizer/netbsd_syscall_hooks.h	489;"	d
__sanitizer_syscall_pre_compat_50_setitimer	include/sanitizer/netbsd_syscall_hooks.h	437;"	d
__sanitizer_syscall_pre_compat_50_settimeofday	include/sanitizer/netbsd_syscall_hooks.h	641;"	d
__sanitizer_syscall_pre_compat_50_timer_gettime	include/sanitizer/netbsd_syscall_hooks.h	1256;"	d
__sanitizer_syscall_pre_compat_50_timer_settime	include/sanitizer/netbsd_syscall_hooks.h	1246;"	d
__sanitizer_syscall_pre_compat_50_utimes	include/sanitizer/netbsd_syscall_hooks.h	730;"	d
__sanitizer_syscall_pre_compat_50_wait4	include/sanitizer/netbsd_syscall_hooks.h	71;"	d
__sanitizer_syscall_pre_compat_60__lwp_park	include/sanitizer/netbsd_syscall_hooks.h	2396;"	d
__sanitizer_syscall_pre_compat_60_sa_enable	include/sanitizer/netbsd_syscall_hooks.h	1757;"	d
__sanitizer_syscall_pre_compat_60_sa_preempt	include/sanitizer/netbsd_syscall_hooks.h	1771;"	d
__sanitizer_syscall_pre_compat_60_sa_register	include/sanitizer/netbsd_syscall_hooks.h	1741;"	d
__sanitizer_syscall_pre_compat_60_sa_setconcurrency	include/sanitizer/netbsd_syscall_hooks.h	1761;"	d
__sanitizer_syscall_pre_compat_60_sa_stacks	include/sanitizer/netbsd_syscall_hooks.h	1751;"	d
__sanitizer_syscall_pre_compat_60_sa_yield	include/sanitizer/netbsd_syscall_hooks.h	1767;"	d
__sanitizer_syscall_pre_compat_90_fhstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	2174;"	d
__sanitizer_syscall_pre_compat_90_fstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	1882;"	d
__sanitizer_syscall_pre_compat_90_getvfsstat	include/sanitizer/netbsd_syscall_hooks.h	1869;"	d
__sanitizer_syscall_pre_compat_90_statvfs1	include/sanitizer/netbsd_syscall_hooks.h	1876;"	d
__sanitizer_syscall_pre_connect	include/sanitizer/linux_syscall_hooks.h	1083;"	d
__sanitizer_syscall_pre_connect	include/sanitizer/netbsd_syscall_hooks.h	514;"	d
__sanitizer_syscall_pre_creat	include/sanitizer/linux_syscall_hooks.h	800;"	d
__sanitizer_syscall_pre_create_module	include/sanitizer/linux_syscall_hooks.h	1859;"	d
__sanitizer_syscall_pre_delete_module	include/sanitizer/linux_syscall_hooks.h	372;"	d
__sanitizer_syscall_pre_dup	include/sanitizer/linux_syscall_hooks.h	726;"	d
__sanitizer_syscall_pre_dup	include/sanitizer/netbsd_syscall_hooks.h	245;"	d
__sanitizer_syscall_pre_dup2	include/sanitizer/linux_syscall_hooks.h	730;"	d
__sanitizer_syscall_pre_dup2	include/sanitizer/netbsd_syscall_hooks.h	473;"	d
__sanitizer_syscall_pre_dup3	include/sanitizer/linux_syscall_hooks.h	734;"	d
__sanitizer_syscall_pre_dup3	include/sanitizer/netbsd_syscall_hooks.h	2527;"	d
__sanitizer_syscall_pre_epoll_create	include/sanitizer/linux_syscall_hooks.h	1198;"	d
__sanitizer_syscall_pre_epoll_create1	include/sanitizer/linux_syscall_hooks.h	1202;"	d
__sanitizer_syscall_pre_epoll_ctl	include/sanitizer/linux_syscall_hooks.h	1206;"	d
__sanitizer_syscall_pre_epoll_ctl_old	include/sanitizer/linux_syscall_hooks.h	1860;"	d
__sanitizer_syscall_pre_epoll_pwait	include/sanitizer/linux_syscall_hooks.h	1219;"	d
__sanitizer_syscall_pre_epoll_wait	include/sanitizer/linux_syscall_hooks.h	1212;"	d
__sanitizer_syscall_pre_epoll_wait_old	include/sanitizer/linux_syscall_hooks.h	1861;"	d
__sanitizer_syscall_pre_eventfd	include/sanitizer/linux_syscall_hooks.h	1732;"	d
__sanitizer_syscall_pre_eventfd2	include/sanitizer/linux_syscall_hooks.h	1736;"	d
__sanitizer_syscall_pre_execve	include/sanitizer/linux_syscall_hooks.h	1862;"	d
__sanitizer_syscall_pre_execve	include/sanitizer/netbsd_syscall_hooks.h	333;"	d
__sanitizer_syscall_pre_exit	include/sanitizer/linux_syscall_hooks.h	335;"	d
__sanitizer_syscall_pre_exit	include/sanitizer/netbsd_syscall_hooks.h	42;"	d
__sanitizer_syscall_pre_exit_group	include/sanitizer/linux_syscall_hooks.h	339;"	d
__sanitizer_syscall_pre_extattr_delete_fd	include/sanitizer/netbsd_syscall_hooks.h	1953;"	d
__sanitizer_syscall_pre_extattr_delete_file	include/sanitizer/netbsd_syscall_hooks.h	1924;"	d
__sanitizer_syscall_pre_extattr_delete_link	include/sanitizer/netbsd_syscall_hooks.h	1980;"	d
__sanitizer_syscall_pre_extattr_get_fd	include/sanitizer/netbsd_syscall_hooks.h	1943;"	d
__sanitizer_syscall_pre_extattr_get_file	include/sanitizer/netbsd_syscall_hooks.h	1914;"	d
__sanitizer_syscall_pre_extattr_get_link	include/sanitizer/netbsd_syscall_hooks.h	1970;"	d
__sanitizer_syscall_pre_extattr_list_fd	include/sanitizer/netbsd_syscall_hooks.h	1989;"	d
__sanitizer_syscall_pre_extattr_list_file	include/sanitizer/netbsd_syscall_hooks.h	1999;"	d
__sanitizer_syscall_pre_extattr_list_link	include/sanitizer/netbsd_syscall_hooks.h	2009;"	d
__sanitizer_syscall_pre_extattr_set_fd	include/sanitizer/netbsd_syscall_hooks.h	1933;"	d
__sanitizer_syscall_pre_extattr_set_file	include/sanitizer/netbsd_syscall_hooks.h	1904;"	d
__sanitizer_syscall_pre_extattr_set_link	include/sanitizer/netbsd_syscall_hooks.h	1960;"	d
__sanitizer_syscall_pre_extattrctl	include/sanitizer/netbsd_syscall_hooks.h	1894;"	d
__sanitizer_syscall_pre_faccessat	include/sanitizer/linux_syscall_hooks.h	1612;"	d
__sanitizer_syscall_pre_faccessat	include/sanitizer/netbsd_syscall_hooks.h	2581;"	d
__sanitizer_syscall_pre_fadvise64	include/sanitizer/linux_syscall_hooks.h	1863;"	d
__sanitizer_syscall_pre_fadvise64_64	include/sanitizer/linux_syscall_hooks.h	1864;"	d
__sanitizer_syscall_pre_fallocate	include/sanitizer/linux_syscall_hooks.h	1865;"	d
__sanitizer_syscall_pre_fanotify_init	include/sanitizer/linux_syscall_hooks.h	1866;"	d
__sanitizer_syscall_pre_fanotify_mark	include/sanitizer/linux_syscall_hooks.h	1867;"	d
__sanitizer_syscall_pre_fchdir	include/sanitizer/linux_syscall_hooks.h	1028;"	d
__sanitizer_syscall_pre_fchdir	include/sanitizer/netbsd_syscall_hooks.h	99;"	d
__sanitizer_syscall_pre_fchflags	include/sanitizer/netbsd_syscall_hooks.h	218;"	d
__sanitizer_syscall_pre_fchmod	include/sanitizer/linux_syscall_hooks.h	705;"	d
__sanitizer_syscall_pre_fchmod	include/sanitizer/netbsd_syscall_hooks.h	653;"	d
__sanitizer_syscall_pre_fchmodat	include/sanitizer/linux_syscall_hooks.h	1618;"	d
__sanitizer_syscall_pre_fchmodat	include/sanitizer/netbsd_syscall_hooks.h	2589;"	d
__sanitizer_syscall_pre_fchown	include/sanitizer/linux_syscall_hooks.h	833;"	d
__sanitizer_syscall_pre_fchown	include/sanitizer/netbsd_syscall_hooks.h	647;"	d
__sanitizer_syscall_pre_fchown16	include/sanitizer/linux_syscall_hooks.h	850;"	d
__sanitizer_syscall_pre_fchown32	include/sanitizer/linux_syscall_hooks.h	1868;"	d
__sanitizer_syscall_pre_fchownat	include/sanitizer/linux_syscall_hooks.h	1624;"	d
__sanitizer_syscall_pre_fchownat	include/sanitizer/netbsd_syscall_hooks.h	2596;"	d
__sanitizer_syscall_pre_fchroot	include/sanitizer/netbsd_syscall_hooks.h	1580;"	d
__sanitizer_syscall_pre_fcntl	include/sanitizer/linux_syscall_hooks.h	709;"	d
__sanitizer_syscall_pre_fcntl	include/sanitizer/netbsd_syscall_hooks.h	483;"	d
__sanitizer_syscall_pre_fcntl64	include/sanitizer/linux_syscall_hooks.h	713;"	d
__sanitizer_syscall_pre_fdatasync	include/sanitizer/linux_syscall_hooks.h	444;"	d
__sanitizer_syscall_pre_fdatasync	include/sanitizer/netbsd_syscall_hooks.h	1272;"	d
__sanitizer_syscall_pre_fdiscard	include/sanitizer/netbsd_syscall_hooks.h	2712;"	d
__sanitizer_syscall_pre_fexecve	include/sanitizer/netbsd_syscall_hooks.h	2604;"	d
__sanitizer_syscall_pre_fgetxattr	include/sanitizer/linux_syscall_hooks.h	569;"	d
__sanitizer_syscall_pre_fgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2075;"	d
__sanitizer_syscall_pre_fktrace	include/sanitizer/netbsd_syscall_hooks.h	1526;"	d
__sanitizer_syscall_pre_flistxattr	include/sanitizer/linux_syscall_hooks.h	587;"	d
__sanitizer_syscall_pre_flistxattr	include/sanitizer/netbsd_syscall_hooks.h	2095;"	d
__sanitizer_syscall_pre_flock	include/sanitizer/linux_syscall_hooks.h	748;"	d
__sanitizer_syscall_pre_flock	include/sanitizer/netbsd_syscall_hooks.h	693;"	d
__sanitizer_syscall_pre_fork	include/sanitizer/linux_syscall_hooks.h	1829;"	d
__sanitizer_syscall_pre_fork	include/sanitizer/netbsd_syscall_hooks.h	46;"	d
__sanitizer_syscall_pre_fpathconf	include/sanitizer/netbsd_syscall_hooks.h	1010;"	d
__sanitizer_syscall_pre_fremovexattr	include/sanitizer/linux_syscall_hooks.h	601;"	d
__sanitizer_syscall_pre_fremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2112;"	d
__sanitizer_syscall_pre_fsetxattr	include/sanitizer/linux_syscall_hooks.h	550;"	d
__sanitizer_syscall_pre_fsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2052;"	d
__sanitizer_syscall_pre_fstat	include/sanitizer/linux_syscall_hooks.h	503;"	d
__sanitizer_syscall_pre_fstat64	include/sanitizer/linux_syscall_hooks.h	527;"	d
__sanitizer_syscall_pre_fstatat	include/sanitizer/netbsd_syscall_hooks.h	2610;"	d
__sanitizer_syscall_pre_fstatat64	include/sanitizer/linux_syscall_hooks.h	1645;"	d
__sanitizer_syscall_pre_fstatfs	include/sanitizer/linux_syscall_hooks.h	490;"	d
__sanitizer_syscall_pre_fstatfs64	include/sanitizer/linux_syscall_hooks.h	494;"	d
__sanitizer_syscall_pre_fstatvfs1	include/sanitizer/netbsd_syscall_hooks.h	2850;"	d
__sanitizer_syscall_pre_fsync	include/sanitizer/linux_syscall_hooks.h	440;"	d
__sanitizer_syscall_pre_fsync	include/sanitizer/netbsd_syscall_hooks.h	498;"	d
__sanitizer_syscall_pre_fsync_range	include/sanitizer/netbsd_syscall_hooks.h	1856;"	d
__sanitizer_syscall_pre_ftime	include/sanitizer/linux_syscall_hooks.h	1869;"	d
__sanitizer_syscall_pre_ftruncate	include/sanitizer/linux_syscall_hooks.h	473;"	d
__sanitizer_syscall_pre_ftruncate	include/sanitizer/netbsd_syscall_hooks.h	1077;"	d
__sanitizer_syscall_pre_ftruncate64	include/sanitizer/linux_syscall_hooks.h	1870;"	d
__sanitizer_syscall_pre_futex	include/sanitizer/linux_syscall_hooks.h	1871;"	d
__sanitizer_syscall_pre_futimens	include/sanitizer/netbsd_syscall_hooks.h	2651;"	d
__sanitizer_syscall_pre_futimesat	include/sanitizer/linux_syscall_hooks.h	1606;"	d
__sanitizer_syscall_pre_get_kernel_syms	include/sanitizer/linux_syscall_hooks.h	1876;"	d
__sanitizer_syscall_pre_get_mempolicy	include/sanitizer/linux_syscall_hooks.h	1525;"	d
__sanitizer_syscall_pre_get_robust_list	include/sanitizer/linux_syscall_hooks.h	1689;"	d
__sanitizer_syscall_pre_get_thread_area	include/sanitizer/linux_syscall_hooks.h	1880;"	d
__sanitizer_syscall_pre_getcontext	include/sanitizer/netbsd_syscall_hooks.h	1639;"	d
__sanitizer_syscall_pre_getcpu	include/sanitizer/linux_syscall_hooks.h	1699;"	d
__sanitizer_syscall_pre_getcwd	include/sanitizer/linux_syscall_hooks.h	1016;"	d
__sanitizer_syscall_pre_getdents	include/sanitizer/linux_syscall_hooks.h	1048;"	d
__sanitizer_syscall_pre_getdents64	include/sanitizer/linux_syscall_hooks.h	1054;"	d
__sanitizer_syscall_pre_getegid	include/sanitizer/linux_syscall_hooks.h	73;"	d
__sanitizer_syscall_pre_getegid	include/sanitizer/netbsd_syscall_hooks.h	252;"	d
__sanitizer_syscall_pre_getegid16	include/sanitizer/linux_syscall_hooks.h	925;"	d
__sanitizer_syscall_pre_getegid32	include/sanitizer/linux_syscall_hooks.h	1872;"	d
__sanitizer_syscall_pre_geteuid	include/sanitizer/linux_syscall_hooks.h	67;"	d
__sanitizer_syscall_pre_geteuid	include/sanitizer/netbsd_syscall_hooks.h	158;"	d
__sanitizer_syscall_pre_geteuid16	include/sanitizer/linux_syscall_hooks.h	917;"	d
__sanitizer_syscall_pre_geteuid32	include/sanitizer/linux_syscall_hooks.h	1873;"	d
__sanitizer_syscall_pre_getgid	include/sanitizer/linux_syscall_hooks.h	70;"	d
__sanitizer_syscall_pre_getgid	include/sanitizer/netbsd_syscall_hooks.h	275;"	d
__sanitizer_syscall_pre_getgid16	include/sanitizer/linux_syscall_hooks.h	921;"	d
__sanitizer_syscall_pre_getgid32	include/sanitizer/linux_syscall_hooks.h	1874;"	d
__sanitizer_syscall_pre_getgroups	include/sanitizer/linux_syscall_hooks.h	99;"	d
__sanitizer_syscall_pre_getgroups	include/sanitizer/netbsd_syscall_hooks.h	417;"	d
__sanitizer_syscall_pre_getgroups16	include/sanitizer/linux_syscall_hooks.h	901;"	d
__sanitizer_syscall_pre_getgroups32	include/sanitizer/linux_syscall_hooks.h	1875;"	d
__sanitizer_syscall_pre_gethostname	include/sanitizer/linux_syscall_hooks.h	1229;"	d
__sanitizer_syscall_pre_getitimer	include/sanitizer/linux_syscall_hooks.h	178;"	d
__sanitizer_syscall_pre_getpeername	include/sanitizer/linux_syscall_hooks.h	1105;"	d
__sanitizer_syscall_pre_getpeername	include/sanitizer/netbsd_syscall_hooks.h	196;"	d
__sanitizer_syscall_pre_getpgid	include/sanitizer/linux_syscall_hooks.h	88;"	d
__sanitizer_syscall_pre_getpgid	include/sanitizer/netbsd_syscall_hooks.h	1112;"	d
__sanitizer_syscall_pre_getpgrp	include/sanitizer/linux_syscall_hooks.h	92;"	d
__sanitizer_syscall_pre_getpgrp	include/sanitizer/netbsd_syscall_hooks.h	429;"	d
__sanitizer_syscall_pre_getpid	include/sanitizer/linux_syscall_hooks.h	58;"	d
__sanitizer_syscall_pre_getpid	include/sanitizer/netbsd_syscall_hooks.h	135;"	d
__sanitizer_syscall_pre_getpmsg	include/sanitizer/linux_syscall_hooks.h	1877;"	d
__sanitizer_syscall_pre_getppid	include/sanitizer/linux_syscall_hooks.h	61;"	d
__sanitizer_syscall_pre_getppid	include/sanitizer/netbsd_syscall_hooks.h	236;"	d
__sanitizer_syscall_pre_getpriority	include/sanitizer/linux_syscall_hooks.h	308;"	d
__sanitizer_syscall_pre_getpriority	include/sanitizer/netbsd_syscall_hooks.h	526;"	d
__sanitizer_syscall_pre_getrandom	include/sanitizer/netbsd_syscall_hooks.h	477;"	d
__sanitizer_syscall_pre_getresgid	include/sanitizer/linux_syscall_hooks.h	82;"	d
__sanitizer_syscall_pre_getresgid16	include/sanitizer/linux_syscall_hooks.h	887;"	d
__sanitizer_syscall_pre_getresgid32	include/sanitizer/linux_syscall_hooks.h	1878;"	d
__sanitizer_syscall_pre_getresuid	include/sanitizer/linux_syscall_hooks.h	76;"	d
__sanitizer_syscall_pre_getresuid16	include/sanitizer/linux_syscall_hooks.h	876;"	d
__sanitizer_syscall_pre_getresuid32	include/sanitizer/linux_syscall_hooks.h	1879;"	d
__sanitizer_syscall_pre_getrlimit	include/sanitizer/linux_syscall_hooks.h	1253;"	d
__sanitizer_syscall_pre_getrlimit	include/sanitizer/netbsd_syscall_hooks.h	1024;"	d
__sanitizer_syscall_pre_getrusage	include/sanitizer/linux_syscall_hooks.h	1273;"	d
__sanitizer_syscall_pre_getsid	include/sanitizer/linux_syscall_hooks.h	95;"	d
__sanitizer_syscall_pre_getsid	include/sanitizer/netbsd_syscall_hooks.h	1517;"	d
__sanitizer_syscall_pre_getsockname	include/sanitizer/linux_syscall_hooks.h	1099;"	d
__sanitizer_syscall_pre_getsockname	include/sanitizer/netbsd_syscall_hooks.h	202;"	d
__sanitizer_syscall_pre_getsockopt	include/sanitizer/linux_syscall_hooks.h	1069;"	d
__sanitizer_syscall_pre_getsockopt	include/sanitizer/netbsd_syscall_hooks.h	619;"	d
__sanitizer_syscall_pre_getsockopt2	include/sanitizer/netbsd_syscall_hooks.h	1015;"	d
__sanitizer_syscall_pre_gettid	include/sanitizer/linux_syscall_hooks.h	47;"	d
__sanitizer_syscall_pre_gettimeofday	include/sanitizer/linux_syscall_hooks.h	31;"	d
__sanitizer_syscall_pre_getuid	include/sanitizer/linux_syscall_hooks.h	64;"	d
__sanitizer_syscall_pre_getuid	include/sanitizer/netbsd_syscall_hooks.h	155;"	d
__sanitizer_syscall_pre_getuid16	include/sanitizer/linux_syscall_hooks.h	913;"	d
__sanitizer_syscall_pre_getuid32	include/sanitizer/linux_syscall_hooks.h	1881;"	d
__sanitizer_syscall_pre_getvfsstat	include/sanitizer/netbsd_syscall_hooks.h	2840;"	d
__sanitizer_syscall_pre_getxattr	include/sanitizer/linux_syscall_hooks.h	557;"	d
__sanitizer_syscall_pre_getxattr	include/sanitizer/netbsd_syscall_hooks.h	2060;"	d
__sanitizer_syscall_pre_gtty	include/sanitizer/linux_syscall_hooks.h	1882;"	d
__sanitizer_syscall_pre_idle	include/sanitizer/linux_syscall_hooks.h	1883;"	d
__sanitizer_syscall_pre_init_module	include/sanitizer/linux_syscall_hooks.h	366;"	d
__sanitizer_syscall_pre_inotify_add_watch	include/sanitizer/linux_syscall_hooks.h	1543;"	d
__sanitizer_syscall_pre_inotify_init	include/sanitizer/linux_syscall_hooks.h	1535;"	d
__sanitizer_syscall_pre_inotify_init1	include/sanitizer/linux_syscall_hooks.h	1539;"	d
__sanitizer_syscall_pre_inotify_rm_watch	include/sanitizer/linux_syscall_hooks.h	1549;"	d
__sanitizer_syscall_pre_io_cancel	include/sanitizer/linux_syscall_hooks.h	776;"	d
__sanitizer_syscall_pre_io_destroy	include/sanitizer/linux_syscall_hooks.h	756;"	d
__sanitizer_syscall_pre_io_getevents	include/sanitizer/linux_syscall_hooks.h	760;"	d
__sanitizer_syscall_pre_io_setup	include/sanitizer/linux_syscall_hooks.h	752;"	d
__sanitizer_syscall_pre_io_submit	include/sanitizer/linux_syscall_hooks.h	770;"	d
__sanitizer_syscall_pre_ioctl	include/sanitizer/linux_syscall_hooks.h	744;"	d
__sanitizer_syscall_pre_ioctl	include/sanitizer/netbsd_syscall_hooks.h	308;"	d
__sanitizer_syscall_pre_ioperm	include/sanitizer/linux_syscall_hooks.h	739;"	d
__sanitizer_syscall_pre_iopl	include/sanitizer/linux_syscall_hooks.h	1884;"	d
__sanitizer_syscall_pre_ioprio_get	include/sanitizer/linux_syscall_hooks.h	1490;"	d
__sanitizer_syscall_pre_ioprio_set	include/sanitizer/linux_syscall_hooks.h	1484;"	d
__sanitizer_syscall_pre_ipc	include/sanitizer/linux_syscall_hooks.h	1348;"	d
__sanitizer_syscall_pre_issetugid	include/sanitizer/netbsd_syscall_hooks.h	1629;"	d
__sanitizer_syscall_pre_kexec_load	include/sanitizer/linux_syscall_hooks.h	326;"	d
__sanitizer_syscall_pre_keyctl	include/sanitizer/linux_syscall_hooks.h	1477;"	d
__sanitizer_syscall_pre_kill	include/sanitizer/linux_syscall_hooks.h	403;"	d
__sanitizer_syscall_pre_kill	include/sanitizer/netbsd_syscall_hooks.h	226;"	d
__sanitizer_syscall_pre_kqueue	include/sanitizer/netbsd_syscall_hooks.h	1797;"	d
__sanitizer_syscall_pre_kqueue1	include/sanitizer/netbsd_syscall_hooks.h	2533;"	d
__sanitizer_syscall_pre_ktrace	include/sanitizer/netbsd_syscall_hooks.h	262;"	d
__sanitizer_syscall_pre_lchflags	include/sanitizer/netbsd_syscall_hooks.h	1624;"	d
__sanitizer_syscall_pre_lchmod	include/sanitizer/netbsd_syscall_hooks.h	1448;"	d
__sanitizer_syscall_pre_lchown	include/sanitizer/linux_syscall_hooks.h	827;"	d
__sanitizer_syscall_pre_lchown	include/sanitizer/netbsd_syscall_hooks.h	1453;"	d
__sanitizer_syscall_pre_lchown16	include/sanitizer/linux_syscall_hooks.h	844;"	d
__sanitizer_syscall_pre_lchown32	include/sanitizer/linux_syscall_hooks.h	1885;"	d
__sanitizer_syscall_pre_lfs_bmapv	include/sanitizer/netbsd_syscall_hooks.h	963;"	d
__sanitizer_syscall_pre_lfs_markv	include/sanitizer/netbsd_syscall_hooks.h	969;"	d
__sanitizer_syscall_pre_lfs_segclean	include/sanitizer/netbsd_syscall_hooks.h	975;"	d
__sanitizer_syscall_pre_lgetxattr	include/sanitizer/linux_syscall_hooks.h	563;"	d
__sanitizer_syscall_pre_lgetxattr	include/sanitizer/netbsd_syscall_hooks.h	2067;"	d
__sanitizer_syscall_pre_link	include/sanitizer/linux_syscall_hooks.h	685;"	d
__sanitizer_syscall_pre_link	include/sanitizer/netbsd_syscall_hooks.h	86;"	d
__sanitizer_syscall_pre_linkat	include/sanitizer/linux_syscall_hooks.h	1589;"	d
__sanitizer_syscall_pre_linkat	include/sanitizer/netbsd_syscall_hooks.h	2545;"	d
__sanitizer_syscall_pre_lio_listio	include/sanitizer/netbsd_syscall_hooks.h	2223;"	d
__sanitizer_syscall_pre_listen	include/sanitizer/linux_syscall_hooks.h	1179;"	d
__sanitizer_syscall_pre_listen	include/sanitizer/netbsd_syscall_hooks.h	564;"	d
__sanitizer_syscall_pre_listxattr	include/sanitizer/linux_syscall_hooks.h	575;"	d
__sanitizer_syscall_pre_listxattr	include/sanitizer/netbsd_syscall_hooks.h	2083;"	d
__sanitizer_syscall_pre_llistxattr	include/sanitizer/linux_syscall_hooks.h	581;"	d
__sanitizer_syscall_pre_llistxattr	include/sanitizer/netbsd_syscall_hooks.h	2089;"	d
__sanitizer_syscall_pre_llseek	include/sanitizer/linux_syscall_hooks.h	942;"	d
__sanitizer_syscall_pre_lock	include/sanitizer/linux_syscall_hooks.h	1887;"	d
__sanitizer_syscall_pre_lookup_dcookie	include/sanitizer/linux_syscall_hooks.h	1036;"	d
__sanitizer_syscall_pre_lpathconf	include/sanitizer/netbsd_syscall_hooks.h	2833;"	d
__sanitizer_syscall_pre_lremovexattr	include/sanitizer/linux_syscall_hooks.h	597;"	d
__sanitizer_syscall_pre_lremovexattr	include/sanitizer/netbsd_syscall_hooks.h	2106;"	d
__sanitizer_syscall_pre_lseek	include/sanitizer/linux_syscall_hooks.h	937;"	d
__sanitizer_syscall_pre_lseek	include/sanitizer/netbsd_syscall_hooks.h	1064;"	d
__sanitizer_syscall_pre_lsetxattr	include/sanitizer/linux_syscall_hooks.h	542;"	d
__sanitizer_syscall_pre_lsetxattr	include/sanitizer/netbsd_syscall_hooks.h	2043;"	d
__sanitizer_syscall_pre_lstat	include/sanitizer/linux_syscall_hooks.h	499;"	d
__sanitizer_syscall_pre_lstat64	include/sanitizer/linux_syscall_hooks.h	531;"	d
__sanitizer_syscall_pre_madvise	include/sanitizer/linux_syscall_hooks.h	659;"	d
__sanitizer_syscall_pre_madvise	include/sanitizer/netbsd_syscall_hooks.h	403;"	d
__sanitizer_syscall_pre_madvise1	include/sanitizer/linux_syscall_hooks.h	1888;"	d
__sanitizer_syscall_pre_mbind	include/sanitizer/linux_syscall_hooks.h	1516;"	d
__sanitizer_syscall_pre_migrate_pages	include/sanitizer/linux_syscall_hooks.h	1500;"	d
__sanitizer_syscall_pre_mincore	include/sanitizer/linux_syscall_hooks.h	665;"	d
__sanitizer_syscall_pre_mincore	include/sanitizer/netbsd_syscall_hooks.h	411;"	d
__sanitizer_syscall_pre_minherit	include/sanitizer/netbsd_syscall_hooks.h	1442;"	d
__sanitizer_syscall_pre_mkdir	include/sanitizer/linux_syscall_hooks.h	1020;"	d
__sanitizer_syscall_pre_mkdir	include/sanitizer/netbsd_syscall_hooks.h	722;"	d
__sanitizer_syscall_pre_mkdirat	include/sanitizer/linux_syscall_hooks.h	1571;"	d
__sanitizer_syscall_pre_mkdirat	include/sanitizer/netbsd_syscall_hooks.h	2575;"	d
__sanitizer_syscall_pre_mkfifo	include/sanitizer/netbsd_syscall_hooks.h	697;"	d
__sanitizer_syscall_pre_mkfifoat	include/sanitizer/netbsd_syscall_hooks.h	2561;"	d
__sanitizer_syscall_pre_mknod	include/sanitizer/linux_syscall_hooks.h	679;"	d
__sanitizer_syscall_pre_mknodat	include/sanitizer/linux_syscall_hooks.h	1565;"	d
__sanitizer_syscall_pre_mknodat	include/sanitizer/netbsd_syscall_hooks.h	2567;"	d
__sanitizer_syscall_pre_mlock	include/sanitizer/linux_syscall_hooks.h	643;"	d
__sanitizer_syscall_pre_mlock	include/sanitizer/netbsd_syscall_hooks.h	1093;"	d
__sanitizer_syscall_pre_mlockall	include/sanitizer/linux_syscall_hooks.h	651;"	d
__sanitizer_syscall_pre_mlockall	include/sanitizer/netbsd_syscall_hooks.h	1276;"	d
__sanitizer_syscall_pre_mmap	include/sanitizer/linux_syscall_hooks.h	1889;"	d
__sanitizer_syscall_pre_mmap	include/sanitizer/netbsd_syscall_hooks.h	1043;"	d
__sanitizer_syscall_pre_mmap2	include/sanitizer/linux_syscall_hooks.h	1890;"	d
__sanitizer_syscall_pre_mmap_pgoff	include/sanitizer/linux_syscall_hooks.h	1776;"	d
__sanitizer_syscall_pre_modctl	include/sanitizer/netbsd_syscall_hooks.h	1296;"	d
__sanitizer_syscall_pre_modify_ldt	include/sanitizer/linux_syscall_hooks.h	1891;"	d
__sanitizer_syscall_pre_mount	include/sanitizer/linux_syscall_hooks.h	452;"	d
__sanitizer_syscall_pre_move_pages	include/sanitizer/linux_syscall_hooks.h	1506;"	d
__sanitizer_syscall_pre_mprotect	include/sanitizer/linux_syscall_hooks.h	609;"	d
__sanitizer_syscall_pre_mprotect	include/sanitizer/netbsd_syscall_hooks.h	397;"	d
__sanitizer_syscall_pre_mpx	include/sanitizer/linux_syscall_hooks.h	1892;"	d
__sanitizer_syscall_pre_mq_close	include/sanitizer/netbsd_syscall_hooks.h	1357;"	d
__sanitizer_syscall_pre_mq_getattr	include/sanitizer/netbsd_syscall_hooks.h	1365;"	d
__sanitizer_syscall_pre_mq_getsetattr	include/sanitizer/linux_syscall_hooks.h	1392;"	d
__sanitizer_syscall_pre_mq_notify	include/sanitizer/linux_syscall_hooks.h	1387;"	d
__sanitizer_syscall_pre_mq_notify	include/sanitizer/netbsd_syscall_hooks.h	1377;"	d
__sanitizer_syscall_pre_mq_open	include/sanitizer/linux_syscall_hooks.h	1357;"	d
__sanitizer_syscall_pre_mq_open	include/sanitizer/netbsd_syscall_hooks.h	1350;"	d
__sanitizer_syscall_pre_mq_receive	include/sanitizer/netbsd_syscall_hooks.h	1392;"	d
__sanitizer_syscall_pre_mq_send	include/sanitizer/netbsd_syscall_hooks.h	1383;"	d
__sanitizer_syscall_pre_mq_setattr	include/sanitizer/netbsd_syscall_hooks.h	1371;"	d
__sanitizer_syscall_pre_mq_timedreceive	include/sanitizer/linux_syscall_hooks.h	1377;"	d
__sanitizer_syscall_pre_mq_timedsend	include/sanitizer/linux_syscall_hooks.h	1367;"	d
__sanitizer_syscall_pre_mq_unlink	include/sanitizer/linux_syscall_hooks.h	1363;"	d
__sanitizer_syscall_pre_mq_unlink	include/sanitizer/netbsd_syscall_hooks.h	1361;"	d
__sanitizer_syscall_pre_mremap	include/sanitizer/linux_syscall_hooks.h	615;"	d
__sanitizer_syscall_pre_mremap	include/sanitizer/netbsd_syscall_hooks.h	2243;"	d
__sanitizer_syscall_pre_msgctl	include/sanitizer/linux_syscall_hooks.h	1300;"	d
__sanitizer_syscall_pre_msgget	include/sanitizer/linux_syscall_hooks.h	1281;"	d
__sanitizer_syscall_pre_msgget	include/sanitizer/netbsd_syscall_hooks.h	1175;"	d
__sanitizer_syscall_pre_msgrcv	include/sanitizer/linux_syscall_hooks.h	1291;"	d
__sanitizer_syscall_pre_msgrcv	include/sanitizer/netbsd_syscall_hooks.h	1187;"	d
__sanitizer_syscall_pre_msgsnd	include/sanitizer/linux_syscall_hooks.h	1285;"	d
__sanitizer_syscall_pre_msgsnd	include/sanitizer/netbsd_syscall_hooks.h	1180;"	d
__sanitizer_syscall_pre_msync	include/sanitizer/linux_syscall_hooks.h	634;"	d
__sanitizer_syscall_pre_munlock	include/sanitizer/linux_syscall_hooks.h	647;"	d
__sanitizer_syscall_pre_munlock	include/sanitizer/netbsd_syscall_hooks.h	1097;"	d
__sanitizer_syscall_pre_munlockall	include/sanitizer/linux_syscall_hooks.h	655;"	d
__sanitizer_syscall_pre_munlockall	include/sanitizer/netbsd_syscall_hooks.h	1280;"	d
__sanitizer_syscall_pre_munmap	include/sanitizer/linux_syscall_hooks.h	639;"	d
__sanitizer_syscall_pre_munmap	include/sanitizer/netbsd_syscall_hooks.h	393;"	d
__sanitizer_syscall_pre_name_to_handle_at	include/sanitizer/linux_syscall_hooks.h	1789;"	d
__sanitizer_syscall_pre_nanosleep	include/sanitizer/linux_syscall_hooks.h	50;"	d
__sanitizer_syscall_pre_newfstat	include/sanitizer/linux_syscall_hooks.h	515;"	d
__sanitizer_syscall_pre_newfstatat	include/sanitizer/linux_syscall_hooks.h	1639;"	d
__sanitizer_syscall_pre_newlstat	include/sanitizer/linux_syscall_hooks.h	511;"	d
__sanitizer_syscall_pre_newstat	include/sanitizer/linux_syscall_hooks.h	507;"	d
__sanitizer_syscall_pre_newuname	include/sanitizer/linux_syscall_hooks.h	1241;"	d
__sanitizer_syscall_pre_nfsservctl	include/sanitizer/linux_syscall_hooks.h	1894;"	d
__sanitizer_syscall_pre_nfssvc	include/sanitizer/netbsd_syscall_hooks.h	799;"	d
__sanitizer_syscall_pre_ni_syscall	include/sanitizer/linux_syscall_hooks.h	1447;"	d
__sanitizer_syscall_pre_nice	include/sanitizer/linux_syscall_hooks.h	248;"	d
__sanitizer_syscall_pre_ntp_adjtime	include/sanitizer/netbsd_syscall_hooks.h	940;"	d
__sanitizer_syscall_pre_old_getrlimit	include/sanitizer/linux_syscall_hooks.h	1257;"	d
__sanitizer_syscall_pre_old_mmap	include/sanitizer/linux_syscall_hooks.h	1785;"	d
__sanitizer_syscall_pre_old_readdir	include/sanitizer/linux_syscall_hooks.h	1740;"	d
__sanitizer_syscall_pre_old_select	include/sanitizer/linux_syscall_hooks.h	1194;"	d
__sanitizer_syscall_pre_oldfstat	include/sanitizer/linux_syscall_hooks.h	1895;"	d
__sanitizer_syscall_pre_oldlstat	include/sanitizer/linux_syscall_hooks.h	1896;"	d
__sanitizer_syscall_pre_oldolduname	include/sanitizer/linux_syscall_hooks.h	1897;"	d
__sanitizer_syscall_pre_oldstat	include/sanitizer/linux_syscall_hooks.h	1898;"	d
__sanitizer_syscall_pre_oldumount	include/sanitizer/linux_syscall_hooks.h	465;"	d
__sanitizer_syscall_pre_olduname	include/sanitizer/linux_syscall_hooks.h	1249;"	d
__sanitizer_syscall_pre_open	include/sanitizer/linux_syscall_hooks.h	804;"	d
__sanitizer_syscall_pre_open	include/sanitizer/netbsd_syscall_hooks.h	61;"	d
__sanitizer_syscall_pre_open_by_handle_at	include/sanitizer/linux_syscall_hooks.h	1798;"	d
__sanitizer_syscall_pre_openat	include/sanitizer/linux_syscall_hooks.h	1633;"	d
__sanitizer_syscall_pre_openat	include/sanitizer/netbsd_syscall_hooks.h	2624;"	d
__sanitizer_syscall_pre_paccept	include/sanitizer/netbsd_syscall_hooks.h	2537;"	d
__sanitizer_syscall_pre_pathconf	include/sanitizer/netbsd_syscall_hooks.h	1005;"	d
__sanitizer_syscall_pre_pause	include/sanitizer/linux_syscall_hooks.h	434;"	d
__sanitizer_syscall_pre_pciconfig_iobase	include/sanitizer/linux_syscall_hooks.h	1398;"	d
__sanitizer_syscall_pre_pciconfig_read	include/sanitizer/linux_syscall_hooks.h	1404;"	d
__sanitizer_syscall_pre_pciconfig_write	include/sanitizer/linux_syscall_hooks.h	1410;"	d
__sanitizer_syscall_pre_perf_event_open	include/sanitizer/linux_syscall_hooks.h	1766;"	d
__sanitizer_syscall_pre_personality	include/sanitizer/linux_syscall_hooks.h	164;"	d
__sanitizer_syscall_pre_pipe	include/sanitizer/linux_syscall_hooks.h	718;"	d
__sanitizer_syscall_pre_pipe	include/sanitizer/netbsd_syscall_hooks.h	249;"	d
__sanitizer_syscall_pre_pipe2	include/sanitizer/linux_syscall_hooks.h	722;"	d
__sanitizer_syscall_pre_pipe2	include/sanitizer/netbsd_syscall_hooks.h	2522;"	d
__sanitizer_syscall_pre_pivot_root	include/sanitizer/linux_syscall_hooks.h	670;"	d
__sanitizer_syscall_pre_poll	include/sanitizer/linux_syscall_hooks.h	1183;"	d
__sanitizer_syscall_pre_poll	include/sanitizer/netbsd_syscall_hooks.h	1121;"	d
__sanitizer_syscall_pre_posix_fadvise	include/sanitizer/netbsd_syscall_hooks.h	2141;"	d
__sanitizer_syscall_pre_posix_fallocate	include/sanitizer/netbsd_syscall_hooks.h	2705;"	d
__sanitizer_syscall_pre_posix_spawn	include/sanitizer/netbsd_syscall_hooks.h	2661;"	d
__sanitizer_syscall_pre_ppoll	include/sanitizer/linux_syscall_hooks.h	1755;"	d
__sanitizer_syscall_pre_prctl	include/sanitizer/linux_syscall_hooks.h	1899;"	d
__sanitizer_syscall_pre_pread	include/sanitizer/netbsd_syscall_hooks.h	919;"	d
__sanitizer_syscall_pre_pread64	include/sanitizer/linux_syscall_hooks.h	974;"	d
__sanitizer_syscall_pre_pread64	include/sanitizer/linux_syscall_hooks.h	987;"	d
__sanitizer_syscall_pre_preadv	include/sanitizer/linux_syscall_hooks.h	1002;"	d
__sanitizer_syscall_pre_preadv	include/sanitizer/netbsd_syscall_hooks.h	1533;"	d
__sanitizer_syscall_pre_prlimit64	include/sanitizer/linux_syscall_hooks.h	1266;"	d
__sanitizer_syscall_pre_process_vm_readv	include/sanitizer/linux_syscall_hooks.h	1809;"	d
__sanitizer_syscall_pre_process_vm_writev	include/sanitizer/linux_syscall_hooks.h	1819;"	d
__sanitizer_syscall_pre_prof	include/sanitizer/linux_syscall_hooks.h	1900;"	d
__sanitizer_syscall_pre_profil	include/sanitizer/linux_syscall_hooks.h	1901;"	d
__sanitizer_syscall_pre_profil	include/sanitizer/netbsd_syscall_hooks.h	255;"	d
__sanitizer_syscall_pre_pselect6	include/sanitizer/linux_syscall_hooks.h	1746;"	d
__sanitizer_syscall_pre_pset_assign	include/sanitizer/netbsd_syscall_hooks.h	2261;"	d
__sanitizer_syscall_pre_pset_create	include/sanitizer/netbsd_syscall_hooks.h	2253;"	d
__sanitizer_syscall_pre_pset_destroy	include/sanitizer/netbsd_syscall_hooks.h	2257;"	d
__sanitizer_syscall_pre_ptrace	include/sanitizer/linux_syscall_hooks.h	1451;"	d
__sanitizer_syscall_pre_ptrace	include/sanitizer/netbsd_syscall_hooks.h	161;"	d
__sanitizer_syscall_pre_putpmsg	include/sanitizer/linux_syscall_hooks.h	1902;"	d
__sanitizer_syscall_pre_pwrite	include/sanitizer/netbsd_syscall_hooks.h	927;"	d
__sanitizer_syscall_pre_pwrite64	include/sanitizer/linux_syscall_hooks.h	980;"	d
__sanitizer_syscall_pre_pwrite64	include/sanitizer/linux_syscall_hooks.h	994;"	d
__sanitizer_syscall_pre_pwritev	include/sanitizer/linux_syscall_hooks.h	1009;"	d
__sanitizer_syscall_pre_pwritev	include/sanitizer/netbsd_syscall_hooks.h	1541;"	d
__sanitizer_syscall_pre_query_module	include/sanitizer/linux_syscall_hooks.h	1903;"	d
__sanitizer_syscall_pre_quotactl	include/sanitizer/linux_syscall_hooks.h	1042;"	d
__sanitizer_syscall_pre_rasctl	include/sanitizer/netbsd_syscall_hooks.h	1791;"	d
__sanitizer_syscall_pre_read	include/sanitizer/linux_syscall_hooks.h	952;"	d
__sanitizer_syscall_pre_read	include/sanitizer/netbsd_syscall_hooks.h	49;"	d
__sanitizer_syscall_pre_readahead	include/sanitizer/linux_syscall_hooks.h	1904;"	d
__sanitizer_syscall_pre_readdir	include/sanitizer/linux_syscall_hooks.h	1905;"	d
__sanitizer_syscall_pre_readlink	include/sanitizer/linux_syscall_hooks.h	794;"	d
__sanitizer_syscall_pre_readlink	include/sanitizer/netbsd_syscall_hooks.h	327;"	d
__sanitizer_syscall_pre_readlinkat	include/sanitizer/linux_syscall_hooks.h	1651;"	d
__sanitizer_syscall_pre_readlinkat	include/sanitizer/netbsd_syscall_hooks.h	2631;"	d
__sanitizer_syscall_pre_readv	include/sanitizer/linux_syscall_hooks.h	957;"	d
__sanitizer_syscall_pre_readv	include/sanitizer/netbsd_syscall_hooks.h	629;"	d
__sanitizer_syscall_pre_reboot	include/sanitizer/linux_syscall_hooks.h	316;"	d
__sanitizer_syscall_pre_reboot	include/sanitizer/netbsd_syscall_hooks.h	1116;"	d
__sanitizer_syscall_pre_recv	include/sanitizer/linux_syscall_hooks.h	1137;"	d
__sanitizer_syscall_pre_recvfrom	include/sanitizer/linux_syscall_hooks.h	1143;"	d
__sanitizer_syscall_pre_recvfrom	include/sanitizer/netbsd_syscall_hooks.h	180;"	d
__sanitizer_syscall_pre_recvmmsg	include/sanitizer/linux_syscall_hooks.h	1157;"	d
__sanitizer_syscall_pre_recvmmsg	include/sanitizer/netbsd_syscall_hooks.h	2671;"	d
__sanitizer_syscall_pre_recvmsg	include/sanitizer/linux_syscall_hooks.h	1152;"	d
__sanitizer_syscall_pre_recvmsg	include/sanitizer/netbsd_syscall_hooks.h	168;"	d
__sanitizer_syscall_pre_remap_file_pages	include/sanitizer/linux_syscall_hooks.h	625;"	d
__sanitizer_syscall_pre_removexattr	include/sanitizer/linux_syscall_hooks.h	593;"	d
__sanitizer_syscall_pre_removexattr	include/sanitizer/netbsd_syscall_hooks.h	2101;"	d
__sanitizer_syscall_pre_rename	include/sanitizer/linux_syscall_hooks.h	697;"	d
__sanitizer_syscall_pre_rename	include/sanitizer/netbsd_syscall_hooks.h	677;"	d
__sanitizer_syscall_pre_renameat	include/sanitizer/linux_syscall_hooks.h	1599;"	d
__sanitizer_syscall_pre_renameat	include/sanitizer/netbsd_syscall_hooks.h	2553;"	d
__sanitizer_syscall_pre_request_key	include/sanitizer/linux_syscall_hooks.h	1467;"	d
__sanitizer_syscall_pre_restart_syscall	include/sanitizer/linux_syscall_hooks.h	322;"	d
__sanitizer_syscall_pre_revoke	include/sanitizer/netbsd_syscall_hooks.h	318;"	d
__sanitizer_syscall_pre_rmdir	include/sanitizer/linux_syscall_hooks.h	1032;"	d
__sanitizer_syscall_pre_rmdir	include/sanitizer/netbsd_syscall_hooks.h	726;"	d
__sanitizer_syscall_pre_rt_sigaction	include/sanitizer/linux_syscall_hooks.h	1842;"	d
__sanitizer_syscall_pre_rt_sigpending	include/sanitizer/linux_syscall_hooks.h	384;"	d
__sanitizer_syscall_pre_rt_sigprocmask	include/sanitizer/linux_syscall_hooks.h	377;"	d
__sanitizer_syscall_pre_rt_sigqueueinfo	include/sanitizer/linux_syscall_hooks.h	416;"	d
__sanitizer_syscall_pre_rt_sigreturn	include/sanitizer/linux_syscall_hooks.h	1906;"	d
__sanitizer_syscall_pre_rt_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1907;"	d
__sanitizer_syscall_pre_rt_sigtimedwait	include/sanitizer/linux_syscall_hooks.h	389;"	d
__sanitizer_syscall_pre_rt_tgsigqueueinfo	include/sanitizer/linux_syscall_hooks.h	397;"	d
__sanitizer_syscall_pre_sched_get_priority_max	include/sanitizer/linux_syscall_hooks.h	288;"	d
__sanitizer_syscall_pre_sched_get_priority_min	include/sanitizer/linux_syscall_hooks.h	292;"	d
__sanitizer_syscall_pre_sched_getaffinity	include/sanitizer/linux_syscall_hooks.h	277;"	d
__sanitizer_syscall_pre_sched_getparam	include/sanitizer/linux_syscall_hooks.h	266;"	d
__sanitizer_syscall_pre_sched_getscheduler	include/sanitizer/linux_syscall_hooks.h	262;"	d
__sanitizer_syscall_pre_sched_rr_get_interval	include/sanitizer/linux_syscall_hooks.h	296;"	d
__sanitizer_syscall_pre_sched_setaffinity	include/sanitizer/linux_syscall_hooks.h	270;"	d
__sanitizer_syscall_pre_sched_setparam	include/sanitizer/linux_syscall_hooks.h	258;"	d
__sanitizer_syscall_pre_sched_setscheduler	include/sanitizer/linux_syscall_hooks.h	252;"	d
__sanitizer_syscall_pre_sched_yield	include/sanitizer/linux_syscall_hooks.h	284;"	d
__sanitizer_syscall_pre_sched_yield	include/sanitizer/netbsd_syscall_hooks.h	1846;"	d
__sanitizer_syscall_pre_security	include/sanitizer/linux_syscall_hooks.h	1908;"	d
__sanitizer_syscall_pre_select	include/sanitizer/linux_syscall_hooks.h	1188;"	d
__sanitizer_syscall_pre_semconfig	include/sanitizer/netbsd_syscall_hooks.h	1165;"	d
__sanitizer_syscall_pre_semctl	include/sanitizer/linux_syscall_hooks.h	1316;"	d
__sanitizer_syscall_pre_semget	include/sanitizer/linux_syscall_hooks.h	1305;"	d
__sanitizer_syscall_pre_semget	include/sanitizer/netbsd_syscall_hooks.h	1153;"	d
__sanitizer_syscall_pre_semop	include/sanitizer/linux_syscall_hooks.h	1311;"	d
__sanitizer_syscall_pre_semop	include/sanitizer/netbsd_syscall_hooks.h	1159;"	d
__sanitizer_syscall_pre_semtimedop	include/sanitizer/linux_syscall_hooks.h	1322;"	d
__sanitizer_syscall_pre_send	include/sanitizer/linux_syscall_hooks.h	1111;"	d
__sanitizer_syscall_pre_sendfile	include/sanitizer/linux_syscall_hooks.h	782;"	d
__sanitizer_syscall_pre_sendfile64	include/sanitizer/linux_syscall_hooks.h	788;"	d
__sanitizer_syscall_pre_sendmmsg	include/sanitizer/linux_syscall_hooks.h	1131;"	d
__sanitizer_syscall_pre_sendmmsg	include/sanitizer/netbsd_syscall_hooks.h	2679;"	d
__sanitizer_syscall_pre_sendmsg	include/sanitizer/linux_syscall_hooks.h	1126;"	d
__sanitizer_syscall_pre_sendmsg	include/sanitizer/netbsd_syscall_hooks.h	174;"	d
__sanitizer_syscall_pre_sendto	include/sanitizer/linux_syscall_hooks.h	1117;"	d
__sanitizer_syscall_pre_sendto	include/sanitizer/netbsd_syscall_hooks.h	702;"	d
__sanitizer_syscall_pre_set_mempolicy	include/sanitizer/linux_syscall_hooks.h	1494;"	d
__sanitizer_syscall_pre_set_robust_list	include/sanitizer/linux_syscall_hooks.h	1695;"	d
__sanitizer_syscall_pre_set_thread_area	include/sanitizer/linux_syscall_hooks.h	1917;"	d
__sanitizer_syscall_pre_set_tid_address	include/sanitizer/linux_syscall_hooks.h	362;"	d
__sanitizer_syscall_pre_setcontext	include/sanitizer/netbsd_syscall_hooks.h	1643;"	d
__sanitizer_syscall_pre_setdomainname	include/sanitizer/linux_syscall_hooks.h	1237;"	d
__sanitizer_syscall_pre_setegid	include/sanitizer/netbsd_syscall_hooks.h	955;"	d
__sanitizer_syscall_pre_seteuid	include/sanitizer/netbsd_syscall_hooks.h	959;"	d
__sanitizer_syscall_pre_setfsgid	include/sanitizer/linux_syscall_hooks.h	136;"	d
__sanitizer_syscall_pre_setfsgid16	include/sanitizer/linux_syscall_hooks.h	897;"	d
__sanitizer_syscall_pre_setfsgid32	include/sanitizer/linux_syscall_hooks.h	1909;"	d
__sanitizer_syscall_pre_setfsuid	include/sanitizer/linux_syscall_hooks.h	132;"	d
__sanitizer_syscall_pre_setfsuid16	include/sanitizer/linux_syscall_hooks.h	893;"	d
__sanitizer_syscall_pre_setfsuid32	include/sanitizer/linux_syscall_hooks.h	1910;"	d
__sanitizer_syscall_pre_setgid	include/sanitizer/linux_syscall_hooks.h	108;"	d
__sanitizer_syscall_pre_setgid	include/sanitizer/netbsd_syscall_hooks.h	951;"	d
__sanitizer_syscall_pre_setgid16	include/sanitizer/linux_syscall_hooks.h	859;"	d
__sanitizer_syscall_pre_setgid32	include/sanitizer/linux_syscall_hooks.h	1911;"	d
__sanitizer_syscall_pre_setgroups	include/sanitizer/linux_syscall_hooks.h	147;"	d
__sanitizer_syscall_pre_setgroups	include/sanitizer/netbsd_syscall_hooks.h	423;"	d
__sanitizer_syscall_pre_setgroups16	include/sanitizer/linux_syscall_hooks.h	907;"	d
__sanitizer_syscall_pre_setgroups32	include/sanitizer/linux_syscall_hooks.h	1912;"	d
__sanitizer_syscall_pre_sethostname	include/sanitizer/linux_syscall_hooks.h	1233;"	d
__sanitizer_syscall_pre_setitimer	include/sanitizer/linux_syscall_hooks.h	182;"	d
__sanitizer_syscall_pre_setns	include/sanitizer/linux_syscall_hooks.h	1805;"	d
__sanitizer_syscall_pre_setpgid	include/sanitizer/linux_syscall_hooks.h	140;"	d
__sanitizer_syscall_pre_setpgid	include/sanitizer/netbsd_syscall_hooks.h	432;"	d
__sanitizer_syscall_pre_setpriority	include/sanitizer/linux_syscall_hooks.h	302;"	d
__sanitizer_syscall_pre_setpriority	include/sanitizer/netbsd_syscall_hooks.h	502;"	d
__sanitizer_syscall_pre_setregid	include/sanitizer/linux_syscall_hooks.h	104;"	d
__sanitizer_syscall_pre_setregid	include/sanitizer/netbsd_syscall_hooks.h	672;"	d
__sanitizer_syscall_pre_setregid16	include/sanitizer/linux_syscall_hooks.h	855;"	d
__sanitizer_syscall_pre_setregid32	include/sanitizer/linux_syscall_hooks.h	1913;"	d
__sanitizer_syscall_pre_setresgid	include/sanitizer/linux_syscall_hooks.h	126;"	d
__sanitizer_syscall_pre_setresgid16	include/sanitizer/linux_syscall_hooks.h	882;"	d
__sanitizer_syscall_pre_setresgid32	include/sanitizer/linux_syscall_hooks.h	1914;"	d
__sanitizer_syscall_pre_setresuid	include/sanitizer/linux_syscall_hooks.h	120;"	d
__sanitizer_syscall_pre_setresuid16	include/sanitizer/linux_syscall_hooks.h	871;"	d
__sanitizer_syscall_pre_setresuid32	include/sanitizer/linux_syscall_hooks.h	1915;"	d
__sanitizer_syscall_pre_setreuid	include/sanitizer/linux_syscall_hooks.h	112;"	d
__sanitizer_syscall_pre_setreuid	include/sanitizer/netbsd_syscall_hooks.h	667;"	d
__sanitizer_syscall_pre_setreuid16	include/sanitizer/linux_syscall_hooks.h	863;"	d
__sanitizer_syscall_pre_setreuid32	include/sanitizer/linux_syscall_hooks.h	1916;"	d
__sanitizer_syscall_pre_setrlimit	include/sanitizer/linux_syscall_hooks.h	1262;"	d
__sanitizer_syscall_pre_setrlimit	include/sanitizer/netbsd_syscall_hooks.h	1029;"	d
__sanitizer_syscall_pre_setsid	include/sanitizer/linux_syscall_hooks.h	144;"	d
__sanitizer_syscall_pre_setsid	include/sanitizer/netbsd_syscall_hooks.h	775;"	d
__sanitizer_syscall_pre_setsockopt	include/sanitizer/linux_syscall_hooks.h	1060;"	d
__sanitizer_syscall_pre_setsockopt	include/sanitizer/netbsd_syscall_hooks.h	556;"	d
__sanitizer_syscall_pre_settimeofday	include/sanitizer/linux_syscall_hooks.h	35;"	d
__sanitizer_syscall_pre_setuid	include/sanitizer/linux_syscall_hooks.h	116;"	d
__sanitizer_syscall_pre_setuid	include/sanitizer/netbsd_syscall_hooks.h	151;"	d
__sanitizer_syscall_pre_setuid16	include/sanitizer/linux_syscall_hooks.h	867;"	d
__sanitizer_syscall_pre_setuid32	include/sanitizer/linux_syscall_hooks.h	1918;"	d
__sanitizer_syscall_pre_setxattr	include/sanitizer/linux_syscall_hooks.h	535;"	d
__sanitizer_syscall_pre_setxattr	include/sanitizer/netbsd_syscall_hooks.h	2035;"	d
__sanitizer_syscall_pre_sgetmask	include/sanitizer/linux_syscall_hooks.h	422;"	d
__sanitizer_syscall_pre_shmat	include/sanitizer/linux_syscall_hooks.h	1328;"	d
__sanitizer_syscall_pre_shmat	include/sanitizer/netbsd_syscall_hooks.h	1196;"	d
__sanitizer_syscall_pre_shmctl	include/sanitizer/linux_syscall_hooks.h	1343;"	d
__sanitizer_syscall_pre_shmdt	include/sanitizer/linux_syscall_hooks.h	1339;"	d
__sanitizer_syscall_pre_shmdt	include/sanitizer/netbsd_syscall_hooks.h	1208;"	d
__sanitizer_syscall_pre_shmget	include/sanitizer/linux_syscall_hooks.h	1334;"	d
__sanitizer_syscall_pre_shmget	include/sanitizer/netbsd_syscall_hooks.h	1212;"	d
__sanitizer_syscall_pre_shutdown	include/sanitizer/linux_syscall_hooks.h	312;"	d
__sanitizer_syscall_pre_shutdown	include/sanitizer/netbsd_syscall_hooks.h	710;"	d
__sanitizer_syscall_pre_sigaction	include/sanitizer/linux_syscall_hooks.h	1837;"	d
__sanitizer_syscall_pre_sigaltstack	include/sanitizer/linux_syscall_hooks.h	1848;"	d
__sanitizer_syscall_pre_signal	include/sanitizer/linux_syscall_hooks.h	430;"	d
__sanitizer_syscall_pre_signalfd	include/sanitizer/linux_syscall_hooks.h	1704;"	d
__sanitizer_syscall_pre_signalfd4	include/sanitizer/linux_syscall_hooks.h	1710;"	d
__sanitizer_syscall_pre_sigpending	include/sanitizer/linux_syscall_hooks.h	168;"	d
__sanitizer_syscall_pre_sigprocmask	include/sanitizer/linux_syscall_hooks.h	172;"	d
__sanitizer_syscall_pre_sigqueueinfo	include/sanitizer/netbsd_syscall_hooks.h	1291;"	d
__sanitizer_syscall_pre_sigreturn	include/sanitizer/linux_syscall_hooks.h	1919;"	d
__sanitizer_syscall_pre_sigsuspend	include/sanitizer/linux_syscall_hooks.h	1920;"	d
__sanitizer_syscall_pre_socket	include/sanitizer/linux_syscall_hooks.h	1164;"	d
__sanitizer_syscall_pre_socketcall	include/sanitizer/linux_syscall_hooks.h	1175;"	d
__sanitizer_syscall_pre_socketpair	include/sanitizer/linux_syscall_hooks.h	1169;"	d
__sanitizer_syscall_pre_socketpair	include/sanitizer/netbsd_syscall_hooks.h	714;"	d
__sanitizer_syscall_pre_splice	include/sanitizer/linux_syscall_hooks.h	1667;"	d
__sanitizer_syscall_pre_spu_create	include/sanitizer/linux_syscall_hooks.h	1559;"	d
__sanitizer_syscall_pre_spu_run	include/sanitizer/linux_syscall_hooks.h	1553;"	d
__sanitizer_syscall_pre_ssetmask	include/sanitizer/linux_syscall_hooks.h	426;"	d
__sanitizer_syscall_pre_stat	include/sanitizer/linux_syscall_hooks.h	477;"	d
__sanitizer_syscall_pre_stat64	include/sanitizer/linux_syscall_hooks.h	523;"	d
__sanitizer_syscall_pre_statfs	include/sanitizer/linux_syscall_hooks.h	481;"	d
__sanitizer_syscall_pre_statfs64	include/sanitizer/linux_syscall_hooks.h	485;"	d
__sanitizer_syscall_pre_statvfs1	include/sanitizer/netbsd_syscall_hooks.h	2845;"	d
__sanitizer_syscall_pre_stime	include/sanitizer/linux_syscall_hooks.h	27;"	d
__sanitizer_syscall_pre_stty	include/sanitizer/linux_syscall_hooks.h	1921;"	d
__sanitizer_syscall_pre_swapctl	include/sanitizer/netbsd_syscall_hooks.h	1430;"	d
__sanitizer_syscall_pre_swapoff	include/sanitizer/linux_syscall_hooks.h	1421;"	d
__sanitizer_syscall_pre_swapon	include/sanitizer/linux_syscall_hooks.h	1416;"	d
__sanitizer_syscall_pre_symlink	include/sanitizer/linux_syscall_hooks.h	689;"	d
__sanitizer_syscall_pre_symlink	include/sanitizer/netbsd_syscall_hooks.h	322;"	d
__sanitizer_syscall_pre_symlinkat	include/sanitizer/linux_syscall_hooks.h	1583;"	d
__sanitizer_syscall_pre_symlinkat	include/sanitizer/netbsd_syscall_hooks.h	2639;"	d
__sanitizer_syscall_pre_sync	include/sanitizer/linux_syscall_hooks.h	437;"	d
__sanitizer_syscall_pre_sync	include/sanitizer/netbsd_syscall_hooks.h	223;"	d
__sanitizer_syscall_pre_sync_file_range	include/sanitizer/linux_syscall_hooks.h	1922;"	d
__sanitizer_syscall_pre_syncfs	include/sanitizer/linux_syscall_hooks.h	1762;"	d
__sanitizer_syscall_pre_sysarch	include/sanitizer/netbsd_syscall_hooks.h	852;"	d
__sanitizer_syscall_pre_syscall	include/sanitizer/netbsd_syscall_hooks.h	30;"	d
__sanitizer_syscall_pre_sysctl	include/sanitizer/linux_syscall_hooks.h	1425;"	d
__sanitizer_syscall_pre_sysfs	include/sanitizer/linux_syscall_hooks.h	1433;"	d
__sanitizer_syscall_pre_sysinfo	include/sanitizer/linux_syscall_hooks.h	1429;"	d
__sanitizer_syscall_pre_syslog	include/sanitizer/linux_syscall_hooks.h	1438;"	d
__sanitizer_syscall_pre_tee	include/sanitizer/linux_syscall_hooks.h	1683;"	d
__sanitizer_syscall_pre_tgkill	include/sanitizer/linux_syscall_hooks.h	407;"	d
__sanitizer_syscall_pre_time	include/sanitizer/linux_syscall_hooks.h	23;"	d
__sanitizer_syscall_pre_timer_create	include/sanitizer/linux_syscall_hooks.h	188;"	d
__sanitizer_syscall_pre_timer_create	include/sanitizer/netbsd_syscall_hooks.h	1236;"	d
__sanitizer_syscall_pre_timer_delete	include/sanitizer/linux_syscall_hooks.h	216;"	d
__sanitizer_syscall_pre_timer_delete	include/sanitizer/netbsd_syscall_hooks.h	1242;"	d
__sanitizer_syscall_pre_timer_getoverrun	include/sanitizer/linux_syscall_hooks.h	202;"	d
__sanitizer_syscall_pre_timer_getoverrun	include/sanitizer/netbsd_syscall_hooks.h	1262;"	d
__sanitizer_syscall_pre_timer_gettime	include/sanitizer/linux_syscall_hooks.h	197;"	d
__sanitizer_syscall_pre_timer_settime	include/sanitizer/linux_syscall_hooks.h	206;"	d
__sanitizer_syscall_pre_timerfd_create	include/sanitizer/linux_syscall_hooks.h	1717;"	d
__sanitizer_syscall_pre_timerfd_gettime	include/sanitizer/linux_syscall_hooks.h	1728;"	d
__sanitizer_syscall_pre_timerfd_settime	include/sanitizer/linux_syscall_hooks.h	1722;"	d
__sanitizer_syscall_pre_times	include/sanitizer/linux_syscall_hooks.h	43;"	d
__sanitizer_syscall_pre_tkill	include/sanitizer/linux_syscall_hooks.h	412;"	d
__sanitizer_syscall_pre_truncate	include/sanitizer/linux_syscall_hooks.h	469;"	d
__sanitizer_syscall_pre_truncate	include/sanitizer/netbsd_syscall_hooks.h	1071;"	d
__sanitizer_syscall_pre_truncate64	include/sanitizer/linux_syscall_hooks.h	1924;"	d
__sanitizer_syscall_pre_tuxcall	include/sanitizer/linux_syscall_hooks.h	1925;"	d
__sanitizer_syscall_pre_ugetrlimit	include/sanitizer/linux_syscall_hooks.h	1926;"	d
__sanitizer_syscall_pre_ulimit	include/sanitizer/linux_syscall_hooks.h	1927;"	d
__sanitizer_syscall_pre_umask	include/sanitizer/linux_syscall_hooks.h	1277;"	d
__sanitizer_syscall_pre_umask	include/sanitizer/netbsd_syscall_hooks.h	339;"	d
__sanitizer_syscall_pre_umount	include/sanitizer/linux_syscall_hooks.h	461;"	d
__sanitizer_syscall_pre_umount2	include/sanitizer/linux_syscall_hooks.h	1928;"	d
__sanitizer_syscall_pre_uname	include/sanitizer/linux_syscall_hooks.h	1245;"	d
__sanitizer_syscall_pre_undelete	include/sanitizer/netbsd_syscall_hooks.h	1102;"	d
__sanitizer_syscall_pre_unlink	include/sanitizer/linux_syscall_hooks.h	693;"	d
__sanitizer_syscall_pre_unlink	include/sanitizer/netbsd_syscall_hooks.h	90;"	d
__sanitizer_syscall_pre_unlinkat	include/sanitizer/linux_syscall_hooks.h	1577;"	d
__sanitizer_syscall_pre_unlinkat	include/sanitizer/netbsd_syscall_hooks.h	2645;"	d
__sanitizer_syscall_pre_unmount	include/sanitizer/netbsd_syscall_hooks.h	146;"	d
__sanitizer_syscall_pre_unshare	include/sanitizer/linux_syscall_hooks.h	1663;"	d
__sanitizer_syscall_pre_uselib	include/sanitizer/linux_syscall_hooks.h	1443;"	d
__sanitizer_syscall_pre_ustat	include/sanitizer/linux_syscall_hooks.h	519;"	d
__sanitizer_syscall_pre_utime	include/sanitizer/linux_syscall_hooks.h	929;"	d
__sanitizer_syscall_pre_utimensat	include/sanitizer/linux_syscall_hooks.h	1657;"	d
__sanitizer_syscall_pre_utimensat	include/sanitizer/netbsd_syscall_hooks.h	2617;"	d
__sanitizer_syscall_pre_utimes	include/sanitizer/linux_syscall_hooks.h	933;"	d
__sanitizer_syscall_pre_utrace	include/sanitizer/netbsd_syscall_hooks.h	1633;"	d
__sanitizer_syscall_pre_uuidgen	include/sanitizer/netbsd_syscall_hooks.h	1864;"	d
__sanitizer_syscall_pre_vadvise	include/sanitizer/netbsd_syscall_hooks.h	389;"	d
__sanitizer_syscall_pre_vfork	include/sanitizer/linux_syscall_hooks.h	1833;"	d
__sanitizer_syscall_pre_vfork	include/sanitizer/netbsd_syscall_hooks.h	372;"	d
__sanitizer_syscall_pre_vhangup	include/sanitizer/linux_syscall_hooks.h	818;"	d
__sanitizer_syscall_pre_vm86	include/sanitizer/linux_syscall_hooks.h	1929;"	d
__sanitizer_syscall_pre_vm86old	include/sanitizer/linux_syscall_hooks.h	1930;"	d
__sanitizer_syscall_pre_vmsplice	include/sanitizer/linux_syscall_hooks.h	1677;"	d
__sanitizer_syscall_pre_vserver	include/sanitizer/linux_syscall_hooks.h	1931;"	d
__sanitizer_syscall_pre_wait4	include/sanitizer/linux_syscall_hooks.h	343;"	d
__sanitizer_syscall_pre_wait6	include/sanitizer/netbsd_syscall_hooks.h	2719;"	d
__sanitizer_syscall_pre_waitid	include/sanitizer/linux_syscall_hooks.h	349;"	d
__sanitizer_syscall_pre_waitpid	include/sanitizer/linux_syscall_hooks.h	356;"	d
__sanitizer_syscall_pre_write	include/sanitizer/linux_syscall_hooks.h	962;"	d
__sanitizer_syscall_pre_write	include/sanitizer/netbsd_syscall_hooks.h	55;"	d
__sanitizer_syscall_pre_writev	include/sanitizer/linux_syscall_hooks.h	967;"	d
__sanitizer_syscall_pre_writev	include/sanitizer/netbsd_syscall_hooks.h	635;"	d
__sanitizer_task_vm_info	sanitizer_common/sanitizer_mac.cpp	/^struct __sanitizer_task_vm_info {$/;"	s	namespace:__sanitizer
__sanitizer_thread_create_hook	asan/asan_fuchsia.cpp	/^void __sanitizer_thread_create_hook(void *hook, thrd_t thread, int error) {$/;"	f
__sanitizer_thread_create_hook	asan/asan_rtems.cpp	/^void __sanitizer_thread_create_hook(void *handle, uptr thread, int status) {$/;"	f
__sanitizer_thread_create_hook	lsan/lsan_fuchsia.cpp	/^void __sanitizer_thread_create_hook(void *hook, thrd_t thread, int error) {$/;"	f
__sanitizer_thread_exit_hook	asan/asan_fuchsia.cpp	/^void __sanitizer_thread_exit_hook(void *hook, thrd_t self) {$/;"	f
__sanitizer_thread_exit_hook	asan/asan_rtems.cpp	/^void __sanitizer_thread_exit_hook(void *handle, uptr self) {$/;"	f
__sanitizer_thread_exit_hook	lsan/lsan_fuchsia.cpp	/^void __sanitizer_thread_exit_hook(void *hook, thrd_t self) { ThreadFinish(); }$/;"	f
__sanitizer_thread_start_hook	asan/asan_fuchsia.cpp	/^void __sanitizer_thread_start_hook(void *hook, thrd_t self) {$/;"	f
__sanitizer_thread_start_hook	asan/asan_rtems.cpp	/^void __sanitizer_thread_start_hook(void *handle, uptr self) {$/;"	f
__sanitizer_thread_start_hook	lsan/lsan_fuchsia.cpp	/^void __sanitizer_thread_start_hook(void *hook, thrd_t self) {$/;"	f
__sanitizer_time_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^typedef long long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^typedef long long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^typedef long long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_time_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^typedef long __sanitizer_time_t;$/;"	t	namespace:__sanitizer
__sanitizer_timeb	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_timeb {$/;"	s	namespace:__sanitizer
__sanitizer_timeb	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_timeb {$/;"	s	namespace:__sanitizer
__sanitizer_timeb	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_timeb {$/;"	s	namespace:__sanitizer
__sanitizer_timeb	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_timeb {$/;"	s	namespace:__sanitizer
__sanitizer_timespec	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_timespec {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_timeval	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_timeval {$/;"	s	namespace:__sanitizer
__sanitizer_tm	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_tm	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_tm	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_tm	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_tm {$/;"	s	namespace:__sanitizer
__sanitizer_ttyent	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_ttyent {$/;"	s	namespace:__sanitizer
__sanitizer_unaligned_load16	asan/asan_poisoning.cpp	/^u16 __sanitizer_unaligned_load16(const uu16 *p) {$/;"	f
__sanitizer_unaligned_load16	hwasan/hwasan.cpp	/^u16 __sanitizer_unaligned_load16(const uu16 *p) {$/;"	f
__sanitizer_unaligned_load16	tsan/tsan_interface.cpp	/^u16 __sanitizer_unaligned_load16(const uu16 *addr) {$/;"	f
__sanitizer_unaligned_load32	asan/asan_poisoning.cpp	/^u32 __sanitizer_unaligned_load32(const uu32 *p) {$/;"	f
__sanitizer_unaligned_load32	hwasan/hwasan.cpp	/^u32 __sanitizer_unaligned_load32(const uu32 *p) {$/;"	f
__sanitizer_unaligned_load32	tsan/tsan_interface.cpp	/^u32 __sanitizer_unaligned_load32(const uu32 *addr) {$/;"	f
__sanitizer_unaligned_load64	asan/asan_poisoning.cpp	/^u64 __sanitizer_unaligned_load64(const uu64 *p) {$/;"	f
__sanitizer_unaligned_load64	hwasan/hwasan.cpp	/^u64 __sanitizer_unaligned_load64(const uu64 *p) {$/;"	f
__sanitizer_unaligned_load64	tsan/tsan_interface.cpp	/^u64 __sanitizer_unaligned_load64(const uu64 *addr) {$/;"	f
__sanitizer_unaligned_store16	asan/asan_poisoning.cpp	/^void __sanitizer_unaligned_store16(uu16 *p, u16 x) {$/;"	f
__sanitizer_unaligned_store16	hwasan/hwasan.cpp	/^void __sanitizer_unaligned_store16(uu16 *p, u16 x) {$/;"	f
__sanitizer_unaligned_store16	tsan/tsan_interface.cpp	/^void __sanitizer_unaligned_store16(uu16 *addr, u16 v) {$/;"	f
__sanitizer_unaligned_store32	asan/asan_poisoning.cpp	/^void __sanitizer_unaligned_store32(uu32 *p, u32 x) {$/;"	f
__sanitizer_unaligned_store32	hwasan/hwasan.cpp	/^void __sanitizer_unaligned_store32(uu32 *p, u32 x) {$/;"	f
__sanitizer_unaligned_store32	tsan/tsan_interface.cpp	/^void __sanitizer_unaligned_store32(uu32 *addr, u32 v) {$/;"	f
__sanitizer_unaligned_store64	asan/asan_poisoning.cpp	/^void __sanitizer_unaligned_store64(uu64 *p, u64 x) {$/;"	f
__sanitizer_unaligned_store64	hwasan/hwasan.cpp	/^void __sanitizer_unaligned_store64(uu64 *p, u64 x) {$/;"	f
__sanitizer_unaligned_store64	tsan/tsan_interface.cpp	/^void __sanitizer_unaligned_store64(uu64 *addr, u64 v) {$/;"	f
__sanitizer_valloc	hwasan/hwasan_interceptors.cpp	/^void * __sanitizer_valloc(uptr size) {$/;"	f
__sanitizer_verify_contiguous_container	asan/asan_poisoning.cpp	/^int __sanitizer_verify_contiguous_container(const void *beg_p,$/;"	f
__sanitizer_wordexp_t	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^struct __sanitizer_wordexp_t {$/;"	s	namespace:__sanitizer
__sanitizer_wordexp_t	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^struct __sanitizer_wordexp_t {$/;"	s	namespace:__sanitizer
__sanitizer_wordexp_t	sanitizer_common/sanitizer_platform_limits_posix.h	/^struct __sanitizer_wordexp_t {$/;"	s	namespace:__sanitizer
__sanitizer_wordexp_t	sanitizer_common/sanitizer_platform_limits_solaris.h	/^struct __sanitizer_wordexp_t {$/;"	s	namespace:__sanitizer
__saved_mask	hwasan/hwasan.h	/^  __hw_sigset_t __saved_mask; \/\/ Saved signal mask.$/;"	m	struct:__hw_jmp_buf_struct
__scudo	sanitizer_common/sanitizer_internal_defs.h	/^namespace __scudo {$/;"	n
__seq	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned __seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__seq	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned short __seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__setjmp$non_lazy_ptr	tsan/tsan_rtl_aarch64.S	/^__setjmp$non_lazy_ptr:$/;"	l
__si_class_type_info	ubsan/ubsan_type_hash_itanium.cpp	/^class __si_class_type_info : public __class_type_info {$/;"	c	namespace:__cxxabiv1
__sigjmp_save	hwasan/hwasan_interceptors.cpp	/^extern "C" int __sigjmp_save(__hw_sigjmp_buf env, int savemask) {$/;"	f
__sigsetjmp	tsan/tsan_rtl_mips64.S	/^__sigsetjmp:$/;"	l
__sigsetjmp	tsan/tsan_rtl_ppc64.S	/^__sigsetjmp:$/;"	l
__spare__	sanitizer_common/sanitizer_freebsd.h	/^  int __spare__[4];$/;"	m	struct:__sanitizer::__xucontext
__spin_lock	sanitizer_common/sanitizer_atomic_clang_mips.h	/^static void __spin_lock(volatile int *lock) {$/;"	f	namespace:__sanitizer
__spin_unlock	sanitizer_common/sanitizer_atomic_clang_mips.h	/^static void __spin_unlock(volatile int *lock) { __sync_lock_release(lock); }$/;"	f	namespace:__sanitizer
__start___sancov_cntrs	sanitizer_common/sanitizer_coverage_win_sections.cpp	/^__declspec(allocate(".SCOV$CA")) uint64_t __start___sancov_cntrs = 0;$/;"	v
__start___sancov_guards	sanitizer_common/sanitizer_coverage_win_sections.cpp	/^__declspec(allocate(".SCOV$GA")) uint64_t __start___sancov_guards = 0;$/;"	v
__start___sancov_pcs	sanitizer_common/sanitizer_coverage_win_sections.cpp	/^__declspec(allocate(".SCOVP$A")) uint64_t __start___sancov_pcs = 0;$/;"	v
__start_dll_thunk	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^__declspec(allocate(".DLLTH$A")) DllThunkCB __start_dll_thunk;$/;"	v
__start_weak_list	sanitizer_common/sanitizer_win_weak_interception.cpp	/^__declspec(allocate(".WEAK$A")) InterceptCB __start_weak_list;$/;"	v
__stop___sancov_cntrs	sanitizer_common/sanitizer_coverage_win_sections.cpp	/^    __stop___sancov_cntrs = 0;$/;"	v
__stop___sancov_guards	sanitizer_common/sanitizer_coverage_win_sections.cpp	/^    __stop___sancov_guards = 0;$/;"	v
__stop___sancov_pcs	sanitizer_common/sanitizer_coverage_win_sections.cpp	/^    __stop___sancov_pcs = 0;$/;"	v
__stop_dll_thunk	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^__declspec(allocate(".DLLTH$Z")) DllThunkCB __stop_dll_thunk;$/;"	v
__stop_weak_list	sanitizer_common/sanitizer_win_weak_interception.cpp	/^__declspec(allocate(".WEAK$Z")) InterceptCB __stop_weak_list;$/;"	v
__sysctl_args	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(__sysctl_args);$/;"	v
__tsan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_clock.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_clock.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_defs.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_dense_alloc.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_external.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_fd.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_fd.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_flags.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_flags.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_ignoreset.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_ignoreset.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interceptors.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interceptors_libdispatch.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interceptors_mac.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interceptors_mach_vm.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interceptors_posix.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interface.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interface_ann.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_interface_java.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_md5.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_mman.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_mman.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_mutex.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_mutex.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_mutexset.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_mutexset.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_platform.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_platform_linux.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_platform_mac.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_platform_posix.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_platform_windows.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_report.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_report.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_rtl.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_rtl.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_rtl_mutex.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_rtl_proc.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_rtl_report.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_rtl_thread.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_stack_trace.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_stack_trace.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_stat.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_stat.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_suppressions.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_suppressions.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_symbolize.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_symbolize.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_sync.cpp	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_sync.h	/^namespace __tsan {$/;"	n
__tsan	tsan/tsan_trace.h	/^namespace __tsan {$/;"	n
__tsan_acquire	tsan/tsan_interface.cpp	/^void __tsan_acquire(void *addr) {$/;"	f
__tsan_atomic128	include/sanitizer/tsan_interface_atomic.h	/^__extension__ typedef __int128 __tsan_atomic128;$/;"	t
__tsan_atomic128_compare_exchange_strong	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic128_compare_exchange_strong(volatile a128 *a, a128 *c, a128 v,$/;"	f
__tsan_atomic128_compare_exchange_val	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_compare_exchange_val(volatile a128 *a, a128 c, a128 v,$/;"	f
__tsan_atomic128_compare_exchange_weak	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic128_compare_exchange_weak(volatile a128 *a, a128 *c, a128 v,$/;"	f
__tsan_atomic128_exchange	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_exchange(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_add	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_fetch_add(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_and	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_fetch_and(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_nand	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_fetch_nand(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_or	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_fetch_or(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_sub	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_fetch_sub(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_fetch_xor	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_fetch_xor(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic128_load	tsan/tsan_interface_atomic.cpp	/^a128 __tsan_atomic128_load(const volatile a128 *a, morder mo) {$/;"	f
__tsan_atomic128_store	tsan/tsan_interface_atomic.cpp	/^void __tsan_atomic128_store(volatile a128 *a, a128 v, morder mo) {$/;"	f
__tsan_atomic16	include/sanitizer/tsan_interface_atomic.h	/^typedef short __tsan_atomic16;$/;"	t
__tsan_atomic16_compare_exchange_strong	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic16_compare_exchange_strong(volatile a16 *a, a16 *c, a16 v,$/;"	f
__tsan_atomic16_compare_exchange_val	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_compare_exchange_val(volatile a16 *a, a16 c, a16 v,$/;"	f
__tsan_atomic16_compare_exchange_weak	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic16_compare_exchange_weak(volatile a16 *a, a16 *c, a16 v,$/;"	f
__tsan_atomic16_exchange	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_exchange(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_add	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_fetch_add(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_and	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_fetch_and(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_nand	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_fetch_nand(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_or	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_fetch_or(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_sub	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_fetch_sub(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_fetch_xor	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_fetch_xor(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic16_load	tsan/tsan_interface_atomic.cpp	/^a16 __tsan_atomic16_load(const volatile a16 *a, morder mo) {$/;"	f
__tsan_atomic16_store	tsan/tsan_interface_atomic.cpp	/^void __tsan_atomic16_store(volatile a16 *a, a16 v, morder mo) {$/;"	f
__tsan_atomic32	include/sanitizer/tsan_interface_atomic.h	/^typedef int __tsan_atomic32;$/;"	t
__tsan_atomic32_compare_exchange_strong	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic32_compare_exchange_strong(volatile a32 *a, a32 *c, a32 v,$/;"	f
__tsan_atomic32_compare_exchange_val	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_compare_exchange_val(volatile a32 *a, a32 c, a32 v,$/;"	f
__tsan_atomic32_compare_exchange_weak	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic32_compare_exchange_weak(volatile a32 *a, a32 *c, a32 v,$/;"	f
__tsan_atomic32_exchange	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_exchange(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_add	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_fetch_add(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_and	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_fetch_and(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_nand	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_fetch_nand(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_or	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_fetch_or(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_sub	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_fetch_sub(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_fetch_xor	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_fetch_xor(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic32_load	tsan/tsan_interface_atomic.cpp	/^a32 __tsan_atomic32_load(const volatile a32 *a, morder mo) {$/;"	f
__tsan_atomic32_store	tsan/tsan_interface_atomic.cpp	/^void __tsan_atomic32_store(volatile a32 *a, a32 v, morder mo) {$/;"	f
__tsan_atomic64	include/sanitizer/tsan_interface_atomic.h	/^typedef long __tsan_atomic64;$/;"	t
__tsan_atomic64_compare_exchange_strong	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic64_compare_exchange_strong(volatile a64 *a, a64 *c, a64 v,$/;"	f
__tsan_atomic64_compare_exchange_val	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_compare_exchange_val(volatile a64 *a, a64 c, a64 v,$/;"	f
__tsan_atomic64_compare_exchange_weak	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic64_compare_exchange_weak(volatile a64 *a, a64 *c, a64 v,$/;"	f
__tsan_atomic64_exchange	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_exchange(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_add	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_fetch_add(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_and	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_fetch_and(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_nand	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_fetch_nand(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_or	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_fetch_or(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_sub	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_fetch_sub(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_fetch_xor	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_fetch_xor(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic64_load	tsan/tsan_interface_atomic.cpp	/^a64 __tsan_atomic64_load(const volatile a64 *a, morder mo) {$/;"	f
__tsan_atomic64_store	tsan/tsan_interface_atomic.cpp	/^void __tsan_atomic64_store(volatile a64 *a, a64 v, morder mo) {$/;"	f
__tsan_atomic8	include/sanitizer/tsan_interface_atomic.h	/^typedef char __tsan_atomic8;$/;"	t
__tsan_atomic8_compare_exchange_strong	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic8_compare_exchange_strong(volatile a8 *a, a8 *c, a8 v,$/;"	f
__tsan_atomic8_compare_exchange_val	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_compare_exchange_val(volatile a8 *a, a8 c, a8 v,$/;"	f
__tsan_atomic8_compare_exchange_weak	tsan/tsan_interface_atomic.cpp	/^int __tsan_atomic8_compare_exchange_weak(volatile a8 *a, a8 *c, a8 v,$/;"	f
__tsan_atomic8_exchange	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_exchange(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_add	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_fetch_add(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_and	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_fetch_and(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_nand	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_fetch_nand(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_or	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_fetch_or(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_sub	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_fetch_sub(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_fetch_xor	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_fetch_xor(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic8_load	tsan/tsan_interface_atomic.cpp	/^a8 __tsan_atomic8_load(const volatile a8 *a, morder mo) {$/;"	f
__tsan_atomic8_store	tsan/tsan_interface_atomic.cpp	/^void __tsan_atomic8_store(volatile a8 *a, a8 v, morder mo) {$/;"	f
__tsan_atomic_signal_fence	tsan/tsan_interface_atomic.cpp	/^void __tsan_atomic_signal_fence(morder mo) {$/;"	f
__tsan_atomic_thread_fence	tsan/tsan_interface_atomic.cpp	/^void __tsan_atomic_thread_fence(morder mo) {$/;"	f
__tsan_create_fiber	tsan/tsan_interface.cpp	/^void *__tsan_create_fiber(unsigned flags) {$/;"	f
__tsan_default_suppressions	tsan/tsan_suppressions.cpp	/^const char *__tsan_default_suppressions() {$/;"	f
__tsan_destroy_fiber	tsan/tsan_interface.cpp	/^void __tsan_destroy_fiber(void *fiber) {$/;"	f
__tsan_external_assign_tag	tsan/tsan_external.cpp	/^void __tsan_external_assign_tag(void *addr, void *tag) {$/;"	f
__tsan_external_read	tsan/tsan_external.cpp	/^void __tsan_external_read(void *addr, void *caller_pc, void *tag) {$/;"	f
__tsan_external_register_header	tsan/tsan_external.cpp	/^void __tsan_external_register_header(void *tag, const char *header) {$/;"	f
__tsan_external_register_tag	tsan/tsan_external.cpp	/^void *__tsan_external_register_tag(const char *object_type) {$/;"	f
__tsan_external_write	tsan/tsan_external.cpp	/^void __tsan_external_write(void *addr, void *caller_pc, void *tag) {$/;"	f
__tsan_flush_memory	tsan/tsan_interface.cpp	/^void __tsan_flush_memory() {$/;"	f
__tsan_func_entry	tsan/tsan_interface_inl.h	/^void __tsan_func_entry(void *pc) {$/;"	f
__tsan_func_exit	tsan/tsan_interface_inl.h	/^void __tsan_func_exit() {$/;"	f
__tsan_get_alloc_stack	tsan/tsan_debugging.cpp	/^int __tsan_get_alloc_stack(uptr addr, uptr *trace, uptr size, int *thread_id,$/;"	f
__tsan_get_current_fiber	tsan/tsan_interface.cpp	/^void *__tsan_get_current_fiber() {$/;"	f
__tsan_get_current_report	tsan/tsan_debugging.cpp	/^void *__tsan_get_current_report() {$/;"	f
__tsan_get_report_data	tsan/tsan_debugging.cpp	/^int __tsan_get_report_data(void *report, const char **description, int *count,$/;"	f
__tsan_get_report_loc	tsan/tsan_debugging.cpp	/^int __tsan_get_report_loc(void *report, uptr idx, const char **type,$/;"	f
__tsan_get_report_loc_object_type	tsan/tsan_debugging.cpp	/^int __tsan_get_report_loc_object_type(void *report, uptr idx,$/;"	f
__tsan_get_report_mop	tsan/tsan_debugging.cpp	/^int __tsan_get_report_mop(void *report, uptr idx, int *tid, void **addr,$/;"	f
__tsan_get_report_mutex	tsan/tsan_debugging.cpp	/^int __tsan_get_report_mutex(void *report, uptr idx, uptr *mutex_id, void **addr,$/;"	f
__tsan_get_report_stack	tsan/tsan_debugging.cpp	/^int __tsan_get_report_stack(void *report, uptr idx, void **trace,$/;"	f
__tsan_get_report_tag	tsan/tsan_debugging.cpp	/^int __tsan_get_report_tag(void *report, uptr *tag) {$/;"	f
__tsan_get_report_thread	tsan/tsan_debugging.cpp	/^int __tsan_get_report_thread(void *report, uptr idx, int *tid, tid_t *os_id,$/;"	f
__tsan_get_report_unique_tid	tsan/tsan_debugging.cpp	/^int __tsan_get_report_unique_tid(void *report, uptr idx, int *tid) {$/;"	f
__tsan_go_atomic32_compare_exchange	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic32_compare_exchange($/;"	f
__tsan_go_atomic32_exchange	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic32_exchange(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic32_fetch_add	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic32_fetch_add(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic32_load	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic32_load(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic32_store	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic32_store(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_compare_exchange	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic64_compare_exchange($/;"	f
__tsan_go_atomic64_exchange	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic64_exchange(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_fetch_add	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic64_fetch_add(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_load	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic64_load(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_go_atomic64_store	tsan/tsan_interface_atomic.cpp	/^void __tsan_go_atomic64_store(ThreadState *thr, uptr cpc, uptr pc, u8 *a) {$/;"	f
__tsan_ignore_thread_begin	tsan/tsan_interface_inl.h	/^void __tsan_ignore_thread_begin() {$/;"	f
__tsan_ignore_thread_end	tsan/tsan_interface_inl.h	/^void __tsan_ignore_thread_end() {$/;"	f
__tsan_init	tsan/tsan_interface.cpp	/^void __tsan_init() {$/;"	f
__tsan_java_acquire	tsan/tsan_interface_java.cpp	/^void __tsan_java_acquire(jptr addr) {$/;"	f
__tsan_java_alloc	tsan/tsan_interface_java.cpp	/^void __tsan_java_alloc(jptr ptr, jptr size) {$/;"	f
__tsan_java_finalize	tsan/tsan_interface_java.cpp	/^void __tsan_java_finalize() {$/;"	f
__tsan_java_find	tsan/tsan_interface_java.cpp	/^jptr __tsan_java_find(jptr *from_ptr, jptr to) {$/;"	f
__tsan_java_fini	tsan/tsan_interface_java.cpp	/^int  __tsan_java_fini() {$/;"	f
__tsan_java_free	tsan/tsan_interface_java.cpp	/^void __tsan_java_free(jptr ptr, jptr size) {$/;"	f
__tsan_java_init	tsan/tsan_interface_java.cpp	/^void __tsan_java_init(jptr heap_begin, jptr heap_size) {$/;"	f
__tsan_java_move	tsan/tsan_interface_java.cpp	/^void __tsan_java_move(jptr src, jptr dst, jptr size) {$/;"	f
__tsan_java_mutex_lock	tsan/tsan_interface_java.cpp	/^void __tsan_java_mutex_lock(jptr addr) {$/;"	f
__tsan_java_mutex_lock_rec	tsan/tsan_interface_java.cpp	/^void __tsan_java_mutex_lock_rec(jptr addr, int rec) {$/;"	f
__tsan_java_mutex_read_lock	tsan/tsan_interface_java.cpp	/^void __tsan_java_mutex_read_lock(jptr addr) {$/;"	f
__tsan_java_mutex_read_unlock	tsan/tsan_interface_java.cpp	/^void __tsan_java_mutex_read_unlock(jptr addr) {$/;"	f
__tsan_java_mutex_unlock	tsan/tsan_interface_java.cpp	/^void __tsan_java_mutex_unlock(jptr addr) {$/;"	f
__tsan_java_mutex_unlock_rec	tsan/tsan_interface_java.cpp	/^int __tsan_java_mutex_unlock_rec(jptr addr) {$/;"	f
__tsan_java_release	tsan/tsan_interface_java.cpp	/^void __tsan_java_release(jptr addr) {$/;"	f
__tsan_java_release_store	tsan/tsan_interface_java.cpp	/^void __tsan_java_release_store(jptr addr) {$/;"	f
__tsan_locate_address	tsan/tsan_debugging.cpp	/^const char *__tsan_locate_address(uptr addr, char *name, uptr name_size,$/;"	f
__tsan_memory_order	include/sanitizer/tsan_interface_atomic.h	/^} __tsan_memory_order;$/;"	t	typeref:enum:__anon2
__tsan_memory_order_acq_rel	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_acq_rel,$/;"	e	enum:__anon2
__tsan_memory_order_acquire	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_acquire,$/;"	e	enum:__anon2
__tsan_memory_order_consume	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_consume,$/;"	e	enum:__anon2
__tsan_memory_order_relaxed	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_relaxed,$/;"	e	enum:__anon2
__tsan_memory_order_release	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_release,$/;"	e	enum:__anon2
__tsan_memory_order_seq_cst	include/sanitizer/tsan_interface_atomic.h	/^  __tsan_memory_order_seq_cst$/;"	e	enum:__anon2
__tsan_mutex_create	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_create(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_destroy	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_destroy(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_linker_init	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_linker_init      = 1 << 0;$/;"	v
__tsan_mutex_not_static	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_not_static       = 1 << 8;$/;"	v
__tsan_mutex_post_divert	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_post_divert(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_post_lock	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_post_lock(void *m, unsigned flagz, int rec) {$/;"	f
__tsan_mutex_post_signal	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_post_signal(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_post_unlock	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_post_unlock(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_pre_divert	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_pre_divert(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_pre_lock	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_pre_lock(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_pre_signal	tsan/tsan_interface_ann.cpp	/^void __tsan_mutex_pre_signal(void *addr, unsigned flagz) {$/;"	f
__tsan_mutex_pre_unlock	tsan/tsan_interface_ann.cpp	/^int __tsan_mutex_pre_unlock(void *m, unsigned flagz) {$/;"	f
__tsan_mutex_read_lock	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_read_lock        = 1 << 3;$/;"	v
__tsan_mutex_read_reentrant	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_read_reentrant   = 1 << 2;$/;"	v
__tsan_mutex_recursive_lock	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_recursive_lock   = 1 << 6;$/;"	v
__tsan_mutex_recursive_unlock	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_recursive_unlock = 1 << 7;$/;"	v
__tsan_mutex_try_lock	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_try_lock         = 1 << 4;$/;"	v
__tsan_mutex_try_lock_failed	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_try_lock_failed  = 1 << 5;$/;"	v
__tsan_mutex_write_reentrant	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_mutex_write_reentrant  = 1 << 1;$/;"	v
__tsan_on_report	tsan/tsan_rtl_report.cpp	/^void __tsan_on_report(const ReportDesc *rep) {$/;"	f	namespace:__tsan
__tsan_on_thread_idle	tsan/tsan_mman.cpp	/^void __tsan_on_thread_idle() {$/;"	f
__tsan_read1	tsan/tsan_interface_inl.h	/^void __tsan_read1(void *addr) {$/;"	f
__tsan_read16	tsan/tsan_interface.cpp	/^void __tsan_read16(void *addr) {$/;"	f
__tsan_read16_pc	tsan/tsan_interface.cpp	/^void __tsan_read16_pc(void *addr, void *pc) {$/;"	f
__tsan_read1_pc	tsan/tsan_interface_inl.h	/^void __tsan_read1_pc(void *addr, void *pc) {$/;"	f
__tsan_read2	tsan/tsan_interface_inl.h	/^void __tsan_read2(void *addr) {$/;"	f
__tsan_read2_pc	tsan/tsan_interface_inl.h	/^void __tsan_read2_pc(void *addr, void *pc) {$/;"	f
__tsan_read4	tsan/tsan_interface_inl.h	/^void __tsan_read4(void *addr) {$/;"	f
__tsan_read4_pc	tsan/tsan_interface_inl.h	/^void __tsan_read4_pc(void *addr, void *pc) {$/;"	f
__tsan_read8	tsan/tsan_interface_inl.h	/^void __tsan_read8(void *addr) {$/;"	f
__tsan_read8_pc	tsan/tsan_interface_inl.h	/^void __tsan_read8_pc(void *addr, void *pc) {$/;"	f
__tsan_read_range	tsan/tsan_interface_inl.h	/^void __tsan_read_range(void *addr, uptr size) {$/;"	f
__tsan_read_range_pc	tsan/tsan_interface_inl.h	/^void __tsan_read_range_pc(void *addr, uptr size, void *pc) {$/;"	f
__tsan_release	tsan/tsan_interface.cpp	/^void __tsan_release(void *addr) {$/;"	f
__tsan_report_race	tsan/tsan_rtl.cpp	/^extern "C" void __tsan_report_race() {$/;"	f	namespace:__tsan
__tsan_resume	tsan/tsan_rtl.cpp	/^extern "C" void __tsan_resume() {$/;"	f
__tsan_resumed	tsan/tsan_rtl.cpp	/^volatile int __tsan_resumed = 0;$/;"	v
__tsan_set_fiber_name	tsan/tsan_interface.cpp	/^void __tsan_set_fiber_name(void *fiber, const char *name) {$/;"	f
__tsan_setjmp	tsan/tsan_interceptors_posix.cpp	/^extern "C" void __tsan_setjmp(uptr sp) {$/;"	f
__tsan_switch_to_fiber	tsan/tsan_interface.cpp	/^void __tsan_switch_to_fiber(void *fiber, unsigned flags) {$/;"	f
__tsan_switch_to_fiber_no_sync	include/sanitizer/tsan_interface.h	/^static const unsigned __tsan_switch_to_fiber_no_sync = 1 << 0;$/;"	v
__tsan_symbolize_external	tsan/tsan_symbolize.cpp	/^bool __tsan_symbolize_external(uptr pc, char *func_buf, uptr func_siz,$/;"	f	namespace:__tsan
__tsan_symbolize_external_ex	tsan/tsan_symbolize.cpp	/^void __tsan_symbolize_external_ex(uptr pc,$/;"	f	namespace:__tsan
__tsan_testonly_barrier_init	tsan/tsan_interceptors_posix.cpp	/^void __tsan_testonly_barrier_init(u64 *barrier, u32 count) {$/;"	f
__tsan_testonly_barrier_wait	tsan/tsan_interceptors_posix.cpp	/^void __tsan_testonly_barrier_wait(u64 *barrier) {$/;"	f
__tsan_testonly_shadow_stack_current_size	tsan/tsan_rtl.cpp	/^uptr __tsan_testonly_shadow_stack_current_size() {$/;"	f	namespace:__tsan
__tsan_thread_start_func	tsan/tsan_interceptors_posix.cpp	/^extern "C" void *__tsan_thread_start_func(void *arg) {$/;"	f
__tsan_trace_switch	tsan/tsan_rtl.cpp	/^extern "C" void __tsan_trace_switch() {$/;"	f	namespace:__tsan
__tsan_unaligned_read16	tsan/tsan_interface.cpp	/^void __tsan_unaligned_read16(const void *addr) {$/;"	f
__tsan_unaligned_read2	tsan/tsan_interface.cpp	/^void __tsan_unaligned_read2(const void *addr) {$/;"	f
__tsan_unaligned_read4	tsan/tsan_interface.cpp	/^void __tsan_unaligned_read4(const void *addr) {$/;"	f
__tsan_unaligned_read8	tsan/tsan_interface.cpp	/^void __tsan_unaligned_read8(const void *addr) {$/;"	f
__tsan_unaligned_write16	tsan/tsan_interface.cpp	/^void __tsan_unaligned_write16(void *addr) {$/;"	f
__tsan_unaligned_write2	tsan/tsan_interface.cpp	/^void __tsan_unaligned_write2(void *addr) {$/;"	f
__tsan_unaligned_write4	tsan/tsan_interface.cpp	/^void __tsan_unaligned_write4(void *addr) {$/;"	f
__tsan_unaligned_write8	tsan/tsan_interface.cpp	/^void __tsan_unaligned_write8(void *addr) {$/;"	f
__tsan_vptr_read	tsan/tsan_interface_inl.h	/^void __tsan_vptr_read(void **vptr_p) {$/;"	f
__tsan_vptr_update	tsan/tsan_interface_inl.h	/^void __tsan_vptr_update(void **vptr_p, void *new_val) {$/;"	f
__tsan_write1	tsan/tsan_interface_inl.h	/^void __tsan_write1(void *addr) {$/;"	f
__tsan_write16	tsan/tsan_interface.cpp	/^void __tsan_write16(void *addr) {$/;"	f
__tsan_write16_pc	tsan/tsan_interface.cpp	/^void __tsan_write16_pc(void *addr, void *pc) {$/;"	f
__tsan_write1_pc	tsan/tsan_interface_inl.h	/^void __tsan_write1_pc(void *addr, void *pc) {$/;"	f
__tsan_write2	tsan/tsan_interface_inl.h	/^void __tsan_write2(void *addr) {$/;"	f
__tsan_write2_pc	tsan/tsan_interface_inl.h	/^void __tsan_write2_pc(void *addr, void *pc) {$/;"	f
__tsan_write4	tsan/tsan_interface_inl.h	/^void __tsan_write4(void *addr) {$/;"	f
__tsan_write4_pc	tsan/tsan_interface_inl.h	/^void __tsan_write4_pc(void *addr, void *pc) {$/;"	f
__tsan_write8	tsan/tsan_interface_inl.h	/^void __tsan_write8(void *addr) {$/;"	f
__tsan_write8_pc	tsan/tsan_interface_inl.h	/^void __tsan_write8_pc(void *addr, void *pc) {$/;"	f
__tsan_write_range	tsan/tsan_interface_inl.h	/^void __tsan_write_range(void *addr, uptr size) {$/;"	f
__tsan_write_range_pc	tsan/tsan_interface_inl.h	/^void __tsan_write_range_pc(void *addr, uptr size, void *pc) {$/;"	f
__type_name	ubsan/ubsan_type_hash_itanium.cpp	/^    const char *__type_name;$/;"	m	class:std::type_info
__ubsan	sanitizer_common/sanitizer_internal_defs.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_diag.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_flags.cpp	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_flags.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_handlers.cpp	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_handlers.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_handlers_cxx.cpp	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_handlers_cxx.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_init.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_init_standalone.cpp	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_init_standalone_preinit.cpp	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_monitor.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_signals_standalone.cpp	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_signals_standalone.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_type_hash.h	/^namespace __ubsan {$/;"	n
__ubsan	ubsan/ubsan_value.h	/^namespace __ubsan {$/;"	n
__ubsan_get_current_report_data	ubsan/ubsan_monitor.cpp	/^void __ubsan::__ubsan_get_current_report_data(const char **OutIssueKind,$/;"	f	class:__ubsan
__ubsan_handle_alignment_assumption	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_alignment_assumption(AlignmentAssumptionData *Data,$/;"	f	class:__ubsan
__ubsan_handle_alignment_assumption_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_alignment_assumption_abort($/;"	f	class:__ubsan
__ubsan_handle_builtin_unreachable	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_builtin_unreachable(UnreachableData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_cfi_bad_icall	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_cfi_bad_icall(CFIBadIcallData *CallData,$/;"	f	class:__ubsan
__ubsan_handle_cfi_bad_icall_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_cfi_bad_icall_abort(CFIBadIcallData *CallData,$/;"	f	class:__ubsan
__ubsan_handle_cfi_bad_type	ubsan/ubsan_handlers_cxx.cpp	/^void __ubsan_handle_cfi_bad_type(CFICheckFailData *Data, ValueHandle Vtable,$/;"	f	namespace:__ubsan
__ubsan_handle_cfi_bad_type_default	ubsan/ubsan_handlers.cpp	/^extern "C" void __ubsan_handle_cfi_bad_type_default(CFICheckFailData *Data,$/;"	f	namespace:__ubsan
__ubsan_handle_cfi_check_fail	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_cfi_check_fail(CFICheckFailData *Data,$/;"	f	class:__ubsan
__ubsan_handle_cfi_check_fail_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_cfi_check_fail_abort(CFICheckFailData *Data,$/;"	f	class:__ubsan
__ubsan_handle_divrem_overflow	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_divrem_overflow(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_divrem_overflow_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_divrem_overflow_abort(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_dynamic_type_cache_miss	ubsan/ubsan_handlers_cxx.cpp	/^void __ubsan::__ubsan_handle_dynamic_type_cache_miss($/;"	f	class:__ubsan
__ubsan_handle_dynamic_type_cache_miss_abort	ubsan/ubsan_handlers_cxx.cpp	/^void __ubsan::__ubsan_handle_dynamic_type_cache_miss_abort($/;"	f	class:__ubsan
__ubsan_handle_float_cast_overflow	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_float_cast_overflow(void *Data, ValueHandle From) {$/;"	f	class:__ubsan
__ubsan_handle_float_cast_overflow_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_float_cast_overflow_abort(void *Data,$/;"	f	class:__ubsan
__ubsan_handle_function_type_mismatch_v1	ubsan/ubsan_handlers_cxx.cpp	/^void __ubsan_handle_function_type_mismatch_v1(FunctionTypeMismatchData *Data,$/;"	f	namespace:__ubsan
__ubsan_handle_function_type_mismatch_v1_abort	ubsan/ubsan_handlers_cxx.cpp	/^void __ubsan_handle_function_type_mismatch_v1_abort($/;"	f	namespace:__ubsan
__ubsan_handle_implicit_conversion	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_implicit_conversion(ImplicitConversionData *Data,$/;"	f	class:__ubsan
__ubsan_handle_implicit_conversion_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_implicit_conversion_abort($/;"	f	class:__ubsan
__ubsan_handle_invalid_builtin	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_invalid_builtin(InvalidBuiltinData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_invalid_builtin_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_invalid_builtin_abort(InvalidBuiltinData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_invalid_objc_cast	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_invalid_objc_cast(InvalidObjCCast *Data,$/;"	f	class:__ubsan
__ubsan_handle_invalid_objc_cast_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_invalid_objc_cast_abort(InvalidObjCCast *Data,$/;"	f	class:__ubsan
__ubsan_handle_load_invalid_value	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_load_invalid_value(InvalidValueData *Data,$/;"	f	class:__ubsan
__ubsan_handle_load_invalid_value_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_load_invalid_value_abort(InvalidValueData *Data,$/;"	f	class:__ubsan
__ubsan_handle_missing_return	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_missing_return(UnreachableData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_negate_overflow	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_negate_overflow(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_negate_overflow_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_negate_overflow_abort(OverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nonnull_arg	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nonnull_arg(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nonnull_arg_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nonnull_arg_abort(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nonnull_return_v1	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nonnull_return_v1(NonNullReturnData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nonnull_return_v1_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nonnull_return_v1_abort(NonNullReturnData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nullability_arg	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nullability_arg(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nullability_arg_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nullability_arg_abort(NonNullArgData *Data) {$/;"	f	class:__ubsan
__ubsan_handle_nullability_return_v1	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nullability_return_v1(NonNullReturnData *Data,$/;"	f	class:__ubsan
__ubsan_handle_nullability_return_v1_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_nullability_return_v1_abort($/;"	f	class:__ubsan
__ubsan_handle_out_of_bounds	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_out_of_bounds(OutOfBoundsData *Data,$/;"	f	class:__ubsan
__ubsan_handle_out_of_bounds_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_out_of_bounds_abort(OutOfBoundsData *Data,$/;"	f	class:__ubsan
__ubsan_handle_pointer_overflow	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_pointer_overflow(PointerOverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_pointer_overflow_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_pointer_overflow_abort(PointerOverflowData *Data,$/;"	f	class:__ubsan
__ubsan_handle_shift_out_of_bounds	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_shift_out_of_bounds(ShiftOutOfBoundsData *Data,$/;"	f	class:__ubsan
__ubsan_handle_shift_out_of_bounds_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_shift_out_of_bounds_abort($/;"	f	class:__ubsan
__ubsan_handle_type_mismatch_v1	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_type_mismatch_v1(TypeMismatchData *Data,$/;"	f	class:__ubsan
__ubsan_handle_type_mismatch_v1_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_type_mismatch_v1_abort(TypeMismatchData *Data,$/;"	f	class:__ubsan
__ubsan_handle_vla_bound_not_positive	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_vla_bound_not_positive(VLABoundData *Data,$/;"	f	class:__ubsan
__ubsan_handle_vla_bound_not_positive_abort	ubsan/ubsan_handlers.cpp	/^void __ubsan::__ubsan_handle_vla_bound_not_positive_abort(VLABoundData *Data,$/;"	f	class:__ubsan
__ubsan_on_report	ubsan/ubsan_monitor.cpp	/^void __ubsan::__ubsan_on_report(void) {}$/;"	f	class:__ubsan
__ubsan_vptr_type_cache	ubsan/ubsan_type_hash.cpp	/^__ubsan::__ubsan_vptr_type_cache[__ubsan::VptrTypeCacheSize];$/;"	m	class:__ubsan
__unused0	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr __unused0;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused1	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 __unused1;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused1	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long __unused1;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused1	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long long __unused1;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused1	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr __unused1;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 __unused2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long __unused2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long long __unused2;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
__unused2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr __unused2;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused3	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr __unused3;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused4	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 __unused4;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused4	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr __unused4;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused5	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 __unused5;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__unused5	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr __unused5;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
__user_cap_data_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned __user_cap_data_struct_sz = sizeof(struct __user_cap_data_struct);$/;"	m	namespace:__sanitizer
__user_cap_header_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned __user_cap_header_struct_sz =$/;"	m	namespace:__sanitizer
__virtual_mask	ubsan/ubsan_type_hash_itanium.cpp	/^    __virtual_mask = 0x1,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__vmi_class_type_info	ubsan/ubsan_type_hash_itanium.cpp	/^class __vmi_class_type_info : public __class_type_info {$/;"	c	namespace:__cxxabiv1
__weak_intercept_preinit	sanitizer_common/sanitizer_win_weak_interception.cpp	/^__declspec(allocate(".CRT$XIB")) int (*__weak_intercept_preinit)() =$/;"	v
__weak_intercept_tls_init	sanitizer_common/sanitizer_win_weak_interception.cpp	/^__declspec(allocate(".CRT$XLAB")) void(WINAPI *__weak_intercept_tls_init)($/;"	v
__xdl_iterate_hdr_callback	sanitizer_common/sanitizer_freebsd.h	/^typedef int (*__xdl_iterate_hdr_callback)(struct xdl_phdr_info *, size_t,$/;"	t	namespace:__sanitizer
__xmcontext	sanitizer_common/sanitizer_freebsd.h	/^typedef struct __xmcontext {$/;"	s	namespace:__sanitizer
__xray	sanitizer_common/sanitizer_internal_defs.h	/^namespace __xray {$/;"	n
__xregister_t	sanitizer_common/sanitizer_freebsd.h	/^typedef __int32_t __xregister_t;$/;"	t	namespace:__sanitizer
__xucontext	sanitizer_common/sanitizer_freebsd.h	/^typedef struct __xucontext {$/;"	s	namespace:__sanitizer
__xuint64_t	sanitizer_common/sanitizer_freebsd.h	/^typedef unsigned long long __xuint64_t;$/;"	t	namespace:__sanitizer
_ai_pad	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int _ai_pad;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
_base	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    unsigned char *_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE::__anon19
_base	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    unsigned char *_base;$/;"	m	struct:__sanitizer::__sanitizer_FILE::__anon20
_bf	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  } _bf;$/;"	m	struct:__sanitizer::__sanitizer_FILE	typeref:struct:__sanitizer::__sanitizer_FILE::__anon19
_blksize	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _blksize;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_calloc_base	asan/asan_malloc_win.cpp	/^void *_calloc_base(size_t nmemb, size_t size) {$/;"	f
_calloc_dbg	asan/asan_malloc_win.cpp	/^void *_calloc_dbg(size_t nmemb, size_t size, int, const char *, int) {$/;"	f
_calloc_impl	asan/asan_malloc_win.cpp	/^void *_calloc_impl(size_t nmemb, size_t size, int *errno_tmp) {$/;"	f
_chain	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_FILE *_chain;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_close	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*_close)(void *ptr);$/;"	m	struct:__sanitizer::__sanitizer_FILE
_cookie	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *_cookie;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_errno	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _errno;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
_except_handler3	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(_except_handler3);$/;"	v
_except_handler4	asan/asan_win.cpp	125;"	d
_expand	asan/asan_malloc_win.cpp	/^void *_expand(void *memblock, size_t size) {$/;"	f
_expand_dbg	asan/asan_malloc_win.cpp	/^void *_expand_dbg(void *memblock, size_t size) {$/;"	f
_ext	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  } _ext;$/;"	m	struct:__sanitizer::__sanitizer_FILE	typeref:struct:__sanitizer::__sanitizer_FILE::__anon20
_file	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short _file;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_fileno	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int _fileno;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned short _flags;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int _flags;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_flush	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*_flush)(void *ptr);$/;"	m	struct:__sanitizer::__sanitizer_FILE
_free_base	asan/asan_malloc_win.cpp	/^void _free_base(void *ptr) {$/;"	f
_free_dbg	asan/asan_malloc_win.cpp	/^void _free_dbg(void *ptr, int) {$/;"	f
_key	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long _key;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
_kve_ispare	sanitizer_common/sanitizer_freebsd.h	/^  int _kve_ispare[12];$/;"	m	struct:__sanitizer::xkinfo_vmentry
_lb_unused	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char _lb_unused[sizeof(uptr)];$/;"	m	struct:__sanitizer::__sanitizer_FILE
_lbfsize	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _lbfsize;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_malloc_base	asan/asan_malloc_win.cpp	/^void *_malloc_base(size_t size) {$/;"	f
_malloc_dbg	asan/asan_malloc_win.cpp	/^void *_malloc_dbg(size_t size, int, const char *, int) {$/;"	f
_markers	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *_markers;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_memcpy	interception/interception_win.cpp	/^static void _memcpy(void *dst, void *src, size_t sz) {$/;"	f	namespace:__interception
_memset	interception/interception_win.cpp	/^static void _memset(void *p, int value, size_t sz) {$/;"	f	namespace:__interception
_msize	asan/asan_malloc_win.cpp	/^size_t _msize(void *ptr) {$/;"	f
_msize_base	asan/asan_malloc_win.cpp	/^size_t _msize_base(void *ptr) {$/;"	f
_nbuf	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned char _nbuf[1];$/;"	m	struct:__sanitizer::__sanitizer_FILE
_offset	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 _offset;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_p	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned char *_p;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_r	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _r;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_read	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 (*_read)(void *, void *, uptr);$/;"	m	struct:__sanitizer::__sanitizer_FILE
_realloc_base	asan/asan_malloc_win.cpp	/^void *_realloc_base(void *ptr, size_t size) {$/;"	f
_realloc_dbg	asan/asan_malloc_win.cpp	/^void *_realloc_dbg(void *ptr, size_t size, int) {$/;"	f
_recalloc	asan/asan_malloc_win.cpp	/^void *_recalloc(void *p, size_t n, size_t elem_size) {$/;"	f
_recalloc_base	asan/asan_malloc_win.cpp	/^void *_recalloc_base(void *p, size_t n, size_t elem_size) {$/;"	f
_retval	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long _retval;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
_seek	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 (*_seek)(void *, u64, int);$/;"	m	struct:__sanitizer::__sanitizer_FILE
_seq	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned short _seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
_setjmp	tsan/tsan_rtl_mips64.S	/^_setjmp:$/;"	l
_setjmp	tsan/tsan_rtl_ppc64.S	/^_setjmp:$/;"	l
_setjmp$non_lazy_ptr	tsan/tsan_rtl_aarch64.S	/^_setjmp$non_lazy_ptr:$/;"	l
_shm_internal	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *_shm_internal;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
_sigsetjmp$non_lazy_ptr	tsan/tsan_rtl_aarch64.S	/^_sigsetjmp$non_lazy_ptr:$/;"	l
_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    int _size;$/;"	m	struct:__sanitizer::__sanitizer_FILE::__anon19
_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    int _size;$/;"	m	struct:__sanitizer::__sanitizer_FILE::__anon20
_state	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _state;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
_strchr	interception/interception_win.cpp	/^static char* _strchr(char* str, char c) {$/;"	f	namespace:__interception
_strlen	interception/interception_win.cpp	/^static size_t _strlen(const char *str) {$/;"	f	namespace:__interception
_ubuf	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned char _ubuf[3];$/;"	m	struct:__sanitizer::__sanitizer_FILE
_up	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned char *_up;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_ur	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _ur;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_w	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int _w;$/;"	m	struct:__sanitizer::__sanitizer_FILE
_write	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr (*_write)(void *, const void *, uptr);$/;"	m	struct:__sanitizer::__sanitizer_FILE
a	tsan/tsan_md5.cpp	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon81
a128	tsan/tsan_interface.h	/^__extension__ typedef __int128 a128;$/;"	t	namespace:__tsan
a16	tsan/tsan_interface.h	/^typedef unsigned short a16;$/;"	t	namespace:__tsan
a32	tsan/tsan_interface.h	/^typedef unsigned int       a32;$/;"	t	namespace:__tsan
a64	tsan/tsan_interface.h	/^typedef unsigned long long a64;$/;"	t	namespace:__tsan
a8	tsan/tsan_interface.h	/^typedef unsigned char      a8;$/;"	t	namespace:__tsan
absolute_pc	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^  uptr absolute_pc;$/;"	m	struct:__sanitizer::__anon64::__anon65
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
access_size	asan/asan_descriptions.h	/^  uptr access_size;$/;"	m	struct:__asan::GlobalAddressDescription
access_size	asan/asan_descriptions.h	/^  uptr access_size;$/;"	m	struct:__asan::StackAddressDescription
access_size	asan/asan_errors.h	/^  uptr access_size;$/;"	m	struct:__asan::ErrorGeneric
access_type	asan/asan_descriptions.h	/^  u32 access_type : 2;$/;"	m	struct:__asan::ChunkAccess
acq_rel	tsan/tsan_clock.cpp	/^void ThreadClock::acq_rel(ClockCache *c, SyncClock *dst) {$/;"	f	class:__tsan::ThreadClock
acquire	sanitizer_common/sanitizer_addrhashmap.h	/^void AddrHashMap<T, kSize>::acquire(Handle *h) {$/;"	f	class:__sanitizer::AddrHashMap
acquire	tsan/tsan_clock.cpp	/^void ThreadClock::acquire(ClockCache *c, SyncClock *src) {$/;"	f	class:__tsan::ThreadClock
acquire	ubsan/ubsan_value.h	/^  SourceLocation acquire() {$/;"	f	class:__ubsan::SourceLocation
acquire_my_map_info_list	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^acquire_my_map_info_list_func acquire_my_map_info_list;$/;"	v
acquire_my_map_info_list_func	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^typedef void *(*acquire_my_map_info_list_func)();$/;"	t
add	sanitizer_common/sanitizer_addrhashmap.h	/^    atomic_uintptr_t add;$/;"	m	struct:__sanitizer::AddrHashMap::Bucket
add	sanitizer_common/sanitizer_hash.h	/^  void add(u32 k) {$/;"	f	class:__sanitizer::MurMur2HashBuilder
addAddressRange	sanitizer_common/sanitizer_common.cpp	/^void LoadedModule::addAddressRange(uptr beg, uptr end, bool executable,$/;"	f	class:__sanitizer::LoadedModule
addEdge	sanitizer_common/sanitizer_bvgraph.h	/^  bool addEdge(uptr from, uptr to) {$/;"	f	class:__sanitizer::BVGraph
addEdges	sanitizer_common/sanitizer_bvgraph.h	/^  uptr addEdges(const BV &from, uptr to, uptr added_edges[],$/;"	f	class:__sanitizer::BVGraph
addEdges	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr addEdges(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk,$/;"	f	class:__sanitizer::DeadlockDetector
addLock	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool addLock(uptr lock_id, uptr current_epoch, u32 stk) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
addNoOverflow	ubsan/ubsan_diag.cpp	/^static inline uptr addNoOverflow(uptr LHS, uptr RHS) {$/;"	f
addcount	tsan/tsan_interface_ann.cpp	/^  atomic_uintptr_t addcount;$/;"	m	struct:__tsan::ExpectRace
addidx_	sanitizer_common/sanitizer_addrhashmap.h	/^    uptr                   addidx_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
addr	asan/asan_descriptions.h	/^      uptr addr;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon73
addr	asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::GlobalAddressDescription
addr	asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::HeapAddressDescription
addr	asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::ShadowAddressDescription
addr	asan/asan_descriptions.h	/^  uptr addr;$/;"	m	struct:__asan::StackAddressDescription
addr	hwasan/hwasan_globals.h	/^  uptr addr() const { return reinterpret_cast<uintptr_t>(this) + gv_relptr; }$/;"	f	struct:__hwasan::hwasan_global
addr	hwasan/hwasan_linux.cpp	/^  uptr addr;$/;"	m	struct:__hwasan::AccessInfo
addr	lsan/lsan_common.h	/^  uptr addr;$/;"	m	struct:__lsan::LeakedObject
addr	sanitizer_common/sanitizer_addrhashmap.h	/^    atomic_uintptr_t addr;$/;"	m	struct:__sanitizer::AddrHashMap::Cell
addr	sanitizer_common/sanitizer_common.h	/^  uptr addr;$/;"	m	struct:__sanitizer::SignalContext
addr	tsan/tsan_interface_ann.cpp	/^  uptr addr;$/;"	m	struct:__tsan::ExpectRace
addr	tsan/tsan_report.h	/^  uptr addr;$/;"	m	struct:__tsan::ReportMop
addr	tsan/tsan_report.h	/^  uptr addr;$/;"	m	struct:__tsan::ReportMutex
addr	tsan/tsan_symbolize.cpp	/^  uptr addr;$/;"	m	struct:__tsan::SymbolizedStackBuilder
addr	tsan/tsan_sync.h	/^  uptr addr;  \/\/ overwritten by DenseSlabAlloc freelist$/;"	m	struct:__tsan::SyncVar
addr0	tsan/tsan_rtl.h	/^  u64 ALWAYS_INLINE addr0() const { return (x_ >> kClkBits) & 7; }$/;"	f	class:__tsan::Shadow
addr1_description	asan/asan_errors.h	/^  AddressDescription addr1_description;$/;"	m	struct:__asan::ErrorInvalidPointerPair
addr1_description	asan/asan_errors.h	/^  AddressDescription addr1_description;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
addr2_description	asan/asan_errors.h	/^  AddressDescription addr2_description;$/;"	m	struct:__asan::ErrorInvalidPointerPair
addr2_description	asan/asan_errors.h	/^  AddressDescription addr2_description;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
addr2line_path_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  const char *addr2line_path_;$/;"	m	class:__sanitizer::final
addr2line_pool_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  InternalMmapVector<Addr2LineProcess*> addr2line_pool_;$/;"	m	class:__sanitizer::final
addr_	sanitizer_common/sanitizer_addrhashmap.h	/^    uptr                   addr_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
addr_description	asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
addr_description	asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorFreeNotMalloced
addr_description	asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorGeneric
addr_description	asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorMallocUsableSizeNotOwned
addr_description	asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
addr_description	asan/asan_errors.h	/^  AddressDescription addr_description;$/;"	m	struct:__asan::ErrorStringFunctionSizeOverflow
addr_description	asan/asan_errors.h	/^  HeapAddressDescription addr_description;$/;"	m	struct:__asan::ErrorDoubleFree
addr_description	asan/asan_errors.h	/^  HeapAddressDescription addr_description;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
addr_mask	sanitizer_common/sanitizer_procmaps_mac.cpp	/^  uptr addr_mask;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData
addr_max	tsan/tsan_rtl.h	/^  uptr addr_max;$/;"	m	struct:__tsan::RacyAddress
addr_min	tsan/tsan_rtl.h	/^  uptr addr_min;$/;"	m	struct:__tsan::RacyAddress
address	sanitizer_common/sanitizer_symbolizer.h	/^  uptr address;$/;"	m	struct:__sanitizer::AddressInfo
address_range	sanitizer_common/sanitizer_allocator_primary64.h	/^  ReservedAddressRange address_range;$/;"	m	class:SizeClassAllocator64
address_range_	sanitizer_common/sanitizer_allocator_secondary.h	/^  ReservedAddressRange address_range_;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
addrinfo	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
addrinfo	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
addrinfo	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
addrinfo	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(addrinfo);$/;"	v
af_inet	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer
af_inet	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer
af_inet	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer
af_inet	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  int af_inet = (int)AF_INET;$/;"	m	namespace:__sanitizer
af_inet6	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer
af_inet6	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer
af_inet6	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer
af_inet6	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  int af_inet6 = (int)AF_INET6;$/;"	m	namespace:__sanitizer
after_global_dtors	asan/asan_win_dynamic_runtime_thunk.cpp	/^__declspec(allocate(".CRT$XTY")) void* after_global_dtors = 0;$/;"	m	namespace:__anon71
after_multithreaded_fork	tsan/tsan_rtl.h	/^  bool after_multithreaded_fork;$/;"	m	struct:__tsan::Context
ai_addr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ai_addr;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_addrlen	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned ai_addrlen;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_canonname	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *ai_canonname;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_family	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_family;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_flags	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_flags;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_next	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_next	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_next	sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_next	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_addrinfo *ai_next;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo	typeref:struct:__sanitizer::__sanitizer_addrinfo::__sanitizer_addrinfo
ai_protocol	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_protocol	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_protocol	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_protocol	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_protocol;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
ai_socktype	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ai_socktype;$/;"	m	struct:__sanitizer::__sanitizer_addrinfo
aio_buf	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 aio_buf;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_buf	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr aio_buf;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_buf	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 aio_buf;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_data	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 aio_data;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_data	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 aio_data;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_fildes	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u32 aio_fildes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_fildes	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int aio_fildes;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_fildes	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u32 aio_fildes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_key_or_aio_reserved1	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u32 aio_key_or_aio_reserved1;  \/\/ Simply crazy.$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_key_or_aio_reserved1	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u32 aio_key_or_aio_reserved1;  \/\/ Simply crazy.$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_lio_opcode	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u16 aio_lio_opcode;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_lio_opcode	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int aio_lio_opcode;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_lio_opcode	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u16 aio_lio_opcode;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_nbytes	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 aio_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_nbytes	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr aio_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_nbytes	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 aio_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_offset	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  s64 aio_offset;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_offset	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 aio_offset;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_offset	sanitizer_common/sanitizer_platform_limits_posix.h	/^  s64 aio_offset;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reqprio	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  s16 aio_reqprio;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reqprio	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int aio_reqprio;$/;"	m	struct:__sanitizer::__sanitizer_aiocb
aio_reqprio	sanitizer_common/sanitizer_platform_limits_posix.h	/^  s16 aio_reqprio;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved1_or_aio_key	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u32 aio_reserved1_or_aio_key;  \/\/ Luckily, we don't need these.$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved1_or_aio_key	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u32 aio_reserved1_or_aio_key;  \/\/ Luckily, we don't need these.$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved2	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 aio_reserved2;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 aio_reserved2;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved3	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 aio_reserved3;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_reserved3	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 aio_reserved3;$/;"	m	struct:__sanitizer::__sanitizer_iocb
aio_sigevent	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_sigevent aio_sigevent;$/;"	m	struct:__sanitizer::__sanitizer_aiocb	typeref:struct:__sanitizer::__sanitizer_aiocb::__sanitizer_sigevent
align	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *align;$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
align	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *align;$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
align	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *align;$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
align_val_t	asan/asan_new_delete.cpp	/^enum class align_val_t: size_t {};$/;"	c	namespace:std
align_val_t	lsan/lsan_interceptors.cpp	/^  enum class align_val_t: size_t;$/;"	c	namespace:std
align_val_t	tsan/tsan_new_delete.cpp	/^enum class align_val_t: __sanitizer::uptr {};$/;"	c	namespace:std
alignment	asan/asan_errors.h	/^  uptr alignment;$/;"	m	struct:__asan::ErrorInvalidAlignedAllocAlignment
alignment	asan/asan_errors.h	/^  uptr alignment;$/;"	m	struct:__asan::ErrorInvalidAllocationAlignment
alignment	asan/asan_errors.h	/^  uptr alignment;$/;"	m	struct:__asan::ErrorInvalidPosixMemalignAlignment
alive_threads_	sanitizer_common/sanitizer_thread_registry.h	/^  uptr alive_threads_;  \/\/ Created or running.$/;"	m	class:__sanitizer::ThreadRegistry
all_locks_with_contexts_	sanitizer_common/sanitizer_deadlock_detector.h	/^  LockWithContext all_locks_with_contexts_[64];$/;"	m	class:__sanitizer::DeadlockDetectorTLS
alloc	sanitizer_common/sanitizer_persistent_allocator.h	/^inline void *PersistentAllocator::alloc(uptr size) {$/;"	f	class:__sanitizer::PersistentAllocator
alloc_asan_context	asan/asan_mac.cpp	/^asan_block_context_t *alloc_asan_context(void *ctxt, dispatch_function_t func,$/;"	f
alloc_cache	tsan/tsan_rtl.h	/^  AllocatorCache alloc_cache;$/;"	m	struct:__tsan::Processor
alloc_context_id	asan/asan_allocator.cpp	/^  atomic_uint64_t alloc_context_id;$/;"	m	class:__asan::ChunkHeader
alloc_context_id	hwasan/hwasan_allocator.h	/^  u32  alloc_context_id;$/;"	m	struct:__hwasan::HeapAllocationRecord
alloc_context_id	hwasan/hwasan_allocator.h	/^  u32 alloc_context_id;$/;"	m	struct:__hwasan::Metadata
alloc_dealloc_mismatch	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  u8 alloc_dealloc_mismatch;$/;"	m	struct:__asan::AllocatorOptions
alloc_dealloc_mismatch	asan/asan_allocator.cpp	/^  atomic_uint8_t alloc_dealloc_mismatch;$/;"	m	struct:__asan::Allocator
alloc_dealloc_mismatch	asan/asan_allocator.h	/^  u8 alloc_dealloc_mismatch;$/;"	m	struct:__asan::AllocatorOptions
alloc_lsan_context	lsan/lsan_mac.cpp	/^extern "C" lsan_block_context_t *alloc_lsan_context(void *ctxt,$/;"	f
alloc_memory_for_dlsym	asan/asan_malloc_linux.cpp	/^static uptr alloc_memory_for_dlsym[kDlsymAllocPoolSize];$/;"	v
alloc_memory_for_dlsym	hwasan/hwasan_interceptors.cpp	/^static uptr alloc_memory_for_dlsym[kDlsymAllocPoolSize];$/;"	v
alloc_stack_id	asan/asan_descriptions.h	/^  u32 alloc_stack_id;$/;"	m	struct:__asan::HeapAddressDescription
alloc_tid	asan/asan_descriptions.h	/^  uptr alloc_tid;$/;"	m	struct:__asan::HeapAddressDescription
alloc_type	asan/asan_descriptions.h	/^  u32 alloc_type : 2;$/;"	m	struct:__asan::ChunkAccess
alloc_type	asan/asan_errors.h	/^  AllocType alloc_type, dealloc_type;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
allocateId	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^u32 DD::allocateId(DDCallback *cb) {$/;"	f	class:__sanitizer::DD
allocated	asan/asan_allocator.cpp	/^bool LsanMetadata::allocated() const {$/;"	f	class:__lsan::LsanMetadata
allocated	lsan/lsan_allocator.cpp	/^bool LsanMetadata::allocated() const {$/;"	f	class:__lsan::LsanMetadata
allocated	lsan/lsan_allocator.h	/^  u8 allocated : 8;  \/\/ Must be first.$/;"	m	struct:__lsan::ChunkMetadata
allocated	sanitizer_common/sanitizer_common.h	/^  uptr allocated;$/;"	m	struct:__sanitizer::StackDepotStats
allocated	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^  uptr size, allocated;$/;"	m	struct:__sanitizer::__anon11::CplusV3DemangleData
allocated_current_	sanitizer_common/sanitizer_common.h	/^  char *allocated_current_;$/;"	m	class:__sanitizer::LowLevelAllocator
allocated_end_	sanitizer_common/sanitizer_common.h	/^  char *allocated_end_;$/;"	m	class:__sanitizer::LowLevelAllocator
allocated_for_dlsym	asan/asan_malloc_linux.cpp	/^static uptr allocated_for_dlsym;$/;"	v
allocated_for_dlsym	hwasan/hwasan_interceptors.cpp	/^static uptr allocated_for_dlsym;$/;"	v
allocated_size	interception/interception_win.cpp	/^  uptr allocated_size;$/;"	m	struct:__interception::TrampolineMemoryRegion
allocations_	asan/asan_memory_profile.cpp	/^  InternalMmapVector<AllocationSite> allocations_;$/;"	m	class:__asan::HeapProfile
allocator	asan/asan_allocator.cpp	/^  AsanAllocator allocator;$/;"	m	struct:__asan::Allocator
allocator	hwasan/hwasan_allocator.cpp	/^static Allocator allocator;$/;"	m	namespace:__hwasan
allocator	lsan/lsan_allocator.cpp	/^static Allocator allocator;$/;"	m	namespace:__lsan
allocator	sanitizer_common/sanitizer_allocator_primary64.h	/^    const ThisT& allocator;$/;"	m	class:SizeClassAllocator64::MemoryMapper
allocator	tsan/tsan_mman.cpp	/^Allocator *allocator() {$/;"	f	namespace:__tsan
allocator_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  LowLevelAllocator *allocator_;$/;"	m	class:__sanitizer::final
allocator_cache	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  AllocatorCache allocator_cache;$/;"	m	struct:__asan::AsanThreadLocalMallocStorage
allocator_cache	asan/asan_allocator.h	/^  AllocatorCache allocator_cache;$/;"	m	struct:__asan::AsanThreadLocalMallocStorage
allocator_cache	hwasan/hwasan_thread.h	/^  AllocatorCache *allocator_cache() { return &allocator_cache_; }$/;"	f	class:__hwasan::Thread
allocator_cache	lsan/lsan_linux.cpp	/^static THREADLOCAL AllocatorCache allocator_cache;$/;"	m	namespace:__lsan
allocator_cache_	hwasan/hwasan_thread.h	/^  AllocatorCache allocator_cache_;$/;"	m	class:__hwasan::Thread
allocator_for_env	sanitizer_common/sanitizer_mac.cpp	/^LowLevelAllocator allocator_for_env;$/;"	m	namespace:__sanitizer
allocator_for_globals	asan/asan_globals.cpp	/^static LowLevelAllocator allocator_for_globals;$/;"	m	namespace:__asan
allocator_for_thread_context	asan/asan_thread.cpp	/^static LowLevelAllocator allocator_for_thread_context;$/;"	m	namespace:__asan
allocator_may_return_null	sanitizer_common/sanitizer_allocator.cpp	/^static atomic_uint8_t allocator_may_return_null = {0};$/;"	m	namespace:__sanitizer
allocator_options	asan/asan_activation.cpp	/^  AllocatorOptions allocator_options;$/;"	m	struct:__asan::AsanDeactivatedFlags
allocator_out_of_memory	sanitizer_common/sanitizer_allocator.cpp	/^static atomic_uint8_t allocator_out_of_memory = {0};$/;"	m	namespace:__sanitizer
allocsync	tsan/tsan_fd.cpp	/^static FdSync *allocsync(ThreadState *thr, uptr pc) {$/;"	f	namespace:__tsan
android_api_level	sanitizer_common/sanitizer_linux.cpp	/^static atomic_uint32_t android_api_level;$/;"	m	namespace:__sanitizer
android_log_initialized	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static atomic_uint8_t android_log_initialized;$/;"	m	namespace:__sanitizer
announced	asan/asan_thread.h	/^  bool announced;$/;"	m	class:__asan::final
announced_	hwasan/hwasan_thread.h	/^  bool announced_;$/;"	m	class:__hwasan::Thread
ansi_	sanitizer_common/sanitizer_report_decorator.h	/^  bool ansi_;$/;"	m	class:__sanitizer::SanitizerCommonDecorator
ap_control	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^typedef struct ap_control {$/;"	s
ap_ctl_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} ap_ctl_t;$/;"	t	typeref:struct:ap_control
apc_arg	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long apc_arg;$/;"	m	struct:ap_control
apc_cmd	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long apc_cmd;$/;"	m	struct:ap_control
apc_config	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char apc_config[16];$/;"	m	struct:ap_control
apc_data	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *apc_data;$/;"	m	struct:ap_control
apc_dsize	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  size_t apc_dsize;$/;"	m	struct:ap_control
apc_label	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char apc_label[16];$/;"	m	struct:ap_control
apc_p	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned char apc_p;$/;"	m	struct:ap_control
append	sanitizer_common/sanitizer_printf.cpp	/^void InternalScopedString::append(const char *format, ...) {$/;"	f	class:__sanitizer::InternalScopedString
append_back	sanitizer_common/sanitizer_list.h	/^  void append_back(IntrusiveList<Item> *l) {$/;"	f	struct:__sanitizer::IntrusiveList
append_block	tsan/tsan_clock.cpp	/^ALWAYS_INLINE void SyncClock::append_block(u32 idx) {$/;"	f	class:__tsan::SyncClock
append_front	sanitizer_common/sanitizer_list.h	/^  void append_front(IntrusiveList<Item> *l) {$/;"	f	struct:__sanitizer::IntrusiveList
arch	sanitizer_common/sanitizer_common.h	/^  ModuleArch arch() const { return arch_; }$/;"	f	class:__sanitizer::LoadedModule
arch	sanitizer_common/sanitizer_procmaps.h	/^  ModuleArch arch;$/;"	m	class:__sanitizer::MemoryMappedSegment
arch_	sanitizer_common/sanitizer_common.h	/^  ModuleArch arch_;$/;"	m	class:__sanitizer::LoadedModule
arg	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  TracerThreadArgument *arg;$/;"	m	class:__sanitizer::ThreadSuspender
arg	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  TracerThreadArgument *arg;$/;"	m	class:__sanitizer::ThreadSuspender
arg	tsan/tsan_interceptors_posix.cpp	/^  void *arg;$/;"	m	struct:__tsan::AtExitCtx
arg_	asan/asan_thread.h	/^  void *arg_;$/;"	m	class:__asan::AsanThread
args_type	sanitizer_common/sanitizer_stackdepot.cpp	/^  typedef StackTrace args_type;$/;"	t	struct:__sanitizer::StackDepotNode
args_type	sanitizer_common/sanitizer_stackdepotbase.h	/^  typedef typename Node::args_type args_type;$/;"	t	class:__sanitizer::StackDepotBase
argument	lsan/lsan_common_linux.cpp	/^  void *argument;$/;"	m	struct:__lsan::DoStopTheWorldParam
argument	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  void *argument;$/;"	m	struct:__sanitizer::RunThreadArgs
armed	tsan/tsan_interceptors_posix.cpp	/^  bool armed;$/;"	m	struct:__tsan::SignalDesc
array_	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  uptr *array_ = nullptr;$/;"	m	class:__sancov::__anon45::final
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
asanThreadRegistry	asan/asan_thread.cpp	/^ThreadRegistry &asanThreadRegistry() {$/;"	f	namespace:__asan
asan_aligned_alloc	asan/asan_allocator.cpp	/^void *asan_aligned_alloc(uptr alignment, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_atexit	asan/asan_rtl.cpp	/^static void asan_atexit() {$/;"	f	namespace:__asan
asan_block_context_t	asan/asan_mac.cpp	/^} asan_block_context_t;$/;"	t	namespace:__asan	typeref:struct:__asan::__anon74
asan_calloc	asan/asan_allocator.cpp	/^void *asan_calloc(uptr nmemb, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_deactivated_flags	asan/asan_activation.cpp	/^} asan_deactivated_flags;$/;"	m	namespace:__asan	typeref:struct:__asan::AsanDeactivatedFlags
asan_delete	asan/asan_allocator.cpp	/^void asan_delete(void *ptr, uptr size, uptr alignment,$/;"	f	namespace:__asan
asan_dispatch_call_block_and_release	asan/asan_mac.cpp	/^void asan_dispatch_call_block_and_release(void *block) {$/;"	f	namespace:__asan
asan_dll_thunk_init	asan/asan_win_dll_thunk.cpp	/^static int asan_dll_thunk_init() {$/;"	f
asan_flags_dont_use_directly	asan/asan_flags.cpp	/^Flags asan_flags_dont_use_directly;  \/\/ use via flags().$/;"	m	namespace:__asan
asan_free	asan/asan_allocator.cpp	/^void asan_free(void *ptr, BufferedStackTrace *stack, AllocType alloc_type) {$/;"	f	namespace:__asan
asan_init_is_running	asan/asan_rtl.cpp	/^bool asan_init_is_running;$/;"	m	namespace:__asan
asan_inited	asan/asan_rtl.cpp	/^int asan_inited;$/;"	m	namespace:__asan
asan_initializer	asan/asan_rtl.cpp	/^static AsanInitializer asan_initializer;$/;"	m	namespace:__asan
asan_is_deactivated	asan/asan_activation.cpp	/^static bool asan_is_deactivated;$/;"	m	namespace:__asan
asan_malloc	asan/asan_allocator.cpp	/^void *asan_malloc(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_malloc_dispatch_k	asan/asan_malloc_linux.cpp	/^ALIGNED(32) const MallocDebugK asan_malloc_dispatch_k = {$/;"	v
asan_malloc_dispatch_l	asan/asan_malloc_linux.cpp	/^ALIGNED(32) const MallocDebugL asan_malloc_dispatch_l = {$/;"	v
asan_malloc_usable_size	asan/asan_allocator.cpp	/^uptr asan_malloc_usable_size(const void *ptr, uptr pc, uptr bp) {$/;"	f	namespace:__asan
asan_memalign	asan/asan_allocator.cpp	/^void *asan_memalign(uptr alignment, uptr size, BufferedStackTrace *stack,$/;"	f	namespace:__asan
asan_mz_force_lock	asan/asan_allocator.cpp	/^void asan_mz_force_lock() {$/;"	f	namespace:__asan
asan_mz_force_unlock	asan/asan_allocator.cpp	/^void asan_mz_force_unlock() {$/;"	f	namespace:__asan
asan_mz_size	asan/asan_allocator.cpp	/^uptr asan_mz_size(const void *ptr) {$/;"	f	namespace:__asan
asan_posix_memalign	asan/asan_allocator.cpp	/^int asan_posix_memalign(void **memptr, uptr alignment, uptr size,$/;"	f	namespace:__asan
asan_pvalloc	asan/asan_allocator.cpp	/^void *asan_pvalloc(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_realloc	asan/asan_allocator.cpp	/^void *asan_realloc(void *p, uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
asan_reallocarray	asan/asan_allocator.cpp	/^void *asan_reallocarray(void *p, uptr nmemb, uptr size,$/;"	f	namespace:__asan
asan_register_worker_thread	asan/asan_mac.cpp	/^void asan_register_worker_thread(int parent_tid, StackTrace *stack) {$/;"	f	namespace:__asan
asan_rt_version_t	asan/asan_linux.cpp	/^} asan_rt_version_t;$/;"	t	typeref:enum:__anon72
asan_thread_exit	asan/asan_win.cpp	/^static void NTAPI asan_thread_exit(void *module, DWORD reason, void *reserved) {$/;"	f	namespace:__asan
asan_thread_init	asan/asan_win.cpp	/^static void NTAPI asan_thread_init(void *module, DWORD reason, void *reserved) {$/;"	f	namespace:__asan
asan_thread_init	asan/asan_win_dll_thunk.cpp	/^static void WINAPI asan_thread_init(void *mod, unsigned long reason,$/;"	f
asan_thread_init	asan/asan_win_dynamic_runtime_thunk.cpp	/^static void NTAPI asan_thread_init(void *mod, unsigned long reason,$/;"	f
asan_thread_registry	asan/asan_thread.cpp	/^static ThreadRegistry *asan_thread_registry;$/;"	m	namespace:__asan
asan_thread_start	asan/asan_interceptors.cpp	/^static thread_return_t THREAD_CALLING_CONV asan_thread_start(void *arg) {$/;"	f
asan_thread_start	asan/asan_win.cpp	/^static thread_return_t THREAD_CALLING_CONV asan_thread_start(void *arg) {$/;"	f
asan_valloc	asan/asan_allocator.cpp	/^void *asan_valloc(uptr size, BufferedStackTrace *stack) {$/;"	f	namespace:__asan
at_exit_wrapper	tsan/tsan_interceptors_posix.cpp	/^static void at_exit_wrapper() {$/;"	f
at_scope_exit	sanitizer_common/sanitizer_common.h	/^RunOnDestruction<Fn> at_scope_exit(Fn fn) {$/;"	f	namespace:__sanitizer
atexit_functions	sanitizer_common/sanitizer_win.cpp	/^InternalMmapVectorNoCtor<void (*)(void)> atexit_functions;$/;"	m	namespace:__sanitizer
atexit_mu	tsan/tsan_interceptors_posix.cpp	/^  BlockingMutex atexit_mu;$/;"	m	struct:__tsan::InterceptorContext
atoi	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(atoi);$/;"	v
atol	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(atol);$/;"	v
atomic	tsan/tsan_report.h	/^  bool atomic;$/;"	m	struct:__tsan::ReportMop
atomic_compare_exchange_strong	sanitizer_common/sanitizer_atomic_clang.h	/^inline bool atomic_compare_exchange_strong(volatile T *a, typename T::Type *cmp,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	sanitizer_common/sanitizer_atomic_clang_mips.h	/^inline bool atomic_compare_exchange_strong(volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	sanitizer_common/sanitizer_atomic_msvc.h	/^inline bool atomic_compare_exchange_strong(volatile atomic_uint16_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	sanitizer_common/sanitizer_atomic_msvc.h	/^inline bool atomic_compare_exchange_strong(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	sanitizer_common/sanitizer_atomic_msvc.h	/^inline bool atomic_compare_exchange_strong(volatile atomic_uint64_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	sanitizer_common/sanitizer_atomic_msvc.h	/^inline bool atomic_compare_exchange_strong(volatile atomic_uint8_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_strong	sanitizer_common/sanitizer_atomic_msvc.h	/^inline bool atomic_compare_exchange_strong(volatile atomic_uintptr_t *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_weak	sanitizer_common/sanitizer_atomic_clang.h	/^inline bool atomic_compare_exchange_weak(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_compare_exchange_weak	sanitizer_common/sanitizer_atomic_msvc.h	/^inline bool atomic_compare_exchange_weak(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_exchange	sanitizer_common/sanitizer_atomic_clang.h	/^inline typename T::Type atomic_exchange(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_exchange	sanitizer_common/sanitizer_atomic_msvc.h	/^inline u16 atomic_exchange(volatile atomic_uint16_t *a,$/;"	f	namespace:__sanitizer
atomic_exchange	sanitizer_common/sanitizer_atomic_msvc.h	/^inline u32 atomic_exchange(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_exchange	sanitizer_common/sanitizer_atomic_msvc.h	/^inline u8 atomic_exchange(volatile atomic_uint8_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_add	sanitizer_common/sanitizer_atomic_clang.h	/^inline typename T::Type atomic_fetch_add(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_fetch_add	sanitizer_common/sanitizer_atomic_clang_mips.h	/^inline atomic_uint64_t::Type atomic_fetch_add(volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_fetch_add	sanitizer_common/sanitizer_atomic_msvc.h	/^inline u32 atomic_fetch_add(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_add	sanitizer_common/sanitizer_atomic_msvc.h	/^inline uptr atomic_fetch_add(volatile atomic_uintptr_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	sanitizer_common/sanitizer_atomic_clang.h	/^inline typename T::Type atomic_fetch_sub(volatile T *a,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	sanitizer_common/sanitizer_atomic_clang_mips.h	/^inline atomic_uint64_t::Type atomic_fetch_sub(volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	sanitizer_common/sanitizer_atomic_msvc.h	/^inline u32 atomic_fetch_sub(volatile atomic_uint32_t *a,$/;"	f	namespace:__sanitizer
atomic_fetch_sub	sanitizer_common/sanitizer_atomic_msvc.h	/^inline uptr atomic_fetch_sub(volatile atomic_uintptr_t *a,$/;"	f	namespace:__sanitizer
atomic_load	sanitizer_common/sanitizer_atomic_clang_mips.h	/^inline atomic_uint64_t::Type atomic_load(const volatile atomic_uint64_t *ptr,$/;"	f	namespace:__sanitizer
atomic_load	sanitizer_common/sanitizer_atomic_clang_other.h	/^inline typename T::Type atomic_load($/;"	f	namespace:__sanitizer
atomic_load	sanitizer_common/sanitizer_atomic_clang_x86.h	/^inline typename T::Type atomic_load($/;"	f	namespace:__sanitizer
atomic_load	sanitizer_common/sanitizer_atomic_msvc.h	/^inline typename T::Type atomic_load($/;"	f	namespace:__sanitizer
atomic_load_relaxed	sanitizer_common/sanitizer_atomic.h	/^inline typename T::Type atomic_load_relaxed(const volatile T *a) {$/;"	f	namespace:__sanitizer
atomic_signal_fence	sanitizer_common/sanitizer_atomic_clang.h	/^inline void atomic_signal_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_signal_fence	sanitizer_common/sanitizer_atomic_msvc.h	/^inline void atomic_signal_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_sint32_t	sanitizer_common/sanitizer_atomic.h	/^struct atomic_sint32_t {$/;"	s	namespace:__sanitizer
atomic_store	sanitizer_common/sanitizer_atomic_clang_mips.h	/^inline void atomic_store(volatile atomic_uint64_t *ptr, atomic_uint64_t::Type v,$/;"	f	namespace:__sanitizer
atomic_store	sanitizer_common/sanitizer_atomic_clang_other.h	/^inline void atomic_store(volatile T *a, typename T::Type v, memory_order mo) {$/;"	f	namespace:__sanitizer
atomic_store	sanitizer_common/sanitizer_atomic_clang_x86.h	/^inline void atomic_store(volatile T *a, typename T::Type v, memory_order mo) {$/;"	f	namespace:__sanitizer
atomic_store	sanitizer_common/sanitizer_atomic_msvc.h	/^inline void atomic_store(volatile T *a, typename T::Type v, memory_order mo) {$/;"	f	namespace:__sanitizer
atomic_store_relaxed	sanitizer_common/sanitizer_atomic.h	/^inline void atomic_store_relaxed(volatile T *a, typename T::Type v) {$/;"	f	namespace:__sanitizer
atomic_thread_fence	sanitizer_common/sanitizer_atomic_clang.h	/^inline void atomic_thread_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_thread_fence	sanitizer_common/sanitizer_atomic_msvc.h	/^inline void atomic_thread_fence(memory_order) {$/;"	f	namespace:__sanitizer
atomic_uint16_t	sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint16_t {$/;"	s	namespace:__sanitizer
atomic_uint32_t	sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint32_t {$/;"	s	namespace:__sanitizer
atomic_uint64_t	sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint64_t {$/;"	s	namespace:__sanitizer
atomic_uint8_t	sanitizer_common/sanitizer_atomic.h	/^struct atomic_uint8_t {$/;"	s	namespace:__sanitizer
atomic_uintptr_t	sanitizer_common/sanitizer_atomic.h	/^struct atomic_uintptr_t {$/;"	s	namespace:__sanitizer
auth_info	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int auth_info : 1;$/;"	m	struct:__anon31::__anon32
auth_info	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  iscsi_auth_info_t auth_info;$/;"	m	struct:__anon31
auth_number	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned int auth_number : 4;$/;"	m	struct:__anon30
auth_type	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  iscsi_auth_types_t auth_type[4];$/;"	m	struct:__anon30
available_nodes_	sanitizer_common/sanitizer_deadlock_detector.h	/^  BV available_nodes_;$/;"	m	class:__sanitizer::DeadlockDetector
b	tsan/tsan_md5.cpp	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon81
back	sanitizer_common/sanitizer_common.h	/^  T &back() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
back	sanitizer_common/sanitizer_list.h	/^  Item *back() { return last_; }$/;"	f	struct:__sanitizer::IntrusiveList
back	sanitizer_common/sanitizer_list.h	/^  const Item *back() const { return last_; }$/;"	f	struct:__sanitizer::IntrusiveList
background_thread	tsan/tsan_rtl.h	/^  void *background_thread;$/;"	m	struct:__tsan::Context
backtrace_alloc	libbacktrace/backtrace-rename.h	2;"	d
backtrace_close	libbacktrace/backtrace-rename.h	3;"	d
backtrace_create_state	libbacktrace/backtrace-rename.h	4;"	d
backtrace_dwarf_add	libbacktrace/backtrace-rename.h	5;"	d
backtrace_frame_t	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^} backtrace_frame_t;$/;"	t	namespace:__sanitizer::__anon64	typeref:struct:__sanitizer::__anon64::__anon65
backtrace_free	libbacktrace/backtrace-rename.h	6;"	d
backtrace_get_view	libbacktrace/backtrace-rename.h	7;"	d
backtrace_initialize	libbacktrace/backtrace-rename.h	8;"	d
backtrace_open	libbacktrace/backtrace-rename.h	9;"	d
backtrace_pcinfo	libbacktrace/backtrace-rename.h	10;"	d
backtrace_qsort	libbacktrace/backtrace-rename.h	11;"	d
backtrace_release_view	libbacktrace/backtrace-rename.h	12;"	d
backtrace_syminfo	libbacktrace/backtrace-rename.h	13;"	d
backtrace_syminfo_to_full_callback	libbacktrace/backtrace-rename.h	19;"	d
backtrace_syminfo_to_full_error_callback	libbacktrace/backtrace-rename.h	20;"	d
backtrace_uncompress_lzma	libbacktrace/backtrace-rename.h	14;"	d
backtrace_uncompress_zdebug	libbacktrace/backtrace-rename.h	15;"	d
backtrace_vector_finish	libbacktrace/backtrace-rename.h	16;"	d
backtrace_vector_grow	libbacktrace/backtrace-rename.h	17;"	d
backtrace_vector_release	libbacktrace/backtrace-rename.h	18;"	d
bad_addr	asan/asan_descriptions.h	/^  uptr bad_addr;$/;"	m	struct:__asan::ChunkAccess
base	hwasan/hwasan_globals.cpp	/^ArrayRef<const hwasan_global> HwasanGlobalsFor(ElfW(Addr) base,$/;"	m	namespace:__hwasan
base	hwasan/hwasan_globals.cpp	/^static void CheckCodeModel(ElfW(Addr) base, const ElfW(Phdr) * phdr,$/;"	m	namespace:__hwasan
base	hwasan/hwasan_globals.h	/^ArrayRef<const hwasan_global> HwasanGlobalsFor(ElfW(Addr) base,$/;"	m	namespace:__hwasan
base	sanitizer_common/sanitizer_common.h	/^  void *base() const { return base_; }$/;"	f	class:__sanitizer::ReservedAddressRange
base_	sanitizer_common/sanitizer_common.h	/^  void* base_;$/;"	m	class:__sanitizer::ReservedAddressRange
base_address	sanitizer_common/sanitizer_common.h	/^  uptr base_address() const { return base_address_; }$/;"	f	class:__sanitizer::LoadedModule
base_address	sanitizer_common/sanitizer_win.cpp	/^  uptr base_address;$/;"	m	struct:__sanitizer::__anon43::ModuleInfo
base_address_	sanitizer_common/sanitizer_common.h	/^  uptr base_address_;$/;"	m	class:__sanitizer::LoadedModule
base_count	ubsan/ubsan_type_hash_itanium.cpp	/^  unsigned int base_count;$/;"	m	class:__cxxabiv1::__vmi_class_type_info
base_info	ubsan/ubsan_type_hash_itanium.cpp	/^  __base_class_type_info base_info[1];$/;"	m	class:__cxxabiv1::__vmi_class_type_info
base_virt_addr	sanitizer_common/sanitizer_procmaps_mac.cpp	/^  uptr base_virt_addr;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData
batch	sanitizer_common/sanitizer_allocator_local_cache.h	/^    void *batch[2 * TransferBatch::kMaxNumCached];$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
batch	sanitizer_common/sanitizer_quarantine.h	/^  void *batch[kSize];$/;"	m	struct:__sanitizer::QuarantineBatch
batch_	sanitizer_common/sanitizer_allocator_primary32.h	/^    void *batch_[kMaxNumCached];$/;"	m	struct:SizeClassAllocator32::TransferBatch
batch_class_id	sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr batch_class_id;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
before_global_dtors	asan/asan_win_dynamic_runtime_thunk.cpp	/^__declspec(allocate(".CRT$XTW")) void* before_global_dtors = 0;$/;"	m	namespace:__anon71
beg	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    uptr beg;                \/\/ The address of the global.$/;"	m	struct:__asan_global
beg	asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
beg	asan/asan_interface_internal.h	/^    uptr beg;                \/\/ The address of the global.$/;"	m	struct:__asan_global
beg	asan/asan_report.h	/^  uptr beg;$/;"	m	struct:__asan::StackVarDescr
beg	sanitizer_common/sanitizer_common.h	/^    uptr beg;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
beg	sanitizer_common/sanitizer_tls_get_addr.h	/^    uptr beg, size;$/;"	m	struct:__sanitizer::DTLS::DTV
begin	lsan/lsan_common.h	/^  uptr begin;$/;"	m	struct:__lsan::RootRegion
begin	sanitizer_common/sanitizer_common.h	/^  LoadedModule *begin() { return modules_.begin(); }$/;"	f	class:__sanitizer::ListOfModules
begin	sanitizer_common/sanitizer_common.h	/^  T *begin() { return begin_; }$/;"	f	class:__sanitizer::ArrayRef
begin	sanitizer_common/sanitizer_common.h	/^  T *begin() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
begin	sanitizer_common/sanitizer_common.h	/^  const LoadedModule *begin() const { return modules_.begin(); }$/;"	f	class:__sanitizer::ListOfModules
begin	sanitizer_common/sanitizer_common.h	/^  const T *begin() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
begin	sanitizer_common/sanitizer_libignore.h	/^    uptr begin;$/;"	m	struct:__sanitizer::LibIgnore::LibCodeRange
begin	sanitizer_common/sanitizer_list.h	/^  ConstIterator begin() const { return ConstIterator(first_); }$/;"	f	struct:__sanitizer::IntrusiveList
begin	sanitizer_common/sanitizer_list.h	/^  Iterator begin() { return Iterator(first_); }$/;"	f	struct:__sanitizer::IntrusiveList
begin_	sanitizer_common/sanitizer_common.h	/^  T *begin_ = nullptr;$/;"	m	class:__sanitizer::ArrayRef
begin_	sanitizer_common/sanitizer_vector.h	/^  T *begin_;$/;"	m	class:__sanitizer::Vector
begin_relptr	hwasan/hwasan_globals.cpp	/^  s32 begin_relptr;$/;"	m	struct:__hwasan::hwasan_global_note
benign	tsan/tsan_interface_ann.cpp	/^  ExpectRace benign;$/;"	m	struct:__tsan::DynamicAnnContext
binary_name_cache_str	sanitizer_common/sanitizer_common.cpp	/^static char binary_name_cache_str[kMaxPathLength];$/;"	m	namespace:__sanitizer
bit_offset_mask	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 bit_offset_mask;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
bits_	sanitizer_common/sanitizer_bitvector.h	/^  basic_int_t bits_;$/;"	m	class:__sanitizer::BasicBitVector
block	asan/asan_mac.cpp	/^  void *block;$/;"	m	struct:__asan::__anon74
block	lsan/lsan_mac.cpp	/^  void *block;$/;"	m	struct:__lsan::__anon86
block	tsan/tsan_md5.cpp	/^  MD5_u32plus block[16];$/;"	m	struct:__tsan::__anon81
block_	hwasan/hwasan_allocator.h	/^  uptr block_;$/;"	m	class:__hwasan::HwasanChunkView
block_cache	tsan/tsan_rtl.h	/^  DenseSlabAllocCache block_cache;$/;"	m	struct:__tsan::Processor
block_context_t	tsan/tsan_interceptors_libdispatch.cpp	/^} block_context_t;$/;"	t	namespace:__tsan	typeref:struct:__tsan::__anon77
blocked_sigset	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static __sanitizer_sigset_t blocked_sigset;$/;"	m	namespace:__sanitizer
blocked_sigset	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static __sanitizer_sigset_t blocked_sigset;$/;"	m	namespace:__sanitizer
blocks_in_use	asan/asan_stats.h	/^  uptr blocks_in_use;$/;"	m	struct:__asan::AsanMallocStats
body	tsan/tsan_md5.cpp	/^static const void *body(MD5_CTX *ctx, const void *data, ulong_t size) {$/;"	f	namespace:__tsan
bogusfd	tsan/tsan_fd.cpp	/^static bool bogusfd(int fd) {$/;"	f	namespace:__tsan
bottom	asan/asan_thread.h	/^    uptr bottom;$/;"	m	struct:__asan::AsanThread::StackBounds
bp	asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorGeneric
bp	asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorInvalidPointerPair
bp	sanitizer_common/sanitizer_common.h	/^  uptr bp;$/;"	m	struct:__sanitizer::SignalContext
bp	ubsan/ubsan_diag.h	/^  uptr bp;$/;"	m	struct:__ubsan::ReportOptions
bucket_	sanitizer_common/sanitizer_addrhashmap.h	/^    Bucket                *bucket_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
buf	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *buf;$/;"	m	struct:__sanitizer::__sanitizer_nvlist_ref_t
buf	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^  char *buf;$/;"	m	struct:__sanitizer::__anon11::CplusV3DemangleData
buf_	sanitizer_common/sanitizer_flag_parser.h	/^  const char *buf_;$/;"	m	class:__sanitizer::FlagParser
buffer	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64* buffer;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
buffer	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *buffer;$/;"	m	struct:urio_command
buffer	tsan/tsan_md5.cpp	/^  unsigned char buffer[64];$/;"	m	struct:__tsan::__anon81
buffer_	sanitizer_common/sanitizer_linux.h	/^  InternalMmapVector<char> buffer_;$/;"	m	class:__sanitizer::ThreadLister
buffer_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  char buffer_[kBufferSize];$/;"	m	class:__sanitizer::SymbolizerProcess
buffer_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  char buffer_[kBufferSize];$/;"	m	class:__sanitizer::final
buffer_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  char buffer_[kBufferSize];$/;"	m	class:__sanitizer::final
buffer_size	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 buffer_size;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
bug_descr	asan/asan_errors.h	/^  const char *bug_descr;$/;"	m	struct:__asan::ErrorGeneric
build_consistency	tsan/tsan_defs.h	/^static inline void USED build_consistency() {$/;"	f	namespace:__tsan
build_consistency_debug	tsan/tsan_rtl.cpp	/^void build_consistency_debug() {}$/;"	f	namespace:__tsan
build_consistency_nostats	tsan/tsan_rtl.cpp	/^void build_consistency_nostats() {}$/;"	f	namespace:__tsan
build_consistency_release	tsan/tsan_rtl.cpp	/^void build_consistency_release() {}$/;"	f	namespace:__tsan
build_consistency_stats	tsan/tsan_rtl.cpp	/^void build_consistency_stats() {}$/;"	f	namespace:__tsan
bv_	sanitizer_common/sanitizer_bitvector.h	/^    BasicBitVector bv_;$/;"	m	class:__sanitizer::BasicBitVector::Iterator
bv_	sanitizer_common/sanitizer_bitvector.h	/^    const TwoLevelBitVector &bv_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
bv_	sanitizer_common/sanitizer_deadlock_detector.h	/^  BV bv_;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
by_size_log	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
c	tsan/tsan_md5.cpp	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon81
c_str	asan/asan_descriptions.h	/^  const char *c_str() const { return &name[0]; }$/;"	f	class:__asan::AsanThreadIdAndName
cache	lsan/lsan_common_mac.cpp	/^  AllocatorCache cache;$/;"	m	struct:__lsan::__anon85
cache	tsan/tsan_dense_alloc.h	/^  IndexT cache[kSize];$/;"	m	class:__tsan::DenseSlabAllocCache
cache_	asan/asan_allocator.cpp	/^  AllocatorCache* const cache_;$/;"	m	struct:__asan::QuarantineCallback
cache_	sanitizer_common/sanitizer_quarantine.h	/^  Cache cache_;$/;"	m	class:__sanitizer::Quarantine
cache_begin	lsan/lsan_fuchsia.cpp	/^  uptr cache_begin, cache_end;$/;"	m	struct:__lsan::OnStartedArgs
cache_begin	lsan/lsan_posix.cpp	/^  uptr cache_begin;$/;"	m	struct:__lsan::OnStartedArgs
cache_begin	lsan/lsan_thread.h	/^  uptr cache_begin() { return cache_begin_; }$/;"	f	class:__lsan::ThreadContextLsanBase
cache_begin_	lsan/lsan_thread.h	/^  uptr cache_begin_ = 0;$/;"	m	class:__lsan::ThreadContextLsanBase
cache_end	lsan/lsan_fuchsia.cpp	/^  uptr cache_begin, cache_end;$/;"	m	struct:__lsan::OnStartedArgs
cache_end	lsan/lsan_posix.cpp	/^  uptr cache_end;$/;"	m	struct:__lsan::OnStartedArgs
cache_end	lsan/lsan_thread.h	/^  uptr cache_end() { return cache_end_; }$/;"	f	class:__lsan::ThreadContextLsanBase
cache_end_	lsan/lsan_thread.h	/^  uptr cache_end_ = 0;$/;"	m	class:__lsan::ThreadContextLsanBase
cache_lock	sanitizer_common/sanitizer_procmaps_common.cpp	/^static StaticSpinMutex cache_lock;$/;"	m	namespace:__sanitizer
cache_mutex_	sanitizer_common/sanitizer_quarantine.h	/^  StaticSpinMutex cache_mutex_;$/;"	m	class:__sanitizer::Quarantine
cached_macos_version	sanitizer_common/sanitizer_mac.cpp	/^static atomic_uint32_t cached_macos_version;$/;"	m	namespace:__sanitizer
cached_proc_self_maps	sanitizer_common/sanitizer_procmaps_common.cpp	/^static ProcSelfMapsBuff cached_proc_self_maps;$/;"	m	namespace:__sanitizer
calcHash	sanitizer_common/sanitizer_addrhashmap.h	/^uptr AddrHashMap<T, kSize>::calcHash(uptr addr) {$/;"	f	class:__sanitizer::AddrHashMap
call_on_globals	asan/asan_globals_win.cpp	/^static void call_on_globals(void (*hook)(__asan_global *, uptr)) {$/;"	f	namespace:__asan
call_once_callback_args	tsan/tsan_interceptors_mac.cpp	/^struct call_once_callback_args {$/;"	s	namespace:__tsan::__anon79
call_once_callback_wrapper	tsan/tsan_interceptors_mac.cpp	/^void call_once_callback_wrapper(void *arg) {$/;"	f	namespace:__tsan::__anon79
call_pthread_cancel_with_cleanup	tsan/tsan_platform_linux.cpp	/^int call_pthread_cancel_with_cleanup(int(*fn)(void *c, void *m,$/;"	f	namespace:__tsan
call_pthread_cancel_with_cleanup	tsan/tsan_platform_mac.cpp	/^int call_pthread_cancel_with_cleanup(int(*fn)(void *c, void *m,$/;"	f	namespace:__tsan
callback	hwasan/hwasan_interceptors.cpp	/^  thread_callback_t callback;$/;"	m	struct:ThreadStartArg
callback	lsan/lsan_common_linux.cpp	/^  StopTheWorldCallback callback;$/;"	m	struct:__lsan::DoStopTheWorldParam
callback	lsan/lsan_interceptors.cpp	/^  void *(*callback)(void *arg);$/;"	m	struct:std::ThreadParam
callback	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  StopTheWorldCallback callback;$/;"	m	struct:__sanitizer::TracerThreadArgument
callback	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  StopTheWorldCallback callback;$/;"	m	struct:__sanitizer::RunThreadArgs
callback	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  StopTheWorldCallback callback;$/;"	m	struct:__sanitizer::TracerThreadArgument
callback	tsan/tsan_interceptors_posix.cpp	/^  void* (*callback)(void *arg);$/;"	m	struct:ThreadParam
callback_argument	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  void *callback_argument;$/;"	m	struct:__sanitizer::TracerThreadArgument
callback_argument	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  void *callback_argument;$/;"	m	struct:__sanitizer::TracerThreadArgument
caller_pc	tsan/tsan_interceptors_posix.cpp	/^  const uptr caller_pc;$/;"	m	struct:TsanInterceptorContext
calloc	asan/asan_malloc_win.cpp	/^void *calloc(size_t nmemb, size_t size) {$/;"	f
can_merge	sanitizer_common/sanitizer_quarantine.h	/^  bool can_merge(const QuarantineBatch* const from) const {$/;"	f	struct:__sanitizer::QuarantineBatch
can_parse_	sanitizer_common/sanitizer_suppressions.h	/^  bool can_parse_;$/;"	m	class:__sanitizer::SuppressionContext
can_poison_memory	asan/asan_poisoning.cpp	/^static atomic_uint8_t can_poison_memory;$/;"	m	namespace:__asan
can_unwind	asan/asan_stack.cpp	/^  bool can_unwind = true;$/;"	m	class:__asan::__anon70::ScopedUnwinding
cap	sanitizer_common/sanitizer_addrhashmap.h	/^    uptr cap;$/;"	m	struct:__sanitizer::AddrHashMap::AddBucket
capacity	sanitizer_common/sanitizer_common.h	/^  uptr capacity() const { return capacity_bytes_ \/ sizeof(T); }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
capacity	tsan/tsan_clock.cpp	/^ALWAYS_INLINE uptr SyncClock::capacity() const {$/;"	f	class:__tsan::SyncClock
capacity_bytes_	sanitizer_common/sanitizer_common.h	/^  uptr capacity_bytes_;$/;"	m	class:__sanitizer::InternalMmapVectorNoCtor
cb	tsan/tsan_interceptors_posix.cpp	/^  dl_iterate_phdr_cb_t cb;$/;"	m	struct:dl_iterate_phdr_data
cell_	sanitizer_common/sanitizer_addrhashmap.h	/^    Cell                  *cell_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
cells	sanitizer_common/sanitizer_addrhashmap.h	/^    Cell             cells[kBucketSize];$/;"	m	struct:__sanitizer::AddrHashMap::Bucket
cells	sanitizer_common/sanitizer_addrhashmap.h	/^    Cell cells[1];  \/\/ variable len$/;"	m	struct:__sanitizer::AddrHashMap::AddBucket
cgid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int cgid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cgid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 cgid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cgid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int cgid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cgid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int cgid;          \/\/ gid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
change_comment_headers	merge.sh	/^change_comment_headers() {$/;"	f
chd_addr	ubsan/ubsan_type_hash_win.cpp	/^  int chd_addr;$/;"	m	struct:CompleteObjectLocator
chd_addr	ubsan/ubsan_type_hash_win.cpp	/^  void *chd_addr;$/;"	m	struct:CompleteObjectLocatorAbs
check	sanitizer_common/sanitizer_bitvector.h	/^  void check(uptr idx) const { CHECK_LE(idx, size()); }$/;"	f	class:__sanitizer::TwoLevelBitVector
check	sanitizer_common/sanitizer_bvgraph.h	/^  void check(uptr idx1, uptr idx2) const {$/;"	f	class:__sanitizer::BVGraph
checkDynamicType	ubsan/ubsan_type_hash_itanium.cpp	/^bool __ubsan::checkDynamicType(void *Object, void *Type, HashValue Hash) {$/;"	f	class:__ubsan
checkDynamicType	ubsan/ubsan_type_hash_win.cpp	/^bool __ubsan::checkDynamicType(void *Object, void *Type, HashValue Hash) {$/;"	f	class:__ubsan
checkTypeInfoEquality	ubsan/ubsan_type_hash_itanium.cpp	/^bool __ubsan::checkTypeInfoEquality(const void *TypeInfo1,$/;"	f	class:__ubsan
checkTypeInfoEquality	ubsan/ubsan_type_hash_win.cpp	/^bool __ubsan::checkTypeInfoEquality(const void *, const void *) {$/;"	f	class:__ubsan
check_idx	sanitizer_common/sanitizer_deadlock_detector.h	/^  void check_idx(uptr idx) const { CHECK_LT(idx, size()); }$/;"	f	class:__sanitizer::DeadlockDetector
check_node	sanitizer_common/sanitizer_deadlock_detector.h	/^  void check_node(uptr node) const {$/;"	f	class:__sanitizer::DeadlockDetector
chunk	asan/asan_poisoning.cpp	/^  u8 *chunk;$/;"	m	struct:__asan::ShadowSegmentEndpoint
chunk	sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer__obstack_chunk *chunk;$/;"	m	struct:__sanitizer_obstack	typeref:struct:__sanitizer_obstack::__sanitizer__obstack_chunk
chunk_	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  AsanChunk *const chunk_;$/;"	m	class:__asan::AsanChunkView
chunk_	asan/asan_allocator.h	/^  AsanChunk *const chunk_;$/;"	m	class:__asan::AsanChunkView
chunk_access	asan/asan_descriptions.h	/^  ChunkAccess chunk_access;$/;"	m	struct:__asan::HeapAddressDescription
chunk_begin	asan/asan_descriptions.h	/^  uptr chunk_begin;$/;"	m	struct:__asan::ChunkAccess
chunk_header	asan/asan_allocator.cpp	/^  AsanChunk *chunk_header;$/;"	m	class:__asan::LargeChunkHeader
chunk_idx	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr chunk_idx;$/;"	m	struct:LargeMmapAllocator::Header
chunk_size	asan/asan_descriptions.h	/^  uptr chunk_size;$/;"	m	struct:__asan::ChunkAccess
chunk_size	sanitizer_common/sanitizer_platform_limits_posix.h	/^  long chunk_size;$/;"	m	struct:__sanitizer_obstack
chunk_state	asan/asan_allocator.cpp	/^  atomic_uint8_t chunk_state;$/;"	m	class:__asan::ChunkHeader
chunks	sanitizer_common/sanitizer_allocator_local_cache.h	/^    CompactPtrT chunks[2 * SizeClassMap::kMaxNumCachedHint];$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
chunks_	sanitizer_common/sanitizer_allocator_secondary.h	/^  Header **chunks_;$/;"	m	class:LargeMmapAllocator
chunks_sorted_	sanitizer_common/sanitizer_allocator_secondary.h	/^  bool chunks_sorted_;$/;"	m	class:LargeMmapAllocator
class_size	sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr class_size;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
class_size	sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr class_size;$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
clear	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  void clear() {$/;"	f	class:__asan::AsanChunkFifoList
clear	asan/asan_allocator.h	/^  void clear() {$/;"	f	class:__asan::AsanChunkFifoList
clear	sanitizer_common/sanitizer_bitvector.h	/^    void clear() { bv_.clear(); }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
clear	sanitizer_common/sanitizer_bitvector.h	/^  void clear() { bits_ = 0; }$/;"	f	class:__sanitizer::BasicBitVector
clear	sanitizer_common/sanitizer_bitvector.h	/^  void clear() {$/;"	f	class:__sanitizer::TwoLevelBitVector
clear	sanitizer_common/sanitizer_bvgraph.h	/^  void clear() {$/;"	f	class:__sanitizer::BVGraph
clear	sanitizer_common/sanitizer_common.cpp	/^void LoadedModule::clear() {$/;"	f	class:__sanitizer::LoadedModule
clear	sanitizer_common/sanitizer_common.h	/^  void clear() { size_ = 0; }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
clear	sanitizer_common/sanitizer_common.h	/^  void clear() {$/;"	f	class:__sanitizer::InternalScopedString
clear	sanitizer_common/sanitizer_common.h	/^  void clear() {$/;"	f	class:__sanitizer::ListOfModules
clear	sanitizer_common/sanitizer_deadlock_detector.h	/^  void clear() {$/;"	f	class:__sanitizer::DeadlockDetector
clear	sanitizer_common/sanitizer_deadlock_detector.h	/^  void clear() {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
clear	sanitizer_common/sanitizer_list.h	/^  void clear() {$/;"	f	struct:__sanitizer::IntrusiveList
clear	ubsan/ubsan_diag.h	/^  void clear() {$/;"	f	class:__ubsan::SymbolizedStackHolder
clearBit	sanitizer_common/sanitizer_bitvector.h	/^  bool clearBit(uptr idx) {$/;"	f	class:__sanitizer::BasicBitVector
clearBit	sanitizer_common/sanitizer_bitvector.h	/^  bool clearBit(uptr idx) {$/;"	f	class:__sanitizer::TwoLevelBitVector
clearOrInit	sanitizer_common/sanitizer_common.h	/^  void clearOrInit() {$/;"	f	class:__sanitizer::ListOfModules
clock	tsan/tsan_defs.h	/^    ClockElem clock[kClockCount];$/;"	m	union:__tsan::ClockBlock::__anon80
clock	tsan/tsan_rtl.h	/^  ThreadClock clock;$/;"	m	struct:__tsan::ThreadState
clock	tsan/tsan_sync.h	/^  SyncClock clock;$/;"	m	struct:__tsan::SyncVar
clock_alloc	tsan/tsan_rtl.h	/^  ClockAlloc clock_alloc;$/;"	m	struct:__tsan::Context
clock_cache	tsan/tsan_rtl.h	/^  DenseSlabAllocCache clock_cache;$/;"	m	struct:__tsan::Processor
clock_t	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clock_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clock_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clock_t	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(clock_t);$/;"	v
clockid_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(clockid_t);$/;"	v
close	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_close close;$/;"	m	struct:__sanitizer_cookie_io_functions_t
cmsg_len	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_len	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned cmsg_len;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_level	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int cmsg_level;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsg_type	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int cmsg_type;$/;"	m	struct:__sanitizer::__sanitizer_cmsghdr
cmsghdr	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
cmsghdr	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
cmsghdr	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
cmsghdr	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(cmsghdr);$/;"	v
column	sanitizer_common/sanitizer_symbolizer.h	/^  int column;$/;"	m	struct:__sanitizer::AddressInfo
column_no	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    int column_no;$/;"	m	struct:__asan_global_source_location
column_no	asan/asan_interface_internal.h	/^    int column_no;$/;"	m	struct:__asan_global_source_location
common_flags	sanitizer_common/sanitizer_flags.h	/^inline const CommonFlags *common_flags() {$/;"	f	namespace:__sanitizer
common_flags_dont_use	sanitizer_common/sanitizer_flags.cpp	/^CommonFlags common_flags_dont_use;$/;"	m	namespace:__sanitizer
compressed	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t compressed;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
compressed_lifetime	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t compressed_lifetime;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
compressed_peak	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t compressed_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
cond_mutex_unlock	tsan/tsan_interceptors_posix.cpp	/^static void cond_mutex_unlock(CondMutexUnlockCtx *arg) {$/;"	f
cond_wait	tsan/tsan_interceptors_posix.cpp	/^static int cond_wait(ThreadState *thr, uptr pc, ScopedInterceptor *si,$/;"	f
conditional	sanitizer_common/sanitizer_type_traits.h	/^struct conditional {$/;"	s	namespace:__sanitizer
conditional	sanitizer_common/sanitizer_type_traits.h	/^struct conditional<false, T, F> {$/;"	s	namespace:__sanitizer
connection_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t connection_id;$/;"	m	struct:__anon22
connection_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t connection_id;$/;"	m	struct:__anon24
connection_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t connection_id;$/;"	m	struct:__anon31
connection_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t connection_id;$/;"	m	struct:__anon35
connection_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t connection_id;$/;"	m	struct:__anon38
connectsync	tsan/tsan_fd.cpp	/^  u64 connectsync;$/;"	m	struct:__tsan::FdContext
containsAddress	sanitizer_common/sanitizer_common.cpp	/^bool LoadedModule::containsAddress(uptr address) const {$/;"	f	class:__sanitizer::LoadedModule
content	interception/interception_win.cpp	/^  uptr content;$/;"	m	struct:__interception::TrampolineMemoryRegion
context	asan/asan_thread.h	/^  AsanThreadContext *context() { return context_; }$/;"	f	class:__asan::AsanThread
context	sanitizer_common/sanitizer_common.h	/^  void *context;$/;"	m	struct:__sanitizer::SignalContext
context_	asan/asan_thread.h	/^  AsanThreadContext *context_;$/;"	m	class:__asan::AsanThread
context_factory_	sanitizer_common/sanitizer_thread_registry.h	/^  const ThreadContextFactory context_factory_;$/;"	m	class:__sanitizer::ThreadRegistry
conv	tsan/tsan_suppressions.cpp	/^static const char *conv(ReportType typ) {$/;"	f	namespace:__tsan
convert_morder	tsan/tsan_interface_atomic.cpp	/^static morder convert_morder(morder mo) {$/;"	f
cookie	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *cookie;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
cookie_io_functions_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(cookie_io_functions_t);$/;"	v
copyFrom	sanitizer_common/sanitizer_bitvector.h	/^  void copyFrom(const BasicBitVector &v) { bits_ = v.bits_; }$/;"	f	class:__sanitizer::BasicBitVector
copyFrom	sanitizer_common/sanitizer_bitvector.h	/^  void copyFrom(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
count	asan/asan_errors.h	/^  uptr count;$/;"	m	struct:__asan::ErrorCallocOverflow
count	asan/asan_errors.h	/^  uptr count;$/;"	m	struct:__asan::ErrorReallocArrayOverflow
count	asan/asan_memory_profile.cpp	/^  uptr count;$/;"	m	struct:__asan::AllocationSite
count	sanitizer_common/sanitizer_allocator_local_cache.h	/^    u32 count;$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
count	sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr count;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
count	sanitizer_common/sanitizer_quarantine.h	/^  uptr count;$/;"	m	struct:__sanitizer::QuarantineBatch
count	tsan/tsan_mutexset.h	/^    int count;$/;"	m	struct:__tsan::MutexSet::Desc
count	tsan/tsan_report.h	/^  int count;$/;"	m	class:__tsan::ReportDesc
count	tsan/tsan_rtl_thread.cpp	/^  int count;$/;"	m	struct:__tsan::ThreadLeak
count_	sanitizer_common/sanitizer_allocator_primary32.h	/^    uptr count_;$/;"	m	struct:SizeClassAllocator32::TransferBatch
count_	sanitizer_common/sanitizer_libignore.h	/^  uptr count_;$/;"	m	class:__sanitizer::LibIgnore
counter_mask	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 counter_mask;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
counter_size_bits_log	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 counter_size_bits_log;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
coverage	asan/asan_activation.cpp	/^  bool coverage;$/;"	m	struct:__asan::AsanDeactivatedFlags
coverage_dir	asan/asan_activation.cpp	/^  const char *coverage_dir;$/;"	m	struct:__asan::AsanDeactivatedFlags
coverage_fd	include/sanitizer/common_interface_defs.h	/^  intptr_t coverage_fd;$/;"	m	struct:__anon1
coverage_fd	sanitizer_common/sanitizer_interface_internal.h	/^      __sanitizer::sptr coverage_fd;$/;"	m	struct:__anon44
coverage_max_block_size	include/sanitizer/common_interface_defs.h	/^  unsigned int coverage_max_block_size;$/;"	m	struct:__anon1
coverage_max_block_size	sanitizer_common/sanitizer_interface_internal.h	/^      unsigned int coverage_max_block_size;$/;"	m	struct:__anon44
coverage_sandboxed	include/sanitizer/common_interface_defs.h	/^  int coverage_sandboxed;$/;"	m	struct:__anon1
coverage_sandboxed	sanitizer_common/sanitizer_interface_internal.h	/^      int coverage_sandboxed;$/;"	m	struct:__anon44
cplus_demangle_builtin_types	libbacktrace/backtrace-rename.h	22;"	d
cplus_demangle_fill_ctor	libbacktrace/backtrace-rename.h	23;"	d
cplus_demangle_fill_dtor	libbacktrace/backtrace-rename.h	24;"	d
cplus_demangle_fill_extended_operator	libbacktrace/backtrace-rename.h	25;"	d
cplus_demangle_fill_name	libbacktrace/backtrace-rename.h	26;"	d
cplus_demangle_init_info	libbacktrace/backtrace-rename.h	27;"	d
cplus_demangle_mangled_name	libbacktrace/backtrace-rename.h	28;"	d
cplus_demangle_operators	libbacktrace/backtrace-rename.h	29;"	d
cplus_demangle_print	libbacktrace/backtrace-rename.h	30;"	d
cplus_demangle_print_callback	libbacktrace/backtrace-rename.h	31;"	d
cplus_demangle_type	libbacktrace/backtrace-rename.h	32;"	d
cplus_demangle_v3	libbacktrace/backtrace-rename.h	33;"	d
cplus_demangle_v3_callback	libbacktrace/backtrace-rename.h	34;"	d
cr_rights	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 cr_rights[2];$/;"	m	struct:__sanitizer::__sanitizer_cap_rights
create_	sanitizer_common/sanitizer_addrhashmap.h	/^    bool                   create_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
created	sanitizer_common/sanitizer_addrhashmap.h	/^bool AddrHashMap<T, kSize>::Handle::created() const {$/;"	f	class:__sanitizer::AddrHashMap::Handle
created_	sanitizer_common/sanitizer_addrhashmap.h	/^    bool                   created_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
creation_stack	tsan/tsan_fd.cpp	/^  u32 creation_stack;$/;"	m	struct:__tsan::FdDesc
creation_stack_id	tsan/tsan_rtl.h	/^  u32 creation_stack_id;$/;"	m	class:__tsan::final
creation_stack_id	tsan/tsan_sync.h	/^  u32 creation_stack_id;$/;"	m	struct:__tsan::SyncVar
creation_tid	tsan/tsan_fd.cpp	/^  int creation_tid;$/;"	m	struct:__tsan::FdDesc
ctx	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  u64 ctx;$/;"	m	struct:__sanitizer::DDLogicalThread
ctx	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u64         ctx;$/;"	m	struct:__sanitizer::DDLogicalThread
ctx	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  u64  ctx;$/;"	m	struct:__sanitizer::DDMutex
ctx	tsan/tsan_interceptors_posix.cpp	/^  ThreadSignalContext *ctx;$/;"	m	struct:BlockingCall
ctx	tsan/tsan_interceptors_posix.cpp	/^  ucontext_t ctx;$/;"	m	struct:__tsan::SignalDesc
ctx	tsan/tsan_rtl.cpp	/^Context *ctx;$/;"	m	namespace:__tsan
cuid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int cuid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cuid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 cuid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cuid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int cuid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cuid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int cuid;          \/\/ uid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
cur_thread	tsan/tsan_platform_linux.cpp	/^ThreadState *cur_thread() {$/;"	f	namespace:__tsan
cur_thread	tsan/tsan_platform_mac.cpp	/^ThreadState *cur_thread() {$/;"	f	namespace:__tsan
cur_thread	tsan/tsan_rtl.h	/^inline ThreadState *cur_thread() {$/;"	f	namespace:__tsan
cur_thread_finalize	tsan/tsan_platform_linux.cpp	/^void cur_thread_finalize() {$/;"	f	namespace:__tsan
cur_thread_finalize	tsan/tsan_platform_mac.cpp	/^void cur_thread_finalize() {$/;"	f	namespace:__tsan
cur_thread_finalize	tsan/tsan_rtl.h	/^inline void cur_thread_finalize() { }$/;"	f	namespace:__tsan
cur_thread_init	tsan/tsan_rtl.h	/^inline void cur_thread_init() { }$/;"	f	namespace:__tsan
cur_thread_init	tsan/tsan_rtl.h	/^inline void cur_thread_init() {$/;"	f	namespace:__tsan
cur_thread_location	tsan/tsan_platform_mac.cpp	/^static ThreadState **cur_thread_location() {$/;"	f	namespace:__tsan
current	sanitizer_common/sanitizer_fuchsia.h	/^  size_t current;  \/\/ Current index into the vector.$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current	sanitizer_common/sanitizer_linux.h	/^  const char *current;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current	tsan/tsan_rtl.h	/^  ThreadState* current;$/;"	m	struct:__tsan::ThreadState
current_	sanitizer_common/sanitizer_list.h	/^    ItemTy *current_;$/;"	m	class:__sanitizer::IntrusiveList::IteratorBase
current_arch	sanitizer_common/sanitizer_mac.h	/^  ModuleArch current_arch;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_epoch_	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr current_epoch_;$/;"	m	class:__sanitizer::DeadlockDetector
current_error_	asan/asan_report.cpp	/^  static ErrorDescription current_error_;$/;"	m	class:__asan::ScopedInErrorReport
current_filetype	sanitizer_common/sanitizer_mac.h	/^  u32 current_filetype;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_image	sanitizer_common/sanitizer_mac.h	/^  int current_image;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_instrumented	sanitizer_common/sanitizer_mac.h	/^  bool current_instrumented;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_load_cmd_addr	sanitizer_common/sanitizer_mac.h	/^  const char *current_load_cmd_addr;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_load_cmd_addr	sanitizer_common/sanitizer_procmaps_mac.cpp	/^  const char *current_load_cmd_addr;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData
current_load_cmd_count	sanitizer_common/sanitizer_mac.h	/^  int current_load_cmd_count;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_magic	sanitizer_common/sanitizer_mac.h	/^  u32 current_magic;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_page	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr current_page;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
current_range_start_page	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr current_range_start_page;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
current_report	tsan/tsan_rtl.h	/^  const ReportDesc *current_report;$/;"	m	struct:__tsan::ThreadState
current_thread_id	lsan/lsan_common_mac.cpp	/^  u32 current_thread_id;$/;"	m	struct:__lsan::__anon85
current_thread_tid	lsan/lsan_linux.cpp	/^static THREADLOCAL u32 current_thread_tid = kInvalidTid;$/;"	m	namespace:__lsan
current_uuid	sanitizer_common/sanitizer_mac.h	/^  u8 current_uuid[kModuleUUIDSize];$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
current_verbosity	sanitizer_common/sanitizer_common.cpp	/^atomic_uint32_t current_verbosity;$/;"	m	namespace:__sanitizer
currently_allocated	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
cxa_at_exit_wrapper	tsan/tsan_interceptors_posix.cpp	/^static void cxa_at_exit_wrapper(void *arg) {$/;"	f
d	sanitizer_common/sanitizer_allocator_report.cpp	/^  const SanitizerCommonDecorator d;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport
d	tsan/tsan_md5.cpp	/^  MD5_u32plus a, b, c, d;$/;"	m	struct:__tsan::__anon81
d_fileno	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned long long d_fileno;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_fileno	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 d_fileno;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	sanitizer_common/sanitizer_linux.cpp	/^  u64 d_ino;$/;"	m	struct:__sanitizer::linux_dirent
d_ino	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  long           d_ino;$/;"	m	struct:__sanitizer::linux_dirent
d_ino	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_ino	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_ino	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long long d_ino;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_name	sanitizer_common/sanitizer_linux.cpp	/^  char               d_name[256];$/;"	m	struct:__sanitizer::linux_dirent
d_name	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  char           d_name[];$/;"	m	struct:__sanitizer::linux_dirent
d_off	sanitizer_common/sanitizer_linux.cpp	/^  u64 d_off;$/;"	m	struct:__sanitizer::linux_dirent
d_off	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  off_t          d_off;$/;"	m	struct:__sanitizer::linux_dirent
d_off	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_off	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_off	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long long d_off;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_reclen	sanitizer_common/sanitizer_linux.cpp	/^  unsigned short     d_reclen;$/;"	m	struct:__sanitizer::linux_dirent
d_reclen	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::linux_dirent
d_reclen	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u16 d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_reclen	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_reclen	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short d_reclen;$/;"	m	struct:__sanitizer::__sanitizer_dirent64
d_seekoff	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long long d_seekoff;$/;"	m	struct:__sanitizer::__sanitizer_dirent
d_type	sanitizer_common/sanitizer_linux.cpp	/^  unsigned char      d_type;$/;"	m	struct:__sanitizer::linux_dirent
data	asan/asan_descriptions.h	/^  AddressDescriptionData data;$/;"	m	class:__asan::AddressDescription
data	sanitizer_common/sanitizer_common.h	/^  T *data() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
data	sanitizer_common/sanitizer_common.h	/^  const T *data() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
data	sanitizer_common/sanitizer_fuchsia.h	/^  InternalMmapVector<zx_info_maps_t> data;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
data	sanitizer_common/sanitizer_linux.h	/^  char *data;$/;"	m	struct:__sanitizer::ProcSelfMapsBuff
data	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u32 data[4];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
data	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 data;$/;"	m	struct:__sanitizer::__sanitizer_io_event
data	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr data[5];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
data	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int data[4];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
data	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 data;$/;"	m	struct:__sanitizer::__sanitizer_io_event
data	tsan/tsan_dispatch_defs.h	/^typedef void (^dispatch_io_handler_t)(bool done, dispatch_data_t data,$/;"	v
data	tsan/tsan_interceptors_libdispatch.cpp	/^typedef void (^fd_handler_t)(dispatch_data_t data, int error);$/;"	m	namespace:__tsan
data	tsan/tsan_interceptors_posix.cpp	/^  void *data;$/;"	m	struct:dl_iterate_phdr_data
data_	sanitizer_common/sanitizer_common.h	/^  T *data_;$/;"	m	class:__sanitizer::InternalMmapVectorNoCtor
data_	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr data_[BV::kSize];$/;"	m	class:__sanitizer::DeadlockDetector
data_	sanitizer_common/sanitizer_procmaps.h	/^  MemoryMappedSegmentData *data_;$/;"	m	class:__sanitizer::MemoryMappedSegment
data_	sanitizer_common/sanitizer_procmaps.h	/^  MemoryMappingLayoutData data_;$/;"	m	class:__sanitizer::MemoryMappingLayout
data_	sanitizer_common/sanitizer_ring_buffer.h	/^  T data_[1];  \/\/ flexible array.$/;"	m	class:__sanitizer::RingBuffer
data_allocated	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr data_allocated;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
data_base	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 *data_base;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
data_counter	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr data_counter;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
data_len	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr *data_len;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
data_ptr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void **data_ptr;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
data_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 data_size;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
data_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr data_size;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
dd	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  DeadlockDetector<DDBV> dd;$/;"	m	struct:__sanitizer::final
dd	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  DeadlockDetectorTLS<DDBV> dd;$/;"	m	struct:__sanitizer::DDLogicalThread
dd	tsan/tsan_rtl.h	/^  DDetector *dd;$/;"	m	struct:__tsan::Context
dd	tsan/tsan_sync.h	/^  DDMutex dd;$/;"	m	struct:__tsan::SyncVar
dd_lt	tsan/tsan_rtl.h	/^  DDLogicalThread *dd_lt;$/;"	m	struct:__tsan::ThreadState
dd_pt	tsan/tsan_rtl.h	/^  DDPhysicalThread *dd_pt;$/;"	m	struct:__tsan::Processor
dead_thread_state	tsan/tsan_platform_linux.cpp	/^static ThreadState *dead_thread_state = nullptr;$/;"	m	namespace:__tsan
dead_threads_	sanitizer_common/sanitizer_thread_registry.h	/^  IntrusiveList<ThreadContextBase> dead_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
dealloc_stack	asan/asan_errors.h	/^  const BufferedStackTrace *dealloc_stack;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
dealloc_type	asan/asan_errors.h	/^  AllocType alloc_type, dealloc_type;$/;"	m	struct:__asan::ErrorAllocTypeMismatch
decl_file	sanitizer_common/sanitizer_symbolizer.h	/^  char *decl_file = nullptr;$/;"	m	struct:__sanitizer::LocalInfo
decl_line	sanitizer_common/sanitizer_symbolizer.h	/^  unsigned decl_line = 0;$/;"	m	struct:__sanitizer::LocalInfo
default_seh_handler	asan/asan_win.cpp	/^static LPTOP_LEVEL_EXCEPTION_FILTER default_seh_handler;$/;"	v
delete_alignment	asan/asan_errors.h	/^  uptr delete_alignment;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
delete_size	asan/asan_errors.h	/^  uptr delete_size;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
desc	include/sanitizer/dfsan_interface.h	/^  const char *desc;$/;"	m	struct:dfsan_label_info
desc	sanitizer_common/sanitizer_flag_parser.h	/^    const char *desc;$/;"	m	struct:__sanitizer::FlagParser::Flag
desc	sanitizer_common/sanitizer_stackdepot.h	/^    StackDepotNode *desc;$/;"	m	struct:__sanitizer::StackDepotReverseMap::IdDescPair
desc	tsan/tsan_interface_ann.cpp	/^  char desc[kMaxDescLen];$/;"	m	struct:__tsan::ExpectRace
descr	asan/asan_fake_stack.h	/^  uptr descr;  \/\/ Modified by the instrumented code.$/;"	m	struct:__asan::FakeFrame
descr	asan/asan_scariness_score.h	/^  char descr[1024];$/;"	m	struct:__asan::ScarinessScoreBase
descriptor_	sanitizer_common/sanitizer_linux.h	/^  int descriptor_ = -1;$/;"	m	class:__sanitizer::ThreadLister
descs_	tsan/tsan_mutexset.h	/^  Desc descs_[kMaxSize];$/;"	m	class:__tsan::MutexSet
destroyed	tsan/tsan_report.h	/^  bool destroyed;$/;"	m	struct:__tsan::ReportMutex
destructor_iterations	asan/asan_thread.h	/^  u8 destructor_iterations;$/;"	m	class:__asan::final
detached	sanitizer_common/sanitizer_thread_registry.h	/^  bool detached;$/;"	m	class:__sanitizer::ThreadContextBase
device	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t device;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
device_peak	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t device_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
dfsan_label	include/sanitizer/dfsan_interface.h	/^typedef uint16_t dfsan_label;$/;"	t
dfsan_label_info	include/sanitizer/dfsan_interface.h	/^struct dfsan_label_info {$/;"	s
dfsan_set_label	include/sanitizer/dfsan_interface.h	/^void dfsan_set_label(dfsan_label label, T &data) { \/\/ NOLINT$/;"	f
dfsan_write_callback_t	include/sanitizer/dfsan_interface.h	/^typedef void (*dfsan_write_callback_t)(int fd, const void *buf, size_t count);$/;"	t
dirfd	tsan/tsan_interceptors_posix.cpp	44;"	d
disable_counter	lsan/lsan_common_fuchsia.cpp	/^__attribute__((tls_model("initial-exec"))) THREADLOCAL int disable_counter;$/;"	m	namespace:__lsan
disable_counter	lsan/lsan_common_linux.cpp	/^THREADLOCAL int disable_counter;$/;"	m	namespace:__lsan
disable_counter	lsan/lsan_common_mac.cpp	/^  int disable_counter;$/;"	m	struct:__lsan::__anon85
dispatch_callback_wrap	tsan/tsan_interceptors_libdispatch.cpp	/^static void dispatch_callback_wrap(void *param) {$/;"	f	namespace:__tsan
dispatch_data	tsan/tsan_dispatch_defs.h	/^DISPATCH_DECL(dispatch_data);$/;"	v
dispatch_fd_t	tsan/tsan_dispatch_defs.h	/^typedef int dispatch_fd_t;$/;"	t
dispatch_function_t	asan/asan_mac.cpp	/^typedef void (*dispatch_function_t)(void *block);$/;"	t	namespace:__asan
dispatch_function_t	lsan/lsan_mac.cpp	/^typedef void (*dispatch_function_t)(void *block);$/;"	t	namespace:__lsan
dispatch_function_t	tsan/tsan_dispatch_defs.h	/^typedef void (*dispatch_function_t)(void *arg);$/;"	t
dispatch_group	tsan/tsan_dispatch_defs.h	/^DISPATCH_DECL(dispatch_group);$/;"	v
dispatch_group_t	asan/asan_mac.cpp	/^typedef void* dispatch_group_t;$/;"	t	namespace:__asan
dispatch_group_t	lsan/lsan_mac.cpp	/^typedef void *dispatch_group_t;$/;"	t	namespace:__lsan
dispatch_io	tsan/tsan_dispatch_defs.h	/^DISPATCH_DECL(dispatch_io);$/;"	v
dispatch_io_close_flags_t	tsan/tsan_dispatch_defs.h	/^typedef unsigned long dispatch_io_close_flags_t;$/;"	t
dispatch_io_type_t	tsan/tsan_dispatch_defs.h	/^typedef unsigned long dispatch_io_type_t;$/;"	t
dispatch_object_s	tsan/tsan_dispatch_defs.h	/^typedef struct dispatch_object_s {} *dispatch_object_t;$/;"	s
dispatch_object_t	tsan/tsan_dispatch_defs.h	/^typedef struct dispatch_object_s {} *dispatch_object_t;$/;"	t	typeref:struct:dispatch_object_s
dispatch_once	tsan/tsan_interceptors_libdispatch.cpp	288;"	d
dispatch_once_f	tsan/tsan_interceptors_libdispatch.cpp	310;"	d
dispatch_once_t	tsan/tsan_dispatch_defs.h	/^typedef long dispatch_once_t;$/;"	t
dispatch_queue	tsan/tsan_dispatch_defs.h	/^DISPATCH_DECL(dispatch_queue);$/;"	v
dispatch_queue_offsets	tsan/tsan_interceptors_libdispatch.cpp	/^} dispatch_queue_offsets;$/;"	m	namespace:__tsan	typeref:struct:__tsan::dispatch_queue_offsets_s
dispatch_queue_offsets_s	tsan/tsan_interceptors_libdispatch.cpp	/^extern "C" struct dispatch_queue_offsets_s {$/;"	s	namespace:__tsan
dispatch_queue_t	asan/asan_mac.cpp	/^typedef void* dispatch_queue_t;$/;"	t	namespace:__asan
dispatch_queue_t	lsan/lsan_mac.cpp	/^typedef void *dispatch_queue_t;$/;"	t	namespace:__lsan
dispatch_semaphore	tsan/tsan_dispatch_defs.h	/^DISPATCH_DECL(dispatch_semaphore);$/;"	v
dispatch_source	tsan/tsan_dispatch_defs.h	/^DISPATCH_DECL(dispatch_source);$/;"	v
dispatch_source_t	asan/asan_mac.cpp	/^typedef void* dispatch_source_t;$/;"	t	namespace:__asan
dispatch_source_t	lsan/lsan_mac.cpp	/^typedef void *dispatch_source_t;$/;"	t	namespace:__lsan
dispatch_sync_post_execute	tsan/tsan_interceptors_libdispatch.cpp	/^static void dispatch_sync_post_execute(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
dispatch_sync_pre_execute	tsan/tsan_interceptors_libdispatch.cpp	/^static void dispatch_sync_pre_execute(ThreadState *thr, uptr pc,$/;"	f	namespace:__tsan
dispatch_time_t	asan/asan_mac.cpp	/^typedef u64 dispatch_time_t;$/;"	t	namespace:__asan
dispatch_time_t	lsan/lsan_mac.cpp	/^typedef u64 dispatch_time_t;$/;"	t	namespace:__lsan
dispatch_time_t	tsan/tsan_dispatch_defs.h	/^typedef __sanitizer::u64 dispatch_time_t;$/;"	t
dl_iterate_phdr	sanitizer_common/sanitizer_linux_libcdep.cpp	564;"	d
dl_iterate_phdr_cb	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static int dl_iterate_phdr_cb(dl_phdr_info *info, size_t size, void *arg) {$/;"	f	namespace:__sanitizer
dl_iterate_phdr_cb	tsan/tsan_interceptors_posix.cpp	/^static int dl_iterate_phdr_cb(__sanitizer_dl_phdr_info *info, SIZE_T size,$/;"	f
dl_iterate_phdr_cb_t	tsan/tsan_interceptors_posix.cpp	/^typedef int (*dl_iterate_phdr_cb_t)(__sanitizer_dl_phdr_info *info, SIZE_T size,$/;"	t
dl_iterate_phdr_data	tsan/tsan_interceptors_posix.cpp	/^struct dl_iterate_phdr_data {$/;"	s
dl_iterate_phdr_test_cb	sanitizer_common/sanitizer_linux.cpp	/^static int dl_iterate_phdr_test_cb(struct dl_phdr_info *info, size_t size,$/;"	f	namespace:__sanitizer
dl_phdr_info	sanitizer_common/sanitizer_linux_libcdep.cpp	563;"	d
dllThunkGetRealAddrOrDie	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^uptr dllThunkGetRealAddrOrDie(const char *name) {$/;"	f	namespace:__sanitizer
dllThunkIntercept	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^int dllThunkIntercept(const char* main_function, uptr dll_function) {$/;"	f	namespace:__sanitizer
dllThunkInterceptWhenPossible	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^int dllThunkInterceptWhenPossible(const char* main_function,$/;"	f	namespace:__sanitizer
dll_thunk_thread_init	sanitizer_common/sanitizer_win_dll_thunk.cpp	/^static void WINAPI dll_thunk_thread_init(void *mod, unsigned long reason,$/;"	f
dlpi_addr	sanitizer_common/sanitizer_freebsd.h	/^  Elf_Addr dlpi_addr;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_addr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_addr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_addr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_addr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr dlpi_addr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_adds	sanitizer_common/sanitizer_freebsd.h	/^  unsigned long long int dlpi_adds;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_name	sanitizer_common/sanitizer_freebsd.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_name	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_name	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  const char *dlpi_name;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	sanitizer_common/sanitizer_freebsd.h	/^  const XElf32_Phdr *dlpi_phdr;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_phdr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phdr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  const void *dlpi_phdr;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	sanitizer_common/sanitizer_freebsd.h	/^  Elf_Half dlpi_phnum;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_phnum	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  short dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	sanitizer_common/sanitizer_platform_limits_posix.h	/^  short dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_phnum	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short dlpi_phnum;$/;"	m	struct:__sanitizer::__sanitizer_dl_phdr_info
dlpi_subs	sanitizer_common/sanitizer_freebsd.h	/^  unsigned long long int dlpi_subs;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_tls_data	sanitizer_common/sanitizer_freebsd.h	/^  void *dlpi_tls_data;$/;"	m	struct:__sanitizer::xdl_phdr_info
dlpi_tls_modid	sanitizer_common/sanitizer_freebsd.h	/^  size_t dlpi_tls_modid;$/;"	m	struct:__sanitizer::xdl_phdr_info
done	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  atomic_uintptr_t done;$/;"	m	struct:__sanitizer::TracerThreadArgument
done	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  atomic_uintptr_t done;$/;"	m	struct:__sanitizer::TracerThreadArgument
done	tsan/tsan_dispatch_defs.h	/^typedef void (^dispatch_io_handler_t)(bool done, dispatch_data_t data,$/;"	v
dqo_flags	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_flags;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_flags_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_flags_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_label	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_label;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_label_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_label_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_priority	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_priority;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_priority_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_priority_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_running	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_running;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_running_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_running_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_serialnum	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_serialnum;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_serialnum_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_serialnum_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_suspend_cnt	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_suspend_cnt;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_suspend_cnt_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_suspend_cnt_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_target_queue	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_target_queue;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_target_queue_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_target_queue_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_version	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_version;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_width	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_width;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dqo_width_size	tsan/tsan_interceptors_libdispatch.cpp	/^  const uint16_t dqo_width_size;$/;"	m	struct:__tsan::dispatch_queue_offsets_s
dso_id	sanitizer_common/sanitizer_tls_get_addr.cpp	/^  uptr dso_id;$/;"	m	struct:__sanitizer::TlsGetAddrParam
dstflag	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  short dstflag;$/;"	m	struct:__sanitizer::__sanitizer_timeb
dstflag	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short dstflag;$/;"	m	struct:__sanitizer::__sanitizer_timeb
dstflag	sanitizer_common/sanitizer_platform_limits_posix.h	/^  short dstflag;$/;"	m	struct:__sanitizer::__sanitizer_timeb
dstflag	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short dstflag;$/;"	m	struct:__sanitizer::__sanitizer_timeb
dtls	asan/asan_thread.h	/^  DTLS *dtls() { return dtls_; }$/;"	f	class:__asan::AsanThread
dtls	lsan/lsan_posix.cpp	/^  DTLS *dtls;$/;"	m	struct:__lsan::OnStartedArgs
dtls	lsan/lsan_posix.h	/^  DTLS *dtls() { return dtls_; }$/;"	f	class:__lsan::final
dtls	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static __thread DTLS dtls;$/;"	m	namespace:__sanitizer
dtls_	asan/asan_thread.h	/^  DTLS *dtls_;$/;"	m	class:__asan::AsanThread
dtls_	lsan/lsan_posix.h	/^  DTLS *dtls_ = nullptr;$/;"	m	class:__lsan::final
dtv	sanitizer_common/sanitizer_tls_get_addr.h	/^  DTV *dtv;  \/\/ dtv_size elements, allocated by MmapOrDie.$/;"	m	struct:__sanitizer::DTLS
dtv_size	sanitizer_common/sanitizer_tls_get_addr.h	/^  uptr dtv_size;$/;"	m	struct:__sanitizer::DTLS
dummy_address_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  static const uptr dummy_address_ =$/;"	m	class:__sanitizer::final
dyld_hdr	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static mach_header *dyld_hdr = 0;$/;"	m	namespace:__sanitizer
dyn_ann_ctx	tsan/tsan_interface_ann.cpp	/^static DynamicAnnContext *dyn_ann_ctx;$/;"	m	namespace:__tsan
dynamic_init_globals	asan/asan_globals.cpp	/^static VectorOfGlobals *dynamic_init_globals;$/;"	m	namespace:__asan
e_tabsz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int e_tabsz = (int)E_TABSZ;$/;"	m	namespace:__sanitizer
edges_	sanitizer_common/sanitizer_deadlock_detector.h	/^  Edge edges_[BV::kSize * 32];$/;"	m	class:__sanitizer::DeadlockDetector
elem	tsan/tsan_clock.cpp	/^ALWAYS_INLINE ClockElem &SyncClock::elem(unsigned tid) const {$/;"	f	class:__tsan::SyncClock
elf_fpregset_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^typedef struct user_fpregs elf_fpregset_t;$/;"	t	typeref:struct:user_fpregs
empty	sanitizer_common/sanitizer_bitvector.h	/^  bool empty() const { return bits_ == 0; }$/;"	f	class:__sanitizer::BasicBitVector
empty	sanitizer_common/sanitizer_bitvector.h	/^  bool empty() const {$/;"	f	class:__sanitizer::TwoLevelBitVector
empty	sanitizer_common/sanitizer_bvgraph.h	/^  bool empty() const {$/;"	f	class:__sanitizer::BVGraph
empty	sanitizer_common/sanitizer_common.h	/^  bool empty() const { return size() == 0; }$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
empty	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool empty() const { return bv_.empty(); }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
empty	sanitizer_common/sanitizer_list.h	/^  bool empty() const { return size_ == 0; }$/;"	f	struct:__sanitizer::IntrusiveList
emptyset	tsan/tsan_interceptors_posix.cpp	/^  __sanitizer_sigset_t emptyset;$/;"	m	struct:__tsan::ThreadSignalContext
end	asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
end	sanitizer_common/sanitizer_common.h	/^    uptr end;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
end	sanitizer_common/sanitizer_common.h	/^  LoadedModule *end() { return modules_.end(); }$/;"	f	class:__sanitizer::ListOfModules
end	sanitizer_common/sanitizer_common.h	/^  T *end() { return end_; }$/;"	f	class:__sanitizer::ArrayRef
end	sanitizer_common/sanitizer_common.h	/^  T *end() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
end	sanitizer_common/sanitizer_common.h	/^  const LoadedModule *end() const { return modules_.end(); }$/;"	f	class:__sanitizer::ListOfModules
end	sanitizer_common/sanitizer_common.h	/^  const T *end() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
end	sanitizer_common/sanitizer_libignore.h	/^    uptr end;$/;"	m	struct:__sanitizer::LibIgnore::LibCodeRange
end	sanitizer_common/sanitizer_list.h	/^  ConstIterator end() const { return ConstIterator(0); }$/;"	f	struct:__sanitizer::IntrusiveList
end	sanitizer_common/sanitizer_list.h	/^  Iterator end() { return Iterator(0); }$/;"	f	struct:__sanitizer::IntrusiveList
end	sanitizer_common/sanitizer_procmaps.h	/^  uptr end;$/;"	m	class:__sanitizer::MemoryMappedSegment
end_	sanitizer_common/sanitizer_common.h	/^  T *end_ = nullptr;$/;"	m	class:__sanitizer::ArrayRef
end_	sanitizer_common/sanitizer_vector.h	/^  T *end_;$/;"	m	class:__sanitizer::Vector
end_address	sanitizer_common/sanitizer_win.cpp	/^  uptr end_address;$/;"	m	struct:__sanitizer::__anon43::ModuleInfo
end_hook_	sanitizer_common/sanitizer_symbolizer.h	/^  EndSymbolizationHook end_hook_;$/;"	m	class:__sanitizer::final
end_relptr	hwasan/hwasan_globals.cpp	/^  s32 end_relptr;$/;"	m	struct:__hwasan::hwasan_global_note
ensureCurrentEpoch	sanitizer_common/sanitizer_deadlock_detector.h	/^  void ensureCurrentEpoch(DeadlockDetectorTLS<BV> *dtls) {$/;"	f	class:__sanitizer::DeadlockDetector
ensureCurrentEpoch	sanitizer_common/sanitizer_deadlock_detector.h	/^  void ensureCurrentEpoch(uptr current_epoch) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
entries	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 entries;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
entries_index	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 entries_index;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
entries_index_m	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 entries_index_m;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
entries_index_s1	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 entries_index_s1, entries_index_s2;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
entries_index_s2	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 entries_index_s1, entries_index_s2;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
entries_m	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 entries_m;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
entries_s1	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 entries_s1, entries_s2;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
entries_s2	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 entries_s1, entries_s2;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
enum_dmx_source_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned enum_dmx_source_sz = sizeof(dmx_source_t);$/;"	m	namespace:__sanitizer
enum_fe_sec_mini_cmd_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned enum_fe_sec_mini_cmd_sz = sizeof(enum fe_sec_mini_cmd);$/;"	m	namespace:__sanitizer
enum_fe_sec_tone_mode_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned enum_fe_sec_tone_mode_sz = sizeof(enum fe_sec_tone_mode);$/;"	m	namespace:__sanitizer
enum_fe_sec_voltage_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned enum_fe_sec_voltage_sz = sizeof(enum fe_sec_voltage);$/;"	m	namespace:__sanitizer
enum_fe_status_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned enum_fe_status_sz = sizeof(enum fe_status);$/;"	m	namespace:__sanitizer
enum_v4l2_priority_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned enum_v4l2_priority_sz = sizeof(enum v4l2_priority);$/;"	m	namespace:__sanitizer
env_vars	sanitizer_common/sanitizer_win.cpp	/^static EnvVariable env_vars[kEnvVariables];$/;"	m	namespace:__sanitizer
environ	sanitizer_common/sanitizer_linux.cpp	103;"	d
epoch	tsan/tsan_defs.h	/^  u64 epoch  : kClkBits;$/;"	m	struct:__tsan::ClockElem
epoch	tsan/tsan_mutexset.h	/^    u64 epoch;$/;"	m	struct:__tsan::MutexSet::Desc
epoch	tsan/tsan_rtl.h	/^  u64 epoch() const {$/;"	f	class:__tsan::FastState
epoch0	tsan/tsan_rtl.h	/^  u64 epoch0;$/;"	m	class:__tsan::final
epoch0	tsan/tsan_trace.h	/^  u64        epoch0;  \/\/ Start epoch for the trace.$/;"	m	struct:__tsan::TraceHeader
epoch1	tsan/tsan_rtl.h	/^  u64 epoch1;$/;"	m	class:__tsan::final
epoch_	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr epoch_;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
eq	sanitizer_common/sanitizer_stackdepot.cpp	/^  bool eq(u32 hash, const args_type &args) const {$/;"	f	struct:__sanitizer::StackDepotNode
errno	sanitizer_common/sanitizer_errno.h	37;"	d
errno_EBUSY	sanitizer_common/sanitizer_errno_codes.h	25;"	d
errno_EINVAL	sanitizer_common/sanitizer_errno_codes.h	26;"	d
errno_ENAMETOOLONG	sanitizer_common/sanitizer_errno_codes.h	27;"	d
errno_ENOMEM	sanitizer_common/sanitizer_errno_codes.h	24;"	d
errno_EOWNERDEAD	sanitizer_common/sanitizer_errno.cpp	/^extern const int errno_EOWNERDEAD = -1;$/;"	m	namespace:__sanitizer
errno_EOWNERDEAD	sanitizer_common/sanitizer_errno.cpp	/^extern const int errno_EOWNERDEAD = EOWNERDEAD;$/;"	m	namespace:__sanitizer
error	tsan/tsan_dispatch_defs.h	/^                                      int error);$/;"	v
error	tsan/tsan_interceptors_libdispatch.cpp	/^typedef void (^cleanup_handler_t)(int error);$/;"	m	namespace:__tsan
error	tsan/tsan_interceptors_libdispatch.cpp	/^typedef void (^fd_handler_t)(dispatch_data_t data, int error);$/;"	m	namespace:__tsan
error_message_	hwasan/hwasan_report.cpp	/^  InternalMmapVector<char> error_message_;$/;"	m	class:__hwasan::ScopedReport
error_message_buffer	asan/asan_report.cpp	/^static char *error_message_buffer = nullptr;$/;"	m	namespace:__asan
error_message_buffer_pos	asan/asan_report.cpp	/^static uptr error_message_buffer_pos = 0;$/;"	m	namespace:__asan
error_message_lock_	hwasan/hwasan_report.cpp	/^  static BlockingMutex error_message_lock_;$/;"	m	class:__hwasan::ScopedReport
error_message_lock_	hwasan/hwasan_report.cpp	/^BlockingMutex ScopedReport::error_message_lock_;$/;"	m	class:__hwasan::ScopedReport
error_message_ptr_	hwasan/hwasan_report.cpp	/^  static InternalMmapVector<char> *error_message_ptr_;$/;"	m	class:__hwasan::ScopedReport
error_message_ptr_	hwasan/hwasan_report.cpp	/^InternalMmapVector<char> *ScopedReport::error_message_ptr_;$/;"	m	class:__hwasan::ScopedReport
error_report_callback	asan/asan_report.cpp	/^static void (*error_report_callback)(const char*);$/;"	m	namespace:__asan
error_report_lock_	asan/asan_report.cpp	/^  ScopedErrorReportLock error_report_lock_;$/;"	m	class:__asan::ScopedInErrorReport
error_report_lock_	hwasan/hwasan_report.cpp	/^  ScopedErrorReportLock error_report_lock_;$/;"	m	class:__hwasan::ScopedReport
error_summary	sanitizer_common/sanitizer_allocator_report.cpp	/^  const char *error_summary;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport
error_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef int error_t;$/;"	t	namespace:__sanitizer
error_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned error_t;$/;"	t	namespace:__sanitizer
esr	sanitizer_common/sanitizer_linux.cpp	/^  uint64_t esr;$/;"	m	struct:__sanitizer::__sanitizer_esr_context
ether_addr	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(ether_addr);$/;"	v
ether_addr	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(ether_addr);$/;"	v
ether_addr	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(ether_addr);$/;"	v
ether_addr	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(ether_addr);$/;"	v
event_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t event_id;$/;"	m	struct:__anon34
event_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t event_id;$/;"	m	struct:__anon38
event_kind	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  iscsi_event_t event_kind;$/;"	m	struct:__anon38
events	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
events	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
events	sanitizer_common/sanitizer_platform_limits_posix.h	/^  short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
events	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short events;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
executable	sanitizer_common/sanitizer_common.h	/^    bool executable;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
exists	sanitizer_common/sanitizer_addrhashmap.h	/^bool AddrHashMap<T, kSize>::Handle::exists() const {$/;"	f	class:__sanitizer::AddrHashMap::Handle
expect	tsan/tsan_interface_ann.cpp	/^  ExpectRace expect;$/;"	m	struct:__tsan::DynamicAnnContext
external	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t external;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
external_peak	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t external_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
external_tag	tsan/tsan_report.h	/^  uptr external_tag;$/;"	m	struct:__tsan::ReportLocation
external_tag	tsan/tsan_report.h	/^  uptr external_tag;$/;"	m	struct:__tsan::ReportMop
extra_spill_area	asan/asan_thread.h	/^  void *extra_spill_area() { return &extra_spill_area_; }$/;"	f	class:__asan::AsanThread
extra_spill_area_	asan/asan_thread.h	/^  uptr extra_spill_area_;$/;"	m	class:__asan::AsanThread
extract	sanitizer_common/sanitizer_list.h	/^  void extract(Item *prev, Item *x) {$/;"	f	struct:__sanitizer::IntrusiveList
f	tsan/tsan_interceptors_posix.cpp	/^  void (*f)();$/;"	m	struct:__tsan::AtExitCtx
f0	tsan/tsan_ppc_regs.h	33;"	d
f1	tsan/tsan_ppc_regs.h	34;"	d
f10	tsan/tsan_ppc_regs.h	43;"	d
f11	tsan/tsan_ppc_regs.h	44;"	d
f12	tsan/tsan_ppc_regs.h	45;"	d
f13	tsan/tsan_ppc_regs.h	46;"	d
f14	tsan/tsan_ppc_regs.h	47;"	d
f15	tsan/tsan_ppc_regs.h	48;"	d
f16	tsan/tsan_ppc_regs.h	49;"	d
f17	tsan/tsan_ppc_regs.h	50;"	d
f18	tsan/tsan_ppc_regs.h	51;"	d
f19	tsan/tsan_ppc_regs.h	52;"	d
f2	tsan/tsan_ppc_regs.h	35;"	d
f20	tsan/tsan_ppc_regs.h	53;"	d
f21	tsan/tsan_ppc_regs.h	54;"	d
f22	tsan/tsan_ppc_regs.h	55;"	d
f23	tsan/tsan_ppc_regs.h	56;"	d
f24	tsan/tsan_ppc_regs.h	57;"	d
f25	tsan/tsan_ppc_regs.h	58;"	d
f26	tsan/tsan_ppc_regs.h	59;"	d
f27	tsan/tsan_ppc_regs.h	60;"	d
f28	tsan/tsan_ppc_regs.h	61;"	d
f29	tsan/tsan_ppc_regs.h	62;"	d
f3	tsan/tsan_ppc_regs.h	36;"	d
f30	tsan/tsan_ppc_regs.h	63;"	d
f31	tsan/tsan_ppc_regs.h	64;"	d
f4	tsan/tsan_ppc_regs.h	37;"	d
f5	tsan/tsan_ppc_regs.h	38;"	d
f6	tsan/tsan_ppc_regs.h	39;"	d
f7	tsan/tsan_ppc_regs.h	40;"	d
f8	tsan/tsan_ppc_regs.h	41;"	d
f9	tsan/tsan_ppc_regs.h	42;"	d
f_asyncreads	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_asyncreads;$/;"	m	struct:statvfs90
f_asyncwrites	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_asyncwrites;$/;"	m	struct:statvfs90
f_bavail	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_bavail;$/;"	m	struct:statvfs90
f_bfree	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_bfree;$/;"	m	struct:statvfs90
f_blocks	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_blocks;$/;"	m	struct:statvfs90
f_bresvd	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_bresvd;$/;"	m	struct:statvfs90
f_bsize	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long f_bsize;$/;"	m	struct:statvfs90
f_favail	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_favail;$/;"	m	struct:statvfs90
f_ffree	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_ffree;$/;"	m	struct:statvfs90
f_files	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_files;$/;"	m	struct:statvfs90
f_flag	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long f_flag;$/;"	m	struct:statvfs90
f_fresvd	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_fresvd;$/;"	m	struct:statvfs90
f_frsize	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long f_frsize;$/;"	m	struct:statvfs90
f_fsid	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long f_fsid;$/;"	m	struct:statvfs90
f_fsidx	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  } f_fsidx;$/;"	m	struct:statvfs90	typeref:struct:statvfs90::__anon39
f_fstypename	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char f_fstypename[32];$/;"	m	struct:statvfs90
f_handle	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned char f_handle[1];  \/\/ variable sized$/;"	m	struct:__sanitizer::__sanitizer_file_handle
f_iosize	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long f_iosize;$/;"	m	struct:statvfs90
f_mntfromname	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char f_mntfromname[32];$/;"	m	struct:statvfs90
f_mntonname	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char f_mntonname[32];$/;"	m	struct:statvfs90
f_namemax	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned long f_namemax;$/;"	m	struct:statvfs90
f_owner	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u32 f_owner;$/;"	m	struct:statvfs90
f_spare	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u32 f_spare[4];$/;"	m	struct:statvfs90
f_syncreads	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_syncreads;$/;"	m	struct:statvfs90
f_syncwrites	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u64 f_syncwrites;$/;"	m	struct:statvfs90
failed_to_start_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool failed_to_start_;$/;"	m	class:__sanitizer::SymbolizerProcess
fake_mallinfo	asan/asan_malloc_linux.cpp	/^struct fake_mallinfo {$/;"	s
fake_mallinfo	lsan/lsan_interceptors.cpp	/^struct fake_mallinfo {$/;"	s	namespace:std
fake_shared_weak_count	tsan/tsan_interceptors_mac.cpp	/^struct fake_shared_weak_count {$/;"	s	namespace:__tsan::__anon78
fake_stack	asan/asan_thread.h	/^  FakeStack *fake_stack() {$/;"	f	class:__asan::AsanThread
fake_stack_	asan/asan_thread.h	/^  FakeStack *fake_stack_;$/;"	m	class:__asan::AsanThread
fake_stack_tls	asan/asan_fake_stack.cpp	/^static THREADLOCAL FakeStack *fake_stack_tls;$/;"	m	namespace:__asan
fake_tsd	asan/asan_win.cpp	/^static __declspec(thread) void *fake_tsd = 0;$/;"	m	namespace:__asan
fallbackInit	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void ListOfModules::fallbackInit() {$/;"	f	class:__sanitizer::ListOfModules
fallbackInit	sanitizer_common/sanitizer_mac.cpp	/^void ListOfModules::fallbackInit() { clear(); }$/;"	f	class:__sanitizer::ListOfModules
fallbackInit	sanitizer_common/sanitizer_win.cpp	/^void ListOfModules::fallbackInit() { clear(); }$/;"	f	class:__sanitizer::ListOfModules
fallback_allocator_cache	asan/asan_allocator.cpp	/^  AllocatorCache fallback_allocator_cache;$/;"	m	struct:__asan::Allocator
fallback_allocator_cache	hwasan/hwasan_allocator.cpp	/^static AllocatorCache fallback_allocator_cache;$/;"	m	namespace:__hwasan
fallback_modules_	sanitizer_common/sanitizer_symbolizer.h	/^  ListOfModules fallback_modules_;$/;"	m	class:__sanitizer::final
fallback_mutex	asan/asan_allocator.cpp	/^  StaticSpinMutex fallback_mutex;$/;"	m	struct:__asan::Allocator
fallback_mutex	hwasan/hwasan_allocator.cpp	/^static SpinMutex fallback_mutex;$/;"	m	namespace:__hwasan
fallback_quarantine_cache	asan/asan_allocator.cpp	/^  QuarantineCache fallback_quarantine_cache;$/;"	m	struct:__asan::Allocator
false_type	sanitizer_common/sanitizer_type_traits.h	/^struct false_type {$/;"	s	namespace:__sanitizer
fast_state	tsan/tsan_rtl.h	/^  FastState fast_state;$/;"	m	struct:__tsan::ThreadState
fast_synch_epoch	tsan/tsan_rtl.h	/^  u64 fast_synch_epoch;$/;"	m	struct:__tsan::ThreadState
fatal	hwasan/hwasan_report.cpp	/^  bool fatal;$/;"	m	class:__hwasan::ScopedReport
fatal	merge.sh	/^fatal() {$/;"	f
fatal_error	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::fatal_error(const char *err) {$/;"	f	class:__sanitizer::FlagParser
fd	sanitizer_common/sanitizer_file.h	/^  fd_t fd;$/;"	m	struct:__sanitizer::FileCloser
fd	sanitizer_common/sanitizer_file.h	/^  fd_t fd;$/;"	m	struct:__sanitizer::ReportFile
fd	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int fd;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
fd	tsan/tsan_report.h	/^  int fd;$/;"	m	struct:__tsan::ReportLocation
fd_pid	sanitizer_common/sanitizer_file.h	/^  uptr fd_pid;$/;"	m	struct:__sanitizer::ReportFile
fd_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef int fd_t;$/;"	t	namespace:__sanitizer
fd_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef void* fd_t;$/;"	t	namespace:__sanitizer
fdctx	tsan/tsan_fd.cpp	/^static FdContext fdctx;$/;"	m	namespace:__tsan
fddesc	tsan/tsan_fd.cpp	/^static FdDesc *fddesc(ThreadState *thr, uptr pc, int fd) {$/;"	f	namespace:__tsan
fds_bits	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned long fds_bits[1024 \/ (8 * sizeof(long))];$/;"	m	struct:__sanitizer::__anon46
fds_bits	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 fds_bits[8];$/;"	m	struct:__sanitizer::__anon15
fds_bits	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long fds_bits[1024 \/ (8 * sizeof(long))];$/;"	m	struct:__sanitizer::__anon54
file	sanitizer_common/sanitizer_symbolizer.h	/^  char *file;$/;"	m	struct:__sanitizer::AddressInfo
file	sanitizer_common/sanitizer_symbolizer.h	/^  char *file;$/;"	m	struct:__sanitizer::DataInfo
file	tsan/tsan_interface_ann.cpp	/^  char *file;$/;"	m	struct:__tsan::ExpectRace
filename	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    const char *filename;$/;"	m	struct:__asan_global_source_location
filename	asan/asan_interface_internal.h	/^    const char *filename;$/;"	m	struct:__asan_global_source_location
filename	sanitizer_common/sanitizer_procmaps.h	/^  char *filename;  \/\/ owned by caller$/;"	m	class:__sanitizer::MemoryMappedSegment
filename_size	sanitizer_common/sanitizer_procmaps.h	/^  uptr filename_size;$/;"	m	class:__sanitizer::MemoryMappedSegment
fileno_unlocked	tsan/tsan_interceptors_posix.cpp	45;"	d
filepath	sanitizer_common/sanitizer_win.cpp	/^  const char *filepath;$/;"	m	struct:__sanitizer::__anon43::ModuleInfo
filesync	tsan/tsan_fd.cpp	/^  FdSync filesync;$/;"	m	struct:__tsan::FdContext
fill_profile_f	sanitizer_common/sanitizer_common.h	/^typedef void (*fill_profile_f)(uptr start, uptr rss, bool file,$/;"	t	namespace:__sanitizer
fillpos_	tsan/tsan_dense_alloc.h	/^  uptr fillpos_;$/;"	m	class:__tsan::DenseSlabAlloc
final	asan/asan_thread.h	/^class AsanThreadContext final : public ThreadContextBase {$/;"	c	namespace:__asan
final	lsan/lsan_posix.h	/^class ThreadContext final : public ThreadContextLsanBase {$/;"	c	namespace:__lsan
final	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^class TracePcGuardController final {$/;"	c	namespace:__sancov::__anon45
final	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^struct DD final : public DDetector {$/;"	s	namespace:__sanitizer
final	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^struct DD final : public DDetector {$/;"	s	namespace:__sanitizer
final	sanitizer_common/sanitizer_flag_parser.h	/^  bool Format(char *buffer, uptr size) final;$/;"	m	class:__sanitizer::final
final	sanitizer_common/sanitizer_flag_parser.h	/^  bool Parse(const char *value) final;$/;"	m	class:__sanitizer::final
final	sanitizer_common/sanitizer_flag_parser.h	/^class FlagHandler final : public FlagHandlerBase {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_flags.cpp	/^class FlagHandlerInclude final : public FlagHandlerBase {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_stoptheworld_fuchsia.h	/^class SuspendedThreadsListFuchsia final : public SuspendedThreadsList {};$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^class SuspendedThreadsListLinux final : public SuspendedThreadsList {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^class SuspendedThreadsListMac final : public SuspendedThreadsList {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^class SuspendedThreadsListNetBSD final : public SuspendedThreadsList {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer.h	/^class Symbolizer final {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_internal.h	/^class LLVMSymbolizer final : public SymbolizerTool {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^class LibbacktraceSymbolizer final : public SymbolizerTool {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_libcdep.cpp	/^class LLVMSymbolizerProcess final : public SymbolizerProcess {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^class AtosSymbolizerProcess final : public SymbolizerProcess {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_mac.h	/^class AtosSymbolizer final : public SymbolizerTool {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_mac.h	/^class DlAddrSymbolizer final : public SymbolizerTool {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^class Addr2LinePool final : public SymbolizerTool {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^class Addr2LineProcess final : public SymbolizerProcess {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^class InternalSymbolizer final : public SymbolizerTool {$/;"	c	namespace:__sanitizer
final	sanitizer_common/sanitizer_symbolizer_win.cpp	/^class WinSymbolizerTool final : public SymbolizerTool {$/;"	c	namespace:__sanitizer::__anon9
final	tsan/tsan_rtl.h	/^class ThreadContext final : public ThreadContextBase {$/;"	c	namespace:__tsan
final	tsan/tsan_rtl_mutex.cpp	/^struct Callback final : public DDCallback {$/;"	s	namespace:__tsan
finalize	tsan/tsan_interceptors_posix.cpp	/^static void finalize(void *arg) {$/;"	f	namespace:__tsan
finalize_key	tsan/tsan_interceptors_posix.cpp	/^  unsigned finalize_key;$/;"	m	struct:__tsan::InterceptorContext
find	sanitizer_common/sanitizer_stackdepotbase.h	/^Node *StackDepotBase<Node, kReservedBits, kTabSizeLog>::find(Node *s,$/;"	f	class:__sanitizer::StackDepotBase
findBaseAtOffset	ubsan/ubsan_type_hash_itanium.cpp	/^static const abi::__class_type_info *findBaseAtOffset($/;"	f
findEdge	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool findEdge(uptr from_node, uptr to_node, u32 *stk_from, u32 *stk_to,$/;"	f	class:__sanitizer::DeadlockDetector
findLockContext	sanitizer_common/sanitizer_deadlock_detector.h	/^  u32 findLockContext(DeadlockDetectorTLS<BV> *dtls, uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
findLockContext	sanitizer_common/sanitizer_deadlock_detector.h	/^  u32 findLockContext(uptr lock_id) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
findPath	sanitizer_common/sanitizer_bvgraph.h	/^  uptr findPath(uptr from, const BV &targets, uptr *path, uptr path_size) {$/;"	f	class:__sanitizer::BVGraph
findPathToLock	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr findPathToLock(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, uptr *path,$/;"	f	class:__sanitizer::DeadlockDetector
findShortestPath	sanitizer_common/sanitizer_bvgraph.h	/^  uptr findShortestPath(uptr from, const BV &targets, uptr *path,$/;"	f	class:__sanitizer::BVGraph
fired_suppressions	tsan/tsan_rtl.h	/^  InternalMmapVector<FiredSuppression> fired_suppressions;$/;"	m	struct:__tsan::Context
fired_suppressions_mtx	tsan/tsan_rtl.h	/^  Mutex fired_suppressions_mtx;$/;"	m	struct:__tsan::Context
first	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  bool first;$/;"	m	struct:__sanitizer::DlIteratePhdrData
first	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^  SymbolizedStack *first;$/;"	m	struct:__sanitizer::__anon11::SymbolizeCodeCallbackArg
first_	sanitizer_common/sanitizer_list.h	/^  Item *first_;$/;"	m	struct:__sanitizer::IntrusiveList
fix_mmap_addr	tsan/tsan_interceptors_posix.cpp	/^static bool fix_mmap_addr(void **addr, long_t sz, int flags) {$/;"	f
flag	tsan/tsan_interceptors_mac.cpp	/^  void *flag;$/;"	m	struct:__tsan::__anon79::call_once_callback_args
flags	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_flags.h	/^inline Flags *flags() {$/;"	f	namespace:__asan
flags	asan/asan_flags.h	/^inline Flags *flags() {$/;"	f	namespace:__asan
flags	hwasan/hwasan.cpp	/^Flags *flags() {$/;"	f	namespace:__hwasan
flags	lsan/lsan_common.h	/^inline Flags *flags() { return &lsan_flags; }$/;"	f	namespace:__lsan
flags	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  DDFlags flags;$/;"	m	struct:__sanitizer::final
flags	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  DDFlags flags;$/;"	m	struct:__sanitizer::final
flags	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int flags;$/;"	m	struct:__sanitizer::__sanitizer_nvlist_ref_t
flags	tsan/tsan_rtl.h	/^  Flags flags;$/;"	m	struct:__tsan::Context
flags	tsan/tsan_rtl.h	/^ALWAYS_INLINE Flags *flags() {$/;"	f	namespace:__tsan
flags	tsan/tsan_sync.h	/^  atomic_uint32_t flags;$/;"	m	struct:__tsan::SyncVar
flags	ubsan/ubsan_flags.h	/^inline Flags *flags() { return &ubsan_flags; }$/;"	f	namespace:__ubsan
flags	ubsan/ubsan_type_hash_itanium.cpp	/^  unsigned int flags;$/;"	m	class:__cxxabiv1::__vmi_class_type_info
flags_	sanitizer_common/sanitizer_flag_parser.h	/^  } *flags_;$/;"	m	class:__sanitizer::FlagParser	typeref:struct:__sanitizer::FlagParser::Flag
fn_	sanitizer_common/sanitizer_common.h	/^  Fn fn_;$/;"	m	class:__sanitizer::RunOnDestruction
force_interface_symbols	asan/asan_rtl.cpp	/^static NOINLINE void force_interface_symbols() {$/;"	f	namespace:__asan
fpos_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned fpos_t_sz = sizeof(fpos_t);$/;"	m	namespace:__sanitizer
fpos_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const unsigned fpos_t_sz = sizeof(fpos_t);$/;"	m	namespace:__sanitizer
frame_descr	asan/asan_descriptions.h	/^  const char *frame_descr;$/;"	m	struct:__asan::StackAddressDescription
frame_descr	asan/asan_thread.h	/^    const char *frame_descr;$/;"	m	struct:__asan::AsanThread::StackFrameAccess
frame_offset	sanitizer_common/sanitizer_symbolizer.h	/^  sptr frame_offset;$/;"	m	struct:__sanitizer::LocalInfo
frame_pc	asan/asan_descriptions.h	/^  uptr frame_pc;$/;"	m	struct:__asan::StackAddressDescription
frame_pc	asan/asan_thread.h	/^    uptr frame_pc;$/;"	m	struct:__asan::AsanThread::StackFrameAccess
frames	tsan/tsan_report.h	/^  SymbolizedStack *frames;$/;"	m	struct:__tsan::ReportStack
frames_symbolized	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^  uptr frames_symbolized;$/;"	m	struct:__sanitizer::__anon11::SymbolizeCodeCallbackArg
free	asan/asan_malloc_linux.cpp	/^  void (*free)(void *mem);$/;"	m	struct:MallocDebugK
free	asan/asan_malloc_linux.cpp	/^  void (*free)(void *mem);$/;"	m	struct:MallocDebugL
free	asan/asan_malloc_win.cpp	/^void free(void *ptr) {$/;"	f
free	sanitizer_common/sanitizer_rtems.cpp	17;"	d
free_context_id	asan/asan_allocator.cpp	/^  atomic_uint64_t free_context_id;$/;"	m	class:__asan::ChunkBase
free_context_id	hwasan/hwasan_allocator.h	/^  u32  free_context_id;$/;"	m	struct:__hwasan::HeapAllocationRecord
free_context_in_callback	tsan/tsan_interceptors_libdispatch.cpp	/^  bool free_context_in_callback;$/;"	m	struct:__tsan::__anon77
free_hook	sanitizer_common/sanitizer_common.cpp	/^  void (*free_hook)(const void *);$/;"	m	struct:__sanitizer::MallocFreeHook
free_id	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  InternalMmapVector<u32> free_id;$/;"	m	struct:__sanitizer::final
free_list_	hwasan/hwasan_thread_list.h	/^  ThreadListHead free_list_;$/;"	m	class:__hwasan::HwasanThreadList
free_space_	hwasan/hwasan_thread_list.h	/^  uptr free_space_;$/;"	m	class:__hwasan::HwasanThreadList
free_space_end_	hwasan/hwasan_thread_list.h	/^  uptr free_space_end_;$/;"	m	class:__hwasan::HwasanThreadList
free_stack	asan/asan_errors.h	/^  const BufferedStackTrace *free_stack;$/;"	m	struct:__asan::ErrorFreeNotMalloced
free_stack	asan/asan_errors.h	/^  const BufferedStackTrace *free_stack;$/;"	m	struct:__asan::ErrorNewDeleteTypeMismatch
free_stack_id	asan/asan_descriptions.h	/^  u32 free_stack_id;$/;"	m	struct:__asan::HeapAddressDescription
free_tid	asan/asan_descriptions.h	/^  uptr free_tid;$/;"	m	struct:__asan::HeapAddressDescription
freed	asan/asan_stats.h	/^  uptr freed;$/;"	m	struct:__asan::AsanStats
freelist_	tsan/tsan_dense_alloc.h	/^  IndexT freelist_;$/;"	m	class:__tsan::DenseSlabAlloc
frees	asan/asan_stats.h	/^  uptr frees;$/;"	m	struct:__asan::AsanStats
frexp	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(frexp);$/;"	v
from	sanitizer_common/sanitizer_deadlock_detector.h	/^    u16 from;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
front	sanitizer_common/sanitizer_list.h	/^  Item *front() { return first_; }$/;"	f	struct:__sanitizer::IntrusiveList
front	sanitizer_common/sanitizer_list.h	/^  const Item *front() const { return first_; }$/;"	f	struct:__sanitizer::IntrusiveList
frontier	lsan/lsan_common.cpp	/^  Frontier *frontier;$/;"	m	struct:__lsan::InvalidPCParam
frontier	lsan/lsan_common.h	/^  Frontier frontier;$/;"	m	struct:__lsan::CheckForLeaksParam
full_name	sanitizer_common/sanitizer_common.h	/^  const char *full_name() const { return full_name_; }$/;"	f	class:__sanitizer::LoadedModule
full_name_	sanitizer_common/sanitizer_common.h	/^  char *full_name_;  \/\/ Owned.$/;"	m	class:__sanitizer::LoadedModule
full_path	sanitizer_common/sanitizer_file.h	/^  char full_path[kMaxPathLength];$/;"	m	struct:__sanitizer::ReportFile
func	asan/asan_mac.cpp	/^  dispatch_function_t func;$/;"	m	struct:__asan::__anon74
func	lsan/lsan_mac.cpp	/^  dispatch_function_t func;$/;"	m	struct:__lsan::__anon86
func_add	tsan/tsan_interface_atomic.cpp	/^a128 func_add(volatile a128 *v, a128 op) {$/;"	f
func_add	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_add(volatile T *v, T op) {$/;"	f
func_and	tsan/tsan_interface_atomic.cpp	/^a128 func_and(volatile a128 *v, a128 op) {$/;"	f
func_and	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_and(volatile T *v, T op) {$/;"	f
func_append	configure	/^func_append ()$/;"	f
func_arith	configure	/^func_arith ()$/;"	f
func_basename	configure	/^func_basename ()$/;"	f
func_cas	tsan/tsan_interface_atomic.cpp	/^a128 func_cas(volatile a128 *v, a128 cmp, a128 xch) {$/;"	f
func_cas	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_cas(volatile T *v, T cmp, T xch) {$/;"	f
func_dirname	configure	/^func_dirname ()$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_len	configure	/^func_len ()$/;"	f
func_lo2o	configure	/^func_lo2o ()$/;"	f
func_nand	tsan/tsan_interface_atomic.cpp	/^a128 func_nand(volatile a128 *v, a128 op) {$/;"	f
func_nand	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_nand(volatile T *v, T op) {$/;"	f
func_opt_split	configure	/^func_opt_split ()$/;"	f
func_or	tsan/tsan_interface_atomic.cpp	/^a128 func_or(volatile a128 *v, a128 op) {$/;"	f
func_or	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_or(volatile T *v, T op) {$/;"	f
func_stripname	configure	/^func_stripname ()$/;"	f
func_sub	tsan/tsan_interface_atomic.cpp	/^a128 func_sub(volatile a128 *v, a128 op) {$/;"	f
func_sub	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_sub(volatile T *v, T op) {$/;"	f
func_xchg	tsan/tsan_interface_atomic.cpp	/^a128 func_xchg(volatile a128 *v, a128 op) {$/;"	f
func_xchg	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_xchg(volatile T *v, T op) {$/;"	f
func_xform	configure	/^func_xform ()$/;"	f
func_xor	tsan/tsan_interface_atomic.cpp	/^a128 func_xor(volatile a128 *v, a128 op) {$/;"	f
func_xor	tsan/tsan_interface_atomic.cpp	/^template<typename T> T func_xor(volatile T *v, T op) {$/;"	f
function	asan/asan_errors.h	/^  const char *function;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
function	sanitizer_common/sanitizer_symbolizer.h	/^  char *function;$/;"	m	struct:__sanitizer::AddressInfo
function_name	sanitizer_common/sanitizer_symbolizer.h	/^  char *function_name = nullptr;$/;"	m	struct:__sanitizer::LocalInfo
function_offset	sanitizer_common/sanitizer_symbolizer.h	/^  uptr function_offset;$/;"	m	struct:__sanitizer::AddressInfo
g	asan/asan_globals.cpp	/^  Global g;$/;"	m	struct:__asan::DynInitGlobal
g	asan/asan_globals.cpp	/^  const Global *g;$/;"	m	struct:__asan::ListOfGlobals
g_	sanitizer_common/sanitizer_deadlock_detector.h	/^  BVGraph<BV> g_;$/;"	m	class:__sanitizer::DeadlockDetector
g_asan_provider	sanitizer_common/sanitizer_win.cpp	/^TRACELOGGING_DECLARE_PROVIDER(g_asan_provider);$/;"	v
g_first	asan/asan_globals.cpp	/^  Global *g_first, *g_last;$/;"	m	struct:__asan::GlobalRegistrationSite
g_last	asan/asan_globals.cpp	/^  Global *g_first, *g_last;$/;"	m	struct:__asan::GlobalRegistrationSite
g_thread_finalize_key	lsan/lsan_interceptors.cpp	/^static unsigned g_thread_finalize_key;$/;"	m	namespace:std
g_tls_size	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static uptr g_tls_size;$/;"	m	namespace:__sanitizer
g_total_mmaped	sanitizer_common/sanitizer_common.cpp	/^static atomic_uintptr_t g_total_mmaped;$/;"	m	namespace:__sanitizer
get	hwasan/hwasan_report.cpp	/^  StackAllocationsRingBuffer *get() {$/;"	f	class:__hwasan::SavedStackAllocations
get	sanitizer_common/sanitizer_hash.h	/^  u32 get() {$/;"	f	class:__sanitizer::MurMur2HashBuilder
get	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^LibbacktraceSymbolizer *LibbacktraceSymbolizer::get(LowLevelAllocator *alloc) {$/;"	f	class:__sanitizer::LibbacktraceSymbolizer
get	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  static InternalSymbolizer *get(LowLevelAllocator *alloc) { return 0; }$/;"	f	class:__sanitizer::final
get	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  static InternalSymbolizer *get(LowLevelAllocator *alloc) {$/;"	f	class:__sanitizer::final
get	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  HANDLE get() { return h_; }$/;"	f	struct:__sanitizer::__anon10::ScopedHandle
get	tsan/tsan_clock.cpp	/^u64 SyncClock::get(unsigned tid) const {$/;"	f	class:__tsan::SyncClock
get	ubsan/ubsan_diag.h	/^  const SymbolizedStack *get() const { return Stack; }$/;"	f	class:__ubsan::SymbolizedStackHolder
getAndClearFirstOne	sanitizer_common/sanitizer_bitvector.h	/^  uptr getAndClearFirstOne() {$/;"	f	class:__sanitizer::BasicBitVector
getAndClearFirstOne	sanitizer_common/sanitizer_bitvector.h	/^  uptr getAndClearFirstOne() {$/;"	f	class:__sanitizer::TwoLevelBitVector
getAvailableNode	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getAvailableNode(uptr data) {$/;"	f	class:__sanitizer::DeadlockDetector
getBit	sanitizer_common/sanitizer_bitvector.h	/^  bool getBit(uptr idx) const { return (bits_ & mask(idx)) != 0; }$/;"	f	class:__sanitizer::BasicBitVector
getBit	sanitizer_common/sanitizer_bitvector.h	/^  bool getBit(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
getCallerLocation	ubsan/ubsan_diag.h	/^inline SymbolizedStack *getCallerLocation(uptr CallerPC) {$/;"	f	namespace:__ubsan
getColumn	ubsan/ubsan_value.h	/^  unsigned getColumn() const { return Column; }$/;"	f	class:__ubsan::SourceLocation
getData	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getData(uptr node) const { return data_[nodeToIndex(node)]; }$/;"	f	class:__sanitizer::DeadlockDetector
getDynamicTypeInfoFromObject	ubsan/ubsan_type_hash.cpp	/^__ubsan::DynamicTypeInfo __ubsan::getDynamicTypeInfoFromObject(void *Object) {$/;"	f	class:__ubsan
getDynamicTypeInfoFromVtable	ubsan/ubsan_type_hash_itanium.cpp	/^__ubsan::getDynamicTypeInfoFromVtable(void *VtablePtr) {$/;"	f	class:__ubsan
getDynamicTypeInfoFromVtable	ubsan/ubsan_type_hash_win.cpp	/^__ubsan::getDynamicTypeInfoFromVtable(void *VtablePtr) {$/;"	f	class:__ubsan
getEnd	ubsan/ubsan_diag.h	/^  Location getEnd() const { return End; }$/;"	f	class:__ubsan::Range
getEpoch	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getEpoch() const { return epoch_; }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getFilename	ubsan/ubsan_value.h	/^  const char *getFilename() const { return Filename; }$/;"	f	class:__ubsan::SourceLocation
getFloatBitWidth	ubsan/ubsan_value.h	/^  unsigned getFloatBitWidth() const {$/;"	f	class:__ubsan::TypeDescriptor
getFloatValue	ubsan/ubsan_value.cpp	/^FloatMax Value::getFloatValue() const {$/;"	f	class:Value
getIntegerBitWidth	ubsan/ubsan_value.h	/^  unsigned getIntegerBitWidth() const {$/;"	f	class:__ubsan::TypeDescriptor
getKind	ubsan/ubsan_diag.h	/^  LocationKind getKind() const { return Kind; }$/;"	f	class:__ubsan::Location
getKind	ubsan/ubsan_value.h	/^  Kind getKind() const {$/;"	f	class:__ubsan::TypeDescriptor
getLine	ubsan/ubsan_value.h	/^  unsigned getLine() const { return Line; }$/;"	f	class:__ubsan::SourceLocation
getLock	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getLock(uptr idx) const { return all_locks_with_contexts_[idx].lock; }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getLocks	sanitizer_common/sanitizer_deadlock_detector.h	/^  const BV &getLocks(uptr current_epoch) const {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getMemoryLocation	ubsan/ubsan_diag.h	/^  MemoryLocation getMemoryLocation() const {$/;"	f	class:__ubsan::Location
getMostDerivedTypeName	ubsan/ubsan_type_hash.h	/^  const char *getMostDerivedTypeName() const { return MostDerivedTypeName; }$/;"	f	class:__ubsan::DynamicTypeInfo
getMutex	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^Mutex *DD::getMutex(u32 id) {$/;"	f	class:__sanitizer::DD
getMutexId	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^u32 DD::getMutexId(Mutex *m) {$/;"	f	class:__sanitizer::DD
getName	ubsan/ubsan_diag.h	/^  const char *getName() const { return Name; }$/;"	f	class:__ubsan::TypeName
getNumLocks	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr getNumLocks() const { return n_all_locks_; }$/;"	f	class:__sanitizer::DeadlockDetectorTLS
getObjCClassName	ubsan/ubsan_value.cpp	/^const char *__ubsan::getObjCClassName(ValueHandle Pointer) {$/;"	f	class:__ubsan
getOffset	ubsan/ubsan_type_hash.h	/^  sptr getOffset() const { return Offset; }$/;"	f	class:__ubsan::DynamicTypeInfo
getPositiveIntValue	ubsan/ubsan_value.cpp	/^UIntMax Value::getPositiveIntValue() const {$/;"	f	class:Value
getSIntValue	ubsan/ubsan_value.cpp	/^SIntMax Value::getSIntValue() const {$/;"	f	class:Value
getSourceLocation	ubsan/ubsan_diag.h	/^  SourceLocation getSourceLocation() const {$/;"	f	class:__ubsan::Location
getStart	ubsan/ubsan_diag.h	/^  Location getStart() const { return Start; }$/;"	f	class:__ubsan::Range
getSubobjectTypeName	ubsan/ubsan_type_hash.h	/^  const char *getSubobjectTypeName() const { return SubobjectTypeName; }$/;"	f	class:__ubsan::DynamicTypeInfo
getSymbolizedLocation	ubsan/ubsan_diag.cpp	/^SymbolizedStack *__ubsan::getSymbolizedLocation(uptr PC) {$/;"	f	class:__ubsan
getSymbolizedStack	ubsan/ubsan_diag.h	/^  const SymbolizedStack *getSymbolizedStack() const {$/;"	f	class:__ubsan::Location
getText	ubsan/ubsan_diag.h	/^  const char *getText() const { return Text; }$/;"	f	class:__ubsan::Range
getType	ubsan/ubsan_value.h	/^  const TypeDescriptor &getType() const { return Type; }$/;"	f	class:__ubsan::Value
getTypeCacheHashTableBucket	ubsan/ubsan_type_hash_itanium.cpp	/^static __ubsan::HashValue *getTypeCacheHashTableBucket(__ubsan::HashValue V) {$/;"	f
getTypeName	ubsan/ubsan_value.h	/^  const char *getTypeName() const { return TypeName; }$/;"	f	class:__ubsan::TypeDescriptor
getUIntValue	ubsan/ubsan_value.cpp	/^UIntMax Value::getUIntValue() const {$/;"	f	class:Value
getVtablePrefix	ubsan/ubsan_type_hash_itanium.cpp	/^VtablePrefix *getVtablePrefix(void *Vtable) {$/;"	f	namespace:__anon4
get_allocator	asan/asan_allocator.cpp	/^static AsanAllocator &get_allocator() {$/;"	f	namespace:__asan
get_android_tls_ptr	sanitizer_common/sanitizer_linux.h	/^ALWAYS_INLINE uptr *get_android_tls_ptr() {$/;"	f	namespace:__sanitizer
get_block	tsan/tsan_clock.cpp	/^ALWAYS_INLINE u32 SyncClock::get_block(uptr bi) const {$/;"	f	class:__tsan::SyncClock
get_clean	tsan/tsan_clock.cpp	/^u64 SyncClock::get_clean(unsigned tid) const {$/;"	f	class:__tsan::SyncClock
get_current_rev	merge.sh	/^get_current_rev() {$/;"	f
get_dyld_hdr	sanitizer_common/sanitizer_procmaps_mac.cpp	/^const mach_header *get_dyld_hdr() {$/;"	f	namespace:__sanitizer
get_dyld_image_header	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static mach_header *get_dyld_image_header() {$/;"	f	namespace:__sanitizer
get_handle	sanitizer_common/sanitizer_stackdepot.cpp	/^  StackDepotHandle get_handle() { return StackDepotHandle(this); }$/;"	f	struct:__sanitizer::StackDepotNode
get_new_frame	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^  AddressInfo *get_new_frame(uintptr_t addr) {$/;"	f	struct:__sanitizer::__anon11::SymbolizeCodeCallbackArg
get_requested_size	hwasan/hwasan_allocator.h	/^  u64 get_requested_size() {$/;"	f	struct:__hwasan::Metadata
get_tls_func	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  typedef void (*get_tls_func)(size_t*, size_t*);$/;"	t	struct:__sanitizer::__anon7::GetTlsStaticInfoCall
get_tls_val	lsan/lsan_common_mac.cpp	/^static thread_local_data_t *get_tls_val(bool alloc) {$/;"	f	namespace:__lsan
get_upstream	merge.sh	/^get_upstream() {$/;"	f
getlim	sanitizer_common/sanitizer_posix_libcdep.cpp	/^static rlim_t getlim(int res) {$/;"	f	namespace:__sanitizer
gid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int gid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 gid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int gid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int gid;           \/\/ gid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
gid_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	41;"	d
gid_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	50;"	d
gid_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer
gid_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer
gid_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer
gid_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned gid_t_sz = sizeof(gid_t);$/;"	m	namespace:__sanitizer
gl_closedir	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void (*gl_closedir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_closedir	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void (*gl_closedir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_closedir	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void (*gl_closedir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_errfunc	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int (*gl_errfunc)(const char *, int);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_errfunc	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*gl_errfunc)(const char *, int);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_flags	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int gl_flags;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int gl_flags;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int gl_flags;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_lstat	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int (*gl_lstat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_lstat	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*gl_lstat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_lstat	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int (*gl_lstat)(const char *, void *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_matchc	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr gl_matchc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_matchc	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr gl_matchc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_offs	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr gl_offs;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_opendir	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *(*gl_opendir)(const char *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_opendir	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *(*gl_opendir)(const char *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_opendir	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *(*gl_opendir)(const char *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathc	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr gl_pathc;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathn	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int gl_pathn;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathp	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **gl_pathp;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_pathv	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **gl_pathv;$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_readdir	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  struct dirent *(*gl_readdir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t	typeref:struct:__sanitizer::__sanitizer_glob_t::gl_readdir
gl_readdir	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct dirent *(*gl_readdir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t	typeref:struct:__sanitizer::__sanitizer_glob_t::gl_readdir
gl_readdir	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *(*gl_readdir)(void *dirp);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_stat	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int (*gl_stat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_stat	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int (*gl_stat)(const char *, void * \/* struct stat* *\/);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
gl_stat	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int (*gl_stat)(const char *, void *);$/;"	m	struct:__sanitizer::__sanitizer_glob_t
glob_altdirfunc	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int glob_altdirfunc = GLOB_ALTDIRFUNC;$/;"	m	namespace:__sanitizer
glob_altdirfunc	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int glob_altdirfunc = GLOB_ALTDIRFUNC;$/;"	m	namespace:__sanitizer
glob_altdirfunc	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int glob_altdirfunc = GLOB_ALTDIRFUNC;$/;"	m	namespace:__sanitizer
glob_nomatch	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer
glob_nomatch	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer
glob_nomatch	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer
glob_nomatch	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  int glob_nomatch = GLOB_NOMATCH;$/;"	m	namespace:__sanitizer
glob_t	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(glob_t);$/;"	v
glob_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(glob_t);$/;"	v
glob_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(glob_t);$/;"	v
global	asan/asan_descriptions.h	/^      GlobalAddressDescription global;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon73
global	tsan/tsan_report.h	/^  DataInfo global;$/;"	m	struct:__tsan::ReportLocation
global1	asan/asan_errors.h	/^  __asan_global global1, global2;$/;"	m	struct:__asan::ErrorODRViolation
global2	asan/asan_errors.h	/^  __asan_global global1, global2;$/;"	m	struct:__asan::ErrorODRViolation
global_proc	tsan/tsan_mman.cpp	/^GlobalProc *global_proc() {$/;"	f	namespace:__tsan
global_registration_site_vector	asan/asan_globals.cpp	/^static GlobalRegistrationSiteVector *global_registration_site_vector;$/;"	m	namespace:__asan
globals	asan/asan_descriptions.h	/^  __asan_global globals[kMaxGlobals];$/;"	m	struct:__asan::GlobalAddressDescription
globals_op_fptr	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^typedef void (*globals_op_fptr)(__asan_global *, uptr);$/;"	t	namespace:__asan
globals_op_fptr	asan/asan_internal.h	/^typedef void (*globals_op_fptr)(__asan_global *, uptr);$/;"	t	namespace:__asan
globsync	tsan/tsan_fd.cpp	/^  FdSync globsync;$/;"	m	struct:__tsan::FdContext
gr_gid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_gid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_gid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_gid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int gr_gid;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_mem	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **gr_mem;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_name	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *gr_name;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
gr_passwd	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *gr_passwd;$/;"	m	struct:__sanitizer::__sanitizer_group
group	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(group);$/;"	v
group	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(group);$/;"	v
group	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(group);$/;"	v
group	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(group);$/;"	v
guard_size_	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  uptr guard_size_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard
guard_size_	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  uptr guard_size_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard
guard_start_	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  uptr guard_start_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard
guard_start_	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  uptr guard_start_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard
gv_relptr	hwasan/hwasan_globals.h	/^  s32 gv_relptr;$/;"	m	struct:__hwasan::hwasan_global
h	sanitizer_common/sanitizer_hash.h	/^  u32 h;$/;"	m	class:__sanitizer::MurMur2HashBuilder
h_	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  HANDLE h_;$/;"	m	struct:__sanitizer::__anon10::ScopedHandle
h_addr_list	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addr_list	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addr_list	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addr_list	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **h_addr_list;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_addrtype	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int h_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_aliases	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **h_aliases;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_length	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int h_length;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
h_name	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *h_name;$/;"	m	struct:__sanitizer::__sanitizer_hostent
halt_on_error_	asan/asan_report.cpp	/^  bool halt_on_error_;$/;"	m	class:__asan::ScopedInErrorReport
handleAlignmentAssumptionImpl	ubsan/ubsan_handlers.cpp	/^static void handleAlignmentAssumptionImpl(AlignmentAssumptionData *Data,$/;"	f
handleBuiltinUnreachableImpl	ubsan/ubsan_handlers.cpp	/^static void handleBuiltinUnreachableImpl(UnreachableData *Data,$/;"	f
handleCFIBadIcall	ubsan/ubsan_handlers.cpp	/^static void handleCFIBadIcall(CFICheckFailData *Data, ValueHandle Function,$/;"	f
handleDivremOverflowImpl	ubsan/ubsan_handlers.cpp	/^static void handleDivremOverflowImpl(OverflowData *Data, ValueHandle LHS,$/;"	f
handleFloatCastOverflow	ubsan/ubsan_handlers.cpp	/^static void handleFloatCastOverflow(void *DataPtr, ValueHandle From,$/;"	f
handleFunctionTypeMismatch	ubsan/ubsan_handlers_cxx.cpp	/^static bool handleFunctionTypeMismatch(FunctionTypeMismatchData *Data,$/;"	f	namespace:__ubsan
handleImplicitConversion	ubsan/ubsan_handlers.cpp	/^static void handleImplicitConversion(ImplicitConversionData *Data,$/;"	f
handleIntegerOverflowImpl	ubsan/ubsan_handlers.cpp	/^static void handleIntegerOverflowImpl(OverflowData *Data, ValueHandle LHS,$/;"	f
handleInvalidBuiltin	ubsan/ubsan_handlers.cpp	/^static void handleInvalidBuiltin(InvalidBuiltinData *Data, ReportOptions Opts) {$/;"	f
handleInvalidObjCCast	ubsan/ubsan_handlers.cpp	/^static void handleInvalidObjCCast(InvalidObjCCast *Data, ValueHandle Pointer,$/;"	f
handleLoadInvalidValue	ubsan/ubsan_handlers.cpp	/^static void handleLoadInvalidValue(InvalidValueData *Data, ValueHandle Val,$/;"	f
handleMissingReturnImpl	ubsan/ubsan_handlers.cpp	/^static void handleMissingReturnImpl(UnreachableData *Data, ReportOptions Opts) {$/;"	f
handleNegateOverflowImpl	ubsan/ubsan_handlers.cpp	/^static void handleNegateOverflowImpl(OverflowData *Data, ValueHandle OldVal,$/;"	f
handleNonNullArg	ubsan/ubsan_handlers.cpp	/^static void handleNonNullArg(NonNullArgData *Data, ReportOptions Opts,$/;"	f
handleNonNullReturn	ubsan/ubsan_handlers.cpp	/^static void handleNonNullReturn(NonNullReturnData *Data, SourceLocation *LocPtr,$/;"	f
handleOutOfBoundsImpl	ubsan/ubsan_handlers.cpp	/^static void handleOutOfBoundsImpl(OutOfBoundsData *Data, ValueHandle Index,$/;"	f
handlePointerOverflowImpl	ubsan/ubsan_handlers.cpp	/^static void handlePointerOverflowImpl(PointerOverflowData *Data,$/;"	f
handleShiftOutOfBoundsImpl	ubsan/ubsan_handlers.cpp	/^static void handleShiftOutOfBoundsImpl(ShiftOutOfBoundsData *Data,$/;"	f
handleTypeMismatchImpl	ubsan/ubsan_handlers.cpp	/^static void handleTypeMismatchImpl(TypeMismatchData *Data, ValueHandle Pointer,$/;"	f
handleVLABoundNotPositive	ubsan/ubsan_handlers.cpp	/^static void handleVLABoundNotPositive(VLABoundData *Data, ValueHandle Bound,$/;"	f
handle_bytes	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned int handle_bytes;$/;"	m	struct:__sanitizer::__sanitizer_file_handle
handle_type	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int handle_type;$/;"	m	struct:__sanitizer::__sanitizer_file_handle
handle_type	sanitizer_common/sanitizer_stackdepot.cpp	/^  typedef StackDepotHandle handle_type;$/;"	t	struct:__sanitizer::StackDepotNode
handle_type	sanitizer_common/sanitizer_stackdepotbase.h	/^  typedef typename Node::handle_type handle_type;$/;"	t	class:__sanitizer::StackDepotBase
handler	sanitizer_common/sanitizer_flag_parser.h	/^    FlagHandlerBase *handler;$/;"	m	struct:__sanitizer::FlagParser::Flag
handler	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^    __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon47
handler	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon17
handler	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon18
handler	sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon55
handler	sanitizer_common/sanitizer_platform_limits_posix.h	/^    void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon56
handler	sanitizer_common/sanitizer_platform_limits_posix.h	/^    void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon57
handler	sanitizer_common/sanitizer_platform_limits_solaris.h	/^    __sanitizer_sighandler_ptr handler;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon59
handler	sanitizer_common/sanitizer_platform_limits_solaris.h	/^    void (*handler)(int signo);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon60
hasAllEdges	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool hasAllEdges(DeadlockDetectorTLS<BV> *dtls, uptr cur_node) {$/;"	f	class:__sanitizer::DeadlockDetector
hasEdge	sanitizer_common/sanitizer_bvgraph.h	/^  bool hasEdge(uptr from, uptr to) const {$/;"	f	class:__sanitizer::BVGraph
hasEdge	sanitizer_common/sanitizer_bvgraph.h	/^  bool hasEdge(uptr from, uptr to) { return v[from].getBit(to); }$/;"	f	class:__sanitizer::BVGraph
hasNext	sanitizer_common/sanitizer_bitvector.h	/^    bool hasNext() const { return !bv_.empty(); }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
hasNext	sanitizer_common/sanitizer_bitvector.h	/^    bool hasNext() const {$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
has_dynamic_init	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    uptr has_dynamic_init;   \/\/ Non-zero if the global has dynamic initializer.$/;"	m	struct:__asan_global
has_dynamic_init	asan/asan_interface_internal.h	/^    uptr has_dynamic_init;   \/\/ Non-zero if the global has dynamic initializer.$/;"	m	struct:__asan_global
has_fake_stack	asan/asan_thread.h	/^  bool has_fake_stack() {$/;"	f	class:__asan::AsanThread
has_frame_offset	sanitizer_common/sanitizer_symbolizer.h	/^  bool has_frame_offset = false;$/;"	m	struct:__sanitizer::LocalInfo
has_reported_leaks	lsan/lsan_common.cpp	/^static bool has_reported_leaks = false;$/;"	m	namespace:__lsan
has_size	sanitizer_common/sanitizer_symbolizer.h	/^  bool has_size = false;$/;"	m	struct:__sanitizer::LocalInfo
has_suppression_type_	sanitizer_common/sanitizer_suppressions.h	/^  bool has_suppression_type_[kMaxSuppressionTypes];$/;"	m	class:__sanitizer::SuppressionContext
has_tag_offset	sanitizer_common/sanitizer_symbolizer.h	/^  bool has_tag_offset = false;$/;"	m	struct:__sanitizer::LocalInfo
hash	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *hash;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
hash	sanitizer_common/sanitizer_stackdepot.cpp	/^  static u32 hash(const args_type &args) {$/;"	f	struct:__sanitizer::StackDepotNode
hash	tsan/tsan_defs.h	/^  u64 hash[2];$/;"	m	struct:__tsan::MD5Hash
hash	tsan/tsan_rtl.h	/^  MD5Hash hash[2];$/;"	m	struct:__tsan::RacyStacks
hash_and_use_count	sanitizer_common/sanitizer_stackdepot.cpp	/^  atomic_uint32_t hash_and_use_count; \/\/ hash_bits : 12; use_count : 20;$/;"	m	struct:__sanitizer::StackDepotNode
hash_base	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 *hash_base;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
hash_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr hash_size;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
have_pending_signals	tsan/tsan_interceptors_posix.cpp	/^  atomic_uintptr_t have_pending_signals;$/;"	m	struct:__tsan::ThreadSignalContext
head	sanitizer_common/sanitizer_linux.cpp	/^  struct _aarch64_ctx head;$/;"	m	struct:__sanitizer::__sanitizer_esr_context	typeref:struct:__sanitizer::__sanitizer_esr_context::_aarch64_ctx
head	tsan/tsan_symbolize.cpp	/^  SymbolizedStack *head;$/;"	m	struct:__tsan::SymbolizedStackBuilder
head_	sanitizer_common/sanitizer_lfstack.h	/^  atomic_uint64_t head_;$/;"	m	struct:__sanitizer::LFStack
header	tsan/tsan_external.cpp	/^  const char *header;$/;"	m	struct:__tsan::TagData
headers	tsan/tsan_trace.h	/^  TraceHeader headers[kTraceParts];$/;"	m	struct:__tsan::Trace
heap	asan/asan_descriptions.h	/^      HeapAddressDescription heap;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon73
heap_allocations	hwasan/hwasan_thread.h	/^  HeapAllocationsRingBuffer *heap_allocations() { return heap_allocations_; }$/;"	f	class:__hwasan::Thread
heap_allocations_	hwasan/hwasan_thread.h	/^  HeapAllocationsRingBuffer *heap_allocations_;$/;"	m	class:__hwasan::Thread
heap_begin	tsan/tsan_interface_java.cpp	/^  const uptr heap_begin;$/;"	m	struct:__tsan::JavaContext
heap_chunk_size	tsan/tsan_report.h	/^  uptr heap_chunk_size;$/;"	m	struct:__tsan::ReportLocation
heap_chunk_start	tsan/tsan_report.h	/^  uptr heap_chunk_start;$/;"	m	struct:__tsan::ReportLocation
heap_size	tsan/tsan_interface_java.cpp	/^  const uptr heap_size;$/;"	m	struct:__tsan::JavaContext
hi	tsan/tsan_md5.cpp	/^  MD5_u32plus lo, hi;$/;"	m	struct:__tsan::__anon81
hint_position_	asan/asan_fake_stack.h	/^  uptr hint_position_[kNumberOfSizeClasses];$/;"	m	class:__asan::FakeStack
hit_count	lsan/lsan_common.h	/^  uptr hit_count;$/;"	m	struct:__lsan::Leak
hit_count	sanitizer_common/sanitizer_suppressions.h	/^  atomic_uint32_t hit_count;$/;"	m	struct:__sanitizer::Suppression
hitcount	tsan/tsan_interface_ann.cpp	/^  atomic_uintptr_t hitcount;$/;"	m	struct:__tsan::ExpectRace
hostent	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(hostent);$/;"	v
hostent	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(hostent);$/;"	v
hostent	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(hostent);$/;"	v
hostent	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(hostent);$/;"	v
hwasanThreadList	hwasan/hwasan_thread_list.cpp	/^HwasanThreadList &hwasanThreadList() { return *hwasan_thread_list; }$/;"	f	namespace:__hwasan
hwasan_aligned_alloc	hwasan/hwasan_allocator.cpp	/^void *hwasan_aligned_alloc(uptr alignment, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_allocator_tagging_enabled	hwasan/hwasan_allocator.cpp	/^static atomic_uint8_t hwasan_allocator_tagging_enabled;$/;"	m	namespace:__hwasan
hwasan_calloc	hwasan/hwasan_allocator.cpp	/^void *hwasan_calloc(uptr nmemb, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_flags	hwasan/hwasan.cpp	/^static Flags hwasan_flags;$/;"	m	namespace:__hwasan
hwasan_free	hwasan/hwasan_allocator.cpp	/^void hwasan_free(void *ptr, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_global	hwasan/hwasan_globals.h	/^struct hwasan_global {$/;"	s	namespace:__hwasan
hwasan_global_note	hwasan/hwasan_globals.cpp	/^struct hwasan_global_note {$/;"	s	namespace:__hwasan
hwasan_init_is_running	hwasan/hwasan.cpp	/^bool hwasan_init_is_running;$/;"	m	namespace:__hwasan
hwasan_inited	hwasan/hwasan.cpp	/^int hwasan_inited = 0;$/;"	m	namespace:__hwasan
hwasan_instrumentation_inited	hwasan/hwasan.cpp	/^int hwasan_instrumentation_inited = 0;$/;"	m	namespace:__hwasan
hwasan_malloc	hwasan/hwasan_allocator.cpp	/^void *hwasan_malloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_memalign	hwasan/hwasan_allocator.cpp	/^void *hwasan_memalign(uptr alignment, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_posix_memalign	hwasan/hwasan_allocator.cpp	/^int hwasan_posix_memalign(void **memptr, uptr alignment, uptr size,$/;"	f	namespace:__hwasan
hwasan_pvalloc	hwasan/hwasan_allocator.cpp	/^void *hwasan_pvalloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_realloc	hwasan/hwasan_allocator.cpp	/^void *hwasan_realloc(void *ptr, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_reallocarray	hwasan/hwasan_allocator.cpp	/^void *hwasan_reallocarray(void *ptr, uptr nmemb, uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
hwasan_report_count	hwasan/hwasan.cpp	/^int hwasan_report_count = 0;$/;"	m	namespace:__hwasan
hwasan_thread_list	hwasan/hwasan_thread_list.cpp	/^static HwasanThreadList *hwasan_thread_list;$/;"	m	namespace:__hwasan
hwasan_valloc	hwasan/hwasan_allocator.cpp	/^void *hwasan_valloc(uptr size, StackTrace *stack) {$/;"	f	namespace:__hwasan
i0_	sanitizer_common/sanitizer_bitvector.h	/^    uptr i0_, i1_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
i1_	sanitizer_common/sanitizer_bitvector.h	/^    uptr i0_, i1_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
id	asan/asan_memory_profile.cpp	/^  u32 id;$/;"	m	struct:__asan::AllocationSite
id	lsan/lsan_common.h	/^  u32 id;$/;"	m	struct:__lsan::Leak
id	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 id;$/;"	m	struct:__sanitizer::Id
id	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 id;$/;"	m	struct:__sanitizer::Link
id	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 id;$/;"	m	struct:__sanitizer::ThreadMutex
id	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  uptr id;$/;"	m	struct:__sanitizer::DDMutex
id	sanitizer_common/sanitizer_stackdepot.cpp	/^  u32 id;$/;"	m	struct:__sanitizer::StackDepotNode
id	sanitizer_common/sanitizer_stackdepot.cpp	/^u32 StackDepotHandle::id() { return node_->id; }$/;"	f	class:__sanitizer::StackDepotHandle
id	sanitizer_common/sanitizer_stackdepot.h	/^    u32 id;$/;"	m	struct:__sanitizer::StackDepotReverseMap::IdDescPair
id	tsan/tsan_mutexset.h	/^    u64 id;$/;"	m	struct:__tsan::MutexSet::Desc
id	tsan/tsan_report.h	/^  int id;$/;"	m	struct:__tsan::ReportThread
id	tsan/tsan_report.h	/^  u64 id;$/;"	m	struct:__tsan::ReportMopMutex
id	tsan/tsan_report.h	/^  u64 id;$/;"	m	struct:__tsan::ReportMutex
id_gen	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  int id_gen = 0;$/;"	m	struct:__sanitizer::final
idx0	sanitizer_common/sanitizer_bitvector.h	/^  uptr idx0(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
idx1	sanitizer_common/sanitizer_bitvector.h	/^  uptr idx1(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
idx2	sanitizer_common/sanitizer_bitvector.h	/^  uptr idx2(uptr idx) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
ifa_addr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *ifa_addr;     \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_addr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_addr;     \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_addr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *ifa_addr;     \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_addr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_addr;    \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_addrflags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int ifa_addrflags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_data	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_data;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	487;"	d
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *ifa_dstaddr;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_freebsd.h	150;"	d
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	2668;"	d
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_dstaddr;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_posix.cpp	1159;"	d
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *ifa_dstaddr;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_posix.h	315;"	d
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_solaris.cpp	324;"	d
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_dstaddr; \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_dstaddr	sanitizer_common/sanitizer_platform_limits_solaris.h	121;"	d
ifa_flags	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int ifa_flags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int ifa_flags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned int ifa_flags;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_flags	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 ifa_flags;     \/\/ uint64_t$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_name	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *ifa_name;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_netmask	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *ifa_netmask;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_netmask	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ifa_netmask;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_netmask	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *ifa_netmask;  \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_netmask	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *ifa_netmask; \/\/ (struct sockaddr *)$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs
ifa_next	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifa_next	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifa_next	sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifa_next	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_ifaddrs *ifa_next;$/;"	m	struct:__sanitizer::__sanitizer_ifaddrs	typeref:struct:__sanitizer::__sanitizer_ifaddrs::__sanitizer_ifaddrs
ifaddrs	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifaddrs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifaddrs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifaddrs	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(ifaddrs);$/;"	v
ifc_ifcu	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon48
ifc_ifcu	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon21
ifc_ifcu	sanitizer_common/sanitizer_platform_limits_posix.h	/^  } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon58
ifc_ifcu	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  } ifc_ifcu;$/;"	m	struct:__sanitizer::__sanitizer_ifconf	typeref:union:__sanitizer::__sanitizer_ifconf::__anon61
ifc_len	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifc_len	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifc_len	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifc_len	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int ifc_len;$/;"	m	struct:__sanitizer::__sanitizer_ifconf
ifconf	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifconf	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifconf	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifconf	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(ifconf);$/;"	v
ifcu_req	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^    void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon48
ifcu_req	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon21
ifcu_req	sanitizer_common/sanitizer_platform_limits_posix.h	/^    void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon58
ifcu_req	sanitizer_common/sanitizer_platform_limits_solaris.h	/^    void *ifcu_req;$/;"	m	union:__sanitizer::__sanitizer_ifconf::__anon61
ifq_flags	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned int ifq_flags;$/;"	m	struct:ipftq
ifq_head	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *ifq_head;$/;"	m	struct:ipftq
ifq_lock	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  ipfmutex_t ifq_lock;$/;"	m	struct:ipftq
ifq_next	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *ifq_next;$/;"	m	struct:ipftq
ifq_pnext	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void **ifq_pnext;$/;"	m	struct:ipftq
ifq_ref	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ifq_ref;$/;"	m	struct:ipftq
ifq_tail	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void **ifq_tail;$/;"	m	struct:ipftq
ifq_ttl	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned int ifq_ttl;$/;"	m	struct:ipftq
ignoreReport	ubsan/ubsan_handlers.cpp	/^bool ignoreReport(SourceLocation SLoc, ReportOptions Opts, ErrorType ET) {$/;"	f	namespace:__ubsan
ignore_interceptors	tsan/tsan_rtl.h	/^  int ignore_interceptors;$/;"	m	struct:__tsan::ThreadState
ignore_interceptors_	tsan/tsan_rtl.h	/^  ScopedIgnoreInterceptors ignore_interceptors_;$/;"	m	class:__tsan::ScopedReportBase
ignore_missing_	sanitizer_common/sanitizer_flags.cpp	/^  bool ignore_missing_;$/;"	m	class:__sanitizer::final
ignore_reads_and_writes	tsan/tsan_rtl.h	/^  int ignore_reads_and_writes;$/;"	m	struct:__tsan::ThreadState
ignore_sync	tsan/tsan_rtl.h	/^  int ignore_sync;$/;"	m	struct:__tsan::ThreadState
ignored_code_ranges_	sanitizer_common/sanitizer_libignore.h	/^  LibCodeRange ignored_code_ranges_[kMaxIgnoredRanges];$/;"	m	class:__sanitizer::LibIgnore
ignored_ranges_count_	sanitizer_common/sanitizer_libignore.h	/^  atomic_uintptr_t ignored_ranges_count_;$/;"	m	class:__sanitizer::LibIgnore
ignoring_	tsan/tsan_interceptors.h	/^  bool ignoring_;$/;"	m	class:__tsan::ScopedInterceptor
immediate	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int immediate : 1;$/;"	m	struct:__anon24::__anon25
in_blocking_func	tsan/tsan_interceptors_posix.cpp	/^  atomic_uintptr_t in_blocking_func;$/;"	m	struct:__tsan::ThreadSignalContext
in_blocking_func	tsan/tsan_rtl.h	/^  bool in_blocking_func;$/;"	m	struct:__tsan::JmpBuf
in_ignored_lib	tsan/tsan_rtl.h	/^  bool in_ignored_lib;$/;"	m	struct:__tsan::ThreadState
in_ignored_lib_	tsan/tsan_interceptors.h	/^  bool in_ignored_lib_;$/;"	m	class:__tsan::ScopedInterceptor
in_signal_handler	tsan/tsan_rtl.h	/^  atomic_uintptr_t in_signal_handler;$/;"	m	struct:__tsan::ThreadState
in_signal_handler	tsan/tsan_rtl.h	/^  uptr in_signal_handler;$/;"	m	struct:__tsan::JmpBuf
in_symbolizer	tsan/tsan_interceptors.h	/^inline bool in_symbolizer() {$/;"	f	namespace:__tsan
in_symbolizer	tsan/tsan_rtl.h	/^  bool in_symbolizer;$/;"	m	struct:__tsan::ThreadState
in_the_range	sanitizer_common/sanitizer_allocator_primary64.h	/^    bool in_the_range;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
inc_use_count_unsafe	sanitizer_common/sanitizer_stackdepot.cpp	/^void StackDepotHandle::inc_use_count_unsafe() {$/;"	f	class:__sanitizer::StackDepotHandle
index	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int index;$/;"	m	struct:urio_command
indexToNode	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr indexToNode(uptr idx) const {$/;"	f	class:__sanitizer::DeadlockDetector
index_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 index_size;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
info	hwasan/hwasan_globals.h	/^  u32 info;$/;"	m	struct:__hwasan::hwasan_global
info	sanitizer_common/sanitizer_symbolizer.h	/^  AddressInfo info;$/;"	m	struct:__sanitizer::SymbolizedStack
init	sanitizer_common/sanitizer_common_nolibc.cpp	/^void ListOfModules::init() {}$/;"	f	class:__sanitizer::ListOfModules
init	sanitizer_common/sanitizer_linux_libcdep.cpp	/^void ListOfModules::init() {$/;"	f	class:__sanitizer::ListOfModules
init	sanitizer_common/sanitizer_mac.cpp	/^void ListOfModules::init() {$/;"	f	class:__sanitizer::ListOfModules
init	sanitizer_common/sanitizer_quarantine.h	/^  void init(void *ptr, uptr size) {$/;"	f	struct:__sanitizer::QuarantineBatch
init	sanitizer_common/sanitizer_win.cpp	/^void ListOfModules::init() {$/;"	f	class:__sanitizer::ListOfModules
init	tsan/tsan_fd.cpp	/^static void init(ThreadState *thr, uptr pc, int fd, FdSync *s,$/;"	f	namespace:__tsan
init_cond	tsan/tsan_interceptors_posix.cpp	/^static void *init_cond(void *c, bool force = false) {$/;"	f
init_mu_	sanitizer_common/sanitizer_symbolizer.cpp	/^StaticSpinMutex Symbolizer::init_mu_;$/;"	m	class:__sanitizer::Symbolizer
init_mu_	sanitizer_common/sanitizer_symbolizer.h	/^  static StaticSpinMutex init_mu_;$/;"	m	class:__sanitizer::final
initialized	asan/asan_globals.cpp	/^  bool initialized;$/;"	m	struct:__asan::DynInitGlobal
initialized	sanitizer_common/sanitizer_common.h	/^  bool initialized;$/;"	m	class:__sanitizer::ListOfModules
initialized	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^  bool initialized;$/;"	m	class:__sancov::__anon40::TracePcGuardController
initialized	tsan/tsan_rtl.h	/^  bool initialized;$/;"	m	struct:__tsan::Context
initializer_	ubsan/ubsan_diag.h	/^  Initializer initializer_;$/;"	m	class:__ubsan::ScopedReport
ino_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	37;"	d
ino_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	46;"	d
input_fd_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  fd_t input_fd_;$/;"	m	class:__sanitizer::SymbolizerProcess
instrumented	sanitizer_common/sanitizer_common.h	/^  bool instrumented() const { return instrumented_; }$/;"	f	class:__sanitizer::LoadedModule
instrumented_	sanitizer_common/sanitizer_common.h	/^  bool instrumented_;$/;"	m	class:__sanitizer::LoadedModule
instrumented_code_ranges_	sanitizer_common/sanitizer_libignore.h	/^  LibCodeRange instrumented_code_ranges_[kMaxInstrumentedRanges];$/;"	m	class:__sanitizer::LibIgnore
instrumented_ranges_count_	sanitizer_common/sanitizer_libignore.h	/^  atomic_uintptr_t instrumented_ranges_count_;$/;"	m	class:__sanitizer::LibIgnore
int_alloc_cnt	tsan/tsan_rtl.h	/^  u64 int_alloc_cnt[MBlockTypeCount];$/;"	m	struct:__tsan::Context
int_alloc_siz	tsan/tsan_rtl.h	/^  u64 int_alloc_siz[MBlockTypeCount];$/;"	m	struct:__tsan::Context
int_signal_send	tsan/tsan_interceptors_posix.cpp	/^  int int_signal_send;$/;"	m	struct:__tsan::ThreadSignalContext
int_signal_send	tsan/tsan_rtl.h	/^  int int_signal_send;$/;"	m	struct:__tsan::JmpBuf
interceptWhenPossible	sanitizer_common/sanitizer_win_weak_interception.cpp	/^int interceptWhenPossible(uptr dll_function, const char *real_function) {$/;"	f	namespace:__sanitizer
interceptor_ctx	tsan/tsan_interceptors_posix.cpp	/^InterceptorContext *interceptor_ctx() {$/;"	f	namespace:__tsan
interceptor_name	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interceptors_memintrinsics.h	/^  const char *interceptor_name;$/;"	m	struct:__asan::AsanInterceptorContext
interceptor_name	asan/asan_interceptors_memintrinsics.h	/^  const char *interceptor_name;$/;"	m	struct:__asan::AsanInterceptorContext
interceptor_placeholder	tsan/tsan_interceptors_posix.cpp	/^static ALIGNED(64) char interceptor_placeholder[sizeof(InterceptorContext)];$/;"	m	namespace:__tsan
interface_version	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint16_t interface_version;$/;"	m	struct:__anon23
internal	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t internal;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
internal__exit	sanitizer_common/sanitizer_fuchsia.cpp	/^void NORETURN internal__exit(int exitcode) { _zx_process_exit(exitcode); }$/;"	f	namespace:__sanitizer
internal__exit	sanitizer_common/sanitizer_linux.cpp	/^void internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal__exit	sanitizer_common/sanitizer_mac.cpp	/^void internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal__exit	sanitizer_common/sanitizer_netbsd.cpp	/^void internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal__exit	sanitizer_common/sanitizer_rtems.cpp	/^void NORETURN internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal__exit	sanitizer_common/sanitizer_win.cpp	/^void internal__exit(int exitcode) {$/;"	f	namespace:__sanitizer
internal_alloc	tsan/tsan_mman.cpp	/^void *internal_alloc(MBlockType typ, uptr sz) {$/;"	f	namespace:__tsan
internal_alloc_cache	tsan/tsan_rtl.h	/^  InternalAllocatorCache internal_alloc_cache;$/;"	m	struct:__tsan::Processor
internal_alloc_init_mu	sanitizer_common/sanitizer_allocator.cpp	/^static StaticSpinMutex internal_alloc_init_mu;$/;"	m	namespace:__sanitizer
internal_alloc_placeholder	sanitizer_common/sanitizer_allocator.cpp	/^static ALIGNED(64) char internal_alloc_placeholder[sizeof(InternalAllocator)];$/;"	m	namespace:__sanitizer
internal_allocator	sanitizer_common/sanitizer_allocator.cpp	/^InternalAllocator *internal_allocator() {$/;"	f	namespace:__sanitizer
internal_allocator_cache	sanitizer_common/sanitizer_allocator.cpp	/^static InternalAllocatorCache internal_allocator_cache;$/;"	m	namespace:__sanitizer
internal_allocator_cache_mu	sanitizer_common/sanitizer_allocator.cpp	/^static StaticSpinMutex internal_allocator_cache_mu;$/;"	m	namespace:__sanitizer
internal_allocator_initialized	sanitizer_common/sanitizer_allocator.cpp	/^static atomic_uint8_t internal_allocator_initialized;$/;"	m	namespace:__sanitizer
internal_atoll	sanitizer_common/sanitizer_libc.cpp	/^s64 internal_atoll(const char *nptr) {$/;"	f	namespace:__sanitizer
internal_clock_gettime	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_clock_gettime(__sanitizer_clockid_t clk_id, void *tp) {$/;"	f	namespace:__sanitizer
internal_clock_gettime	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_clock_gettime(__sanitizer_clockid_t clk_id, void *tp) {$/;"	f	namespace:__sanitizer
internal_clock_gettime	sanitizer_common/sanitizer_solaris.cpp	/^uptr internal_clock_gettime(__sanitizer_clockid_t clk_id, void *tp) {$/;"	f	namespace:__sanitizer
internal_clone	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_clone(int (*fn)(void *), void *child_stack, int flags, void *arg,$/;"	f	namespace:__sanitizer
internal_clone	sanitizer_common/sanitizer_linux_s390.cpp	/^uptr internal_clone(int (*fn)(void *), void *child_stack, int flags, void *arg,$/;"	f	namespace:__sanitizer
internal_clone	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_clone(int (*fn)(void *), void *child_stack, int flags,$/;"	f	namespace:__sanitizer
internal_close	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_close(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_close	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_close(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_close	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_close(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_deadlock_detector	tsan/tsan_rtl.h	/^  InternalDeadlockDetector internal_deadlock_detector;$/;"	m	struct:__tsan::ThreadState
internal_dlinfo	sanitizer_common/sanitizer_fuchsia.cpp	/^int internal_dlinfo(void *handle, int request, void *p) {$/;"	f	namespace:__sanitizer
internal_dlinfo	sanitizer_common/sanitizer_linux.cpp	/^int internal_dlinfo(void *handle, int request, void *p) {$/;"	f	namespace:__sanitizer
internal_dlinfo	sanitizer_common/sanitizer_mac.cpp	/^int internal_dlinfo(void *handle, int request, void *p) {$/;"	f	namespace:__sanitizer
internal_dlinfo	sanitizer_common/sanitizer_netbsd.cpp	/^int internal_dlinfo(void *handle, int request, void *p) {$/;"	f	namespace:__sanitizer
internal_dlinfo	sanitizer_common/sanitizer_rtems.cpp	/^int internal_dlinfo(void *handle, int request, void *p) {$/;"	f	namespace:__sanitizer
internal_dlinfo	sanitizer_common/sanitizer_win.cpp	/^int internal_dlinfo(void *handle, int request, void *p) {$/;"	f	namespace:__sanitizer
internal_dup	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_dup(int oldfd) {$/;"	f	namespace:__sanitizer
internal_dup	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_dup(int oldfd) {$/;"	f	namespace:__sanitizer
internal_dup	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_dup(int oldfd) {$/;"	f	namespace:__sanitizer
internal_dup2	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_dup2(int oldfd, int newfd) {$/;"	f	namespace:__sanitizer
internal_dup2	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_dup2(int oldfd, int newfd) {$/;"	f	namespace:__sanitizer
internal_dup2	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_dup2(int oldfd, int newfd) {$/;"	f	namespace:__sanitizer
internal_execve	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_execve(const char *filename, char *const argv[],$/;"	f	namespace:__sanitizer
internal_execve	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_execve(const char *filename, char *const argv[],$/;"	f	namespace:__sanitizer
internal_execve	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_execve(const char *filename, char *const argv[],$/;"	f	namespace:__sanitizer
internal_filesize	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_filesize(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_filesize	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_filesize(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_filesize	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_filesize(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_filesize	sanitizer_common/sanitizer_solaris.cpp	/^uptr internal_filesize(fd_t fd) {$/;"	f	namespace:__sanitizer
internal_fork	sanitizer_common/sanitizer_linux.cpp	/^int internal_fork() {$/;"	f	namespace:__sanitizer
internal_fork	sanitizer_common/sanitizer_mac.cpp	/^int internal_fork() {$/;"	f	namespace:__sanitizer
internal_fork	sanitizer_common/sanitizer_netbsd.cpp	/^int internal_fork() {$/;"	f	namespace:__sanitizer
internal_free	tsan/tsan_mman.cpp	/^void internal_free(void *p) {$/;"	f	namespace:__tsan
internal_fstat	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_fstat(fd_t fd, void *buf) {$/;"	f	namespace:__sanitizer
internal_fstat	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_fstat(fd_t fd, void *buf) {$/;"	f	namespace:__sanitizer
internal_fstat	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_fstat(fd_t fd, void *buf) {$/;"	f	namespace:__sanitizer
internal_ftruncate	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_ftruncate(fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
internal_ftruncate	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_ftruncate(fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
internal_ftruncate	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_ftruncate(fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
internal_ftruncate	sanitizer_common/sanitizer_win.cpp	/^uptr internal_ftruncate(fd_t fd, uptr size) {$/;"	f	namespace:__sanitizer
internal_getdents	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_getdents(fd_t fd, struct linux_dirent *dirp, unsigned int count) {$/;"	f	namespace:__sanitizer
internal_getdents	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_getdents(fd_t fd, void *dirp, unsigned int count) {$/;"	f	namespace:__sanitizer
internal_getpid	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	sanitizer_common/sanitizer_rtems.cpp	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getpid	sanitizer_common/sanitizer_win.cpp	/^uptr internal_getpid() {$/;"	f	namespace:__sanitizer
internal_getppid	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_getppid() {$/;"	f	namespace:__sanitizer
internal_getppid	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_getppid() {$/;"	f	namespace:__sanitizer
internal_join_thread	sanitizer_common/sanitizer_linux.cpp	/^void internal_join_thread(void *th) {$/;"	f	namespace:__sanitizer
internal_join_thread	sanitizer_common/sanitizer_linux.cpp	/^void internal_join_thread(void *th) {}$/;"	f	namespace:__sanitizer
internal_join_thread	sanitizer_common/sanitizer_mac.cpp	/^void internal_join_thread(void *th) { pthread_join((pthread_t)th, 0); }$/;"	f	namespace:__sanitizer
internal_join_thread	sanitizer_common/sanitizer_win.cpp	/^void internal_join_thread(void *th) { }$/;"	f	namespace:__sanitizer
internal_lseek	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_lseek(fd_t fd, OFF_T offset, int whence) {$/;"	f	namespace:__sanitizer
internal_lseek	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_lseek(fd_t fd, OFF_T offset, int whence) {$/;"	f	namespace:__sanitizer
internal_lstat	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_lstat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_lstat	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_lstat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_lstat	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_lstat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_madvise	sanitizer_common/sanitizer_linux.cpp	/^int internal_madvise(uptr addr, uptr length, int advice) {$/;"	f	namespace:__sanitizer
internal_madvise	sanitizer_common/sanitizer_mac.cpp	/^int internal_madvise(uptr addr, uptr length, int advice) {$/;"	f	namespace:__sanitizer
internal_madvise	sanitizer_common/sanitizer_netbsd.cpp	/^int internal_madvise(uptr addr, uptr length, int advice) {$/;"	f	namespace:__sanitizer
internal_madvise	sanitizer_common/sanitizer_solaris.cpp	/^int internal_madvise(uptr addr, uptr length, int advice) {$/;"	f	namespace:__sanitizer
internal_memchr	sanitizer_common/sanitizer_libc.cpp	/^void *internal_memchr(const void *s, int c, uptr n) {$/;"	f	namespace:__sanitizer
internal_memcmp	sanitizer_common/sanitizer_libc.cpp	/^int internal_memcmp(const void* s1, const void* s2, uptr n) {$/;"	f	namespace:__sanitizer
internal_memcpy	sanitizer_common/sanitizer_libc.cpp	/^void *internal_memcpy(void *dest, const void *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_memmove	sanitizer_common/sanitizer_libc.cpp	/^void *internal_memmove(void *dest, const void *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_memrchr	sanitizer_common/sanitizer_libc.cpp	/^void *internal_memrchr(const void *s, int c, uptr n) {$/;"	f	namespace:__sanitizer
internal_memset	sanitizer_common/sanitizer_libc.cpp	/^void *internal_memset(void* s, int c, uptr n) {$/;"	f	namespace:__sanitizer
internal_mmap	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_mmap(void *addr, uptr length, int prot, int flags, int fd,$/;"	f	namespace:__sanitizer
internal_mmap	sanitizer_common/sanitizer_linux_s390.cpp	/^uptr internal_mmap(void *addr, uptr length, int prot, int flags, int fd,$/;"	f	namespace:__sanitizer
internal_mmap	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_mmap(void *addr, size_t length, int prot, int flags,$/;"	f	namespace:__sanitizer
internal_mmap	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_mmap(void *addr, uptr length, int prot, int flags, int fd,$/;"	f	namespace:__sanitizer
internal_mprotect	sanitizer_common/sanitizer_linux.cpp	/^int internal_mprotect(void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
internal_mprotect	sanitizer_common/sanitizer_mac.cpp	/^int internal_mprotect(void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
internal_mprotect	sanitizer_common/sanitizer_netbsd.cpp	/^int internal_mprotect(void *addr, uptr length, int prot) {$/;"	f	namespace:__sanitizer
internal_munmap	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_munmap(void *addr, uptr length) {$/;"	f	namespace:__sanitizer
internal_munmap	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_munmap(void *addr, uptr length) {$/;"	f	namespace:__sanitizer
internal_munmap	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_munmap(void *addr, uptr length) {$/;"	f	namespace:__sanitizer
internal_nanosleep	sanitizer_common/sanitizer_fuchsia.cpp	/^static void internal_nanosleep(zx_time_t ns) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_open(const char *filename, int flags) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_open(const char *filename, int flags, u32 mode) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_open(const char *filename, int flags) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_open(const char *filename, int flags, u32 mode) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_open(const char *filename, int flags) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_open(const char *filename, int flags, u32 mode) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_solaris.cpp	/^uptr internal_open(const char *filename, int flags) {$/;"	f	namespace:__sanitizer
internal_open	sanitizer_common/sanitizer_solaris.cpp	/^uptr internal_open(const char *filename, int flags, u32 mode) {$/;"	f	namespace:__sanitizer
internal_peak	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t internal_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
internal_prctl	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_prctl(int option, uptr arg2, uptr arg3, uptr arg4, uptr arg5) {$/;"	f	namespace:__sanitizer
internal_prctl	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_prctl(int option, uptr arg2, uptr arg3, uptr arg4, uptr arg5) {$/;"	f	namespace:__sanitizer
internal_ptrace	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_ptrace(int request, int pid, void *addr, void *data) {$/;"	f	namespace:__sanitizer
internal_ptrace	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_ptrace(int request, int pid, void *addr, int data) {$/;"	f	namespace:__sanitizer
internal_read	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_read(fd_t fd, void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_read	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_read(fd_t fd, void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_read	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_read(fd_t fd, void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_readlink	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_readlink(const char *path, char *buf, uptr bufsize) {$/;"	f	namespace:__sanitizer
internal_readlink	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_readlink(const char *path, char *buf, uptr bufsize) {$/;"	f	namespace:__sanitizer
internal_readlink	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_readlink(const char *path, char *buf, uptr bufsize) {$/;"	f	namespace:__sanitizer
internal_rename	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_rename(const char *oldpath, const char *newpath) {$/;"	f	namespace:__sanitizer
internal_rename	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_rename(const char *oldpath, const char *newpath) {$/;"	f	namespace:__sanitizer
internal_rename	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_rename(const char *oldpath, const char *newpath) {$/;"	f	namespace:__sanitizer
internal_sched_yield	sanitizer_common/sanitizer_fuchsia.cpp	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	sanitizer_common/sanitizer_rtems.cpp	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sched_yield	sanitizer_common/sanitizer_win.cpp	/^uptr internal_sched_yield() {$/;"	f	namespace:__sanitizer
internal_sigaction	sanitizer_common/sanitizer_linux_libcdep.cpp	/^int internal_sigaction(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
internal_sigaction	sanitizer_common/sanitizer_mac.cpp	/^int internal_sigaction(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
internal_sigaction_norestorer	sanitizer_common/sanitizer_linux.cpp	/^int internal_sigaction_norestorer(int signum, const void *act, void *oldact) {$/;"	f	namespace:__sanitizer
internal_sigaction_norestorer	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	40;"	d
internal_sigaltstack	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_sigaltstack(const void *ss, void *oss) {$/;"	f	namespace:__sanitizer
internal_sigaltstack	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_sigaltstack(const void *ss, void *oss) {$/;"	f	namespace:__sanitizer
internal_sigdelset	sanitizer_common/sanitizer_linux.cpp	/^void internal_sigdelset(__sanitizer_sigset_t *set, int signum) {$/;"	f	namespace:__sanitizer
internal_sigdelset	sanitizer_common/sanitizer_netbsd.cpp	/^void internal_sigdelset(__sanitizer_sigset_t *set, int signo) {$/;"	f	namespace:__sanitizer
internal_sigemptyset	sanitizer_common/sanitizer_linux.cpp	/^void internal_sigemptyset(__sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
internal_sigemptyset	sanitizer_common/sanitizer_netbsd.cpp	/^void internal_sigemptyset(__sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
internal_sigfillset	sanitizer_common/sanitizer_linux.cpp	/^void internal_sigfillset(__sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
internal_sigfillset	sanitizer_common/sanitizer_mac.cpp	/^void internal_sigfillset(__sanitizer_sigset_t *set) { sigfillset(set); }$/;"	f	namespace:__sanitizer
internal_sigfillset	sanitizer_common/sanitizer_netbsd.cpp	/^void internal_sigfillset(__sanitizer_sigset_t *set) {$/;"	f	namespace:__sanitizer
internal_sigismember	sanitizer_common/sanitizer_linux.cpp	/^bool internal_sigismember(__sanitizer_sigset_t *set, int signum) {$/;"	f	namespace:__sanitizer
internal_sigprocmask	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_sigprocmask(int how, __sanitizer_sigset_t *set,$/;"	f	namespace:__sanitizer
internal_sigprocmask	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_sigprocmask(int how, __sanitizer_sigset_t *set,$/;"	f	namespace:__sanitizer
internal_sigprocmask	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_sigprocmask(int how, __sanitizer_sigset_t *set,$/;"	f	namespace:__sanitizer
internal_simple_strtoll	sanitizer_common/sanitizer_libc.cpp	/^s64 internal_simple_strtoll(const char *nptr, const char **endptr, int base) {$/;"	f	namespace:__sanitizer
internal_sleep	sanitizer_common/sanitizer_fuchsia.cpp	/^unsigned int internal_sleep(unsigned int seconds) {$/;"	f	namespace:__sanitizer
internal_sleep	sanitizer_common/sanitizer_linux.cpp	/^unsigned int internal_sleep(unsigned int seconds) {$/;"	f	namespace:__sanitizer
internal_sleep	sanitizer_common/sanitizer_mac.cpp	/^unsigned int internal_sleep(unsigned int seconds) {$/;"	f	namespace:__sanitizer
internal_sleep	sanitizer_common/sanitizer_netbsd.cpp	/^unsigned int internal_sleep(unsigned int seconds) {$/;"	f	namespace:__sanitizer
internal_snprintf	sanitizer_common/sanitizer_printf.cpp	/^int internal_snprintf(char *buffer, uptr length, const char *format, ...) {$/;"	f	namespace:__sanitizer
internal_spawn	sanitizer_common/sanitizer_mac.cpp	/^fd_t internal_spawn(const char *argv[], const char *envp[], pid_t *pid) {$/;"	f	namespace:__sanitizer
internal_spawn_impl	sanitizer_common/sanitizer_mac.cpp	/^static fd_t internal_spawn_impl(const char *argv[], const char *envp[],$/;"	f	namespace:__sanitizer
internal_start_thread	sanitizer_common/sanitizer_linux.cpp	/^void *internal_start_thread(void *(*func)(void *), void *arg) { return 0; }$/;"	f	namespace:__sanitizer
internal_start_thread	sanitizer_common/sanitizer_linux.cpp	/^void *internal_start_thread(void *(*func)(void *arg), void *arg) {$/;"	f	namespace:__sanitizer
internal_start_thread	sanitizer_common/sanitizer_mac.cpp	/^void *internal_start_thread(void *(*func)(void *arg), void *arg) {$/;"	f	namespace:__sanitizer
internal_start_thread	sanitizer_common/sanitizer_win.cpp	/^void *internal_start_thread(void *(*func)(void *arg), void *arg) { return 0; }$/;"	f	namespace:__sanitizer
internal_stat	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_stat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_stat	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_stat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_stat	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_stat(const char *path, void *buf) {$/;"	f	namespace:__sanitizer
internal_strchr	sanitizer_common/sanitizer_libc.cpp	/^char* internal_strchr(const char *s, int c) {$/;"	f	namespace:__sanitizer
internal_strchrnul	sanitizer_common/sanitizer_libc.cpp	/^char *internal_strchrnul(const char *s, int c) {$/;"	f	namespace:__sanitizer
internal_strcmp	sanitizer_common/sanitizer_libc.cpp	/^int internal_strcmp(const char *s1, const char *s2) {$/;"	f	namespace:__sanitizer
internal_strcspn	sanitizer_common/sanitizer_libc.cpp	/^uptr internal_strcspn(const char *s, const char *reject) {$/;"	f	namespace:__sanitizer
internal_strdup	sanitizer_common/sanitizer_libc.cpp	/^char* internal_strdup(const char *s) {$/;"	f	namespace:__sanitizer
internal_strlcat	sanitizer_common/sanitizer_libc.cpp	/^uptr internal_strlcat(char *dst, const char *src, uptr maxlen) {$/;"	f	namespace:__sanitizer
internal_strlcpy	sanitizer_common/sanitizer_libc.cpp	/^uptr internal_strlcpy(char *dst, const char *src, uptr maxlen) {$/;"	f	namespace:__sanitizer
internal_strlen	sanitizer_common/sanitizer_libc.cpp	/^uptr internal_strlen(const char *s) {$/;"	f	namespace:__sanitizer
internal_strncat	sanitizer_common/sanitizer_libc.cpp	/^char *internal_strncat(char *dst, const char *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_strncmp	sanitizer_common/sanitizer_libc.cpp	/^int internal_strncmp(const char *s1, const char *s2, uptr n) {$/;"	f	namespace:__sanitizer
internal_strncpy	sanitizer_common/sanitizer_libc.cpp	/^char *internal_strncpy(char *dst, const char *src, uptr n) {$/;"	f	namespace:__sanitizer
internal_strnlen	sanitizer_common/sanitizer_libc.cpp	/^uptr internal_strnlen(const char *s, uptr maxlen) {$/;"	f	namespace:__sanitizer
internal_strrchr	sanitizer_common/sanitizer_libc.cpp	/^char *internal_strrchr(const char *s, int c) {$/;"	f	namespace:__sanitizer
internal_strstr	sanitizer_common/sanitizer_libc.cpp	/^char *internal_strstr(const char *haystack, const char *needle) {$/;"	f	namespace:__sanitizer
internal_sysctl	sanitizer_common/sanitizer_linux.cpp	/^int internal_sysctl(const int *name, unsigned int namelen, void *oldp,$/;"	f	namespace:__sanitizer
internal_sysctl	sanitizer_common/sanitizer_mac.cpp	/^int internal_sysctl(const int *name, unsigned int namelen, void *oldp,$/;"	f	namespace:__sanitizer
internal_sysctl	sanitizer_common/sanitizer_netbsd.cpp	/^int internal_sysctl(const int *name, unsigned int namelen, void *oldp,$/;"	f	namespace:__sanitizer
internal_sysctlbyname	sanitizer_common/sanitizer_linux.cpp	/^int internal_sysctlbyname(const char *sname, void *oldp, uptr *oldlenp,$/;"	f	namespace:__sanitizer
internal_sysctlbyname	sanitizer_common/sanitizer_mac.cpp	/^int internal_sysctlbyname(const char *sname, void *oldp, uptr *oldlenp,$/;"	f	namespace:__sanitizer
internal_sysctlbyname	sanitizer_common/sanitizer_netbsd.cpp	/^int internal_sysctlbyname(const char *sname, void *oldp, uptr *oldlenp,$/;"	f	namespace:__sanitizer
internal_uname	sanitizer_common/sanitizer_linux.cpp	/^int internal_uname(struct utsname *buf) {$/;"	f	namespace:__sanitizer
internal_unlink	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_unlink(const char *path) {$/;"	f	namespace:__sanitizer
internal_unlink	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_unlink(const char *path) {$/;"	f	namespace:__sanitizer
internal_unlink	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_unlink(const char *path) {$/;"	f	namespace:__sanitizer
internal_waitpid	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_waitpid(int pid, int *status, int options) {$/;"	f	namespace:__sanitizer
internal_waitpid	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_waitpid(int pid, int *status, int options) {$/;"	f	namespace:__sanitizer
internal_waitpid	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_waitpid(int pid, int *status, int options) {$/;"	f	namespace:__sanitizer
internal_write	sanitizer_common/sanitizer_linux.cpp	/^uptr internal_write(fd_t fd, const void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_write	sanitizer_common/sanitizer_mac.cpp	/^uptr internal_write(fd_t fd, const void *buf, uptr count) {$/;"	f	namespace:__sanitizer
internal_write	sanitizer_common/sanitizer_netbsd.cpp	/^uptr internal_write(fd_t fd, const void *buf, uptr count) {$/;"	f	namespace:__sanitizer
interpose_substitution	interception/interception.h	/^struct interpose_substitution {$/;"	s
intersectsWith	sanitizer_common/sanitizer_bitvector.h	/^  bool intersectsWith(const BasicBitVector &v) const {$/;"	f	class:__sanitizer::BasicBitVector
intersectsWith	sanitizer_common/sanitizer_bitvector.h	/^  bool intersectsWith(const TwoLevelBitVector &v) const {$/;"	f	class:__sanitizer::TwoLevelBitVector
intersects_with_shadow	tsan/tsan_interceptors_mach_vm.cpp	/^static bool intersects_with_shadow(mach_vm_address_t address,$/;"	f	namespace:__tsan
invalid_threads_	sanitizer_common/sanitizer_thread_registry.h	/^  IntrusiveList<ThreadContextBase> invalid_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
invoke_and_release_block	tsan/tsan_interceptors_libdispatch.cpp	/^static void invoke_and_release_block(void *param) {$/;"	f	namespace:__tsan
invoke_block	tsan/tsan_interceptors_libdispatch.cpp	/^static void invoke_block(void *param) {$/;"	f	namespace:__tsan
invoke_block_iteration	tsan/tsan_interceptors_libdispatch.cpp	/^static void invoke_block_iteration(void *param, size_t iteration) {$/;"	f	namespace:__tsan
invoke_free_hook	tsan/tsan_mman.cpp	/^void invoke_free_hook(void *ptr) {$/;"	f	namespace:__tsan
invoke_malloc_hook	tsan/tsan_mman.cpp	/^void invoke_malloc_hook(void *ptr, uptr size) {$/;"	f	namespace:__tsan
io_event	sanitizer_common/sanitizer_platform_limits_linux.cpp	/^CHECK_TYPE_SIZE(io_event);$/;"	v
ioc_base	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char *ioc_base;$/;"	m	struct:smbioc_rw
ioc_cmd	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u_char ioc_cmd;$/;"	m	struct:smbioc_rq
ioc_cnt	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_cnt;$/;"	m	struct:smbioc_rw
ioc_fh	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u_int16_t ioc_fh;$/;"	m	struct:smbioc_rw
ioc_flags	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_flags;$/;"	m	struct:smbioc_flags
ioc_flags	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_flags;$/;"	m	struct:smbioc_lookup
ioc_group	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  gid_t ioc_group;$/;"	m	struct:smbioc_oshare
ioc_group	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  gid_t ioc_group;$/;"	m	struct:smbioc_ossn
ioc_level	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_level;$/;"	m	struct:smbioc_flags
ioc_level	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_level;$/;"	m	struct:smbioc_lookup
ioc_local	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  struct sockaddr *ioc_local;$/;"	m	struct:smbioc_ossn	typeref:struct:smbioc_ossn::sockaddr
ioc_localcs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_localcs[16];$/;"	m	struct:smbioc_ossn
ioc_lolen	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t ioc_lolen;$/;"	m	struct:smbioc_ossn
ioc_mask	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_mask;$/;"	m	struct:smbioc_flags
ioc_mode	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  mode_t ioc_mode;$/;"	m	struct:smbioc_oshare
ioc_mode	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  mode_t ioc_mode;$/;"	m	struct:smbioc_ossn
ioc_offset	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  off_t ioc_offset;$/;"	m	struct:smbioc_rw
ioc_opt	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_opt;$/;"	m	struct:smbioc_oshare
ioc_opt	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_opt;$/;"	m	struct:smbioc_ossn
ioc_owner	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uid_t ioc_owner;$/;"	m	struct:smbioc_oshare
ioc_owner	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uid_t ioc_owner;$/;"	m	struct:smbioc_ossn
ioc_password	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_password[129];$/;"	m	struct:smbioc_oshare
ioc_password	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_password[129];$/;"	m	struct:smbioc_ossn
ioc_rbc	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u_short ioc_rbc;$/;"	m	struct:smbioc_rq
ioc_retrycount	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_retrycount;$/;"	m	struct:smbioc_ossn
ioc_rights	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  mode_t ioc_rights;$/;"	m	struct:smbioc_oshare
ioc_rights	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  mode_t ioc_rights;$/;"	m	struct:smbioc_ossn
ioc_rpbuf	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char *ioc_rpbuf;$/;"	m	struct:smbioc_rq
ioc_rpbufsz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_rpbufsz;$/;"	m	struct:smbioc_rq
ioc_rwc	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u_char ioc_rwc;$/;"	m	struct:smbioc_rq
ioc_server	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  struct sockaddr *ioc_server;$/;"	m	struct:smbioc_ossn	typeref:struct:smbioc_ossn::sockaddr
ioc_servercs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_servercs[16];$/;"	m	struct:smbioc_ossn
ioc_sh	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  struct smbioc_oshare ioc_sh;$/;"	m	struct:smbioc_lookup	typeref:struct:smbioc_lookup::smbioc_oshare
ioc_share	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_share[129];$/;"	m	struct:smbioc_oshare
ioc_srvname	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_srvname[16];$/;"	m	struct:smbioc_ossn
ioc_ssn	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  struct smbioc_ossn ioc_ssn;$/;"	m	struct:smbioc_lookup	typeref:struct:smbioc_lookup::smbioc_ossn
ioc_stype	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_stype;$/;"	m	struct:smbioc_oshare
ioc_svlen	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t ioc_svlen;$/;"	m	struct:smbioc_ossn
ioc_tbc	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u_short ioc_tbc;$/;"	m	struct:smbioc_rq
ioc_tbytes	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *ioc_tbytes;$/;"	m	struct:smbioc_rq
ioc_timeout	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ioc_timeout;$/;"	m	struct:smbioc_ossn
ioc_twc	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  u_char ioc_twc;$/;"	m	struct:smbioc_rq
ioc_twords	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *ioc_twords;$/;"	m	struct:smbioc_rq
ioc_user	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_user[129];$/;"	m	struct:smbioc_ossn
ioc_workgroup	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  char ioc_workgroup[129];$/;"	m	struct:smbioc_ossn
iocb	sanitizer_common/sanitizer_platform_limits_linux.cpp	/^CHECK_TYPE_SIZE(iocb);$/;"	v
iocb_cmd_pread	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^const unsigned iocb_cmd_pread = 0;$/;"	m	namespace:__sanitizer
iocb_cmd_pread	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned iocb_cmd_pread = 0;$/;"	m	namespace:__sanitizer
iocb_cmd_preadv	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^const unsigned iocb_cmd_preadv = 7;$/;"	m	namespace:__sanitizer
iocb_cmd_preadv	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned iocb_cmd_preadv = 7;$/;"	m	namespace:__sanitizer
iocb_cmd_pwrite	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^const unsigned iocb_cmd_pwrite = 1;$/;"	m	namespace:__sanitizer
iocb_cmd_pwrite	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned iocb_cmd_pwrite = 1;$/;"	m	namespace:__sanitizer
iocb_cmd_pwritev	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^const unsigned iocb_cmd_pwritev = 8;$/;"	m	namespace:__sanitizer
iocb_cmd_pwritev	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned iocb_cmd_pwritev = 8;$/;"	m	namespace:__sanitizer
iov_base	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_base	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_base	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *iov_base;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iov_len	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr iov_len;$/;"	m	struct:__sanitizer::__sanitizer_iovec
iovec	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(iovec);$/;"	v
iovec	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(iovec);$/;"	v
iovec	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(iovec);$/;"	v
iovec	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(iovec);$/;"	v
ipc_perm	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
ipc_perm	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
ipc_perm	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
ipc_perm	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(ipc_perm);$/;"	v
ipfo_offset	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ipfo_offset;$/;"	m	struct:ipfobj
ipfo_ptr	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *ipfo_ptr;$/;"	m	struct:ipfobj
ipfo_retval	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ipfo_retval;$/;"	m	struct:ipfobj
ipfo_rev	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t ipfo_rev;$/;"	m	struct:ipfobj
ipfo_size	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t ipfo_size;$/;"	m	struct:ipfobj
ipfo_type	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int ipfo_type;$/;"	m	struct:ipfobj
ipfo_xxxpad	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned char ipfo_xxxpad[28];$/;"	m	struct:ipfobj
ipfobj	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^typedef struct ipfobj {$/;"	s
ipfobj_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} ipfobj_t;$/;"	t	typeref:struct:ipfobj
ipftq	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^typedef struct ipftq {$/;"	s
ipftq_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} ipftq_t;$/;"	t	typeref:struct:ipftq
isDerivedFromAtOffset	ubsan/ubsan_type_hash_itanium.cpp	/^static bool isDerivedFromAtOffset(const abi::__class_type_info *Derived,$/;"	f
isDisabled	ubsan/ubsan_value.h	/^  bool isDisabled() {$/;"	f	class:__ubsan::SourceLocation
isFloatTy	ubsan/ubsan_value.h	/^  bool isFloatTy() const { return getKind() == TK_Float; }$/;"	f	class:__ubsan::TypeDescriptor
isHeld	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool isHeld(DeadlockDetectorTLS<BV> *dtls, uptr node) const {$/;"	f	class:__sanitizer::DeadlockDetector
isInlineFloat	ubsan/ubsan_value.h	/^  bool isInlineFloat() const {$/;"	f	class:__ubsan::Value
isInlineInt	ubsan/ubsan_value.h	/^  bool isInlineInt() const {$/;"	f	class:__ubsan::Value
isIntegerTy	ubsan/ubsan_value.h	/^  bool isIntegerTy() const { return getKind() == TK_Integer; }$/;"	f	class:__ubsan::TypeDescriptor
isInvalid	ubsan/ubsan_value.h	/^  bool isInvalid() const { return !Filename; }$/;"	f	class:__ubsan::SourceLocation
isMemoryLocation	ubsan/ubsan_diag.h	/^  bool isMemoryLocation() const { return Kind == LK_Memory; }$/;"	f	class:__ubsan::Location
isMinusOne	ubsan/ubsan_value.h	/^  bool isMinusOne() const {$/;"	f	class:__ubsan::Value
isNegative	ubsan/ubsan_value.h	/^  bool isNegative() const {$/;"	f	class:__ubsan::Value
isReachable	sanitizer_common/sanitizer_bvgraph.h	/^  bool isReachable(uptr from, const BV &targets) {$/;"	f	class:__sanitizer::BVGraph
isSignedIntegerTy	ubsan/ubsan_value.h	/^  bool isSignedIntegerTy() const {$/;"	f	class:__ubsan::TypeDescriptor
isSourceLocation	ubsan/ubsan_diag.h	/^  bool isSourceLocation() const { return Kind == LK_Source; }$/;"	f	class:__ubsan::Location
isSymbolizedStack	ubsan/ubsan_diag.h	/^  bool isSymbolizedStack() const { return Kind == LK_Symbolized; }$/;"	f	class:__ubsan::Location
isUnsignedIntegerTy	ubsan/ubsan_value.h	/^  bool isUnsignedIntegerTy() const {$/;"	f	class:__ubsan::TypeDescriptor
isUnwinding	asan/asan_thread.h	/^  bool isUnwinding() const { return unwinding_; }$/;"	f	class:__asan::AsanThread
isValid	ubsan/ubsan_type_hash.h	/^  bool isValid() const { return MostDerivedTypeName; }$/;"	f	class:__ubsan::DynamicTypeInfo
is_barrier_block	tsan/tsan_interceptors_libdispatch.cpp	/^  bool is_barrier_block;$/;"	m	struct:__tsan::__anon77
is_dbghelp_initialized	sanitizer_common/sanitizer_symbolizer_win.cpp	/^bool is_dbghelp_initialized = false;$/;"	m	namespace:__sanitizer::__anon9
is_dead	tsan/tsan_rtl.h	/^  bool is_dead;$/;"	m	struct:__tsan::ThreadState
is_directly_leaked	lsan/lsan_common.h	/^  bool is_directly_leaked;$/;"	m	struct:__lsan::Leak
is_freeing	tsan/tsan_rtl.h	/^  bool is_freeing;$/;"	m	struct:__tsan::ThreadState
is_gnu_v3_mangled_ctor	libbacktrace/backtrace-rename.h	35;"	d
is_gnu_v3_mangled_dtor	libbacktrace/backtrace-rename.h	36;"	d
is_image_relative	ubsan/ubsan_type_hash_win.cpp	/^  int is_image_relative;$/;"	m	struct:CompleteObjectLocator
is_image_relative	ubsan/ubsan_type_hash_win.cpp	/^  int is_image_relative;$/;"	m	struct:CompleteObjectLocatorAbs
is_inited	tsan/tsan_rtl.h	/^  bool is_inited;$/;"	m	struct:__tsan::ThreadState
is_initialized	ubsan/ubsan_signals_standalone.cpp	/^static bool is_initialized = false;$/;"	m	namespace:__ubsan
is_load	hwasan/hwasan_linux.cpp	/^  bool is_load;$/;"	m	struct:__hwasan::AccessInfo
is_memory_access	sanitizer_common/sanitizer_common.h	/^  bool is_memory_access;$/;"	m	struct:__sanitizer::SignalContext
is_present	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  } is_present;$/;"	m	struct:__anon31	typeref:struct:__anon31::__anon32
is_registered	asan/asan_interceptors.cpp	/^  atomic_uintptr_t is_registered;$/;"	m	struct:ThreadStartParam
is_same	sanitizer_common/sanitizer_type_traits.h	/^struct is_same : public false_type {};$/;"	s	namespace:__sanitizer
is_same	sanitizer_common/sanitizer_type_traits.h	/^struct is_same<T, T> : public true_type {};$/;"	s	namespace:__sanitizer
is_secure	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned int is_secure : 1;$/;"	m	struct:__anon30
is_space	sanitizer_common/sanitizer_flag_parser.cpp	/^bool FlagParser::is_space(char c) {$/;"	f	class:__sanitizer::FlagParser
is_store	hwasan/hwasan_linux.cpp	/^  bool is_store;$/;"	m	struct:__hwasan::AccessInfo
is_suppressed	lsan/lsan_common.h	/^  bool is_suppressed;$/;"	m	struct:__lsan::Leak
is_sync_signal	tsan/tsan_interceptors_posix.cpp	/^static bool is_sync_signal(ThreadSignalContext *sctx, int sig) {$/;"	f
is_true_faulting_addr	sanitizer_common/sanitizer_common.h	/^  bool is_true_faulting_addr;$/;"	m	struct:__sanitizer::SignalContext
is_valid	sanitizer_common/sanitizer_stackdepot.cpp	/^  static bool is_valid(const args_type &args) {$/;"	f	struct:__sanitizer::StackDepotNode
is_vptr_access	tsan/tsan_rtl.h	/^  bool is_vptr_access;$/;"	m	struct:__tsan::ThreadState
is_write	asan/asan_errors.h	/^  bool is_write;$/;"	m	struct:__asan::ErrorGeneric
iscsi_auth_info_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_auth_info_t;$/;"	t	typeref:struct:__anon30
iscsi_auth_types_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_auth_types_t;$/;"	t	typeref:enum:__anon26
iscsi_conn_status_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_conn_status_parameters_t;$/;"	t	typeref:struct:__anon22
iscsi_digest_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^typedef enum { ISCSI_DIGEST_None = 0, ISCSI_DIGEST_CRC32C = 1 } iscsi_digest_t;$/;"	t	typeref:enum:__anon28
iscsi_event_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_event_t;$/;"	t	typeref:enum:__anon29
iscsi_get_version_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_get_version_parameters_t;$/;"	t	typeref:struct:__anon23
iscsi_iocommand_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_iocommand_parameters_t;$/;"	t	typeref:struct:__anon24
iscsi_login_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_login_parameters_t;$/;"	t	typeref:struct:__anon31
iscsi_login_session_type_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_login_session_type_t;$/;"	t	typeref:enum:__anon27
iscsi_logout_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_logout_parameters_t;$/;"	t	typeref:struct:__anon33
iscsi_register_event_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_register_event_parameters_t;$/;"	t	typeref:struct:__anon34
iscsi_remove_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_remove_parameters_t;$/;"	t	typeref:struct:__anon35
iscsi_send_targets_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_send_targets_parameters_t;$/;"	t	typeref:struct:__anon36
iscsi_set_node_name_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_set_node_name_parameters_t;$/;"	t	typeref:struct:__anon37
iscsi_wait_event_parameters_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^} iscsi_wait_event_parameters_t;$/;"	t	typeref:struct:__anon38
it1_	sanitizer_common/sanitizer_bitvector.h	/^    typename BV::Iterator it1_, it2_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
it2_	sanitizer_common/sanitizer_bitvector.h	/^    typename BV::Iterator it1_, it2_;$/;"	m	class:__sanitizer::TwoLevelBitVector::Iterator
it_interval	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_interval	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_interval	sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_interval	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_timeval it_interval;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
it_value	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_timeval it_value;$/;"	m	struct:__sanitizer::__sanitizer_itimerval	typeref:struct:__sanitizer::__sanitizer_itimerval::__sanitizer_timeval
iter_	tsan/tsan_mutex.cpp	/^  int iter_;$/;"	m	class:__tsan::Backoff
java_demangle_v3	libbacktrace/backtrace-rename.h	37;"	d
java_demangle_v3_callback	libbacktrace/backtrace-rename.h	38;"	d
jctx	tsan/tsan_interface_java.cpp	/^static JavaContext *jctx;$/;"	m	namespace:__tsan
jctx_buf	tsan/tsan_interface_java.cpp	/^static u64 jctx_buf[sizeof(JavaContext) \/ sizeof(u64) + 1];$/;"	m	namespace:__tsan
jmp_buf	hwasan/hwasan_type_test.cpp	/^CHECK_TYPE_SIZE_FITS(jmp_buf);$/;"	v
jmp_bufs	tsan/tsan_rtl.h	/^  Vector<JmpBuf> jmp_bufs;$/;"	m	struct:__tsan::ThreadState
jptr	tsan/tsan_interface_java.h	/^typedef unsigned long jptr;$/;"	t
kAArch64_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kAArch64_ShadowOffset64 = 1ULL << 36;$/;"	v
kAArch64_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kAArch64_ShadowOffset64 = 1ULL << 36;$/;"	v
kAccessTypeInside	asan/asan_descriptions.h	/^  kAccessTypeInside,$/;"	e	enum:__asan::AccessType
kAccessTypeLeft	asan/asan_descriptions.h	/^  kAccessTypeLeft,$/;"	e	enum:__asan::AccessType
kAccessTypeRight	asan/asan_descriptions.h	/^  kAccessTypeRight,$/;"	e	enum:__asan::AccessType
kAccessTypeUnknown	asan/asan_descriptions.h	/^  kAccessTypeUnknown,  \/\/ This means we have an AddressSanitizer bug!$/;"	e	enum:__asan::AccessType
kActiveSpinCnt	tsan/tsan_mutex.cpp	/^  static const int kActiveSpinCnt = 20;$/;"	m	class:__tsan::Backoff
kActiveSpinIters	tsan/tsan_mutex.cpp	/^  static const int kActiveSpinIters = 10;$/;"	m	class:__tsan::Backoff
kAddressKindGlobal	asan/asan_descriptions.h	/^  kAddressKindGlobal,$/;"	e	enum:__asan::AddressKind
kAddressKindHeap	asan/asan_descriptions.h	/^  kAddressKindHeap,$/;"	e	enum:__asan::AddressKind
kAddressKindShadow	asan/asan_descriptions.h	/^  kAddressKindShadow,$/;"	e	enum:__asan::AddressKind
kAddressKindStack	asan/asan_descriptions.h	/^  kAddressKindStack,$/;"	e	enum:__asan::AddressKind
kAddressKindWild	asan/asan_descriptions.h	/^  kAddressKindWild,$/;"	e	enum:__asan::AddressKind
kAddressLength	interception/interception_win.cpp	/^static const int kAddressLength = FIRST_32_SECOND_64(4, 8);$/;"	m	namespace:__interception
kAddressTagMask	hwasan/hwasan.h	/^const uptr kAddressTagMask = 0xFFUL << kAddressTagShift;$/;"	v
kAddressTagShift	hwasan/hwasan.h	/^const unsigned kAddressTagShift = 56;$/;"	v
kAllocBegMagic	asan/asan_allocator.cpp	/^  static constexpr uptr kAllocBegMagic =$/;"	m	class:__asan::LargeChunkHeader
kAllocaRedzoneMask	asan/asan_fake_stack.cpp	/^static const u64 kAllocaRedzoneMask = 31UL;$/;"	m	namespace:__asan
kAllocaRedzoneSize	asan/asan_fake_stack.cpp	/^static const u64 kAllocaRedzoneSize = 32UL;$/;"	m	namespace:__asan
kAllocatorSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x10000000000ULL;  \/\/ 3T.$/;"	m	namespace:__asan
kAllocatorSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x20000000000ULL;  \/\/ 2T.$/;"	m	namespace:__asan
kAllocatorSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x2000000000ULL;  \/\/ 128G.$/;"	m	namespace:__asan
kAllocatorSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x40000000000ULL;  \/\/ 4T.$/;"	m	namespace:__asan
kAllocatorSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x8000000000ULL;  \/\/ 500G$/;"	m	namespace:__asan
kAllocatorSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSize = 0x20000000000ULL;  \/\/ 2T.$/;"	m	namespace:__asan
kAllocatorSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSize = 0x2000000000ULL;  \/\/ 128G.$/;"	m	namespace:__asan
kAllocatorSize	asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x10000000000ULL;  \/\/ 3T.$/;"	m	namespace:__asan
kAllocatorSize	asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x20000000000ULL;  \/\/ 2T.$/;"	m	namespace:__asan
kAllocatorSize	asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x2000000000ULL;  \/\/ 128G.$/;"	m	namespace:__asan
kAllocatorSize	asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x40000000000ULL;  \/\/ 4T.$/;"	m	namespace:__asan
kAllocatorSize	asan/asan_allocator.h	/^const uptr kAllocatorSize  =  0x8000000000ULL;  \/\/ 500G$/;"	m	namespace:__asan
kAllocatorSize	asan/asan_allocator.h	/^const uptr kAllocatorSize = 0x20000000000ULL;  \/\/ 2T.$/;"	m	namespace:__asan
kAllocatorSize	asan/asan_allocator.h	/^const uptr kAllocatorSize = 0x2000000000ULL;  \/\/ 128G.$/;"	m	namespace:__asan
kAllocatorSpace	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSpace =  0x10000000000ULL;$/;"	m	namespace:__asan
kAllocatorSpace	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSpace =  ~(uptr)0;$/;"	m	namespace:__asan
kAllocatorSpace	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSpace = 0x600000000000ULL;$/;"	m	namespace:__asan
kAllocatorSpace	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^const uptr kAllocatorSpace = ~(uptr)0;$/;"	m	namespace:__asan
kAllocatorSpace	asan/asan_allocator.h	/^const uptr kAllocatorSpace =  0x10000000000ULL;$/;"	m	namespace:__asan
kAllocatorSpace	asan/asan_allocator.h	/^const uptr kAllocatorSpace =  ~(uptr)0;$/;"	m	namespace:__asan
kAllocatorSpace	asan/asan_allocator.h	/^const uptr kAllocatorSpace = 0x600000000000ULL;$/;"	m	namespace:__asan
kAllocatorSpace	asan/asan_allocator.h	/^const uptr kAllocatorSpace = ~(uptr)0;$/;"	m	namespace:__asan
kAlwaysClearMemory	lsan/lsan_allocator.h	/^const bool kAlwaysClearMemory = true;$/;"	m	namespace:__lsan
kAppMemMsk	tsan/tsan_platform.h	/^  static const uptr kAppMemMsk     = 0x780000000000ull;$/;"	m	struct:__tsan::Mapping
kAppMemXor	tsan/tsan_platform.h	/^  static const uptr kAppMemXor     = 0x040000000000ull;$/;"	m	struct:__tsan::Mapping
kArgVMax	sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const unsigned kArgVMax = 6;$/;"	m	class:__sanitizer::SymbolizerProcess
kAsanAllocaLeftMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanAllocaLeftMagic = 0xca;$/;"	m	namespace:__asan
kAsanAllocaLeftMagic	asan/asan_internal.h	/^const int kAsanAllocaLeftMagic = 0xca;$/;"	m	namespace:__asan
kAsanAllocaRightMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanAllocaRightMagic = 0xcb;$/;"	m	namespace:__asan
kAsanAllocaRightMagic	asan/asan_internal.h	/^const int kAsanAllocaRightMagic = 0xcb;$/;"	m	namespace:__asan
kAsanArrayCookieMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanArrayCookieMagic = 0xac;$/;"	m	namespace:__asan
kAsanArrayCookieMagic	asan/asan_internal.h	/^const int kAsanArrayCookieMagic = 0xac;$/;"	m	namespace:__asan
kAsanBuggyPcPoolSize	asan/asan_report.cpp	/^static const unsigned kAsanBuggyPcPoolSize = 25;$/;"	m	namespace:__asan
kAsanContiguousContainerOOBMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanContiguousContainerOOBMagic = 0xfc;$/;"	m	namespace:__asan
kAsanContiguousContainerOOBMagic	asan/asan_internal.h	/^const int kAsanContiguousContainerOOBMagic = 0xfc;$/;"	m	namespace:__asan
kAsanGlobalRedzoneMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanGlobalRedzoneMagic = 0xf9;$/;"	m	namespace:__asan
kAsanGlobalRedzoneMagic	asan/asan_internal.h	/^const int kAsanGlobalRedzoneMagic = 0xf9;$/;"	m	namespace:__asan
kAsanHeapFreeMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanHeapFreeMagic = 0xfd;$/;"	m	namespace:__asan
kAsanHeapFreeMagic	asan/asan_internal.h	/^const int kAsanHeapFreeMagic = 0xfd;$/;"	m	namespace:__asan
kAsanHeapLeftRedzoneMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanHeapLeftRedzoneMagic = 0xfa;$/;"	m	namespace:__asan
kAsanHeapLeftRedzoneMagic	asan/asan_internal.h	/^const int kAsanHeapLeftRedzoneMagic = 0xfa;$/;"	m	namespace:__asan
kAsanInitializationOrderMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanInitializationOrderMagic = 0xf6;$/;"	m	namespace:__asan
kAsanInitializationOrderMagic	asan/asan_internal.h	/^const int kAsanInitializationOrderMagic = 0xf6;$/;"	m	namespace:__asan
kAsanInternalHeapMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanInternalHeapMagic = 0xfe;$/;"	m	namespace:__asan
kAsanInternalHeapMagic	asan/asan_internal.h	/^const int kAsanInternalHeapMagic = 0xfe;$/;"	m	namespace:__asan
kAsanIntraObjectRedzone	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanIntraObjectRedzone = 0xbb;$/;"	m	namespace:__asan
kAsanIntraObjectRedzone	asan/asan_internal.h	/^const int kAsanIntraObjectRedzone = 0xbb;$/;"	m	namespace:__asan
kAsanMappingProfileSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const uptr kAsanMappingProfileSize = __LINE__;$/;"	m	namespace:__asan
kAsanMappingProfileSize	asan/asan_mapping.h	/^static const uptr kAsanMappingProfileSize = __LINE__;$/;"	m	namespace:__asan
kAsanShadowGap	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanShadowGap = 0xcc;$/;"	m	namespace:__asan
kAsanShadowGap	asan/asan_internal.h	/^const int kAsanShadowGap = 0xcc;$/;"	m	namespace:__asan
kAsanStackAfterReturnMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanStackAfterReturnMagic = 0xf5;$/;"	m	namespace:__asan
kAsanStackAfterReturnMagic	asan/asan_internal.h	/^const int kAsanStackAfterReturnMagic = 0xf5;$/;"	m	namespace:__asan
kAsanStackLeftRedzoneMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanStackLeftRedzoneMagic = 0xf1;$/;"	m	namespace:__asan
kAsanStackLeftRedzoneMagic	asan/asan_internal.h	/^const int kAsanStackLeftRedzoneMagic = 0xf1;$/;"	m	namespace:__asan
kAsanStackMidRedzoneMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanStackMidRedzoneMagic = 0xf2;$/;"	m	namespace:__asan
kAsanStackMidRedzoneMagic	asan/asan_internal.h	/^const int kAsanStackMidRedzoneMagic = 0xf2;$/;"	m	namespace:__asan
kAsanStackRightRedzoneMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanStackRightRedzoneMagic = 0xf3;$/;"	m	namespace:__asan
kAsanStackRightRedzoneMagic	asan/asan_internal.h	/^const int kAsanStackRightRedzoneMagic = 0xf3;$/;"	m	namespace:__asan
kAsanStackUseAfterScopeMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanStackUseAfterScopeMagic = 0xf8;$/;"	m	namespace:__asan
kAsanStackUseAfterScopeMagic	asan/asan_internal.h	/^const int kAsanStackUseAfterScopeMagic = 0xf8;$/;"	m	namespace:__asan
kAsanUserPoisonedMemoryMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^const int kAsanUserPoisonedMemoryMagic = 0xf7;$/;"	m	namespace:__asan
kAsanUserPoisonedMemoryMagic	asan/asan_internal.h	/^const int kAsanUserPoisonedMemoryMagic = 0xf7;$/;"	m	namespace:__asan
kAtomicBit	tsan/tsan_rtl.h	/^  static const u64 kAtomicBit   = 1ull << kAtomicShift;$/;"	m	class:__tsan::Shadow
kAtomicShift	tsan/tsan_rtl.h	/^  static const u64 kAtomicShift = 6 + kClkBits;$/;"	m	class:__tsan::Shadow
kAtosMachPortEnvEntry	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^static char kAtosMachPortEnvEntry[] = K_ATOS_ENV_VAR "=000000000000000";$/;"	m	namespace:__sanitizer
kBatchClassID	sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const uptr kBatchClassID = SizeClassMap::kBatchClassID;$/;"	m	struct:SizeClassAllocator32LocalCache
kBatchClassID	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kBatchClassID = kNumClasses - 1;$/;"	m	class:SizeClassMap
kBatchSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kBatchSize = sizeof(TransferBatch);$/;"	m	class:SizeClassAllocator32
kBlockIdx	tsan/tsan_defs.h	/^  static const uptr kBlockIdx = kTableSize - 2;$/;"	m	struct:__tsan::ClockBlock
kBlockMagic	sanitizer_common/sanitizer_allocator.cpp	/^const u64 kBlockMagic = 0x6A6CB03ABCEBC041ull;$/;"	m	namespace:__sanitizer::__anon14
kBranchLength	interception/interception_win.cpp	/^static const int kBranchLength =$/;"	m	namespace:__interception
kBucketSize	sanitizer_common/sanitizer_addrhashmap.h	/^  static const uptr kBucketSize = 3;$/;"	m	class:__sanitizer::AddrHashMap
kBufferSize	sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const uptr kBufferSize = 16 * 1024;$/;"	m	class:__sanitizer::SymbolizerProcess
kBufferSize	sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const uptr kBufferSize = 16 * 1024;$/;"	m	class:__sanitizer::final
kBufferSize	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  static const int kBufferSize = 16 * 1024;$/;"	m	class:__sanitizer::final
kBufferSize	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  static const uptr kBufferSize = 64;$/;"	m	class:__sanitizer::final
kCacheLineSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  COMPILER_CHECK(sizeof(SizeClassInfo) % kCacheLineSize == 0);$/;"	m	class:SizeClassAllocator32
kCacheLineSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  COMPILER_CHECK(sizeof(RegionInfo) % kCacheLineSize == 0);$/;"	m	class:SizeClassAllocator64
kCacheLineSize	sanitizer_common/sanitizer_common.h	/^const uptr kCacheLineSize = SANITIZER_CACHE_LINE_SIZE;$/;"	m	namespace:__sanitizer
kChunkHeader2Size	asan/asan_allocator.cpp	/^static const uptr kChunkHeader2Size = sizeof(ChunkBase) - kChunkHeaderSize;$/;"	m	namespace:__asan
kChunkHeaderSize	asan/asan_allocator.cpp	/^static const uptr kChunkHeaderSize = sizeof(ChunkHeader);$/;"	m	namespace:__asan
kChunksBlockCount	sanitizer_common/sanitizer_allocator_secondary.h	/^  static const int kChunksBlockCount = 1 << 14;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
kClkBits	tsan/tsan_defs.h	/^const int kClkBits = 42;$/;"	m	namespace:__tsan
kClockCount	tsan/tsan_defs.h	/^  static const uptr kClockCount = kSize \/ sizeof(ClockElem);$/;"	m	struct:__tsan::ClockBlock
kCollectHistory	tsan/tsan_defs.h	/^const bool kCollectHistory = false;$/;"	m	namespace:__tsan
kCollectHistory	tsan/tsan_defs.h	/^const bool kCollectHistory = true;$/;"	m	namespace:__tsan
kCompactPtrScale	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kCompactPtrScale = 4;$/;"	m	class:SizeClassAllocator64
kCounterBits	sanitizer_common/sanitizer_lfstack.h	/^  static const int kCounterBits = FIRST_32_SECOND_64(32, 17);$/;"	m	struct:__sanitizer::LFStack
kCounterInc	sanitizer_common/sanitizer_lfstack.h	/^  static const u64 kCounterInc = kPtrMask + 1;$/;"	m	struct:__sanitizer::LFStack
kCounterMask	sanitizer_common/sanitizer_lfstack.h	/^  static const u64 kCounterMask = ~kPtrMask;$/;"	m	struct:__sanitizer::LFStack
kCurrentStackFrameMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^static const uptr kCurrentStackFrameMagic = 0x41B58AB3;$/;"	m	namespace:__asan
kCurrentStackFrameMagic	asan/asan_internal.h	/^static const uptr kCurrentStackFrameMagic = 0x41B58AB3;$/;"	m	namespace:__asan
kDefaultAlignment	tsan/tsan_mman.h	/^const uptr kDefaultAlignment = 16;$/;"	m	namespace:__tsan
kDefaultFormat	sanitizer_common/sanitizer_stacktrace_printer.cpp	/^static const char kDefaultFormat[] = "    #%n %p %F %L";$/;"	m	namespace:__sanitizer
kDefaultMallocContextSize	asan/asan_stack.h	/^static const u32 kDefaultMallocContextSize = 30;$/;"	m	namespace:__asan
kDefaultShadowOffset32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kDefaultShadowOffset32 = 1ULL << 29;  \/\/ 0x20000000$/;"	v
kDefaultShadowOffset32	asan/asan_mapping.h	/^static const u64 kDefaultShadowOffset32 = 1ULL << 29;  \/\/ 0x20000000$/;"	v
kDefaultShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kDefaultShadowOffset64 = 1ULL << 44;$/;"	v
kDefaultShadowOffset64	asan/asan_mapping.h	/^static const u64 kDefaultShadowOffset64 = 1ULL << 44;$/;"	v
kDefaultShadowScale	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kDefaultShadowScale = ASAN_SHADOW_SCALE;$/;"	v
kDefaultShadowScale	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kDefaultShadowScale = SANITIZER_MYRIAD2 ? 5 : 3;$/;"	v
kDefaultShadowScale	asan/asan_mapping.h	/^static const u64 kDefaultShadowScale = ASAN_SHADOW_SCALE;$/;"	v
kDefaultShadowScale	asan/asan_mapping.h	/^static const u64 kDefaultShadowScale = SANITIZER_MYRIAD2 ? 5 : 3;$/;"	v
kDefaultShadowSentinel	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kDefaultShadowSentinel = ~(uptr)0;$/;"	v
kDefaultShadowSentinel	asan/asan_mapping.h	/^static const u64 kDefaultShadowSentinel = ~(uptr)0;$/;"	v
kDefaultShort64bitShadowOffset	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kDefaultShort64bitShadowOffset =$/;"	v
kDefaultShort64bitShadowOffset	asan/asan_mapping.h	/^static const u64 kDefaultShort64bitShadowOffset =$/;"	v
kDestroyedThread	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static const uptr kDestroyedThread = -1;$/;"	m	namespace:__sanitizer
kDirectBranchLength	interception/interception_win.cpp	/^static const int kDirectBranchLength = kBranchLength + kAddressLength;$/;"	m	namespace:__interception
kDirectlyLeaked	lsan/lsan_common.h	/^  kDirectlyLeaked = 0,  \/\/ default$/;"	e	enum:__lsan::ChunkTag
kDlsymAllocPoolSize	asan/asan_malloc_linux.cpp	/^static const uptr kDlsymAllocPoolSize = SANITIZER_RTEMS ? 4096 : 1024;$/;"	v
kDlsymAllocPoolSize	hwasan/hwasan_interceptors.cpp	/^static const uptr kDlsymAllocPoolSize = 1024;$/;"	v
kDtvOffset	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static const uptr kDtvOffset = 0;$/;"	m	namespace:__sanitizer
kDtvOffset	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static const uptr kDtvOffset = 0x8000;$/;"	m	namespace:__sanitizer
kDtvOffset	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static const uptr kDtvOffset = 0x800;$/;"	m	namespace:__sanitizer
kDyldImageIdx	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static const int kDyldImageIdx = -1;$/;"	m	namespace:__sanitizer
kDyldInsertLibraries	sanitizer_common/sanitizer_mac.cpp	/^static const char kDyldInsertLibraries[] = "DYLD_INSERT_LIBRARIES";$/;"	m	namespace:__sanitizer
kDyldPath	sanitizer_common/sanitizer_procmaps_mac.cpp	/^static const char kDyldPath[] = "\/usr\/lib\/dyld";$/;"	m	namespace:__sanitizer
kDynamicInitGlobalsInitialCapacity	asan/asan_globals.cpp	/^static const int kDynamicInitGlobalsInitialCapacity = 512;$/;"	m	namespace:__asan
kEndId	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^const u32 kEndId = -2;$/;"	m	namespace:__sanitizer
kEnvVariables	sanitizer_common/sanitizer_win.cpp	/^static const int kEnvVariables = 5;$/;"	m	namespace:__sanitizer
kErrorKindInvalid	asan/asan_errors.h	/^  kErrorKindInvalid = 0,$/;"	e	enum:__asan::ErrorKind
kErrorMessageBufferSize	sanitizer_common/sanitizer_common.h	/^static const uptr kErrorMessageBufferSize = 1 << 16;$/;"	m	namespace:__sanitizer
kEventPCBits	tsan/tsan_trace.h	/^const uptr kEventPCBits = 61;$/;"	m	namespace:__tsan
kExternalPCBit	sanitizer_common/sanitizer_common.h	/^const u64 kExternalPCBit = 1ULL << 60;$/;"	m	namespace:__sanitizer
kExtraRegs	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static constexpr uptr kExtraRegs[] = {0};$/;"	m	namespace:__sanitizer
kExtraRegs	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static constexpr uptr kExtraRegs[] = {NT_X86_XSTATE, NT_FPREGSET};$/;"	m	namespace:__sanitizer
kFallbackAllocTag	hwasan/hwasan_allocator.cpp	/^static const tag_t kFallbackAllocTag = 0xBB;$/;"	m	namespace:__hwasan
kFallbackFreeTag	hwasan/hwasan_allocator.cpp	/^static const tag_t kFallbackFreeTag = 0xBC;$/;"	m	namespace:__hwasan
kFallbackTag	hwasan/hwasan.cpp	/^static const u8 kFallbackTag = 0xBB;$/;"	v
kFlagBlock	tsan/tsan_sync.h	/^  static const u32 kFlagBlock = 1u << 30;$/;"	m	class:__tsan::MetaMap
kFlagMask	tsan/tsan_sync.h	/^  static const u32 kFlagMask  = 3u << 30;$/;"	m	class:__tsan::MetaMap
kFlagSync	tsan/tsan_sync.h	/^  static const u32 kFlagSync  = 2u << 30;$/;"	m	class:__tsan::MetaMap
kFlags	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__asan::AP64
kFlags	asan/asan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__asan::AP64
kFlags	hwasan/hwasan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__hwasan::AP64
kFlags	lsan/lsan_allocator.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__lsan::AP32
kFlags	sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__sanitizer::AP32
kFlags	tsan/tsan_rtl.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__tsan::AP32
kFlags	tsan/tsan_rtl.h	/^  static const uptr kFlags = 0;$/;"	m	struct:__tsan::AP64
kFlagsOffset	asan/asan_fake_stack.h	/^  static const uptr kFlagsOffset = 4096;  \/\/ This is were the flags begin.$/;"	m	class:__asan::FakeStack
kFormatData	sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatData = "{{{data:%p}}}";$/;"	m	namespace:__sanitizer
kFormatData	sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatData = "{{{data:%p}}}";$/;"	m	namespace:__sanitizer
kFormatDemangle	sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatDemangle = "{{{symbol:%s}}}";$/;"	m	namespace:__sanitizer
kFormatDemangle	sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatDemangle = "{{{symbol:%s}}}";$/;"	m	namespace:__sanitizer
kFormatDemangleMax	sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr uptr kFormatDemangleMax = 1024;  \/\/ Arbitrary.$/;"	m	namespace:__sanitizer
kFormatDemangleMax	sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr uptr kFormatDemangleMax = 1024;  \/\/ Arbitrary.$/;"	m	namespace:__sanitizer
kFormatFrame	sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatFrame = "{{{bt:%u:%p}}}";$/;"	m	namespace:__sanitizer
kFormatFrame	sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatFrame = "    [%u] IP: %p";$/;"	m	namespace:__sanitizer
kFormatFunction	sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr const char *kFormatFunction = "{{{pc:%p}}}";$/;"	m	namespace:__sanitizer
kFormatFunction	sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr const char *kFormatFunction = "{{{pc:%p}}}";$/;"	m	namespace:__sanitizer
kFormatFunctionMax	sanitizer_common/sanitizer_symbolizer_fuchsia.h	/^constexpr uptr kFormatFunctionMax = 64;  \/\/ More than big enough for 64-bit hex.$/;"	m	namespace:__sanitizer
kFormatFunctionMax	sanitizer_common/sanitizer_symbolizer_rtems.h	/^constexpr uptr kFormatFunctionMax = 64;  \/\/ More than big enough for 64-bit hex.$/;"	m	namespace:__sanitizer
kFrameSize	sanitizer_common/sanitizer_stacktrace.h	/^static const uptr kFrameSize = 160;$/;"	m	namespace:__sanitizer
kFrameSize	sanitizer_common/sanitizer_stacktrace.h	/^static const uptr kFrameSize = 2 * sizeof(uhwptr);$/;"	m	namespace:__sanitizer
kFrameSize	sanitizer_common/sanitizer_stacktrace.h	/^static const uptr kFrameSize = 96;$/;"	m	namespace:__sanitizer
kFreeArrayMapSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kFreeArrayMapSize = 1 << 16;$/;"	m	class:SizeClassAllocator64
kFreeArraySize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kFreeArraySize = kRegionSize \/ 8;$/;"	m	class:SizeClassAllocator64
kFreeBSD_ShadowOffset32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kFreeBSD_ShadowOffset32 = 1ULL << 30;  \/\/ 0x40000000$/;"	v
kFreeBSD_ShadowOffset32	asan/asan_mapping.h	/^static const u64 kFreeBSD_ShadowOffset32 = 1ULL << 30;  \/\/ 0x40000000$/;"	v
kFreeBSD_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kFreeBSD_ShadowOffset64 = 1ULL << 46;  \/\/ 0x400000000000$/;"	v
kFreeBSD_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kFreeBSD_ShadowOffset64 = 1ULL << 46;  \/\/ 0x400000000000$/;"	v
kFreedBit	tsan/tsan_rtl.h	/^  static const u64 kFreedBit = 1ull << 63;$/;"	m	class:__tsan::FastState
kHandleSignalExclusive	sanitizer_common/sanitizer_flags.h	/^  kHandleSignalExclusive,$/;"	e	enum:__sanitizer::HandleSignalMode
kHandleSignalNo	sanitizer_common/sanitizer_flags.h	/^  kHandleSignalNo,$/;"	e	enum:__sanitizer::HandleSignalMode
kHandleSignalYes	sanitizer_common/sanitizer_flags.h	/^  kHandleSignalYes,$/;"	e	enum:__sanitizer::HandleSignalMode
kHandlerStackSize	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static const int kHandlerStackSize = 8192;$/;"	m	namespace:__sanitizer
kHandlerStackSize	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static const int kHandlerStackSize = 8192;$/;"	m	namespace:__sanitizer
kHashMask	sanitizer_common/sanitizer_stackdepot.cpp	/^  static const u32 kHashMask = ~kUseCountMask;$/;"	m	struct:__sanitizer::StackDepotNode
kHeapAlignment	tsan/tsan_interface_java.cpp	/^const jptr kHeapAlignment = 8;$/;"	v
kHeapMemBeg	tsan/tsan_platform.h	/^  static const uptr kHeapMemBeg    = 0x7b0000000000ull;$/;"	m	struct:__tsan::Mapping
kHeapMemEnd	tsan/tsan_platform.h	/^  static const uptr kHeapMemEnd    = 0x7c0000000000ull;$/;"	m	struct:__tsan::Mapping
kHiAppMemBeg	tsan/tsan_platform.h	/^  static const uptr kHiAppMemBeg   = 0x7e8000000000ull;$/;"	m	struct:__tsan::Mapping
kHiAppMemEnd	tsan/tsan_platform.h	/^  static const uptr kHiAppMemEnd   = 0x800000000000ull;$/;"	m	struct:__tsan::Mapping
kHighMemBeg	asan/asan_mapping_myriad.h	26;"	d
kHighMemBeg	asan/asan_mapping_sparc64.h	40;"	d
kHighMemEnd	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static uptr kHighMemEnd = 0x7fffffffffffULL;$/;"	m	namespace:__asan
kHighMemEnd	asan/asan_mapping.h	/^static uptr kHighMemEnd = 0x7fffffffffffULL;$/;"	m	namespace:__asan
kHighMemEnd	asan/asan_rtl.cpp	/^uptr kHighMemEnd, kMidMemBeg, kMidMemEnd;$/;"	m	namespace:__asan
kHighMemEnd	hwasan/hwasan_linux.cpp	/^uptr kHighMemEnd;$/;"	m	namespace:__hwasan
kHighMemStart	hwasan/hwasan_linux.cpp	/^uptr kHighMemStart;$/;"	m	namespace:__hwasan
kHighShadowBeg	asan/asan_mapping_myriad.h	28;"	d
kHighShadowBeg	asan/asan_mapping_sparc64.h	42;"	d
kHighShadowEnd	asan/asan_mapping_myriad.h	29;"	d
kHighShadowEnd	asan/asan_mapping_sparc64.h	43;"	d
kHighShadowEnd	hwasan/hwasan_linux.cpp	/^uptr kHighShadowEnd;$/;"	m	namespace:__hwasan
kHighShadowStart	hwasan/hwasan_linux.cpp	/^uptr kHighShadowStart;$/;"	m	namespace:__hwasan
kHintNop8Bytes	interception/interception_win.cpp	/^static const u8 kHintNop8Bytes[] = {$/;"	m	namespace:__interception
kHistoryMask	tsan/tsan_rtl.h	/^  static const u64 kHistoryMask = 7;$/;"	m	class:__tsan::FastState
kHistoryShift	tsan/tsan_rtl.h	/^  static const u64 kHistoryShift = kClkBits;$/;"	m	class:__tsan::FastState
kIgnoreBit	tsan/tsan_rtl.h	/^  static const u64 kIgnoreBit = 1ull << 63;$/;"	m	class:__tsan::FastState
kIgnoreObjectAlreadyIgnored	lsan/lsan_common.h	/^  kIgnoreObjectAlreadyIgnored,$/;"	e	enum:__lsan::IgnoreObjectResult
kIgnoreObjectInvalid	lsan/lsan_common.h	/^  kIgnoreObjectInvalid$/;"	e	enum:__lsan::IgnoreObjectResult
kIgnoreObjectSuccess	lsan/lsan_common.h	/^  kIgnoreObjectSuccess,$/;"	e	enum:__lsan::IgnoreObjectResult
kIgnored	lsan/lsan_common.h	/^  kIgnored = 3$/;"	e	enum:__lsan::ChunkTag
kIndirectJumpInstructionLength	interception/interception_win.cpp	/^static const int kIndirectJumpInstructionLength = 6;$/;"	m	namespace:__interception
kIndirectlyLeaked	lsan/lsan_common.h	/^  kIndirectlyLeaked = 1,$/;"	e	enum:__lsan::ChunkTag
kInitialCapacity	sanitizer_common/sanitizer_common.h	/^  static const uptr kInitialCapacity = 1 << 14;$/;"	m	class:__sanitizer::ListOfModules
kInitialCapacity	sanitizer_common/sanitizer_symbolizer.h	/^    static const uptr kInitialCapacity = 1000;$/;"	m	class:__sanitizer::final::ModuleNameOwner
kInterceptorName	asan/asan_suppressions.cpp	/^static const char kInterceptorName[] = "interceptor_name";$/;"	m	namespace:__asan
kInterceptorViaFunction	asan/asan_suppressions.cpp	/^static const char kInterceptorViaFunction[] = "interceptor_via_fun";$/;"	m	namespace:__asan
kInterceptorViaLibrary	asan/asan_suppressions.cpp	/^static const char kInterceptorViaLibrary[] = "interceptor_via_lib";$/;"	m	namespace:__asan
kInterposedFunctionPrefix	tsan/tsan_report.cpp	/^static const char *const kInterposedFunctionPrefix = "__interceptor_";$/;"	m	namespace:__tsan
kInterposedFunctionPrefix	tsan/tsan_report.cpp	/^static const char *const kInterposedFunctionPrefix = "wrap_";$/;"	m	namespace:__tsan
kInvalidFd	sanitizer_common/sanitizer_libc.h	61;"	d
kInvalidTid	asan/asan_thread.h	/^const u32 kInvalidTid = 0xffffff;  \/\/ Must fit into 24 bits.$/;"	m	namespace:__asan
kInvalidTid	lsan/lsan_common.h	/^const u32 kInvalidTid = (u32) -1;$/;"	m	namespace:__lsan
kInvalidTid	tsan/tsan_defs.h	/^const u16 kInvalidTid = kMaxTid + 1;$/;"	m	namespace:__tsan
kInvalidTid	tsan/tsan_sync.h	/^  static const int kInvalidTid = -1;$/;"	m	struct:__tsan::SyncVar
kJumpInstructionLength	interception/interception_win.cpp	/^static const int kJumpInstructionLength = 5;$/;"	m	namespace:__interception
kL1Size	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^const int kL1Size = 1024;$/;"	m	namespace:__sanitizer
kL2Size	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^const int kL2Size = 1024;$/;"	m	namespace:__sanitizer
kLargestClassID	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kLargestClassID = kNumClasses - 2;$/;"	m	class:SizeClassMap
kLinkerName	lsan/lsan_common_linux.cpp	/^static const char kLinkerName[] = "ld";$/;"	m	namespace:__lsan
kLoAppMemBeg	tsan/tsan_platform.h	/^  static const uptr kLoAppMemBeg   = 0x000000001000ull;$/;"	m	struct:__tsan::Mapping
kLoAppMemEnd	tsan/tsan_platform.h	/^  static const uptr kLoAppMemEnd   = 0x008000000000ull;$/;"	m	struct:__tsan::Mapping
kLowLevelAllocatorDefaultAlignment	sanitizer_common/sanitizer_allocator.cpp	/^constexpr uptr kLowLevelAllocatorDefaultAlignment = 8;$/;"	m	namespace:__sanitizer
kLowMemBeg	asan/asan_mapping_myriad.h	20;"	d
kLowMemBeg	asan/asan_mapping_sparc64.h	31;"	d
kLowMemEnd	asan/asan_mapping_myriad.h	21;"	d
kLowMemEnd	asan/asan_mapping_sparc64.h	32;"	d
kLowMemEnd	hwasan/hwasan_linux.cpp	/^uptr kLowMemEnd;$/;"	m	namespace:__hwasan
kLowMemStart	hwasan/hwasan_linux.cpp	/^uptr kLowMemStart;$/;"	m	namespace:__hwasan
kLowShadowBeg	asan/asan_mapping_myriad.h	23;"	d
kLowShadowBeg	asan/asan_mapping_sparc64.h	34;"	d
kLowShadowEnd	asan/asan_mapping_myriad.h	24;"	d
kLowShadowEnd	asan/asan_mapping_sparc64.h	35;"	d
kLowShadowEnd	hwasan/hwasan_linux.cpp	/^uptr kLowShadowEnd;$/;"	m	namespace:__hwasan
kLowShadowStart	hwasan/hwasan_linux.cpp	/^uptr kLowShadowStart;$/;"	m	namespace:__hwasan
kMIPS32_ShadowOffset32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kMIPS32_ShadowOffset32 = 0x0aaa0000;$/;"	v
kMIPS32_ShadowOffset32	asan/asan_mapping.h	/^static const u64 kMIPS32_ShadowOffset32 = 0x0aaa0000;$/;"	v
kMIPS64_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kMIPS64_ShadowOffset64 = 1ULL << 37;$/;"	v
kMIPS64_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kMIPS64_ShadowOffset64 = 1ULL << 37;$/;"	v
kMacOrderBarrier	tsan/tsan_interceptors_mac.cpp	/^static const morder kMacOrderBarrier = mo_acq_rel;$/;"	m	namespace:__tsan
kMacOrderNonBarrier	tsan/tsan_interceptors_mac.cpp	/^static const morder kMacOrderNonBarrier = mo_acq_rel;$/;"	m	namespace:__tsan
kMagic1	asan/asan_fake_stack.cpp	/^static const u64 kMagic1 = kAsanStackAfterReturnMagic;$/;"	m	namespace:__asan
kMagic2	asan/asan_fake_stack.cpp	/^static const u64 kMagic2 = (kMagic1 << 8) | kMagic1;$/;"	m	namespace:__asan
kMagic4	asan/asan_fake_stack.cpp	/^static const u64 kMagic4 = (kMagic2 << 16) | kMagic2;$/;"	m	namespace:__asan
kMagic8	asan/asan_fake_stack.cpp	/^static const u64 kMagic8 = (kMagic4 << 32) | kMagic4;$/;"	m	namespace:__asan
kMainThreadId	tsan/tsan_report.cpp	/^const int kMainThreadId = 1;$/;"	m	namespace:__tsan
kMaxAllowedMallocSize	asan/asan_allocator.cpp	/^  static const uptr kMaxAllowedMallocSize =$/;"	m	struct:__asan::Allocator
kMaxAllowedMallocSize	hwasan/hwasan_allocator.h	/^static const uptr kMaxAllowedMallocSize = 1UL << 40;  \/\/ 1T$/;"	m	namespace:__hwasan
kMaxAllowedMallocSize	lsan/lsan_allocator.cpp	/^static const uptr kMaxAllowedMallocSize = 1UL << 30;$/;"	m	namespace:__lsan
kMaxAllowedMallocSize	tsan/tsan_mman.cpp	/^static constexpr uptr kMaxAllowedMallocSize = 1ull << 40;$/;"	m	namespace:__tsan
kMaxDescLen	tsan/tsan_interface_ann.cpp	/^static const int kMaxDescLen = 128;$/;"	m	namespace:__tsan
kMaxEnvNameLength	sanitizer_common/sanitizer_win.cpp	/^static const int kMaxEnvNameLength = 128;$/;"	m	namespace:__sanitizer
kMaxEnvValueLength	sanitizer_common/sanitizer_win.cpp	/^static const DWORD kMaxEnvValueLength = 32767;$/;"	m	namespace:__sanitizer
kMaxFlags	sanitizer_common/sanitizer_flag_parser.h	/^  static const int kMaxFlags = 200;$/;"	m	class:__sanitizer::FlagParser
kMaxGlobals	asan/asan_descriptions.h	/^  static const int kMaxGlobals = 4;$/;"	m	struct:__asan::GlobalAddressDescription
kMaxId	sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kMaxId = 1 << kPartShift;$/;"	m	class:__sanitizer::StackDepotBase
kMaxIgnoredRanges	sanitizer_common/sanitizer_libignore.h	/^  static const uptr kMaxIgnoredRanges = 128;$/;"	m	class:__sanitizer::LibIgnore
kMaxInstrumentedRanges	sanitizer_common/sanitizer_libignore.h	/^  static const uptr kMaxInstrumentedRanges = 1024;$/;"	m	class:__sanitizer::LibIgnore
kMaxLeaksConsidered	lsan/lsan_common.cpp	/^const uptr kMaxLeaksConsidered = 5000;$/;"	m	namespace:__lsan
kMaxLibs	sanitizer_common/sanitizer_libignore.h	/^  static const uptr kMaxLibs = 1024;$/;"	m	class:__sanitizer::LibIgnore
kMaxLink	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^const int kMaxLink = 8;$/;"	m	namespace:__sanitizer
kMaxLoopSize	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  enum { kMaxLoopSize = 20 };$/;"	e	enum:__sanitizer::DDReport::__anon12
kMaxMallocFreeHooks	sanitizer_common/sanitizer_common.cpp	/^static const int kMaxMallocFreeHooks = 5;$/;"	m	namespace:__sanitizer
kMaxMutex	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^const int kMaxMutex = kL1Size * kL2Size;$/;"	m	namespace:__sanitizer
kMaxNesting	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^const int kMaxNesting = 64;$/;"	m	namespace:__sanitizer
kMaxNumCached	sanitizer_common/sanitizer_allocator_primary32.h	/^    static const uptr kMaxNumCached = SizeClassMap::kMaxNumCachedHint - 2;$/;"	m	struct:SizeClassAllocator32::TransferBatch
kMaxNumCachedHint	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMaxNumCachedHint = kMaxNumCachedHintT;$/;"	m	class:SizeClassMap
kMaxNumChunks	sanitizer_common/sanitizer_allocator_secondary.h	/^  static const int kMaxNumChunks = 1 << 15;$/;"	m	class:LargeMmapAllocatorPtrArrayStatic
kMaxNumChunks	sanitizer_common/sanitizer_allocator_secondary.h	/^  static const int kMaxNumChunks = 1 << 20;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
kMaxNumOfInternalDieCallbacks	sanitizer_common/sanitizer_termination.cpp	/^static const int kMaxNumOfInternalDieCallbacks = 5;$/;"	m	namespace:__sanitizer
kMaxNumberOfThreads	asan/asan_thread.h	/^const u32 kMaxNumberOfThreads = (1 << 22);  \/\/ 4M$/;"	m	namespace:__asan
kMaxPathLength	sanitizer_common/sanitizer_common.h	/^const uptr kMaxPathLength = 4096;$/;"	m	namespace:__sanitizer
kMaxSegName	sanitizer_common/sanitizer_common.h	/^const uptr kMaxSegName = 16;$/;"	m	namespace:__sanitizer
kMaxSize	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMaxSize = 1UL << kMaxSizeLog;$/;"	m	class:SizeClassMap
kMaxSize	tsan/tsan_ignoreset.cpp	/^const uptr IgnoreSet::kMaxSize;$/;"	m	class:__tsan::IgnoreSet
kMaxSize	tsan/tsan_ignoreset.h	/^  static const uptr kMaxSize = 16;$/;"	m	class:__tsan::IgnoreSet
kMaxSize	tsan/tsan_mutexset.cpp	/^const uptr MutexSet::kMaxSize;$/;"	m	class:__tsan::MutexSet
kMaxSize	tsan/tsan_mutexset.h	/^  static const uptr kMaxSize = 16;$/;"	m	class:__tsan::MutexSet
kMaxStackFrameSizeLog	asan/asan_fake_stack.h	/^  static const uptr kMaxStackFrameSizeLog = 16;  \/\/ Max stack frame is 64K.$/;"	m	class:__asan::FakeStack
kMaxStackMallocSize	asan/asan_fake_stack.h	/^  static const uptr kMaxStackMallocSize = ((uptr)1) << kMaxStackFrameSizeLog;$/;"	m	class:__asan::FakeStack
kMaxSummaryLength	sanitizer_common/sanitizer_common.h	/^const int kMaxSummaryLength = 1024;$/;"	m	namespace:__sanitizer
kMaxSuppressionTypes	sanitizer_common/sanitizer_suppressions.h	/^  static const int kMaxSuppressionTypes = 64;$/;"	m	class:__sanitizer::SuppressionContext
kMaxThreadStackSize	sanitizer_common/sanitizer_common.h	/^const uptr kMaxThreadStackSize = 1 << 30;  \/\/ 1Gb$/;"	m	namespace:__sanitizer
kMaxThreads	lsan/lsan_thread.cpp	/^static const uptr kMaxThreads = 1 << 13;$/;"	m	namespace:__lsan
kMaxTid	tsan/tsan_defs.h	/^const unsigned kMaxTid = (1 << kTidBits) - ClockBlock::kClockCount;$/;"	m	namespace:__tsan
kMaxTidInClock	tsan/tsan_defs.h	/^const unsigned kMaxTidInClock = kMaxTid * 2;  \/\/ This includes msb 'freed' bit.$/;"	m	namespace:__tsan
kMaxTidInClock	tsan/tsan_defs.h	/^const unsigned kMaxTidInClock = kMaxTid;  \/\/ Go does not track freed memory.$/;"	m	namespace:__tsan
kMaxTidReuse	tsan/tsan_defs.h	/^const unsigned kMaxTidReuse = (1 << (64 - kClkBits)) - 1;$/;"	m	namespace:__tsan
kMaxTimesRestarted	sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const uptr kMaxTimesRestarted = 5;$/;"	m	class:__sanitizer::SymbolizerProcess
kMaxTrampolineRegion	interception/interception_win.cpp	/^static const int kMaxTrampolineRegion = 1024;$/;"	m	namespace:__interception
kMaxUnknownFlags	sanitizer_common/sanitizer_flag_parser.cpp	/^  static const int kMaxUnknownFlags = 20;$/;"	m	class:__sanitizer::UnknownFlags
kMaxUseCount	sanitizer_common/sanitizer_stackdepot.cpp	/^  static const u32 kMaxUseCount = 1 << kUseCountBits;$/;"	m	struct:__sanitizer::StackDepotNode
kMemoryUsageBufferSize	hwasan/hwasan.cpp	/^static constexpr uptr kMemoryUsageBufferSize = 4096;$/;"	m	namespace:__hwasan
kMetaMapSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kMetaMapSize = 1 << 16;$/;"	m	class:SizeClassAllocator64
kMetaShadowBeg	tsan/tsan_platform.h	/^  static const uptr kMetaShadowBeg = 0x300000000000ull;$/;"	m	struct:__tsan::Mapping
kMetaShadowCell	tsan/tsan_defs.h	/^const uptr kMetaShadowCell = 8;$/;"	m	namespace:__tsan
kMetaShadowEnd	tsan/tsan_platform.h	/^  static const uptr kMetaShadowEnd = 0x340000000000ull;$/;"	m	struct:__tsan::Mapping
kMetaShadowSize	tsan/tsan_defs.h	/^const uptr kMetaShadowSize = 4;$/;"	m	namespace:__tsan
kMetadataSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__asan::AP64
kMetadataSize	asan/asan_allocator.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__asan::AP64
kMetadataSize	hwasan/hwasan_allocator.h	/^  static const uptr kMetadataSize = sizeof(Metadata);$/;"	m	struct:__hwasan::AP64
kMetadataSize	lsan/lsan_allocator.h	/^  static const uptr kMetadataSize = sizeof(ChunkMetadata);$/;"	m	struct:__lsan::AP32
kMetadataSize	sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__sanitizer::AP32
kMetadataSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kMetadataSize = Params::kMetadataSize;$/;"	m	class:SizeClassAllocator32
kMetadataSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kMetadataSize = Params::kMetadataSize;$/;"	m	class:SizeClassAllocator64
kMetadataSize	tsan/tsan_rtl.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__tsan::AP32
kMetadataSize	tsan/tsan_rtl.h	/^  static const uptr kMetadataSize = 0;$/;"	m	struct:__tsan::AP64
kMidAppMemBeg	tsan/tsan_platform.h	/^  static const uptr kMidAppMemBeg  = 0x550000000000ull;$/;"	m	struct:__tsan::Mapping
kMidAppMemEnd	tsan/tsan_platform.h	/^  static const uptr kMidAppMemEnd  = 0x568000000000ull;$/;"	m	struct:__tsan::Mapping
kMidClass	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMidClass = kMidSize \/ kMinSize;$/;"	m	class:SizeClassMap
kMidMemBeg	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static uptr kMidMemBeg =    0x3000000000ULL;$/;"	m	namespace:__asan
kMidMemBeg	asan/asan_mapping.h	/^static uptr kMidMemBeg =    0x3000000000ULL;$/;"	m	namespace:__asan
kMidMemBeg	asan/asan_rtl.cpp	/^uptr kHighMemEnd, kMidMemBeg, kMidMemEnd;$/;"	m	namespace:__asan
kMidMemEnd	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static uptr kMidMemEnd =    0x4fffffffffULL;$/;"	m	namespace:__asan
kMidMemEnd	asan/asan_mapping.h	/^static uptr kMidMemEnd =    0x4fffffffffULL;$/;"	m	namespace:__asan
kMidMemEnd	asan/asan_rtl.cpp	/^uptr kHighMemEnd, kMidMemBeg, kMidMemEnd;$/;"	m	namespace:__asan
kMidShadowBeg	asan/asan_mapping_myriad.h	31;"	d
kMidShadowBeg	asan/asan_mapping_sparc64.h	45;"	d
kMidShadowEnd	asan/asan_mapping_myriad.h	32;"	d
kMidShadowEnd	asan/asan_mapping_sparc64.h	46;"	d
kMidSize	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMidSize = 1 << kMidSizeLog;$/;"	m	class:SizeClassMap
kMinFirstMapSizeTwoLevelByteMap	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const u64 kMinFirstMapSizeTwoLevelByteMap = 4;$/;"	m	class:SizeClassAllocator32
kMinSize	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kMinSize = 1 << kMinSizeLog;$/;"	m	class:SizeClassMap
kMinStackFrameSizeLog	asan/asan_fake_stack.h	/^  static const uptr kMinStackFrameSizeLog = 6;  \/\/ Min frame is 64B.$/;"	m	class:__asan::FakeStack
kMinimalDistanceFromAnotherGlobal	asan/asan_globals.cpp	/^const uptr kMinimalDistanceFromAnotherGlobal = 64;$/;"	m	namespace:__asan
kModuleArchARM64	sanitizer_common/sanitizer_common.h	/^  kModuleArchARM64,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV6	sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV6,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV7	sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV7,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV7K	sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV7K,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchARMV7S	sanitizer_common/sanitizer_common.h	/^  kModuleArchARMV7S,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchI386	sanitizer_common/sanitizer_common.h	/^  kModuleArchI386,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchRISCV64	sanitizer_common/sanitizer_common.h	/^  kModuleArchRISCV64$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchUnknown	sanitizer_common/sanitizer_common.h	/^  kModuleArchUnknown,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchX86_64	sanitizer_common/sanitizer_common.h	/^  kModuleArchX86_64,$/;"	e	enum:__sanitizer::ModuleArch
kModuleArchX86_64H	sanitizer_common/sanitizer_common.h	/^  kModuleArchX86_64H,$/;"	e	enum:__sanitizer::ModuleArch
kModuleUUIDSize	sanitizer_common/sanitizer_common.h	/^const uptr kModuleUUIDSize = 16;$/;"	m	namespace:__sanitizer
kMyriadCacheBitMask32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kMyriadCacheBitMask32 = 0x40000000ULL;$/;"	v
kMyriadCacheBitMask32	asan/asan_mapping.h	/^static const u64 kMyriadCacheBitMask32 = 0x40000000ULL;$/;"	v
kMyriadMemoryEnd32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kMyriadMemoryEnd32 =$/;"	v
kMyriadMemoryEnd32	asan/asan_mapping.h	/^static const u64 kMyriadMemoryEnd32 =$/;"	v
kMyriadMemoryOffset32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kMyriadMemoryOffset32 = 0x80000000ULL;$/;"	v
kMyriadMemoryOffset32	asan/asan_mapping.h	/^static const u64 kMyriadMemoryOffset32 = 0x80000000ULL;$/;"	v
kMyriadMemorySize32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kMyriadMemorySize32 = 0x20000000ULL;$/;"	v
kMyriadMemorySize32	asan/asan_mapping.h	/^static const u64 kMyriadMemorySize32 = 0x20000000ULL;$/;"	v
kMyriadShadowOffset32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kMyriadShadowOffset32 =$/;"	v
kMyriadShadowOffset32	asan/asan_mapping.h	/^static const u64 kMyriadShadowOffset32 =$/;"	v
kNetBSD_ShadowOffset32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kNetBSD_ShadowOffset32 = 1ULL << 30;  \/\/ 0x40000000$/;"	v
kNetBSD_ShadowOffset32	asan/asan_mapping.h	/^static const u64 kNetBSD_ShadowOffset32 = 1ULL << 30;  \/\/ 0x40000000$/;"	v
kNetBSD_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kNetBSD_ShadowOffset64 = 1ULL << 46;  \/\/ 0x400000000000$/;"	v
kNetBSD_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kNetBSD_ShadowOffset64 = 1ULL << 46;  \/\/ 0x400000000000$/;"	v
kNextMask	sanitizer_common/sanitizer_ring_buffer.h	/^  static constexpr uptr kNextMask = (1ULL << kSizeShift) - 1;$/;"	m	class:__sanitizer::CompactRingBuffer
kNoId	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^const u32 kNoId = -1;$/;"	m	namespace:__sanitizer
kNumClasses	sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	struct:SizeClassAllocator32LocalCache
kNumClasses	sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	struct:SizeClassAllocator64LocalCache
kNumClasses	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	class:SizeClassAllocator32
kNumClasses	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kNumClasses = SizeClassMap::kNumClasses;$/;"	m	class:SizeClassAllocator64
kNumClasses	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kNumClasses =$/;"	m	class:SizeClassMap
kNumClassesRounded	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kNumClassesRounded = SizeClassMap::kNumClassesRounded;$/;"	m	class:SizeClassAllocator64
kNumClassesRounded	sanitizer_common/sanitizer_allocator_size_class_map.h	/^  static const uptr kNumClassesRounded =$/;"	m	class:SizeClassMap
kNumPossibleRegions	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kNumPossibleRegions = kSpaceSize \/ kRegionSize;$/;"	m	class:SizeClassAllocator32
kNumberOfSizeClasses	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^static const uptr kNumberOfSizeClasses = SizeClassMap::kNumClasses;$/;"	m	namespace:__asan
kNumberOfSizeClasses	asan/asan_allocator.h	/^static const uptr kNumberOfSizeClasses = SizeClassMap::kNumClasses;$/;"	m	namespace:__asan
kNumberOfSizeClasses	asan/asan_fake_stack.h	/^  static const uptr kNumberOfSizeClasses =$/;"	m	class:__asan::FakeStack
kODRViolation	asan/asan_suppressions.cpp	/^static const char kODRViolation[] = "odr_violation";$/;"	m	namespace:__asan
kPPC64_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kPPC64_ShadowOffset64 = 1ULL << 41;$/;"	v
kPPC64_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kPPC64_ShadowOffset64 = 1ULL << 41;$/;"	v
kPageSizeBits	sanitizer_common/sanitizer_ring_buffer.h	/^  static constexpr int kPageSizeBits = 12;$/;"	m	class:__sanitizer::CompactRingBuffer
kPartBits	sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartBits = 8;$/;"	m	class:__sanitizer::StackDepotBase
kPartCount	sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartCount =$/;"	m	class:__sanitizer::StackDepotBase
kPartShift	sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartShift = sizeof(u32) * 8 - kPartBits - kReservedBits;$/;"	m	class:__sanitizer::StackDepotBase
kPartSize	sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kPartSize = kTabSize \/ kPartCount;$/;"	m	class:__sanitizer::StackDepotBase
kPathSeparator	sanitizer_common/sanitizer_file.cpp	/^static const char kPathSeparator = SANITIZER_WINDOWS ? ';' : ':';$/;"	m	namespace:__sanitizer
kProtectionExecute	sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionExecute = 4;$/;"	m	namespace:__sanitizer
kProtectionRead	sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionRead = 1;$/;"	m	namespace:__sanitizer
kProtectionShared	sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionShared = 8;$/;"	m	namespace:__sanitizer
kProtectionWrite	sanitizer_common/sanitizer_procmaps.h	/^static const uptr kProtectionWrite = 2;$/;"	m	namespace:__sanitizer
kPtrMask	sanitizer_common/sanitizer_lfstack.h	/^  static const u64 kPtrMask = ((u64)-1) >> kCounterBits;$/;"	m	struct:__sanitizer::LFStack
kRandomShuffleChunks	sanitizer_common/sanitizer_allocator_primary32.h	/^    kRandomShuffleChunks = 1,$/;"	e	enum:SizeClassAllocator32FlagMasks::__anon8
kRandomShuffleChunks	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const bool kRandomShuffleChunks = Params::kFlags &$/;"	m	class:SizeClassAllocator32
kRandomShuffleChunks	sanitizer_common/sanitizer_allocator_primary64.h	/^    kRandomShuffleChunks = 1,$/;"	e	enum:SizeClassAllocator64FlagMasks::__anon6
kRandomShuffleChunks	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const bool kRandomShuffleChunks =$/;"	m	class:SizeClassAllocator64
kReachable	lsan/lsan_common.h	/^  kReachable = 2,$/;"	e	enum:__lsan::ChunkTag
kReadBit	tsan/tsan_rtl.h	/^  static const u64 kReadBit     = 1ull << kReadShift;$/;"	m	class:__tsan::Shadow
kReadLock	sanitizer_common/sanitizer_mutex.h	/^    kReadLock = 2$/;"	e	enum:__sanitizer::RWMutex::__anon66
kReadLock	tsan/tsan_mutex.cpp	/^const uptr kReadLock = 2;$/;"	m	namespace:__tsan
kReadShift	tsan/tsan_rtl.h	/^  static const u64 kReadShift   = 5 + kClkBits;$/;"	m	class:__tsan::Shadow
kRecordAddrBaseTagShift	hwasan/hwasan.h	/^const unsigned kRecordAddrBaseTagShift = 3;$/;"	v
kRecordFPLShift	hwasan/hwasan.h	/^const unsigned kRecordFPLShift = 4;$/;"	v
kRecordFPModulus	hwasan/hwasan.h	/^const unsigned kRecordFPModulus = 1 << (64 - kRecordFPShift + kRecordFPLShift);$/;"	v
kRecordFPShift	hwasan/hwasan.h	/^const unsigned kRecordFPShift = 48;$/;"	v
kRefIdx	tsan/tsan_defs.h	/^  static const uptr kRefIdx = kTableSize - 1;$/;"	m	struct:__tsan::ClockBlock
kRegionSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kRegionSize = 1 << kRegionSizeLog;$/;"	m	class:SizeClassAllocator32
kRegionSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kRegionSize = kSpaceSize \/ kNumClassesRounded;$/;"	m	class:SizeClassAllocator64
kRegionSizeLog	lsan/lsan_allocator.h	/^  static const uptr kRegionSizeLog = 20;$/;"	m	struct:__lsan::AP32
kRegionSizeLog	sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kRegionSizeLog = 20;$/;"	m	struct:__sanitizer::AP32
kRegionSizeLog	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kRegionSizeLog = Params::kRegionSizeLog;$/;"	m	class:SizeClassAllocator32
kRegionSizeLog	tsan/tsan_rtl.h	/^  static const uptr kRegionSizeLog = 20;$/;"	m	struct:__tsan::AP32
kReleaseToOSIntervalNever	sanitizer_common/sanitizer_common.h	/^const s32 kReleaseToOSIntervalNever = -1;$/;"	m	namespace:__sanitizer
kRetiredStackFrameMagic	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_internal.h	/^static const uptr kRetiredStackFrameMagic = 0x45E0360E;$/;"	m	namespace:__asan
kRetiredStackFrameMagic	asan/asan_internal.h	/^static const uptr kRetiredStackFrameMagic = 0x45E0360E;$/;"	m	namespace:__asan
kRightAlignAlways	hwasan/hwasan_allocator.cpp	/^  kRightAlignAlways$/;"	e	enum:__hwasan::RightAlignMode
kRightAlignNever	hwasan/hwasan_allocator.cpp	/^  kRightAlignNever,$/;"	e	enum:__hwasan::RightAlignMode
kRightAlignSometimes	hwasan/hwasan_allocator.cpp	/^  kRightAlignSometimes,$/;"	e	enum:__hwasan::RightAlignMode
kRiscv64_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kRiscv64_ShadowOffset64 = 0x20000000;$/;"	v
kRiscv64_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kRiscv64_ShadowOffset64 = 0x20000000;$/;"	v
kSPARC64_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kSPARC64_ShadowOffset64 = 1ULL << 43;  \/\/ 0x80000000000$/;"	v
kSPARC64_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kSPARC64_ShadowOffset64 = 1ULL << 43;  \/\/ 0x80000000000$/;"	v
kSancovSinkName	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^constexpr const char kSancovSinkName[] = "sancov";$/;"	m	namespace:__sancov::__anon45
kSanitizerVmMemoryOsAllocOnce	lsan/lsan_common_mac.cpp	/^static const int kSanitizerVmMemoryOsAllocOnce = 73;$/;"	v
kSanitizerVmMemoryOsAllocOnce	lsan/lsan_common_mac.cpp	/^static const int kSanitizerVmMemoryOsAllocOnce = VM_MEMORY_OS_ALLOC_ONCE;$/;"	v
kSecondsToSleepWhenRecursiveCheckFailed	sanitizer_common/sanitizer_termination.cpp	/^const int kSecondsToSleepWhenRecursiveCheckFailed = 2;$/;"	m	namespace:__sanitizer
kShadowAlignment	hwasan/hwasan_mapping.h	/^constexpr uptr kShadowAlignment = 1ULL << kShadowScale;$/;"	v
kShadowBaseAlignment	hwasan/hwasan.h	/^const unsigned kShadowBaseAlignment = 32;$/;"	v
kShadowBeg	tsan/tsan_platform.h	/^  static const uptr kShadowBeg     = 0x010000000000ull;$/;"	m	struct:__tsan::Mapping
kShadowCell	tsan/tsan_defs.h	/^const uptr kShadowCell = 8;$/;"	m	namespace:__tsan
kShadowCnt	tsan/tsan_defs.h	/^const uptr kShadowCnt = 4;$/;"	m	namespace:__tsan
kShadowEnd	tsan/tsan_platform.h	/^  static const uptr kShadowEnd     = 0x200000000000ull;$/;"	m	struct:__tsan::Mapping
kShadowGap2Beg	asan/asan_mapping_myriad.h	37;"	d
kShadowGap2Beg	asan/asan_mapping_sparc64.h	56;"	d
kShadowGap2End	asan/asan_mapping_myriad.h	38;"	d
kShadowGap2End	asan/asan_mapping_sparc64.h	57;"	d
kShadowGap3Beg	asan/asan_mapping_myriad.h	40;"	d
kShadowGap3Beg	asan/asan_mapping_sparc64.h	59;"	d
kShadowGap3End	asan/asan_mapping_myriad.h	41;"	d
kShadowGap3End	asan/asan_mapping_sparc64.h	60;"	d
kShadowGapBeg	asan/asan_mapping_myriad.h	34;"	d
kShadowGapBeg	asan/asan_mapping_sparc64.h	53;"	d
kShadowGapEnd	asan/asan_mapping_myriad.h	35;"	d
kShadowGapEnd	asan/asan_mapping_sparc64.h	54;"	d
kShadowMemoryMappingHint	tsan/tsan_platform_posix.cpp	/^static const char kShadowMemoryMappingHint[] =$/;"	m	namespace:__tsan
kShadowMemoryMappingWarning	tsan/tsan_platform_posix.cpp	/^static const char kShadowMemoryMappingWarning[] =$/;"	m	namespace:__tsan
kShadowMultiplier	tsan/tsan_defs.h	/^const uptr kShadowMultiplier = kShadowSize * kShadowCnt \/ kShadowCell;$/;"	m	namespace:__tsan
kShadowRodata	tsan/tsan_rtl.h	/^const u64 kShadowRodata = (u64)-1;  \/\/ .rodata shadow marker$/;"	m	namespace:__tsan
kShadowScale	hwasan/hwasan_mapping.h	/^constexpr uptr kShadowScale = 4;$/;"	v
kShadowSize	tsan/tsan_defs.h	/^const uptr kShadowSize = 8;$/;"	m	namespace:__tsan
kShadowStackSize	tsan/tsan_defs.h	/^const uptr kShadowStackSize = 64 * 1024;$/;"	m	namespace:__tsan
kShortJumpInstructionLength	interception/interception_win.cpp	/^static const int kShortJumpInstructionLength = 2;$/;"	m	namespace:__interception
kSigCount	tsan/tsan_interceptors_posix.cpp	/^const int kSigCount = 129;$/;"	v
kSize	sanitizer_common/sanitizer_quarantine.h	/^  static const uptr kSize = 1021;$/;"	m	struct:__sanitizer::QuarantineBatch
kSize	tsan/tsan_defs.h	/^  static const uptr kSize = 512;$/;"	m	struct:__tsan::ClockBlock
kSize	tsan/tsan_dense_alloc.h	/^  static const uptr kSize = 128;$/;"	m	class:__tsan::DenseSlabAllocCache
kSizeLog1	tsan/tsan_rtl.h	/^const int kSizeLog1 = 0;$/;"	m	namespace:__tsan
kSizeLog2	tsan/tsan_rtl.h	/^const int kSizeLog2 = 1;$/;"	m	namespace:__tsan
kSizeLog4	tsan/tsan_rtl.h	/^const int kSizeLog4 = 2;$/;"	m	namespace:__tsan
kSizeLog8	tsan/tsan_rtl.h	/^const int kSizeLog8 = 3;$/;"	m	namespace:__tsan
kSizeShift	sanitizer_common/sanitizer_ring_buffer.h	/^  static constexpr int kSizeShift = 56;$/;"	m	class:__sanitizer::CompactRingBuffer
kSkippedSecNames	lsan/lsan_common_mac.cpp	/^static const char *kSkippedSecNames[] = {$/;"	m	namespace:__lsan
kSpaceBeg	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:__asan::AP64
kSpaceBeg	asan/asan_allocator.h	/^  static const uptr kSpaceBeg = kAllocatorSpace;$/;"	m	struct:__asan::AP64
kSpaceBeg	hwasan/hwasan_allocator.h	/^  static const uptr kSpaceBeg = ~0ULL;$/;"	m	struct:__hwasan::AP64
kSpaceBeg	lsan/lsan_allocator.h	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__lsan::AP32
kSpaceBeg	sanitizer_common/sanitizer_allocator_internal.h	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__sanitizer::AP32
kSpaceBeg	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const uptr kSpaceBeg = Params::kSpaceBeg;$/;"	m	class:SizeClassAllocator32
kSpaceBeg	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kSpaceBeg = Params::kSpaceBeg;$/;"	m	class:SizeClassAllocator64
kSpaceBeg	tsan/tsan_rtl.h	/^  static const uptr kSpaceBeg = 0;$/;"	m	struct:__tsan::AP32
kSpaceBeg	tsan/tsan_rtl.h	/^  static const uptr kSpaceBeg = Mapping::kHeapMemBeg;$/;"	m	struct:__tsan::AP64
kSpaceSize	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:__asan::AP64
kSpaceSize	asan/asan_allocator.h	/^  static const uptr kSpaceSize = kAllocatorSize;$/;"	m	struct:__asan::AP64
kSpaceSize	hwasan/hwasan_allocator.h	/^  static const uptr kSpaceSize = 0x2000000000ULL;$/;"	m	struct:__hwasan::AP64
kSpaceSize	lsan/lsan_allocator.h	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__lsan::AP32
kSpaceSize	sanitizer_common/sanitizer_allocator_internal.h	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__sanitizer::AP32
kSpaceSize	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const u64 kSpaceSize = Params::kSpaceSize;$/;"	m	class:SizeClassAllocator32
kSpaceSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kSpaceSize = Params::kSpaceSize;$/;"	m	class:SizeClassAllocator64
kSpaceSize	tsan/tsan_rtl.h	/^  static const u64 kSpaceSize = SANITIZER_MMAP_RANGE_SIZE;$/;"	m	struct:__tsan::AP32
kSpaceSize	tsan/tsan_rtl.h	/^  static const uptr kSpaceSize = Mapping::kHeapMemEnd - Mapping::kHeapMemBeg;$/;"	m	struct:__tsan::AP64
kStackDepotMaxUseCount	sanitizer_common/sanitizer_stackdepot.h	/^const int kStackDepotMaxUseCount = 1U << (SANITIZER_ANDROID ? 16 : 20);$/;"	m	namespace:__sanitizer
kStackTraceMax	sanitizer_common/sanitizer_stacktrace.h	/^static const u32 kStackTraceMax = 256;$/;"	m	namespace:__sanitizer
kStdSuppressions	lsan/lsan_common.cpp	/^static const char kStdSuppressions[] =$/;"	m	namespace:__lsan
kStderrFd	sanitizer_common/sanitizer_libc.h	64;"	d
kStdinFd	sanitizer_common/sanitizer_libc.h	62;"	d
kStdoutFd	sanitizer_common/sanitizer_libc.h	63;"	d
kSuppressionDeadlock	tsan/tsan_suppressions.h	/^const char kSuppressionDeadlock[] = "deadlock";$/;"	m	namespace:__tsan
kSuppressionLeak	lsan/lsan_common.cpp	/^static const char kSuppressionLeak[] = "leak";$/;"	m	namespace:__lsan
kSuppressionLib	tsan/tsan_suppressions.h	/^const char kSuppressionLib[] = "called_from_lib";$/;"	m	namespace:__tsan
kSuppressionMutex	tsan/tsan_suppressions.h	/^const char kSuppressionMutex[] = "mutex";$/;"	m	namespace:__tsan
kSuppressionNone	tsan/tsan_suppressions.h	/^const char kSuppressionNone[] = "none";$/;"	m	namespace:__tsan
kSuppressionRace	tsan/tsan_suppressions.h	/^const char kSuppressionRace[] = "race";$/;"	m	namespace:__tsan
kSuppressionRaceTop	tsan/tsan_suppressions.h	/^const char kSuppressionRaceTop[] = "race_top";$/;"	m	namespace:__tsan
kSuppressionSignal	tsan/tsan_suppressions.h	/^const char kSuppressionSignal[] = "signal";$/;"	m	namespace:__tsan
kSuppressionThread	tsan/tsan_suppressions.h	/^const char kSuppressionThread[] = "thread";$/;"	m	namespace:__tsan
kSuppressionTypes	asan/asan_suppressions.cpp	/^static const char *kSuppressionTypes[] = {$/;"	m	namespace:__asan
kSuppressionTypes	lsan/lsan_common.cpp	/^static const char *kSuppressionTypes[] = { kSuppressionLeak };$/;"	m	namespace:__lsan
kSuppressionTypes	tsan/tsan_suppressions.cpp	/^static const char *kSuppressionTypes[] = {$/;"	m	namespace:__tsan
kSuppressionTypes	ubsan/ubsan_diag.cpp	/^static const char *kSuppressionTypes[] = {$/;"	v
kSymbolizerStartupTimeMillis	sanitizer_common/sanitizer_symbolizer_internal.h	/^  static const int kSymbolizerStartupTimeMillis = 10;$/;"	m	class:__sanitizer::SymbolizerProcess
kSyncSignals	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static const int kSyncSignals[] = { SIGABRT, SIGILL, SIGFPE, SIGSEGV, SIGBUS,$/;"	m	namespace:__sanitizer
kSyncSignals	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static const int kSyncSignals[] = {SIGABRT, SIGILL,  SIGFPE, SIGSEGV,$/;"	m	namespace:__sanitizer
kSystemZ_ShadowOffset64	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kSystemZ_ShadowOffset64 = 1ULL << 52;$/;"	v
kSystemZ_ShadowOffset64	asan/asan_mapping.h	/^static const u64 kSystemZ_ShadowOffset64 = 1ULL << 52;$/;"	v
kTabSize	sanitizer_common/sanitizer_stackdepotbase.h	/^  static const int kTabSize = 1 << kTabSizeLog;  \/\/ Hash table size.$/;"	m	class:__sanitizer::StackDepotBase
kTabSizeLog	sanitizer_common/sanitizer_stackdepot.cpp	/^  static const u32 kTabSizeLog = SANITIZER_ANDROID ? 16 : 20;$/;"	m	struct:__sanitizer::StackDepotNode
kTableSize	tsan/tsan_defs.h	/^  static const uptr kTableSize = kSize \/ sizeof(u32);$/;"	m	struct:__tsan::ClockBlock
kTableSize	tsan/tsan_fd.cpp	/^const int kTableSize = kTableSizeL1 * kTableSizeL2;$/;"	m	namespace:__tsan
kTableSizeL1	tsan/tsan_fd.cpp	/^const int kTableSizeL1 = 1024;$/;"	m	namespace:__tsan
kTableSizeL2	tsan/tsan_fd.cpp	/^const int kTableSizeL2 = 1024;$/;"	m	namespace:__tsan
kThreadBufSize	tsan/tsan_report.cpp	/^const int kThreadBufSize = 32;$/;"	m	namespace:__tsan
kThreadQuarantineSize	lsan/lsan_thread.cpp	/^static const uptr kThreadQuarantineSize = 64;$/;"	m	namespace:__lsan
kThreadQuarantineSize	tsan/tsan_rtl.cpp	/^static const u32 kThreadQuarantineSize = 16;$/;"	m	namespace:__tsan
kThreadQuarantineSize	tsan/tsan_rtl.cpp	/^static const u32 kThreadQuarantineSize = 64;$/;"	m	namespace:__tsan
kThreadSelfOffset	sanitizer_common/sanitizer_linux_libcdep.cpp	/^const uptr kThreadSelfOffset = FIRST_32_SECOND_64(8, 16);$/;"	m	namespace:__sanitizer
kTidBits	tsan/tsan_defs.h	/^const int kTidBits = 13;$/;"	m	namespace:__tsan
kTidShift	tsan/tsan_rtl.h	/^  static const int kTidShift = 64 - kTidBits - 1;$/;"	m	class:__tsan::FastState
kTotalTraceSize	tsan/tsan_platform.h	/^const uptr kTotalTraceSize = (kTraceSize * sizeof(Event) + sizeof(Trace)$/;"	m	namespace:__tsan
kTraceMemBeg	tsan/tsan_platform.h	/^  static const uptr kTraceMemBeg   = 0x600000000000ull;$/;"	m	struct:__tsan::Mapping
kTraceMemEnd	tsan/tsan_platform.h	/^  static const uptr kTraceMemEnd   = 0x620000000000ull;$/;"	m	struct:__tsan::Mapping
kTracePartSize	tsan/tsan_trace.h	/^const int kTracePartSize = 1 << kTracePartSizeBits;$/;"	m	namespace:__tsan
kTracePartSizeBits	tsan/tsan_trace.h	/^const int kTracePartSizeBits = 13;$/;"	m	namespace:__tsan
kTraceParts	tsan/tsan_trace.h	/^const int kTraceParts = 2 * 1024 * 1024 \/ kTracePartSize;$/;"	m	namespace:__tsan
kTraceSize	tsan/tsan_trace.h	/^const int kTraceSize = kTracePartSize * kTraceParts;$/;"	m	namespace:__tsan
kTrampolineScanLimitRange	interception/interception_win.cpp	/^static const uptr kTrampolineScanLimitRange = 1 << 31;  \/\/ 2 gig$/;"	m	namespace:__interception
kTwoLevelByteMapSize1	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const u64 kTwoLevelByteMapSize1 =$/;"	m	class:SizeClassAllocator32
kUnknown	sanitizer_common/sanitizer_symbolizer.h	/^  static const uptr kUnknown = ~(uptr)0;$/;"	m	struct:__sanitizer::AddressInfo
kUnknownTid	sanitizer_common/sanitizer_thread_registry.cpp	/^const u32 ThreadRegistry::kUnknownTid = ~0U;$/;"	m	class:__sanitizer::ThreadRegistry
kUnknownTid	sanitizer_common/sanitizer_thread_registry.h	/^  static const u32 kUnknownTid;$/;"	m	class:__sanitizer::ThreadRegistry
kUnlocked	sanitizer_common/sanitizer_mutex.h	/^    kUnlocked = 0,$/;"	e	enum:__sanitizer::RWMutex::__anon66
kUnlocked	tsan/tsan_mutex.cpp	/^const uptr kUnlocked = 0;$/;"	m	namespace:__tsan
kUseCountBits	sanitizer_common/sanitizer_stackdepot.cpp	/^  static const u32 kUseCountBits = kTabSizeLog;$/;"	m	struct:__sanitizer::StackDepotNode
kUseCountMask	sanitizer_common/sanitizer_stackdepot.cpp	/^  static const u32 kUseCountMask = (1 << kUseCountBits) - 1;$/;"	m	struct:__sanitizer::StackDepotNode
kUseSeparateSizeClassForBatch	sanitizer_common/sanitizer_allocator_local_cache.h	/^  static const bool kUseSeparateSizeClassForBatch =$/;"	m	struct:SizeClassAllocator32LocalCache
kUseSeparateSizeClassForBatch	sanitizer_common/sanitizer_allocator_primary32.h	/^    kUseSeparateSizeClassForBatch = 2,$/;"	e	enum:SizeClassAllocator32FlagMasks::__anon8
kUseSeparateSizeClassForBatch	sanitizer_common/sanitizer_allocator_primary32.h	/^  static const bool kUseSeparateSizeClassForBatch = Params::kFlags &$/;"	m	class:SizeClassAllocator32
kUserMapSize	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const uptr kUserMapSize = 1 << 16;$/;"	m	class:SizeClassAllocator64
kUsingConstantSpaceBeg	sanitizer_common/sanitizer_allocator_primary64.h	/^  static const bool kUsingConstantSpaceBeg = kSpaceBeg != ~(uptr)0;$/;"	m	class:SizeClassAllocator64
kVdsoBeg	tsan/tsan_platform.h	/^  static const uptr kVdsoBeg       = 0xf000000000000000ull;$/;"	m	struct:__tsan::Mapping
kVptrCheck	ubsan/ubsan_diag.cpp	/^static const char kVptrCheck[] = "vptr_check";$/;"	v
kWindowsShadowOffset32	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_mapping.h	/^static const u64 kWindowsShadowOffset32 = 3ULL << 28;  \/\/ 0x30000000$/;"	v
kWindowsShadowOffset32	asan/asan_mapping.h	/^static const u64 kWindowsShadowOffset32 = 3ULL << 28;  \/\/ 0x30000000$/;"	v
kWordSize	sanitizer_common/sanitizer_common.h	/^const uptr kWordSize = SANITIZER_WORDSIZE \/ 8;$/;"	m	namespace:__sanitizer
kWordSizeInBits	sanitizer_common/sanitizer_common.h	/^const uptr kWordSizeInBits = 8 * kWordSize;$/;"	m	namespace:__sanitizer
kWriteLock	sanitizer_common/sanitizer_mutex.h	/^    kWriteLock = 1,$/;"	e	enum:__sanitizer::RWMutex::__anon66
kWriteLock	tsan/tsan_mutex.cpp	/^const uptr kWriteLock = 1;$/;"	m	namespace:__tsan
kXnuFastMmapFd	sanitizer_common/sanitizer_mac.cpp	115;"	d
kXnuFastMmapThreshold	sanitizer_common/sanitizer_mac.cpp	/^static size_t kXnuFastMmapThreshold = 2 << 30; \/\/ 2 GB$/;"	m	namespace:__sanitizer
kZeroBaseMaxShadowStart	asan/asan_mapping_sparc64.h	51;"	d
kZeroBaseMaxShadowStart	hwasan/hwasan_linux.cpp	/^constexpr uptr kZeroBaseMaxShadowStart = 1 << 18;$/;"	m	namespace:__hwasan
kZeroBaseShadowStart	asan/asan_mapping_sparc64.h	50;"	d
kZeroBaseShadowStart	hwasan/hwasan_linux.cpp	/^constexpr uptr kZeroBaseShadowStart = 0;$/;"	m	namespace:__hwasan
kernel_stat_to_stat	sanitizer_common/sanitizer_linux.cpp	/^static void kernel_stat_to_stat(struct kernel_stat *in, struct stat *out) {$/;"	f	namespace:__sanitizer
kernel_timeval	sanitizer_common/sanitizer_linux.cpp	/^struct kernel_timeval {$/;"	s
key	asan/asan_posix.cpp	/^  void *key;$/;"	m	struct:__asan::tsd_key
key	asan/asan_posix.cpp	/^static thread_local struct tsd_key key;$/;"	m	namespace:__asan	typeref:struct:__asan::tsd_key
key	lsan/lsan_common_mac.cpp	/^static pthread_key_t key;$/;"	m	namespace:__lsan
key	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  long key;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
key	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint8_t key[224];$/;"	m	struct:__anon36
key	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int key;                    \/\/ key_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
key_counter	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr key_counter;$/;"	m	struct:__sanitizer::__sanitizer_cdbw
key_once	lsan/lsan_common_mac.cpp	/^static pthread_once_t key_once = PTHREAD_ONCE_INIT;$/;"	m	namespace:__lsan
kind	asan/asan_descriptions.h	/^    AddressKind kind;$/;"	m	struct:__asan::AddressDescription::AddressDescriptionData
kind	asan/asan_descriptions.h	/^  ShadowKind kind;$/;"	m	struct:__asan::ShadowAddressDescription
kind	asan/asan_errors.h	/^  ErrorKind kind;$/;"	m	struct:__asan::ErrorDescription
kinfo_vmentry	sanitizer_common/sanitizer_procmaps_bsd.cpp	36;"	d
kve_end	sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_end;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_flags	sanitizer_common/sanitizer_freebsd.h	/^  int kve_flags;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_offset	sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_offset;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_path	sanitizer_common/sanitizer_freebsd.h	/^  char kve_path[PATH_MAX];$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_private_resident	sanitizer_common/sanitizer_freebsd.h	/^  int kve_private_resident;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_protection	sanitizer_common/sanitizer_freebsd.h	/^  int kve_protection;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_ref_count	sanitizer_common/sanitizer_freebsd.h	/^  int kve_ref_count;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_resident	sanitizer_common/sanitizer_freebsd.h	/^  int kve_resident;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_shadow_count	sanitizer_common/sanitizer_freebsd.h	/^  int kve_shadow_count;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_start	sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_start;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_status	sanitizer_common/sanitizer_freebsd.h	/^  __uint16_t kve_status;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_structsize	sanitizer_common/sanitizer_freebsd.h	/^  int kve_structsize;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_type	sanitizer_common/sanitizer_freebsd.h	/^  int kve_type;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_fileid	sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_vn_fileid;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_fsid	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t kve_vn_fsid;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_mode	sanitizer_common/sanitizer_freebsd.h	/^  __uint16_t kve_vn_mode;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_rdev	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t kve_vn_rdev;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_size	sanitizer_common/sanitizer_freebsd.h	/^  __xuint64_t kve_vn_size;$/;"	m	struct:__sanitizer::xkinfo_vmentry
kve_vn_type	sanitizer_common/sanitizer_freebsd.h	/^  int kve_vn_type;$/;"	m	struct:__sanitizer::xkinfo_vmentry
l1	include/sanitizer/dfsan_interface.h	/^  dfsan_label l1;$/;"	m	struct:dfsan_label_info
l1_	sanitizer_common/sanitizer_bitvector.h	/^  BV l1_[kLevel1Size];$/;"	m	class:__sanitizer::TwoLevelBitVector
l2	include/sanitizer/dfsan_interface.h	/^  dfsan_label l2;$/;"	m	struct:dfsan_label_info
l2_	sanitizer_common/sanitizer_bitvector.h	/^  BV l2_[kLevel1Size][BV::kSize];$/;"	m	class:__sanitizer::TwoLevelBitVector
last	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^  SymbolizedStack *last;$/;"	m	struct:__sanitizer::__anon11::SymbolizeCodeCallbackArg
last_	sanitizer_common/sanitizer_list.h	/^  Item *last_;$/;"	m	struct:__sanitizer::IntrusiveList
last_	sanitizer_common/sanitizer_ring_buffer.h	/^  T *last_;$/;"	m	class:__sanitizer::RingBuffer
last_	sanitizer_common/sanitizer_vector.h	/^  T *last_;$/;"	m	class:__sanitizer::Vector
last_dlsym_alloc_size_in_words	asan/asan_malloc_linux.cpp	/^static uptr last_dlsym_alloc_size_in_words;$/;"	v
last_lock	tsan/tsan_sync.h	/^  u64 last_lock;$/;"	m	struct:__tsan::SyncVar
last_match_	sanitizer_common/sanitizer_symbolizer.h	/^    const char *last_match_;$/;"	m	class:__sanitizer::final::ModuleNameOwner
last_memalign_ptr	sanitizer_common/sanitizer_tls_get_addr.h	/^  uptr last_memalign_ptr;$/;"	m	struct:__sanitizer::DTLS
last_memalign_size	sanitizer_common/sanitizer_tls_get_addr.h	/^  uptr last_memalign_size;$/;"	m	struct:__sanitizer::DTLS
last_release_at_ns	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 last_release_at_ns;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
last_released_bytes	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 last_released_bytes;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
last_sleep_clock	tsan/tsan_rtl.h	/^  ThreadClock last_sleep_clock;$/;"	m	struct:__tsan::ThreadState
last_sleep_stack_id	tsan/tsan_rtl.h	/^  u32 last_sleep_stack_id;$/;"	m	struct:__tsan::ThreadState
last_symbolize_time_ns	tsan/tsan_rtl.h	/^  atomic_uint64_t last_symbolize_time_ns;$/;"	m	struct:__tsan::Context
lc_type	sanitizer_common/sanitizer_procmaps_mac.cpp	/^  u32 lc_type;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData
leak_id	lsan/lsan_common.h	/^  u32 leak_id;$/;"	m	struct:__lsan::LeakedObject
leak_report	lsan/lsan_common.h	/^  LeakReport leak_report;$/;"	m	struct:__lsan::CheckForLeaksParam
leaked_objects_	lsan/lsan_common.h	/^  InternalMmapVector<LeakedObject> leaked_objects_;$/;"	m	class:__lsan::LeakReport
leaks_	lsan/lsan_common.h	/^  InternalMmapVector<Leak> leaks_;$/;"	m	class:__lsan::LeakReport
len	sanitizer_common/sanitizer_linux.h	/^  uptr len;$/;"	m	struct:__sanitizer::ProcSelfMapsBuff
len	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uptr len;$/;"	m	struct:__sanitizer::__sanitizer_nvlist_ref_t
length	sanitizer_common/sanitizer_common.h	/^  uptr length() { return length_; }$/;"	f	class:__sanitizer::InternalScopedString
length	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned short length;$/;"	m	struct:urio_command
length1	asan/asan_errors.h	/^  uptr length1, length2;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
length2	asan/asan_errors.h	/^  uptr length1, length2;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
length_	sanitizer_common/sanitizer_common.h	/^  uptr length_;$/;"	m	class:__sanitizer::InternalScopedString
libignore	tsan/tsan_interceptors_posix.cpp	/^  ALIGNED(64) LibIgnore libignore;$/;"	m	struct:__tsan::InterceptorContext
libignore	tsan/tsan_interceptors_posix.cpp	/^LibIgnore *libignore() {$/;"	f	namespace:__tsan
libs_	sanitizer_common/sanitizer_libignore.h	/^  Lib libs_[kMaxLibs];$/;"	m	class:__sanitizer::LibIgnore
limit	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *limit;$/;"	m	struct:__sanitizer__obstack_chunk
line	asan/asan_report.h	/^  uptr line;$/;"	m	struct:__asan::StackVarDescr
line	sanitizer_common/sanitizer_symbolizer.h	/^  int line;$/;"	m	struct:__sanitizer::AddressInfo
line	sanitizer_common/sanitizer_symbolizer.h	/^  uptr line;$/;"	m	struct:__sanitizer::DataInfo
line	tsan/tsan_interface_ann.cpp	/^  int line;$/;"	m	struct:__tsan::ExpectRace
line_no	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    int line_no;$/;"	m	struct:__asan_global_source_location
line_no	asan/asan_interface_internal.h	/^    int line_no;$/;"	m	struct:__asan_global_source_location
link	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  Link link[kMaxLink];$/;"	m	struct:__sanitizer::Mutex
link	sanitizer_common/sanitizer_stackdepot.cpp	/^  StackDepotNode *link;$/;"	m	struct:__sanitizer::StackDepotNode
linker	lsan/lsan_common_linux.cpp	/^static LoadedModule *linker = nullptr;$/;"	m	namespace:__lsan
linux_dirent	sanitizer_common/sanitizer_linux.cpp	/^struct linux_dirent {$/;"	s	namespace:__sanitizer
linux_dirent	sanitizer_common/sanitizer_linux_libcdep.cpp	/^struct __sanitizer::linux_dirent {$/;"	s	class:__sanitizer
list_	hwasan/hwasan_thread_list.h	/^  Thread *list_;$/;"	m	struct:__hwasan::ThreadListHead
list_	sanitizer_common/sanitizer_quarantine.h	/^  List list_;$/;"	m	class:__sanitizer::QuarantineCache
list_files	merge.sh	/^list_files() {$/;"	f
list_mutex_	hwasan/hwasan_thread_list.h	/^  SpinMutex list_mutex_;$/;"	m	class:__hwasan::HwasanThreadList
list_of_all_globals	asan/asan_globals.cpp	/^static ListOfGlobals *list_of_all_globals;$/;"	m	namespace:__asan
live_list_	hwasan/hwasan_thread_list.h	/^  ThreadListHead live_list_;$/;"	m	class:__hwasan::HwasanThreadList
ll_strndup	sanitizer_common/sanitizer_flag_parser.cpp	/^char *FlagParser::ll_strndup(const char *s, uptr n) {$/;"	f	class:__sanitizer::FlagParser
lo	tsan/tsan_md5.cpp	/^  MD5_u32plus lo, hi;$/;"	m	struct:__tsan::__anon81
load	sanitizer_common/sanitizer_stackdepot.cpp	/^  args_type load() const {$/;"	f	struct:__sanitizer::StackDepotNode
loaded	sanitizer_common/sanitizer_libignore.h	/^    bool loaded;$/;"	m	struct:__sanitizer::LibIgnore::Lib
locals	sanitizer_common/sanitizer_symbolizer.h	/^  InternalMmapVector<LocalInfo> locals;$/;"	m	struct:__sanitizer::FrameInfo
location	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    __asan_global_source_location *location;  \/\/ Source location of a global,$/;"	m	struct:__asan_global
location	asan/asan_interface_internal.h	/^    __asan_global_source_location *location;  \/\/ Source location of a global,$/;"	m	struct:__asan_global
lock	sanitizer_common/sanitizer_allocator_report.cpp	/^  ScopedErrorReportLock lock;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport
lock	sanitizer_common/sanitizer_atomic_clang_mips.h	/^  int lock;$/;"	m	struct:__sanitizer::__anon62
lock	sanitizer_common/sanitizer_atomic_clang_mips.h	/^} __attribute__((aligned(32))) lock = {0, {0}};$/;"	m	namespace:__sanitizer	typeref:struct:__sanitizer::__anon62
lock	sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 lock;$/;"	m	struct:__sanitizer::DeadlockDetectorTLS::LockWithContext
lock	sanitizer_common/sanitizer_stackdepotbase.h	/^Node *StackDepotBase<Node, kReservedBits, kTabSizeLog>::lock($/;"	f	class:__sanitizer::StackDepotBase
lock_	tsan/tsan_rtl.h	/^  ScopedErrorReportLock lock_;$/;"	m	class:__tsan::ScopedReport
locked	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  ThreadMutex locked[kMaxNesting];$/;"	m	struct:__sanitizer::DDLogicalThread
locked_	tsan/tsan_mutex.h	/^  u64 locked_[MutexTypeCount];$/;"	m	class:__tsan::InternalDeadlockDetector
locs	tsan/tsan_report.h	/^  Vector<ReportLocation*> locs;$/;"	m	class:__tsan::ReportDesc
login_type	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  iscsi_login_session_type_t login_type;$/;"	m	struct:__anon31
long_	sanitizer_common/sanitizer_ring_buffer.h	/^  uptr long_;$/;"	m	class:__sanitizer::CompactRingBuffer
long_t	tsan/tsan_dispatch_defs.h	/^typedef long long_t;$/;"	t
long_t	tsan/tsan_interceptors_mac.cpp	/^typedef long long_t;$/;"	t
long_t	tsan/tsan_interceptors_posix.cpp	/^typedef long long_t;$/;"	t
longjmp	asan/asan_interceptors.cpp	303;"	d
longjmp	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(longjmp);$/;"	v
longjmp_symname	tsan/tsan_interceptors_posix.cpp	615;"	d
longjmp_xor_key	tsan/tsan_platform_linux.cpp	/^static uptr longjmp_xor_key;$/;"	m	namespace:__tsan
longjmp_xor_key	tsan/tsan_platform_mac.cpp	/^static uptr longjmp_xor_key = 0;$/;"	m	namespace:__tsan
looksLikeFloatCastOverflowDataV1	ubsan/ubsan_handlers.cpp	/^static bool looksLikeFloatCastOverflowDataV1(void *Data) {$/;"	f
loop	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  } loop[kMaxLoopSize];$/;"	m	struct:__sanitizer::DDReport	typeref:struct:__sanitizer::DDReport::__anon13
low_level_alloc_callback	sanitizer_common/sanitizer_allocator.cpp	/^static LowLevelAllocateCallback low_level_alloc_callback;$/;"	m	namespace:__sanitizer
low_level_alloc_min_alignment	sanitizer_common/sanitizer_allocator.cpp	/^static uptr low_level_alloc_min_alignment = kLowLevelAllocatorDefaultAlignment;$/;"	m	namespace:__sanitizer
lsan_aligned_alloc	lsan/lsan_allocator.cpp	/^void *lsan_aligned_alloc(uptr alignment, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_block_context_t	lsan/lsan_mac.cpp	/^} lsan_block_context_t;$/;"	t	namespace:__lsan	typeref:struct:__lsan::__anon86
lsan_calloc	lsan/lsan_allocator.cpp	/^void *lsan_calloc(uptr nmemb, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_dispatch_call_block_and_release	lsan/lsan_mac.cpp	/^extern "C" void lsan_dispatch_call_block_and_release(void *block) {$/;"	f	namespace:__lsan
lsan_flags	lsan/lsan_common.cpp	/^Flags lsan_flags;$/;"	m	namespace:__lsan
lsan_free	lsan/lsan_allocator.cpp	/^void lsan_free(void *p) {$/;"	f	namespace:__lsan
lsan_init_is_running	lsan/lsan.cpp	/^bool lsan_init_is_running;$/;"	v
lsan_inited	lsan/lsan.cpp	/^bool lsan_inited;$/;"	v
lsan_malloc	lsan/lsan_allocator.cpp	/^void *lsan_malloc(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_memalign	lsan/lsan_allocator.cpp	/^void *lsan_memalign(uptr alignment, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_mz_size	lsan/lsan_allocator.cpp	/^uptr lsan_mz_size(const void *p) {$/;"	f	namespace:__lsan
lsan_posix_memalign	lsan/lsan_allocator.cpp	/^int lsan_posix_memalign(void **memptr, uptr alignment, uptr size,$/;"	f	namespace:__lsan
lsan_pvalloc	lsan/lsan_allocator.cpp	/^void *lsan_pvalloc(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_realloc	lsan/lsan_allocator.cpp	/^void *lsan_realloc(void *p, uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lsan_reallocarray	lsan/lsan_allocator.cpp	/^void *lsan_reallocarray(void *ptr, uptr nmemb, uptr size,$/;"	f	namespace:__lsan
lsan_register_worker_thread	lsan/lsan_mac.cpp	/^void lsan_register_worker_thread(int parent_tid) {$/;"	f	namespace:__lsan
lsan_valloc	lsan/lsan_allocator.cpp	/^void *lsan_valloc(uptr size, const StackTrace &stack) {$/;"	f	namespace:__lsan
lt	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  DDLogicalThread  *lt;$/;"	m	struct:__sanitizer::DDCallback
lun	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint64_t lun;$/;"	m	struct:__anon24
m	sanitizer_common/sanitizer_hash.h	/^  static const u32 m = 0x5bd1e995;$/;"	m	class:__sanitizer::MurMur2HashBuilder
m	tsan/tsan_interceptors_posix.cpp	/^  void *m;$/;"	m	struct:CondMutexUnlockCtx
m128	tsan/tsan_rtl.cpp	/^typedef __m128i m128;$/;"	t
magic	asan/asan_allocator.cpp	/^  atomic_uintptr_t magic;$/;"	m	class:__asan::LargeChunkHeader
magic	asan/asan_fake_stack.h	/^  uptr magic;  \/\/ Modified by the instrumented code.$/;"	m	struct:__asan::FakeFrame
magic	sanitizer_common/sanitizer_allocator.cpp	/^  u64 magic;$/;"	m	struct:__sanitizer::__anon14::BlockHeader
main_thread_identity	tsan/tsan_platform_mac.cpp	/^static uptr main_thread_identity = 0;$/;"	m	namespace:__tsan
main_thread_state	tsan/tsan_platform_mac.cpp	/^ALIGNED(64) static char main_thread_state[sizeof(ThreadState)];$/;"	m	namespace:__tsan
main_thread_state_loc	tsan/tsan_platform_mac.cpp	/^static ThreadState *main_thread_state_loc = (ThreadState *)main_thread_state;$/;"	m	namespace:__tsan
major	sanitizer_common/sanitizer_mac.h	/^  u16 major;$/;"	m	struct:__sanitizer::VersionBase
major	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint16_t major;$/;"	m	struct:__anon23
make_tls_key	lsan/lsan_common_mac.cpp	/^static void make_tls_key() {$/;"	f	namespace:__lsan
mallinfo	asan/asan_malloc_linux.cpp	/^  fake_mallinfo (*mallinfo)(void);$/;"	m	struct:MallocDebugL
malloc	asan/asan_malloc_linux.cpp	/^  void *(*malloc)(uptr bytes);$/;"	m	struct:MallocDebugK
malloc	asan/asan_malloc_linux.cpp	/^  void *(*malloc)(uptr bytes);$/;"	m	struct:MallocDebugL
malloc	asan/asan_malloc_win.cpp	/^void *malloc(size_t size) {$/;"	f
malloc_bisect	hwasan/hwasan_malloc_bisect.h	/^static inline bool malloc_bisect(StackTrace *stack, uptr orig_size) {$/;"	f	namespace:__hwasan
malloc_context_size	asan/asan_activation.cpp	/^  int malloc_context_size;$/;"	m	struct:__asan::AsanDeactivatedFlags
malloc_context_size	asan/asan_stack.cpp	/^static atomic_uint32_t malloc_context_size;$/;"	m	namespace:__asan
malloc_hash	hwasan/hwasan_malloc_bisect.h	/^static u32 malloc_hash(StackTrace *stack, uptr orig_size) {$/;"	f	namespace:__hwasan
malloc_hook	sanitizer_common/sanitizer_common.cpp	/^  void (*malloc_hook)(const void *, uptr);$/;"	m	struct:__sanitizer::MallocFreeHook
malloc_large	asan/asan_stats.h	/^  uptr malloc_large;$/;"	m	struct:__asan::AsanStats
malloc_num_zones	sanitizer_common/sanitizer_mac.cpp	/^extern "C" unsigned malloc_num_zones;$/;"	m	namespace:__sanitizer
malloc_storage	asan/asan_thread.h	/^  AsanThreadLocalMallocStorage &malloc_storage() { return malloc_storage_; }$/;"	f	class:__asan::AsanThread
malloc_storage_	asan/asan_thread.h	/^  AsanThreadLocalMallocStorage malloc_storage_;$/;"	m	class:__asan::AsanThread
malloc_usable_size	asan/asan_malloc_linux.cpp	/^  uptr (*malloc_usable_size)(void *mem);$/;"	m	struct:MallocDebugK
malloc_usable_size	asan/asan_malloc_linux.cpp	/^  uptr (*malloc_usable_size)(void *mem);$/;"	m	struct:MallocDebugL
malloced	asan/asan_stats.h	/^  uptr malloced;$/;"	m	struct:__asan::AsanStats
malloced_by_size	asan/asan_stats.h	/^  uptr malloced_by_size[kNumberOfSizeClasses];$/;"	m	struct:__asan::AsanStats
malloced_redzones	asan/asan_stats.h	/^  uptr malloced_redzones;$/;"	m	struct:__asan::AsanStats
mallocs	asan/asan_stats.h	/^  uptr mallocs;$/;"	m	struct:__asan::AsanStats
mallopt	tsan/tsan_interceptors_posix.cpp	58;"	d
map1_	sanitizer_common/sanitizer_allocator_bytemap.h	/^  atomic_uintptr_t map1_[kSize1];$/;"	m	class:TwoLevelByteMap
map_	sanitizer_common/sanitizer_addrhashmap.h	/^    AddrHashMap<T, kSize> *map_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
map_	sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 map_[kSize];$/;"	m	class:FlatByteMap
map_	sanitizer_common/sanitizer_stackdepot.h	/^  InternalMmapVector<IdDescPair> map_;$/;"	m	class:__sanitizer::StackDepotReverseMap
map_	tsan/tsan_dense_alloc.h	/^  T *map_[kL1Size];$/;"	m	class:__tsan::DenseSlabAlloc
map_beg	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr map_beg;$/;"	m	struct:LargeMmapAllocator::Header
map_fixed	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer
map_fixed	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer
map_fixed	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer
map_fixed	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  int map_fixed = MAP_FIXED;$/;"	m	namespace:__sanitizer
map_size	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr map_size;$/;"	m	struct:LargeMmapAllocator::Header
mask	sanitizer_common/sanitizer_bitvector.h	/^  basic_int_t mask(uptr idx) const {$/;"	f	class:__sanitizer::BasicBitVector
max	tsan/tsan_defs.h	/^T max(T a, T b) {$/;"	f	namespace:__tsan
max_address	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_address_t max_address;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
max_alive_threads_	sanitizer_common/sanitizer_thread_registry.h	/^  uptr max_alive_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
max_allocated	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
max_cache_size_	sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t max_cache_size_;$/;"	m	class:__sanitizer::Quarantine
max_count	sanitizer_common/sanitizer_allocator_local_cache.h	/^    u32 max_count;$/;"	m	struct:SizeClassAllocator64LocalCache::PerClass
max_count	sanitizer_common/sanitizer_allocator_local_cache.h	/^    uptr max_count;$/;"	m	struct:SizeClassAllocator32LocalCache::PerClass
max_depth	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^  u32 max_depth;$/;"	m	struct:__sanitizer::UnwindTraceArg
max_depth	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^  u32 max_depth;$/;"	m	struct:__sanitizer::__anon64::UnwindTraceArg
max_executable_address	sanitizer_common/sanitizer_common.h	/^  uptr max_executable_address() const { return max_executable_address_; }$/;"	f	class:__sanitizer::LoadedModule
max_executable_address_	sanitizer_common/sanitizer_common.h	/^  uptr max_executable_address_;$/;"	m	class:__sanitizer::LoadedModule
max_malloc_size	lsan/lsan_allocator.cpp	/^static uptr max_malloc_size;$/;"	m	namespace:__lsan
max_malloced_memory	asan/asan_stats.cpp	/^static uptr max_malloced_memory;$/;"	m	namespace:__asan
max_redzone	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  u16 max_redzone;$/;"	m	struct:__asan::AllocatorOptions
max_redzone	asan/asan_allocator.cpp	/^  atomic_uint16_t max_redzone;$/;"	m	struct:__asan::Allocator
max_redzone	asan/asan_allocator.h	/^  u16 max_redzone;$/;"	m	struct:__asan::AllocatorOptions
max_reuse_	sanitizer_common/sanitizer_thread_registry.h	/^  const u32 max_reuse_;$/;"	m	class:__sanitizer::ThreadRegistry
max_size	asan/asan_errors.h	/^  uptr max_size;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
max_size	interception/interception_win.cpp	/^  uptr max_size;$/;"	m	struct:__interception::TrampolineMemoryRegion
max_size_	sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t max_size_;$/;"	m	class:__sanitizer::Quarantine
max_size_in_use	asan/asan_stats.h	/^  uptr max_size_in_use;$/;"	m	struct:__asan::AsanMallocStats
max_threads_	sanitizer_common/sanitizer_thread_registry.h	/^  const u32 max_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
max_user_defined_malloc_size	asan/asan_allocator.cpp	/^  uptr max_user_defined_malloc_size;$/;"	m	struct:__asan::Allocator
max_user_defined_malloc_size	tsan/tsan_mman.cpp	/^static uptr max_user_defined_malloc_size;$/;"	m	namespace:__tsan
may_return_null	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  u8 may_return_null;$/;"	m	struct:__asan::AllocatorOptions
may_return_null	asan/asan_allocator.h	/^  u8 may_return_null;$/;"	m	struct:__asan::AllocatorOptions
mbstate_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer
mbstate_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer
mbstate_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer
mbstate_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned mbstate_t_sz = sizeof(mbstate_t);$/;"	m	namespace:__sanitizer
mc_cs	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_cs;$/;"	m	struct:__sanitizer::__xmcontext
mc_ds	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ds;$/;"	m	struct:__sanitizer::__xmcontext
mc_eax	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_eax;$/;"	m	struct:__sanitizer::__xmcontext
mc_ebp	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ebp;$/;"	m	struct:__sanitizer::__xmcontext
mc_ebx	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ebx;$/;"	m	struct:__sanitizer::__xmcontext
mc_ecx	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ecx;$/;"	m	struct:__sanitizer::__xmcontext
mc_edi	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_edi;$/;"	m	struct:__sanitizer::__xmcontext
mc_edx	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_edx;$/;"	m	struct:__sanitizer::__xmcontext
mc_eflags	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_eflags;$/;"	m	struct:__sanitizer::__xmcontext
mc_eip	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_eip;$/;"	m	struct:__sanitizer::__xmcontext
mc_err	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_err;$/;"	m	struct:__sanitizer::__xmcontext
mc_es	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_es;$/;"	m	struct:__sanitizer::__xmcontext
mc_esi	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_esi;$/;"	m	struct:__sanitizer::__xmcontext
mc_esp	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_esp;$/;"	m	struct:__sanitizer::__xmcontext
mc_flags	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_flags;$/;"	m	struct:__sanitizer::__xmcontext
mc_fpformat	sanitizer_common/sanitizer_freebsd.h	/^  int mc_fpformat;$/;"	m	struct:__sanitizer::__xmcontext
mc_fs	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_fs;$/;"	m	struct:__sanitizer::__xmcontext
mc_fsbase	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_fsbase;$/;"	m	struct:__sanitizer::__xmcontext
mc_gs	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_gs;$/;"	m	struct:__sanitizer::__xmcontext
mc_gsbase	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_gsbase;$/;"	m	struct:__sanitizer::__xmcontext
mc_isp	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_isp;$/;"	m	struct:__sanitizer::__xmcontext
mc_len	sanitizer_common/sanitizer_freebsd.h	/^  int mc_len;$/;"	m	struct:__sanitizer::__xmcontext
mc_onstack	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_onstack;$/;"	m	struct:__sanitizer::__xmcontext
mc_ownedfp	sanitizer_common/sanitizer_freebsd.h	/^  int mc_ownedfp;$/;"	m	struct:__sanitizer::__xmcontext
mc_spare2	sanitizer_common/sanitizer_freebsd.h	/^  int mc_spare2[4];$/;"	m	struct:__sanitizer::__xmcontext
mc_ss	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_ss;$/;"	m	struct:__sanitizer::__xmcontext
mc_trapno	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_trapno;$/;"	m	struct:__sanitizer::__xmcontext
mc_xfpustate	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_xfpustate;$/;"	m	struct:__sanitizer::__xmcontext
mc_xfpustate_len	sanitizer_common/sanitizer_freebsd.h	/^  __xregister_t mc_xfpustate_len;$/;"	m	struct:__sanitizer::__xmcontext
md5_hash	tsan/tsan_md5.cpp	/^MD5Hash md5_hash(const void *data, uptr size) {$/;"	f	namespace:__tsan
mem_is_zero	sanitizer_common/sanitizer_libc.cpp	/^bool mem_is_zero(const char *beg, uptr size) {$/;"	f	namespace:__sanitizer
memalign	asan/asan_malloc_linux.cpp	/^  void *(*memalign)(uptr alignment, uptr bytes);$/;"	m	struct:MallocDebugK
memalign	asan/asan_malloc_linux.cpp	/^  void *(*memalign)(uptr alignment, uptr bytes);$/;"	m	struct:MallocDebugL
memchr	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(memchr);$/;"	v
memcmp	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(memcmp);$/;"	v
memcmp	libbacktrace/backtrace-rename.h	54;"	d
memcmp	libbacktrace/backtrace-rename.h	62;"	d
memcpy	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(memcpy);$/;"	v
memcpy	libbacktrace/backtrace-rename.h	52;"	d
memcpy	libbacktrace/backtrace-rename.h	60;"	d
memmove	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(memmove);$/;"	v
memory_mapper	sanitizer_common/sanitizer_allocator_primary64.h	/^    MemoryMapperT* const memory_mapper;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
memory_mapper	sanitizer_common/sanitizer_allocator_primary64.h	/^    MemoryMapperT* const memory_mapper;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
memory_order	sanitizer_common/sanitizer_atomic.h	/^enum memory_order {$/;"	g	namespace:__sanitizer
memory_order_acq_rel	sanitizer_common/sanitizer_atomic.h	/^  memory_order_acq_rel = 1 << 4,$/;"	e	enum:__sanitizer::memory_order
memory_order_acquire	sanitizer_common/sanitizer_atomic.h	/^  memory_order_acquire = 1 << 2,$/;"	e	enum:__sanitizer::memory_order
memory_order_consume	sanitizer_common/sanitizer_atomic.h	/^  memory_order_consume = 1 << 1,$/;"	e	enum:__sanitizer::memory_order
memory_order_relaxed	sanitizer_common/sanitizer_atomic.h	/^  memory_order_relaxed = 1 << 0,$/;"	e	enum:__sanitizer::memory_order
memory_order_release	sanitizer_common/sanitizer_atomic.h	/^  memory_order_release = 1 << 3,$/;"	e	enum:__sanitizer::memory_order
memory_order_seq_cst	sanitizer_common/sanitizer_atomic.h	/^  memory_order_seq_cst = 1 << 5$/;"	e	enum:__sanitizer::memory_order
memory_usage_buffer	hwasan/hwasan.cpp	/^static char *memory_usage_buffer = nullptr;$/;"	m	namespace:__hwasan
memset	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(memset);$/;"	v
memset	libbacktrace/backtrace-rename.h	53;"	d
memset	libbacktrace/backtrace-rename.h	61;"	d
memset	sanitizer_common/sanitizer_rtems.cpp	18;"	d
merge	merge.sh	/^merge() {$/;"	f
merge	sanitizer_common/sanitizer_quarantine.h	/^  void merge(QuarantineBatch* const from) {$/;"	f	struct:__sanitizer::QuarantineBatch
metadata_	hwasan/hwasan_allocator.h	/^  Metadata *const metadata_;$/;"	m	class:__hwasan::HwasanChunkView
metadata_	lsan/lsan_common.h	/^  void *metadata_;$/;"	m	class:__lsan::LsanMetadata
metamap	tsan/tsan_rtl.h	/^  MetaMap metamap;$/;"	m	struct:__tsan::Context
mi_extra_init	asan/asan_malloc_mac.cpp	/^void mi_extra_init(sanitizer_malloc_introspection_t *mi) {$/;"	f	namespace:__anon69
millitm	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned short millitm;$/;"	m	struct:__sanitizer::__sanitizer_timeb
millitm	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned short millitm;$/;"	m	struct:__sanitizer::__sanitizer_timeb
millitm	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned short millitm;$/;"	m	struct:__sanitizer::__sanitizer_timeb
millitm	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short millitm;$/;"	m	struct:__sanitizer::__sanitizer_timeb
min	tsan/tsan_defs.h	/^T min(T a, T b) {$/;"	f	namespace:__tsan
min_address	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_address_t min_address;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
min_redzone	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  u16 min_redzone;$/;"	m	struct:__asan::AllocatorOptions
min_redzone	asan/asan_allocator.cpp	/^  atomic_uint16_t min_redzone;$/;"	m	struct:__asan::Allocator
min_redzone	asan/asan_allocator.h	/^  u16 min_redzone;$/;"	m	struct:__asan::AllocatorOptions
min_size_	sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t min_size_;$/;"	m	class:__sanitizer::Quarantine
minor	sanitizer_common/sanitizer_mac.h	/^  u16 minor;$/;"	m	struct:__sanitizer::VersionBase
minor	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint16_t minor;$/;"	m	struct:__anon23
ml_filename	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const char *ml_filename;$/;"	m	struct:__sanitizer::__sanitizer_modctl_load
ml_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ml_flags;$/;"	m	struct:__sanitizer::__sanitizer_modctl_load
ml_props	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const char *ml_props;$/;"	m	struct:__sanitizer::__sanitizer_modctl_load
ml_propslen	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr ml_propslen;$/;"	m	struct:__sanitizer::__sanitizer_modctl_load
mmap_base	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 *mmap_base;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
mmap_interceptor	tsan/tsan_interceptors_posix.cpp	/^static void *mmap_interceptor(ThreadState *thr, uptr pc, Mmap real_mmap,$/;"	f
mmap_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr mmap_size;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
mmaped	asan/asan_stats.h	/^  uptr mmaped;$/;"	m	struct:__asan::AsanStats
mmaped_size	sanitizer_common/sanitizer_linux.h	/^  uptr mmaped_size;$/;"	m	struct:__sanitizer::ProcSelfMapsBuff
mmaps	asan/asan_stats.h	/^  uptr mmaps;$/;"	m	struct:__asan::AsanStats
mmsghdr	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(mmsghdr);$/;"	v
mnt_dir	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *mnt_dir;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_freq	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int mnt_freq;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_fsname	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *mnt_fsname;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_opts	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *mnt_opts;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_passno	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int mnt_passno;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mnt_type	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *mnt_type;$/;"	m	struct:__sanitizer::__sanitizer_mntent
mntent	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(mntent);$/;"	v
mo_acq_rel	tsan/tsan_interface.h	/^  mo_acq_rel,$/;"	e	enum:__tsan::__anon76
mo_acquire	tsan/tsan_interface.h	/^  mo_acquire,$/;"	e	enum:__tsan::__anon76
mo_consume	tsan/tsan_interface.h	/^  mo_consume,$/;"	e	enum:__tsan::__anon76
mo_relaxed	tsan/tsan_interface.h	/^  mo_relaxed,$/;"	e	enum:__tsan::__anon76
mo_release	tsan/tsan_interface.h	/^  mo_release,$/;"	e	enum:__tsan::__anon76
mo_seq_cst	tsan/tsan_interface.h	/^  mo_seq_cst$/;"	e	enum:__tsan::__anon76
modctl_exists	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int modctl_exists = MODCTL_EXISTS;$/;"	m	namespace:__sanitizer
modctl_load	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int modctl_load = MODCTL_LOAD;$/;"	m	namespace:__sanitizer
modctl_load_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(modctl_load_t);$/;"	v
modctl_stat	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int modctl_stat = MODCTL_STAT;$/;"	m	namespace:__sanitizer
modctl_unload	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int modctl_unload = MODCTL_UNLOAD;$/;"	m	namespace:__sanitizer
mode	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned short mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned int mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned mode;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int mode;          \/\/ mode_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
mode_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	38;"	d
mode_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	47;"	d
mode_t	tsan/tsan_dispatch_defs.h	/^typedef __sanitizer::u16 mode_t;$/;"	t
mode_t	tsan/tsan_interceptors_posix.cpp	/^typedef __sanitizer::u16 mode_t;$/;"	t
module	sanitizer_common/sanitizer_symbolizer.h	/^  char *module;$/;"	m	struct:__sanitizer::AddressInfo
module	sanitizer_common/sanitizer_symbolizer.h	/^  char *module;$/;"	m	struct:__sanitizer::DataInfo
module	sanitizer_common/sanitizer_symbolizer.h	/^  char *module;$/;"	m	struct:__sanitizer::FrameInfo
module_arch	sanitizer_common/sanitizer_symbolizer.h	/^  ModuleArch module_arch;$/;"	m	struct:__sanitizer::AddressInfo
module_arch	sanitizer_common/sanitizer_symbolizer.h	/^  ModuleArch module_arch;$/;"	m	struct:__sanitizer::DataInfo
module_arch	sanitizer_common/sanitizer_symbolizer.h	/^  ModuleArch module_arch;$/;"	m	struct:__sanitizer::FrameInfo
module_name	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    const char *module_name; \/\/ Module name as a C string. This pointer is a$/;"	m	struct:__asan_global
module_name	asan/asan_interface_internal.h	/^    const char *module_name; \/\/ Module name as a C string. This pointer is a$/;"	m	struct:__asan_global
module_name	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  const char *module_name() const { return module_name_; }$/;"	f	class:__sanitizer::final
module_name_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  const char *module_name_;  \/\/ Owned, leaked.$/;"	m	class:__sanitizer::final
module_names_	sanitizer_common/sanitizer_symbolizer.h	/^  } module_names_;$/;"	m	class:__sanitizer::final	typeref:class:__sanitizer::final::ModuleNameOwner
module_offset	sanitizer_common/sanitizer_symbolizer.h	/^  uptr module_offset;$/;"	m	struct:__sanitizer::AddressInfo
module_offset	sanitizer_common/sanitizer_symbolizer.h	/^  uptr module_offset;$/;"	m	struct:__sanitizer::DataInfo
module_offset	sanitizer_common/sanitizer_symbolizer.h	/^  uptr module_offset;$/;"	m	struct:__sanitizer::FrameInfo
modules	sanitizer_common/sanitizer_linux_libcdep.cpp	/^  InternalMmapVectorNoCtor<LoadedModule> *modules;$/;"	m	struct:__sanitizer::DlIteratePhdrData
modules_	sanitizer_common/sanitizer_common.h	/^  InternalMmapVectorNoCtor<LoadedModule> modules_;$/;"	m	class:__sanitizer::ListOfModules
modules_	sanitizer_common/sanitizer_symbolizer.h	/^  ListOfModules modules_;$/;"	m	class:__sanitizer::final
modules_fresh_	sanitizer_common/sanitizer_symbolizer.h	/^  bool modules_fresh_;$/;"	m	class:__sanitizer::final
mop_ignore_set	tsan/tsan_rtl.h	/^  IgnoreSet mop_ignore_set;$/;"	m	struct:__tsan::ThreadState
mops	tsan/tsan_report.h	/^  Vector<ReportMop*> mops;$/;"	m	class:__tsan::ReportDesc
morder	tsan/tsan_interface.h	/^} morder;$/;"	t	namespace:__tsan	typeref:enum:__tsan::__anon76
more_fields	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr more_fields[7];$/;"	m	struct:__sanitizer_obstack
mset	tsan/tsan_report.h	/^  Vector<ReportMopMutex> mset;$/;"	m	struct:__tsan::ReportMop
mset	tsan/tsan_rtl.h	/^  MutexSet mset;$/;"	m	struct:__tsan::ThreadState
mset0	tsan/tsan_trace.h	/^  MutexSet   mset0;$/;"	m	struct:__tsan::TraceHeader
msg_control	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_control	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_control	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_control	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *msg_control;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_controllen	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned msg_controllen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_flags	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int msg_flags;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_hdr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_msghdr msg_hdr;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr	typeref:struct:__sanitizer::__sanitizer_mmsghdr::__sanitizer_msghdr
msg_hdr	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_msghdr msg_hdr;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr
msg_iov	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iov	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iov	sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iov	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  struct __sanitizer_iovec *msg_iov;$/;"	m	struct:__sanitizer::__sanitizer_msghdr	typeref:struct:__sanitizer::__sanitizer_msghdr::__sanitizer_iovec
msg_iovlen	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_iovlen	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned msg_iovlen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_len	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int msg_len;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr
msg_len	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned int msg_len;$/;"	m	struct:__sanitizer::__sanitizer_mmsghdr
msg_name	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_name	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *msg_name;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msg_namelen	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned msg_namelen;$/;"	m	struct:__sanitizer::__sanitizer_msghdr
msghdr	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
msghdr	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
msghdr	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
msghdr	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(msghdr);$/;"	v
mtx	sanitizer_common/sanitizer_addrhashmap.h	/^    RWMutex          mtx;$/;"	m	struct:__sanitizer::AddrHashMap::Bucket
mtx	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  SpinMutex mtx;$/;"	m	struct:__sanitizer::final
mtx	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  SpinMutex mtx;$/;"	m	struct:__sanitizer::final
mtx	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  StaticSpinMutex mtx;$/;"	m	struct:__sanitizer::Mutex
mtx	sanitizer_common/sanitizer_persistent_allocator.h	/^  StaticSpinMutex mtx;  \/\/ Protects alloc of new blocks for region allocator.$/;"	m	class:__sanitizer::PersistentAllocator
mtx	tsan/tsan_interface_ann.cpp	/^  Mutex mtx;$/;"	m	struct:__tsan::DynamicAnnContext
mtx	tsan/tsan_mman.cpp	/^  Mutex mtx;$/;"	m	struct:__tsan::GlobalProc
mtx	tsan/tsan_sync.h	/^  Mutex mtx;$/;"	m	struct:__tsan::SyncVar
mtx	tsan/tsan_trace.h	/^  Mutex mtx;$/;"	m	struct:__tsan::Trace
mtx_	sanitizer_common/sanitizer_thread_registry.h	/^  BlockingMutex mtx_;$/;"	m	class:__sanitizer::ThreadRegistry
mtx_	tsan/tsan_dense_alloc.h	/^  SpinMutex mtx_;$/;"	m	class:__tsan::DenseSlabAlloc
mtx_ctx0	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u64 mtx_ctx0;  \/\/ user mutex context, start of the edge$/;"	m	struct:__sanitizer::DDReport::__anon13
mtx_ctx1	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u64 mtx_ctx1;  \/\/ user mutex context, end of the edge$/;"	m	struct:__sanitizer::DDReport::__anon13
mu	sanitizer_common/sanitizer_file.h	/^  StaticSpinMutex *mu;$/;"	m	struct:__sanitizer::ReportFile
mu_	sanitizer_common/sanitizer_allocator_bytemap.h	/^  StaticSpinMutex mu_;$/;"	m	class:TwoLevelByteMap
mu_	sanitizer_common/sanitizer_allocator_stats.h	/^  mutable StaticSpinMutex mu_;$/;"	m	class:AllocatorGlobalStats
mu_	sanitizer_common/sanitizer_mutex.h	/^  MutexType *mu_;$/;"	m	class:__sanitizer::GenericScopedLock
mu_	sanitizer_common/sanitizer_mutex.h	/^  MutexType *mu_;$/;"	m	class:__sanitizer::GenericScopedReadLock
mu_	sanitizer_common/sanitizer_symbolizer.h	/^    BlockingMutex *mu_;$/;"	m	class:__sanitizer::final::ModuleNameOwner
mu_	sanitizer_common/sanitizer_symbolizer.h	/^  BlockingMutex mu_;$/;"	m	class:__sanitizer::final
munmaped	asan/asan_stats.h	/^  uptr munmaped;$/;"	m	struct:__asan::AsanStats
munmaps	asan/asan_stats.h	/^  uptr munmaps;$/;"	m	struct:__asan::AsanStats
mutex	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  Mutex* mutex[kL1Size];$/;"	m	struct:__sanitizer::final
mutex	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  BlockingMutex mutex;$/;"	m	struct:__sanitizer::TracerThreadArgument
mutex	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  BlockingMutex mutex;$/;"	m	struct:__sanitizer::TracerThreadArgument
mutex128	tsan/tsan_interface_atomic.cpp	/^static StaticSpinMutex mutex128;$/;"	v
mutex_	sanitizer_common/sanitizer_allocator_secondary.h	/^  StaticSpinMutex mutex_;$/;"	m	class:LargeMmapAllocator
mutex_	sanitizer_common/sanitizer_libignore.h	/^  BlockingMutex mutex_;$/;"	m	class:__sanitizer::LibIgnore
mutexes	tsan/tsan_report.h	/^  Vector<ReportMutex*> mutexes;$/;"	m	class:__tsan::ReportDesc
mutual_auth	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  unsigned int mutual_auth : 1;$/;"	m	struct:__anon30
my_pthread_attr_getstack	sanitizer_common/sanitizer_posix_libcdep.cpp	/^int my_pthread_attr_getstack(void *attr, void **addr, uptr *size) {$/;"	f	namespace:__sanitizer
my_pthread_introspection_hook	tsan/tsan_platform_mac.cpp	/^static void my_pthread_introspection_hook(unsigned int event, pthread_t thread,$/;"	f	namespace:__tsan
n	sanitizer_common/sanitizer_allocator_primary64.h	/^    const u64 n;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
n	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  int n;  \/\/ number of entries in loop$/;"	m	struct:__sanitizer::DDReport
n_addrtype	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int n_addrtype;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_aliases	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **n_aliases;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_all_locks_	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr n_all_locks_;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
n_allocated	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr n_allocated;$/;"	m	struct:SizeClassAllocator64::Stats
n_allocs	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
n_chunks_	sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr n_chunks_;$/;"	m	class:LargeMmapAllocator
n_contexts_	sanitizer_common/sanitizer_thread_registry.h	/^  u32 n_contexts_;      \/\/ Number of created thread contexts,$/;"	m	class:__sanitizer::ThreadRegistry
n_edges_	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr n_edges_;$/;"	m	class:__sanitizer::DeadlockDetector
n_flags_	sanitizer_common/sanitizer_flag_parser.h	/^  int n_flags_;$/;"	m	class:__sanitizer::FlagParser
n_freed	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr n_freed;$/;"	m	struct:SizeClassAllocator64::Stats
n_freed_at_last_release	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr n_freed_at_last_release;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
n_frees	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr n_allocs, n_frees, currently_allocated, max_allocated, by_size_log[64];$/;"	m	struct:LargeMmapAllocator::Stats
n_live_threads	hwasan/hwasan_thread_list.h	/^  uptr n_live_threads;$/;"	m	struct:__hwasan::ThreadStats
n_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *n_name;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_net	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 n_net;$/;"	m	struct:__sanitizer::__sanitizer_netent
n_recursive_locks	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr n_recursive_locks;$/;"	m	class:__sanitizer::DeadlockDetectorTLS
n_reserved_	sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr n_reserved_;$/;"	m	class:LargeMmapAllocatorPtrArrayDynamic
n_uniq_ids	sanitizer_common/sanitizer_common.h	/^  uptr n_uniq_ids;$/;"	m	struct:__sanitizer::StackDepotStats
n_unknown_flags_	sanitizer_common/sanitizer_flag_parser.cpp	/^  int n_unknown_flags_;$/;"	m	class:__sanitizer::UnknownFlags
name	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    const char *name;        \/\/ Name as a C string.$/;"	m	struct:__asan_global
name	asan/asan_descriptions.h	/^  char name[128];$/;"	m	class:__asan::AsanThreadIdAndName
name	asan/asan_interface_internal.h	/^    const char *name;        \/\/ Name as a C string.$/;"	m	struct:__asan_global
name	sanitizer_common/sanitizer_common.h	/^    char name[kMaxSegName];$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
name	sanitizer_common/sanitizer_flag_parser.h	/^    const char *name;$/;"	m	struct:__sanitizer::FlagParser::Flag
name	sanitizer_common/sanitizer_libignore.h	/^    char *name;$/;"	m	struct:__sanitizer::LibIgnore::Lib
name	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int *name;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int *name;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
name	sanitizer_common/sanitizer_procmaps_mac.cpp	/^  char name[kMaxSegName];$/;"	m	struct:__sanitizer::MemoryMappedSegmentData
name	sanitizer_common/sanitizer_symbolizer.h	/^  char *name = nullptr;$/;"	m	struct:__sanitizer::LocalInfo
name	sanitizer_common/sanitizer_symbolizer.h	/^  char *name;$/;"	m	struct:__sanitizer::DataInfo
name	sanitizer_common/sanitizer_thread_registry.h	/^  char name[64];  \/\/ As annotated by user.$/;"	m	class:__sanitizer::ThreadContextBase
name	sanitizer_common/sanitizer_win.cpp	/^  char name[kMaxEnvNameLength];$/;"	m	struct:__sanitizer::__anon42::EnvVariable
name	tsan/tsan_report.h	/^  char *name;$/;"	m	struct:__tsan::ReportThread
name_	sanitizer_common/sanitizer_common.h	/^  const char* name_;$/;"	m	class:__sanitizer::ReservedAddressRange
name_	tsan/tsan_dense_alloc.h	/^  const char *name_;$/;"	m	class:__tsan::DenseSlabAlloc
name_len	asan/asan_report.h	/^  uptr name_len;$/;"	m	struct:__asan::StackVarDescr
name_pos	asan/asan_report.h	/^  const char *name_pos;$/;"	m	struct:__asan::StackVarDescr
nanosleep	tsan/tsan_interceptors_posix.cpp	53;"	d
needs_gc_	asan/asan_fake_stack.h	/^  bool needs_gc_;$/;"	m	class:__asan::FakeStack
newNode	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr newNode(uptr data) {$/;"	f	class:__sanitizer::DeadlockDetector
new_mid	asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
newlen	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr newlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
newlen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr newlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
newval	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *newval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
newval	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *newval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
next	asan/asan_globals.cpp	/^  ListOfGlobals *next;$/;"	m	struct:__asan::ListOfGlobals
next	sanitizer_common/sanitizer_allocator_primary32.h	/^    TransferBatch *next;$/;"	m	struct:SizeClassAllocator32::TransferBatch
next	sanitizer_common/sanitizer_bitvector.h	/^    uptr next() { return bv_.getAndClearFirstOne(); }$/;"	f	class:__sanitizer::BasicBitVector::Iterator
next	sanitizer_common/sanitizer_bitvector.h	/^    uptr next() {$/;"	f	class:__sanitizer::TwoLevelBitVector::Iterator
next	sanitizer_common/sanitizer_common.h	/^    AddressRange *next;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
next	sanitizer_common/sanitizer_quarantine.h	/^  QuarantineBatch *next;$/;"	m	struct:__sanitizer::QuarantineBatch
next	sanitizer_common/sanitizer_symbolizer.h	/^  SymbolizedStack *next;$/;"	m	struct:__sanitizer::SymbolizedStack
next	sanitizer_common/sanitizer_symbolizer_internal.h	/^  SymbolizerTool *next;$/;"	m	class:__sanitizer::SymbolizerTool
next	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadContextBase *next;  \/\/ For storing thread contexts in a list.$/;"	m	class:__sanitizer::ThreadContextBase
next	tsan/tsan_interface_ann.cpp	/^  ExpectRace *next;$/;"	m	struct:__tsan::ExpectRace
next	tsan/tsan_sync.h	/^  u32 next;  \/\/ in MetaMap$/;"	m	struct:__tsan::SyncVar
next_	hwasan/hwasan_thread.h	/^  Thread *next_;  \/\/ All live threads form a linked list.$/;"	m	class:__hwasan::Thread
next_	sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStats *next_;$/;"	m	class:AllocatorStats
next_	sanitizer_common/sanitizer_ring_buffer.h	/^  T *next_;$/;"	m	class:__sanitizer::RingBuffer
next_free	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *next_free;$/;"	m	struct:__sanitizer_obstack
next_id_	lsan/lsan_common.h	/^  u32 next_id_ = 0;$/;"	m	class:__lsan::LeakReport
next_index_	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  u32 next_index_ = 0;$/;"	m	class:__sancov::__anon45::final
next_stack_bottom_	asan/asan_thread.h	/^  uptr next_stack_bottom_;$/;"	m	class:__asan::AsanThread
next_stack_top_	asan/asan_thread.h	/^  uptr next_stack_top_;$/;"	m	class:__asan::AsanThread
nfds_t	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nfds_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nfds_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nfds_t	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(nfds_t);$/;"	v
nlen	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int nlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
nlen	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int nlen;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
nlink	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  int nlink;$/;"	m	struct:__sanitizer::Mutex
nlink_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	39;"	d
nlink_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	48;"	d
nlocked	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  int         nlocked;$/;"	m	struct:__sanitizer::DDLogicalThread
nmissed_expected	tsan/tsan_rtl.h	/^  int nmissed_expected;$/;"	m	struct:__tsan::Context
nodeBelongsToCurrentEpoch	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool nodeBelongsToCurrentEpoch(uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
nodeToEpoch	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr nodeToEpoch(uptr node) const { return node \/ size() * size(); }$/;"	f	class:__sanitizer::DeadlockDetector
nodeToIndex	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr nodeToIndex(uptr node) const {$/;"	f	class:__sanitizer::DeadlockDetector
nodeToIndexUnchecked	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr nodeToIndexUnchecked(uptr node) const { return node % size(); }$/;"	f	class:__sanitizer::DeadlockDetector
node_	sanitizer_common/sanitizer_stackdepot.h	/^  StackDepotNode *node_;$/;"	m	struct:__sanitizer::StackDepotHandle
nomalloc	tsan/tsan_rtl.h	/^  int nomalloc;$/;"	m	struct:__tsan::ThreadState
non_queue_sync_object	tsan/tsan_interceptors_libdispatch.cpp	/^  uptr non_queue_sync_object;$/;"	m	struct:__tsan::__anon77
nothrow_t	asan/asan_new_delete.cpp	/^struct nothrow_t {};$/;"	s	namespace:std
nothrow_t	hwasan/hwasan_new_delete.cpp	/^  struct nothrow_t {};$/;"	s	namespace:std
nothrow_t	tsan/tsan_new_delete.cpp	/^struct nothrow_t {};$/;"	s	namespace:std
nreported	tsan/tsan_rtl.h	/^  int nreported;$/;"	m	struct:__tsan::Context
nsects	sanitizer_common/sanitizer_procmaps_mac.cpp	/^  uptr nsects;$/;"	m	struct:__sanitizer::MemoryMappedSegmentData
num_env_vars	sanitizer_common/sanitizer_win.cpp	/^static int num_env_vars;$/;"	m	namespace:__sanitizer
num_releases	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr num_releases;$/;"	m	struct:SizeClassAllocator64::ReleaseToOsInfo
number_of_live_dtls	sanitizer_common/sanitizer_tls_get_addr.cpp	/^static atomic_uintptr_t number_of_live_dtls;$/;"	m	namespace:__sanitizer
nvlist_ref_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^typedef __sanitizer_nvlist_ref_t nvlist_ref_t;$/;"	t	namespace:__sanitizer
obj	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 obj;$/;"	m	struct:__sanitizer::__sanitizer_io_event
obj	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 obj;$/;"	m	struct:__sanitizer::__sanitizer_io_event
obj_locator_addr	ubsan/ubsan_type_hash_win.cpp	/^  CompleteObjectLocator *obj_locator_addr;$/;"	m	struct:CompleteObjectLocatorAbs
obj_locator_addr	ubsan/ubsan_type_hash_win.cpp	/^  int obj_locator_addr;$/;"	m	struct:CompleteObjectLocator
object_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *object_base;$/;"	m	struct:__sanitizer_obstack
object_type	tsan/tsan_external.cpp	/^  const char *object_type;$/;"	m	struct:__tsan::TagData
obstack	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(obstack);$/;"	v
octet	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
octet	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
octet	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
octet	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u8 octet[6];$/;"	m	struct:__sanitizer::__sanitizer_ether_addr
odr_indicator	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    uptr odr_indicator;      \/\/ The address of the ODR indicator symbol.$/;"	m	struct:__asan_global
odr_indicator	asan/asan_interface_internal.h	/^    uptr odr_indicator;      \/\/ The address of the ODR indicator symbol.$/;"	m	struct:__asan_global
off_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	42;"	d
off_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	51;"	d
off_t	tsan/tsan_dispatch_defs.h	/^typedef __sanitizer::s64 off_t;$/;"	t
offset	asan/asan_descriptions.h	/^  sptr offset;$/;"	m	struct:__asan::ChunkAccess
offset	asan/asan_descriptions.h	/^  uptr offset;$/;"	m	struct:__asan::StackAddressDescription
offset	asan/asan_poisoning.cpp	/^  s8 offset;  \/\/ in [0, SHADOW_GRANULARITY)$/;"	m	struct:__asan::ShadowSegmentEndpoint
offset	asan/asan_thread.h	/^    uptr offset;$/;"	m	struct:__asan::AsanThread::StackFrameAccess
offset	sanitizer_common/sanitizer_procmaps.h	/^  uptr offset;$/;"	m	class:__sanitizer::MemoryMappedSegment
offset	sanitizer_common/sanitizer_tls_get_addr.cpp	/^  uptr offset;$/;"	m	struct:__sanitizer::TlsGetAddrParam
offset_base	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 *offset_base;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
offset_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u8 offset_size;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
offset_to_top	ubsan/ubsan_type_hash_win.cpp	/^  int offset_to_top;$/;"	m	struct:CompleteObjectLocator
offset_to_top	ubsan/ubsan_type_hash_win.cpp	/^  int offset_to_top;$/;"	m	struct:CompleteObjectLocatorAbs
offsetof	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^               offsetof(ifaddrs, ifa_ifu));$/;"	v
offsetof	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^               offsetof(ifaddrs, ifa_ifu));$/;"	v
old_mid	asan/asan_errors.h	/^  uptr beg, end, old_mid, new_mid;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
old_sigset	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static __sanitizer_sigset_t old_sigset;$/;"	m	namespace:__sanitizer
old_sigset	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static __sanitizer_sigset_t old_sigset;$/;"	m	namespace:__sanitizer
old_sigset_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^const unsigned old_sigset_t_sz = sizeof(unsigned long);$/;"	m	namespace:__sanitizer
old_sigset_t_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned old_sigset_t_sz = sizeof(unsigned long);$/;"	m	namespace:__sanitizer
oldlenp	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr *oldlenp;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
oldlenp	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr *oldlenp;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
oldset	tsan/tsan_interceptors_posix.cpp	/^  __sanitizer_sigset_t oldset;$/;"	m	struct:__tsan::ThreadSignalContext
oldval	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  void *oldval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
oldval	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *oldval;$/;"	m	struct:__sanitizer::__sanitizer___sysctl_args
onFirstLock	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onFirstLock(DeadlockDetectorTLS<BV> *dtls, uptr node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onLock	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onLock(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onLockAfter	sanitizer_common/sanitizer_deadlock_detector.h	/^  void onLockAfter(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onLockBefore	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onLockBefore(DeadlockDetectorTLS<BV> *dtls, uptr cur_node) {$/;"	f	class:__sanitizer::DeadlockDetector
onLockFast	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onLockFast(DeadlockDetectorTLS<BV> *dtls, uptr node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onTryLock	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool onTryLock(DeadlockDetectorTLS<BV> *dtls, uptr cur_node, u32 stk = 0) {$/;"	f	class:__sanitizer::DeadlockDetector
onUnlock	sanitizer_common/sanitizer_deadlock_detector.h	/^  void onUnlock(DeadlockDetectorTLS<BV> *dtls, uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
on_exit_wrapper	tsan/tsan_interceptors_posix.cpp	/^static void on_exit_wrapper(int status, void *arg) {$/;"	f
opaque	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 opaque[128 \/ sizeof(u64)];$/;"	m	struct:__sanitizer::__sanitizer_siginfo
opaque	tsan/tsan_interceptors_posix.cpp	/^  u64 opaque[768 \/ sizeof(u64) + 1];$/;"	m	struct:ucontext_t
opaque	tsan/tsan_interceptors_posix.cpp	/^  u64 opaque[936 \/ sizeof(u64) + 1];$/;"	m	struct:ucontext_t
opaque_storage_	sanitizer_common/sanitizer_mutex.h	/^  ALIGNED(8) uptr opaque_storage_[10];$/;"	m	class:__sanitizer::BlockingMutex
operator !=	sanitizer_common/sanitizer_common.h	/^bool operator!=(const InternalMmapVectorNoCtor<T> &lhs,$/;"	f	namespace:__sanitizer
operator !=	sanitizer_common/sanitizer_list.h	/^    bool operator!=(IteratorBase other) const {$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
operator ()	sanitizer_common/sanitizer_common.h	/^  bool operator()(const T &a, const T &b) const { return a < b; }$/;"	f	struct:__sanitizer::CompareLess
operator *	sanitizer_common/sanitizer_addrhashmap.h	/^T &AddrHashMap<T, kSize>::Handle::operator*() {$/;"	f	class:__sanitizer::AddrHashMap::Handle
operator *	sanitizer_common/sanitizer_addrhashmap.h	/^const T &AddrHashMap<T, kSize>::Handle::operator*() const {$/;"	f	class:__sanitizer::AddrHashMap::Handle
operator *	sanitizer_common/sanitizer_list.h	/^    ItemTy &operator*() {$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
operator ++	interception/interception_win.cpp	/^  T *operator++() { return ++ptr_; }$/;"	f	class:__interception::__anon83::RVAPtr
operator ++	sanitizer_common/sanitizer_list.h	/^    IteratorBase &operator++() {$/;"	f	class:__sanitizer::IntrusiveList::IteratorBase
operator ->	interception/interception_win.cpp	/^  T *operator->() { return ptr_; }$/;"	f	class:__interception::__anon83::RVAPtr
operator ->	sanitizer_common/sanitizer_addrhashmap.h	/^T *AddrHashMap<T, kSize>::Handle::operator->() {$/;"	f	class:__sanitizer::AddrHashMap::Handle
operator <	sanitizer_common/sanitizer_mac.h	/^  bool operator<(const VersionType &other) const { return !(*this >= other); }$/;"	f	struct:__sanitizer::VersionBase
operator <<	ubsan/ubsan_diag.cpp	/^Diag &Diag::operator<<(const TypeDescriptor &V) {$/;"	f	class:Diag
operator <<	ubsan/ubsan_diag.cpp	/^Diag &Diag::operator<<(const Value &V) {$/;"	f	class:Diag
operator <<	ubsan/ubsan_diag.h	/^  Diag &operator<<(TypeName TN) { return AddArg(TN); }$/;"	f	class:__ubsan::Diag
operator <<	ubsan/ubsan_diag.h	/^  Diag &operator<<(const Range &R) { return AddRange(R); }$/;"	f	class:__ubsan::Diag
operator <<	ubsan/ubsan_diag.h	/^  Diag &operator<<(const char *Str) { return AddArg(Str); }$/;"	f	class:__ubsan::Diag
operator <<	ubsan/ubsan_diag.h	/^  Diag &operator<<(const void *V) { return AddArg(V); }$/;"	f	class:__ubsan::Diag
operator <<	ubsan/ubsan_diag.h	/^  Diag &operator<<(unsigned long long V) { return AddArg(UIntMax(V)); }$/;"	f	class:__ubsan::Diag
operator =	tsan/tsan_mutexset.h	/^  void operator=(const MutexSet &other) {$/;"	f	class:__tsan::MutexSet
operator ==	sanitizer_common/sanitizer_common.h	/^bool operator==(const InternalMmapVectorNoCtor<T> &lhs,$/;"	f	namespace:__sanitizer
operator ==	sanitizer_common/sanitizer_mac.h	/^  bool operator==(const VersionType &other) const {$/;"	f	struct:__sanitizer::VersionBase
operator ==	tsan/tsan_rtl.cpp	/^bool MD5Hash::operator==(const MD5Hash &other) const {$/;"	f	class:__tsan::MD5Hash
operator ==	tsan/tsan_rtl.h	/^  bool operator==(const RacyStacks &other) const {$/;"	f	struct:__tsan::RacyStacks
operator >=	sanitizer_common/sanitizer_mac.h	/^  bool operator>=(const VersionType &other) const {$/;"	f	struct:__sanitizer::VersionBase
operator T *	interception/interception_win.cpp	/^  operator T *() { return ptr_; }$/;"	f	class:__interception::__anon83::RVAPtr
operator []	sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 operator[] (uptr idx) const {$/;"	f	class:TwoLevelByteMap
operator []	sanitizer_common/sanitizer_allocator_bytemap.h	/^  u8 operator[] (uptr idx) {$/;"	f	class:FlatByteMap
operator []	sanitizer_common/sanitizer_common.h	/^  T &operator[](uptr i) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
operator []	sanitizer_common/sanitizer_common.h	/^  const LoadedModule &operator[](uptr i) const {$/;"	f	class:__sanitizer::ListOfModules
operator []	sanitizer_common/sanitizer_common.h	/^  const T &operator[](uptr i) const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
operator []	sanitizer_common/sanitizer_ring_buffer.h	/^  T operator[](uptr Idx) const {$/;"	f	class:__sanitizer::RingBuffer
operator []	sanitizer_common/sanitizer_ring_buffer.h	/^  const T &operator[](uptr Idx) const {$/;"	f	class:__sanitizer::CompactRingBuffer
operator []	sanitizer_common/sanitizer_vector.h	/^  T &operator[](uptr i) {$/;"	f	class:__sanitizer::Vector
operator []	sanitizer_common/sanitizer_vector.h	/^  const T &operator[](uptr i) const {$/;"	f	class:__sanitizer::Vector
operator delete	hwasan/hwasan_new_delete.cpp	/^void operator delete(void *ptr, std::nothrow_t const&) { OPERATOR_DELETE_BODY; }$/;"	f
operator delete	lsan/lsan_interceptors.cpp	/^void operator delete(void *ptr, std::align_val_t, std::nothrow_t const&)$/;"	f	namespace:std
operator delete	lsan/lsan_interceptors.cpp	/^void operator delete(void *ptr, std::nothrow_t const&) { OPERATOR_DELETE_BODY; }$/;"	f	namespace:std
operator delete	tsan/tsan_new_delete.cpp	/^void operator delete(void *ptr, std::align_val_t align, std::nothrow_t const&) {$/;"	f
operator delete	tsan/tsan_new_delete.cpp	/^void operator delete(void *ptr, std::nothrow_t const&) {$/;"	f
operator delete[]	hwasan/hwasan_new_delete.cpp	/^void operator delete[](void *ptr, std::nothrow_t const&) {$/;"	f
operator delete[]	lsan/lsan_interceptors.cpp	/^void operator delete[](void *ptr, std::align_val_t, std::nothrow_t const&)$/;"	f	namespace:std
operator delete[]	lsan/lsan_interceptors.cpp	/^void operator delete[](void *ptr, std::nothrow_t const &)$/;"	f	namespace:std
operator delete[]	tsan/tsan_new_delete.cpp	/^void operator delete[](void *ptr, std::align_val_t align,$/;"	f
operator delete[]	tsan/tsan_new_delete.cpp	/^void operator delete[](void *ptr, std::nothrow_t const&) {$/;"	f
operator new	hwasan/hwasan_new_delete.cpp	/^void *operator new(size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f
operator new	hwasan/hwasan_new_delete.cpp	/^void *operator new(size_t size, std::nothrow_t const&) {$/;"	f
operator new	lsan/lsan_interceptors.cpp	/^void *operator new(size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f	namespace:std
operator new	lsan/lsan_interceptors.cpp	/^void *operator new(size_t size, std::align_val_t align)$/;"	f	namespace:std
operator new	lsan/lsan_interceptors.cpp	/^void *operator new(size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f	namespace:std
operator new	lsan/lsan_interceptors.cpp	/^void *operator new(size_t size, std::nothrow_t const&)$/;"	f	namespace:std
operator new	sanitizer_common/sanitizer_common.h	/^inline void *operator new(__sanitizer::operator_new_size_type size,$/;"	f
operator new	sanitizer_common/sanitizer_placement_new.h	/^inline void *operator new(__sanitizer::operator_new_size_type sz, void *p) {$/;"	f
operator new	tsan/tsan_new_delete.cpp	/^void *operator new(__sanitizer::uptr size) {$/;"	f
operator new	tsan/tsan_new_delete.cpp	/^void *operator new(__sanitizer::uptr size, std::align_val_t align) {$/;"	f
operator new	tsan/tsan_new_delete.cpp	/^void *operator new(__sanitizer::uptr size, std::align_val_t align,$/;"	f
operator new	tsan/tsan_new_delete.cpp	/^void *operator new(__sanitizer::uptr size, std::nothrow_t const&) {$/;"	f
operator new[]	hwasan/hwasan_new_delete.cpp	/^void *operator new[](size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f
operator new[]	hwasan/hwasan_new_delete.cpp	/^void *operator new[](size_t size, std::nothrow_t const&) {$/;"	f
operator new[]	lsan/lsan_interceptors.cpp	/^void *operator new[](size_t size) { OPERATOR_NEW_BODY(false \/*nothrow*\/); }$/;"	f	namespace:std
operator new[]	lsan/lsan_interceptors.cpp	/^void *operator new[](size_t size, std::align_val_t align)$/;"	f	namespace:std
operator new[]	lsan/lsan_interceptors.cpp	/^void *operator new[](size_t size, std::align_val_t align, std::nothrow_t const&)$/;"	f	namespace:std
operator new[]	lsan/lsan_interceptors.cpp	/^void *operator new[](size_t size, std::nothrow_t const&)$/;"	f	namespace:std
operator new[]	tsan/tsan_new_delete.cpp	/^void *operator new[](__sanitizer::uptr size) {$/;"	f
operator new[]	tsan/tsan_new_delete.cpp	/^void *operator new[](__sanitizer::uptr size, std::align_val_t align) {$/;"	f
operator new[]	tsan/tsan_new_delete.cpp	/^void *operator new[](__sanitizer::uptr size, std::align_val_t align,$/;"	f
operator new[]	tsan/tsan_new_delete.cpp	/^void *operator new[](__sanitizer::uptr size, std::nothrow_t const&) {$/;"	f
operator_new_size_type	sanitizer_common/sanitizer_internal_defs.h	/^typedef u32 operator_new_size_type;$/;"	t	namespace:__sanitizer
operator_new_size_type	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long operator_new_size_type;$/;"	t	namespace:__sanitizer
operator_new_size_type	sanitizer_common/sanitizer_internal_defs.h	/^typedef uptr operator_new_size_type;$/;"	t	namespace:__sanitizer
options	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  } options;$/;"	m	struct:__anon24	typeref:struct:__anon24::__anon25
orig_arg	tsan/tsan_interceptors_mac.cpp	/^  void *orig_arg;$/;"	m	struct:__tsan::__anon79::call_once_callback_args
orig_context	tsan/tsan_interceptors_libdispatch.cpp	/^  void *orig_context;$/;"	m	struct:__tsan::__anon77
orig_func	tsan/tsan_interceptors_mac.cpp	/^  void (*orig_func)(void *arg);$/;"	m	struct:__tsan::__anon79::call_once_callback_args
orig_work	tsan/tsan_interceptors_libdispatch.cpp	/^  dispatch_function_t orig_work;$/;"	m	struct:__tsan::__anon77
original	interception/interception.h	/^  const __sanitizer::uptr original;$/;"	m	struct:interpose_substitution
original_path_	sanitizer_common/sanitizer_flags.cpp	/^  const char *original_path_;$/;"	m	class:__sanitizer::final
os_handle_	sanitizer_common/sanitizer_common.h	/^  uptr os_handle_;$/;"	m	class:__sanitizer::ReservedAddressRange
os_id	sanitizer_common/sanitizer_thread_registry.h	/^  tid_t os_id;     \/\/ PID (used for reporting).$/;"	m	class:__sanitizer::ThreadContextBase
os_id	tsan/tsan_report.h	/^  tid_t os_id;$/;"	m	struct:__tsan::ReportThread
osa_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int osa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction13
osa_handler	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sighandler_ptr osa_handler;$/;"	m	struct:__sanitizer::__sanitizer_sigaction13
osa_mask	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sigset13_t osa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction13
output_fd_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  fd_t output_fd_;$/;"	m	class:__sanitizer::SymbolizerProcess
output_terminator_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  static const char output_terminator_[];$/;"	m	class:__sanitizer::final
output_terminator_	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^const char Addr2LineProcess::output_terminator_[] = "??\\n??:0\\n";$/;"	m	class:__sanitizer::Addr2LineProcess
override	asan/asan_thread.h	/^  void OnCreated(void *arg) override;$/;"	m	class:__asan::final
override	asan/asan_thread.h	/^  void OnFinished() override;$/;"	m	class:__asan::final
override	lsan/lsan_fuchsia.h	/^  void OnCreated(void *arg) override;$/;"	m	class:__lsan::ThreadContext
override	lsan/lsan_fuchsia.h	/^  void OnStarted(void *arg) override;$/;"	m	class:__lsan::ThreadContext
override	lsan/lsan_posix.h	/^  void OnStarted(void *arg) override;$/;"	m	class:__lsan::final
override	lsan/lsan_thread.h	/^  void OnFinished() override;$/;"	m	class:__lsan::ThreadContextLsanBase
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^                      bool trylock) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  DDLogicalThread *CreateLogicalThread(u64 ctx) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  DDPhysicalThread *CreatePhysicalThread() override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  DDReport *GetReport(DDCallback *cb) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  void DestroyLogicalThread(DDLogicalThread *lt) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  void DestroyPhysicalThread(DDPhysicalThread *pt) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  void MutexBeforeLock(DDCallback *cb, DDMutex *m, bool wlock) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  void MutexBeforeUnlock(DDCallback *cb, DDMutex *m, bool wlock) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  void MutexDestroy(DDCallback *cb, DDMutex *m) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  void MutexInit(DDCallback *cb, DDMutex *m) override;$/;"	m	struct:__sanitizer::final
override	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^                                          uptr *sp) const override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  tid_t GetThreadID(uptr index) const override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  uptr ThreadCount() const override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^                                          uptr *sp) const override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  tid_t GetThreadID(uptr index) const override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  uptr ThreadCount() const override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool SymbolizeData(uptr addr, DataInfo *info) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool SymbolizeFrame(uptr addr, FrameInfo *info) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  bool SymbolizeData(uptr addr, DataInfo *info) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  const char *Demangle(const char *name) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_mac.h	/^  bool SymbolizeData(uptr addr, DataInfo *info) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_mac.h	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_mac.h	/^  void LateInitialize() override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^  bool ReachedEndOfOutput(const char *buffer, uptr length) const override;$/;"	m	class:__sanitizer::final
override	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  bool SymbolizePC(uptr addr, SymbolizedStack *stack) override;$/;"	m	class:__sanitizer::__anon9::final
override	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  const char *Demangle(const char *name) override;$/;"	m	class:__sanitizer::__anon9::final
override	tsan/tsan_rtl.h	/^  void OnCreated(void *arg) override;$/;"	m	class:__tsan::final
override	tsan/tsan_rtl.h	/^  void OnDead() override;$/;"	m	class:__tsan::final
override	tsan/tsan_rtl.h	/^  void OnDetached(void *arg) override;$/;"	m	class:__tsan::final
override	tsan/tsan_rtl.h	/^  void OnFinished() override;$/;"	m	class:__tsan::final
override	tsan/tsan_rtl.h	/^  void OnJoined(void *arg) override;$/;"	m	class:__tsan::final
override	tsan/tsan_rtl.h	/^  void OnReset() override;$/;"	m	class:__tsan::final
override	tsan/tsan_rtl.h	/^  void OnStarted(void *arg) override;$/;"	m	class:__tsan::final
override	ubsan/ubsan_type_hash_itanium.cpp	/^  ~__class_type_info() override;$/;"	m	class:__cxxabiv1::__class_type_info
override	ubsan/ubsan_type_hash_itanium.cpp	/^  ~__si_class_type_info() override;$/;"	m	class:__cxxabiv1::__si_class_type_info
override	ubsan/ubsan_type_hash_itanium.cpp	/^  ~__vmi_class_type_info() override;$/;"	m	class:__cxxabiv1::__vmi_class_type_info
owner_	sanitizer_common/sanitizer_mutex.h	/^  uptr owner_;  \/\/ for debugging$/;"	m	class:__sanitizer::BlockingMutex
owner_tid	tsan/tsan_sync.h	/^  int owner_tid;  \/\/ Set only by exclusive owners.$/;"	m	struct:__tsan::SyncVar
p_	sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr p_[kMaxNumChunks];$/;"	m	class:LargeMmapAllocatorPtrArrayStatic
p_aliases	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **p_aliases;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_aliases	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char **p_aliases;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_align	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_align;$/;"	m	struct:__sanitizer::__anon63
p_filesz	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_filesz;$/;"	m	struct:__sanitizer::__anon63
p_flags	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_flags;$/;"	m	struct:__sanitizer::__anon63
p_memsz	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_memsz;$/;"	m	struct:__sanitizer::__anon63
p_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *p_name;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *p_name;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_offset	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_offset;$/;"	m	struct:__sanitizer::__anon63
p_paddr	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_paddr;$/;"	m	struct:__sanitizer::__anon63
p_proto	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int p_proto;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_proto	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int p_proto;$/;"	m	struct:__sanitizer::__sanitizer_protoent
p_type	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_type;$/;"	m	struct:__sanitizer::__anon63
p_vaddr	sanitizer_common/sanitizer_freebsd.h	/^  __uint32_t p_vaddr;$/;"	m	struct:__sanitizer::__anon63
packing_ratio_log	sanitizer_common/sanitizer_allocator_primary64.h	/^    u64 packing_ratio_log;$/;"	m	class:SizeClassAllocator64::PackedCounterArray
pad	sanitizer_common/sanitizer_atomic_clang_mips.h	/^  char pad[32 - sizeof(int)];$/;"	m	struct:__sanitizer::__anon62
pad	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int pad[4];$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
pad0_	sanitizer_common/sanitizer_quarantine.h	/^  char pad0_[kCacheLineSize];$/;"	m	class:__sanitizer::Quarantine
pad1_	sanitizer_common/sanitizer_quarantine.h	/^  char pad1_[kCacheLineSize];$/;"	m	class:__sanitizer::Quarantine
pad2_	sanitizer_common/sanitizer_quarantine.h	/^  char pad2_[kCacheLineSize];$/;"	m	class:__sanitizer::Quarantine
padding	lsan/lsan_allocator.h	/^  uptr padding : 22;$/;"	m	struct:__lsan::ChunkMetadata
page_size	sanitizer_common/sanitizer_mac.cpp	/^  integer_t page_size;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
page_size_	sanitizer_common/sanitizer_allocator_secondary.h	/^  uptr page_size_;$/;"	m	class:LargeMmapAllocator
page_size_scaled_log	sanitizer_common/sanitizer_allocator_primary64.h	/^    const uptr page_size_scaled_log;$/;"	m	class:SizeClassAllocator64::FreePagesRangeTracker
param	hwasan/hwasan_interceptors.cpp	/^  void *param;$/;"	m	struct:ThreadStartArg
param	lsan/lsan_interceptors.cpp	/^  void *param;$/;"	m	struct:std::ThreadParam
param	tsan/tsan_interceptors_posix.cpp	/^  void *param;$/;"	m	struct:ThreadParam
parent_pid	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  uptr parent_pid;$/;"	m	struct:__sanitizer::TracerThreadArgument
parent_pid	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  uptr parent_pid;$/;"	m	struct:__sanitizer::TracerThreadArgument
parent_tid	asan/asan_mac.cpp	/^  u32 parent_tid;$/;"	m	struct:__asan::__anon74
parent_tid	lsan/lsan_mac.cpp	/^  u32 parent_tid;$/;"	m	struct:__lsan::__anon86
parent_tid	sanitizer_common/sanitizer_thread_registry.h	/^  u32 parent_tid;$/;"	m	class:__sanitizer::ThreadContextBase
parent_tid	tsan/tsan_report.h	/^  u32 parent_tid;$/;"	m	struct:__tsan::ReportThread
parse_flag	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::parse_flag(const char *env_option_name) {$/;"	f	class:__sanitizer::FlagParser
parse_flags	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::parse_flags(const char *env_option_name) {$/;"	f	class:__sanitizer::FlagParser
parser_	sanitizer_common/sanitizer_flags.cpp	/^  FlagParser *parser_;$/;"	m	class:__sanitizer::final
passwd	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(passwd);$/;"	v
passwd	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(passwd);$/;"	v
passwd	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(passwd);$/;"	v
passwd	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(passwd);$/;"	v
password	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int password : 1;$/;"	m	struct:__anon31::__anon32
password	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *password;$/;"	m	struct:__anon31
path	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  Link path[kMaxMutex];$/;"	m	struct:__sanitizer::DDPhysicalThread
path_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  const char *path_;$/;"	m	class:__sanitizer::SymbolizerProcess
path_max	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer
path_max	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer
path_max	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer
path_max	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned path_max = PATH_MAX;$/;"	m	namespace:__sanitizer
path_prefix	sanitizer_common/sanitizer_file.h	/^  char path_prefix[kMaxPathLength];$/;"	m	struct:__sanitizer::ReportFile
pc	asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorGeneric
pc	asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorInvalidPointerPair
pc	asan/asan_fake_stack.h	/^  uptr pc;     \/\/ Modified by the instrumented code.$/;"	m	struct:__asan::FakeFrame
pc	sanitizer_common/sanitizer_common.h	/^  uptr pc;$/;"	m	struct:__sanitizer::SignalContext
pc	tsan/tsan_interceptors_posix.cpp	/^  const uptr pc;$/;"	m	struct:TsanInterceptorContext
pc	tsan/tsan_interceptors_posix.cpp	/^  uptr pc;$/;"	m	struct:CondMutexUnlockCtx
pc	tsan/tsan_interceptors_posix.cpp	/^  uptr pc;$/;"	m	struct:dl_iterate_phdr_data
pc	tsan/tsan_rtl_mutex.cpp	/^  uptr pc;$/;"	m	struct:__tsan::final
pc	tsan/tsan_rtl_thread.cpp	/^  uptr pc;$/;"	m	struct:__tsan::OnCreatedArgs
pc	ubsan/ubsan_diag.h	/^  uptr pc;$/;"	m	struct:__ubsan::ReportOptions
pc_	tsan/tsan_interceptors.h	/^  const uptr pc_;$/;"	m	class:__tsan::ScopedInterceptor
pc_guard_controller	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^static TracePcGuardController pc_guard_controller;$/;"	m	namespace:__sancov::__anon45
pc_guard_controller	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^static TracePcGuardController pc_guard_controller;$/;"	m	namespace:__sancov::__anon40
pc_or_addr	tsan/tsan_rtl.h	/^  uptr pc_or_addr;$/;"	m	struct:__tsan::FiredSuppression
pc_vector	sanitizer_common/sanitizer_coverage_libcdep_new.cpp	/^  InternalMmapVectorNoCtor<uptr> pc_vector;$/;"	m	class:__sancov::__anon40::TracePcGuardController
pending	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  Link pending[kMaxMutex];$/;"	m	struct:__sanitizer::DDPhysicalThread
pending_signals	tsan/tsan_interceptors_posix.cpp	/^  SignalDesc pending_signals[kSigCount];$/;"	m	struct:__tsan::ThreadSignalContext
per_class_	sanitizer_common/sanitizer_allocator_local_cache.h	/^  PerClass per_class_[kNumClasses];$/;"	m	struct:SizeClassAllocator32LocalCache
per_class_	sanitizer_common/sanitizer_allocator_local_cache.h	/^  PerClass per_class_[kNumClasses];$/;"	m	struct:SizeClassAllocator64LocalCache
per_thread	asan/asan_fuchsia.cpp	/^static thread_local void *per_thread;$/;"	m	namespace:__asan
per_thread	asan/asan_rtems.cpp	/^static thread_local void *per_thread;$/;"	m	namespace:__asan
perf_event_attr	include/system/linux/perf_event.h	6;"	d
phdr	hwasan/hwasan_globals.cpp	/^                                               const ElfW(Phdr) * phdr,$/;"	m	namespace:__hwasan
phdr	hwasan/hwasan_globals.cpp	/^static void CheckCodeModel(ElfW(Addr) base, const ElfW(Phdr) * phdr,$/;"	m	namespace:__hwasan
phdr	hwasan/hwasan_globals.h	/^                                               const ElfW(Phdr) * phdr,$/;"	m	namespace:__hwasan
phnum	hwasan/hwasan_globals.h	/^                                               ElfW(Half) phnum);$/;"	m	namespace:__hwasan
phys_footprint	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t phys_footprint;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
pid_	sanitizer_common/sanitizer_linux.h	/^  pid_t pid_;$/;"	m	class:__sanitizer::ThreadLister
pid_	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  pid_t pid_;$/;"	m	class:__sanitizer::ThreadSuspender
pid_	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  pid_t pid_;$/;"	m	class:__sanitizer::ThreadSuspender
pid_str_	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^  char pid_str_[16];$/;"	m	class:__sanitizer::final
pid_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef int pid_t;$/;"	t	namespace:__sanitizer
pid_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef long pid_t;$/;"	t	namespace:__sanitizer
pid_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer
pid_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer
pid_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer
pid_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned pid_t_sz = sizeof(pid_t);$/;"	m	namespace:__sanitizer
piod_addr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *piod_addr;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
piod_len	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr piod_len;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
piod_offs	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *piod_offs;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
piod_op	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int piod_op;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_io_desc
pl_event	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pl_event;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpinfo
pl_lwpid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_lwpid_t pl_lwpid;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpinfo
pl_lwpid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_lwpid_t pl_lwpid;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpstatus
pl_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char pl_name[20];$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpstatus
pl_private	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *pl_private;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpstatus
pl_sigmask	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sigset_t pl_sigmask;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpstatus
pl_sigpend	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sigset_t pl_sigpend;$/;"	m	struct:__sanitizer::__sanitizer_ptrace_lwpstatus
pointer_alignment	lsan/lsan_common.h	/^  uptr pointer_alignment() const {$/;"	f	struct:__lsan::Flags
poison_heap	asan/asan_activation.cpp	/^  bool poison_heap;$/;"	m	struct:__asan::AsanDeactivatedFlags
pollfd	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pollfd	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pollfd	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pollfd	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(pollfd);$/;"	v
pop_back	sanitizer_common/sanitizer_common.h	/^  void pop_back() {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
pop_front	sanitizer_common/sanitizer_list.h	/^  void pop_front() {$/;"	f	struct:__sanitizer::IntrusiveList
pos	tsan/tsan_dense_alloc.h	/^  uptr pos;$/;"	m	class:__tsan::DenseSlabAllocCache
pos_	sanitizer_common/sanitizer_flag_parser.h	/^  uptr pos_;$/;"	m	class:__sanitizer::FlagParser
posix_memalign	asan/asan_malloc_linux.cpp	/^  int (*posix_memalign)(void **memptr, uptr alignment, uptr size);$/;"	m	struct:MallocDebugL
posix_memalign	sanitizer_common/sanitizer_rtems.cpp	16;"	d
possible_regions	sanitizer_common/sanitizer_allocator_primary32.h	/^  ByteMap possible_regions;$/;"	m	class:SizeClassAllocator32
prev	sanitizer_common/sanitizer_platform_limits_posix.h	/^  struct __sanitizer__obstack_chunk *prev;$/;"	m	struct:__sanitizer__obstack_chunk	typeref:struct:__sanitizer__obstack_chunk::__sanitizer__obstack_chunk
prev	tsan/tsan_interface_ann.cpp	/^  ExpectRace *prev;$/;"	m	struct:__tsan::ExpectRace
prev_	sanitizer_common/sanitizer_allocator_stats.h	/^  AllocatorStats *prev_;$/;"	m	class:AllocatorStats
prev_pthread_introspection_hook	tsan/tsan_platform_mac.cpp	/^static pthread_introspection_hook_t prev_pthread_introspection_hook;$/;"	m	namespace:__tsan
primary_	sanitizer_common/sanitizer_allocator_combined.h	/^  PrimaryAllocator primary_;$/;"	m	class:CombinedAllocator
proc	tsan/tsan_mman.cpp	/^  Processor *proc;$/;"	m	struct:__tsan::GlobalProc
proc	tsan/tsan_rtl.h	/^  Processor *proc() { return proc1; }$/;"	f	struct:__tsan::ThreadState
proc1	tsan/tsan_rtl.h	/^  Processor *proc1;$/;"	m	struct:__tsan::ThreadState
proc_self_maps	sanitizer_common/sanitizer_linux.h	/^  ProcSelfMapsBuff proc_self_maps;$/;"	m	struct:__sanitizer::MemoryMappingLayoutData
proc_yield	sanitizer_common/sanitizer_atomic_clang_other.h	/^inline void proc_yield(int cnt) {$/;"	f	namespace:__sanitizer
proc_yield	sanitizer_common/sanitizer_atomic_clang_x86.h	/^inline void proc_yield(int cnt) {$/;"	f	namespace:__sanitizer
proc_yield	sanitizer_common/sanitizer_atomic_msvc.h	/^inline void proc_yield(int cnt) {$/;"	f	namespace:__sanitizer
process_	sanitizer_common/sanitizer_symbolizer_mac.h	/^  AtosSymbolizerProcess *process_;$/;"	m	class:__sanitizer::final
process_name_cache_str	sanitizer_common/sanitizer_common.cpp	/^static char process_name_cache_str[kMaxPathLength];$/;"	m	namespace:__sanitizer
process_was_dumpable_	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  int process_was_dumpable_;$/;"	m	class:__sanitizer::StopTheWorldScope
procmapsInit	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static void procmapsInit(InternalMmapVectorNoCtor<LoadedModule> *modules) {$/;"	f	namespace:__sanitizer
protection	sanitizer_common/sanitizer_procmaps.h	/^  uptr protection;$/;"	m	class:__sanitizer::MemoryMappedSegment
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
pt	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  DDPhysicalThread *pt;$/;"	m	struct:__sanitizer::DDCallback
pta_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pta_flags;$/;"	m	struct:__sanitizer::__anon16
pta_magic	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int pta_magic;$/;"	m	struct:__sanitizer::__anon16
pta_private	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *pta_private;$/;"	m	struct:__sanitizer::__anon16
pthread_cond_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer
pthread_cond_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer
pthread_cond_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer
pthread_cond_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned pthread_cond_t_sz = sizeof(pthread_cond_t);$/;"	m	namespace:__sanitizer
pthread_getattr_np	sanitizer_common/sanitizer_linux_libcdep.cpp	50;"	d
pthread_introspection_hook_t	tsan/tsan_platform_mac.cpp	/^typedef void (*pthread_introspection_hook_t)(unsigned int event,$/;"	t	namespace:__tsan
pthread_key_t	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_key_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_key_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_key_t	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(pthread_key_t);$/;"	v
pthread_mutex_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer
pthread_mutex_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer
pthread_mutex_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer
pthread_mutex_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned pthread_mutex_t_sz = sizeof(pthread_mutex_t);$/;"	m	namespace:__sanitizer
pthread_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer
pthread_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer
pthread_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer
pthread_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned pthread_t_sz = sizeof(pthread_t);$/;"	m	namespace:__sanitizer
ptr_	interception/interception_win.cpp	/^  T *ptr_;$/;"	m	class:__interception::__anon83::RVAPtr
ptr_array_	sanitizer_common/sanitizer_allocator_secondary.h	/^  PtrArrayT ptr_array_;$/;"	m	class:LargeMmapAllocator
ptrace_geteventmsg	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_geteventmsg = PTRACE_GETEVENTMSG;$/;"	m	namespace:__sanitizer
ptrace_getfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getfpregs = -1;$/;"	m	namespace:__sanitizer
ptrace_getfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getfpregs = PTRACE_GETFPREGS;$/;"	m	namespace:__sanitizer
ptrace_getfpxregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getfpxregs = -1;$/;"	m	namespace:__sanitizer
ptrace_getfpxregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getfpxregs = PTRACE_GETFPXREGS;$/;"	m	namespace:__sanitizer
ptrace_getregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getregs = -1;$/;"	m	namespace:__sanitizer
ptrace_getregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getregs = PTRACE_GETREGS;$/;"	m	namespace:__sanitizer
ptrace_getregset	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getregset = -1;$/;"	m	namespace:__sanitizer
ptrace_getregset	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getregset = PTRACE_GETREGSET;$/;"	m	namespace:__sanitizer
ptrace_getsiginfo	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getsiginfo = -1;$/;"	m	namespace:__sanitizer
ptrace_getsiginfo	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getsiginfo = PTRACE_GETSIGINFO;$/;"	m	namespace:__sanitizer
ptrace_getvfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getvfpregs = -1;$/;"	m	namespace:__sanitizer
ptrace_getvfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_getvfpregs = PTRACE_GETVFPREGS;$/;"	m	namespace:__sanitizer
ptrace_peekdata	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_peekdata = PTRACE_PEEKDATA;$/;"	m	namespace:__sanitizer
ptrace_peektext	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_peektext = PTRACE_PEEKTEXT;$/;"	m	namespace:__sanitizer
ptrace_peekuser	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_peekuser = PTRACE_PEEKUSER;$/;"	m	namespace:__sanitizer
ptrace_piod_read_auxv	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_piod_read_auxv = PIOD_READ_AUXV;$/;"	m	namespace:__sanitizer
ptrace_piod_read_d	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_piod_read_d = PIOD_READ_D;$/;"	m	namespace:__sanitizer
ptrace_piod_read_i	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_piod_read_i = PIOD_READ_I;$/;"	m	namespace:__sanitizer
ptrace_piod_write_d	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_piod_write_d = PIOD_WRITE_D;$/;"	m	namespace:__sanitizer
ptrace_piod_write_i	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_piod_write_i = PIOD_WRITE_I;$/;"	m	namespace:__sanitizer
ptrace_pt_get_event_mask	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_get_event_mask = PT_GET_EVENT_MASK;$/;"	m	namespace:__sanitizer
ptrace_pt_get_process_state	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_get_process_state = PT_GET_PROCESS_STATE;$/;"	m	namespace:__sanitizer
ptrace_pt_get_siginfo	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_get_siginfo = PT_GET_SIGINFO;$/;"	m	namespace:__sanitizer
ptrace_pt_getdbregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_getdbregs = -1;$/;"	m	namespace:__sanitizer
ptrace_pt_getdbregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_getdbregs = PT_GETDBREGS;$/;"	m	namespace:__sanitizer
ptrace_pt_getfpregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_getfpregs = -1;$/;"	m	namespace:__sanitizer
ptrace_pt_getfpregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_getfpregs = PT_GETFPREGS;$/;"	m	namespace:__sanitizer
ptrace_pt_getregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_getregs = -1;$/;"	m	namespace:__sanitizer
ptrace_pt_getregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_getregs = PT_GETREGS;$/;"	m	namespace:__sanitizer
ptrace_pt_io	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_io = PT_IO;$/;"	m	namespace:__sanitizer
ptrace_pt_lwpinfo	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_lwpinfo = PT_LWPINFO;$/;"	m	namespace:__sanitizer
ptrace_pt_lwpnext	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_lwpnext = PT_LWPNEXT;$/;"	m	namespace:__sanitizer
ptrace_pt_lwpstatus	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_lwpstatus = PT_LWPSTATUS;$/;"	m	namespace:__sanitizer
ptrace_pt_set_event_mask	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_set_event_mask = PT_SET_EVENT_MASK;$/;"	m	namespace:__sanitizer
ptrace_pt_set_siginfo	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_set_siginfo = PT_SET_SIGINFO;$/;"	m	namespace:__sanitizer
ptrace_pt_setdbregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_setdbregs = -1;$/;"	m	namespace:__sanitizer
ptrace_pt_setdbregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_setdbregs = PT_SETDBREGS;$/;"	m	namespace:__sanitizer
ptrace_pt_setfpregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_setfpregs = -1;$/;"	m	namespace:__sanitizer
ptrace_pt_setfpregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_setfpregs = PT_SETFPREGS;$/;"	m	namespace:__sanitizer
ptrace_pt_setregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_setregs = -1;$/;"	m	namespace:__sanitizer
ptrace_pt_setregs	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int ptrace_pt_setregs = PT_SETREGS;$/;"	m	namespace:__sanitizer
ptrace_setfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setfpregs = -1;$/;"	m	namespace:__sanitizer
ptrace_setfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setfpregs = PTRACE_SETFPREGS;$/;"	m	namespace:__sanitizer
ptrace_setfpxregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setfpxregs = -1;$/;"	m	namespace:__sanitizer
ptrace_setfpxregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setfpxregs = PTRACE_SETFPXREGS;$/;"	m	namespace:__sanitizer
ptrace_setregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setregs = -1;$/;"	m	namespace:__sanitizer
ptrace_setregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setregs = PTRACE_SETREGS;$/;"	m	namespace:__sanitizer
ptrace_setregset	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setregset = -1;$/;"	m	namespace:__sanitizer
ptrace_setregset	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setregset = PTRACE_SETREGSET;$/;"	m	namespace:__sanitizer
ptrace_setsiginfo	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setsiginfo = -1;$/;"	m	namespace:__sanitizer
ptrace_setsiginfo	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setsiginfo = PTRACE_SETSIGINFO;$/;"	m	namespace:__sanitizer
ptrace_setvfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setvfpregs = -1;$/;"	m	namespace:__sanitizer
ptrace_setvfpregs	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int ptrace_setvfpregs = PTRACE_SETVFPREGS;$/;"	m	namespace:__sanitizer
ptrauth_auth_data	sanitizer_common/sanitizer_ptrauth.h	17;"	d
ptrauth_string_discriminator	sanitizer_common/sanitizer_ptrauth.h	18;"	d
ptrauth_strip	sanitizer_common/sanitizer_ptrauth.h	16;"	d
purgeable_volatile_pmap	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t purgeable_volatile_pmap;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
purgeable_volatile_resident	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t purgeable_volatile_resident;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
purgeable_volatile_virtual	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t purgeable_volatile_virtual;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
push	sanitizer_common/sanitizer_ring_buffer.h	/^  void push(T t) {$/;"	f	class:__sanitizer::CompactRingBuffer
push	sanitizer_common/sanitizer_ring_buffer.h	/^  void push(T t) {$/;"	f	class:__sanitizer::RingBuffer
push_back	sanitizer_common/sanitizer_common.h	/^  void push_back(const T &element) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
push_back	sanitizer_common/sanitizer_list.h	/^  void push_back(Item *x) {$/;"	f	struct:__sanitizer::IntrusiveList
push_back	sanitizer_common/sanitizer_quarantine.h	/^  void push_back(void *ptr, uptr size) {$/;"	f	struct:__sanitizer::QuarantineBatch
push_front	sanitizer_common/sanitizer_list.h	/^  void push_front(Item *x) {$/;"	f	struct:__sanitizer::IntrusiveList
pw_age	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_age;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_change	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_time_t pw_change;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_change	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t pw_change;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_change	sanitizer_common/sanitizer_platform_limits_posix.h	/^  long pw_change;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_class	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *pw_class;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_class	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_class;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_class	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *pw_class;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_comment	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_comment;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_dir	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_dir;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_expire	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_time_t pw_expire;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_expire	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t pw_expire;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_expire	sanitizer_common/sanitizer_platform_limits_posix.h	/^  long pw_expire;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_fields	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int pw_fields;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gecos	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_gecos;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int pw_gid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pw_gid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int pw_gid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_gid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int pw_gid;    \/\/ gid_t$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_name	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_name;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_passwd	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_passwd;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_shell	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char *pw_shell;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int pw_uid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int pw_uid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int pw_uid;$/;"	m	struct:__sanitizer::__sanitizer_passwd
pw_uid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int pw_uid;    \/\/ uid_t$/;"	m	struct:__sanitizer::__sanitizer_passwd
quarantine	asan/asan_allocator.cpp	/^  AsanQuarantine quarantine;$/;"	m	struct:__asan::Allocator
quarantine_cache	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  uptr quarantine_cache[16];$/;"	m	struct:__asan::AsanThreadLocalMallocStorage
quarantine_cache	asan/asan_allocator.h	/^  uptr quarantine_cache[16];$/;"	m	struct:__asan::AsanThreadLocalMallocStorage
quarantine_size_mb	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  u32 quarantine_size_mb;$/;"	m	struct:__asan::AllocatorOptions
quarantine_size_mb	asan/asan_allocator.h	/^  u32 quarantine_size_mb;$/;"	m	struct:__asan::AllocatorOptions
quarantined_size	sanitizer_common/sanitizer_quarantine.h	/^  uptr quarantined_size() const {$/;"	f	struct:__sanitizer::QuarantineBatch
queue	tsan/tsan_interceptors_libdispatch.cpp	/^  dispatch_queue_t queue;$/;"	m	struct:__tsan::__anon77
r	sanitizer_common/sanitizer_hash.h	/^  static const u32 r = 24;$/;"	m	class:__sanitizer::MurMur2HashBuilder
r0	tsan/tsan_ppc_regs.h	1;"	d
r1	tsan/tsan_ppc_regs.h	2;"	d
r10	tsan/tsan_ppc_regs.h	11;"	d
r11	tsan/tsan_ppc_regs.h	12;"	d
r12	tsan/tsan_ppc_regs.h	13;"	d
r13	tsan/tsan_ppc_regs.h	14;"	d
r14	tsan/tsan_ppc_regs.h	15;"	d
r15	tsan/tsan_ppc_regs.h	16;"	d
r16	tsan/tsan_ppc_regs.h	17;"	d
r17	tsan/tsan_ppc_regs.h	18;"	d
r18	tsan/tsan_ppc_regs.h	19;"	d
r19	tsan/tsan_ppc_regs.h	20;"	d
r2	tsan/tsan_ppc_regs.h	3;"	d
r20	tsan/tsan_ppc_regs.h	21;"	d
r21	tsan/tsan_ppc_regs.h	22;"	d
r22	tsan/tsan_ppc_regs.h	23;"	d
r23	tsan/tsan_ppc_regs.h	24;"	d
r24	tsan/tsan_ppc_regs.h	25;"	d
r25	tsan/tsan_ppc_regs.h	26;"	d
r26	tsan/tsan_ppc_regs.h	27;"	d
r27	tsan/tsan_ppc_regs.h	28;"	d
r28	tsan/tsan_ppc_regs.h	29;"	d
r29	tsan/tsan_ppc_regs.h	30;"	d
r3	tsan/tsan_ppc_regs.h	4;"	d
r30	tsan/tsan_ppc_regs.h	31;"	d
r31	tsan/tsan_ppc_regs.h	32;"	d
r4	tsan/tsan_ppc_regs.h	5;"	d
r5	tsan/tsan_ppc_regs.h	6;"	d
r6	tsan/tsan_ppc_regs.h	7;"	d
r7	tsan/tsan_ppc_regs.h	8;"	d
r8	tsan/tsan_ppc_regs.h	9;"	d
r9	tsan/tsan_ppc_regs.h	10;"	d
racy_addresses	tsan/tsan_rtl.h	/^  Vector<RacyAddress> racy_addresses;$/;"	m	struct:__tsan::Context
racy_mtx	tsan/tsan_rtl.h	/^  Mutex racy_mtx;$/;"	m	struct:__tsan::Context
racy_shadow_addr	tsan/tsan_rtl.h	/^  u64 *racy_shadow_addr;$/;"	m	struct:__tsan::ThreadState
racy_stacks	tsan/tsan_rtl.h	/^  Vector<RacyStacks> racy_stacks;$/;"	m	struct:__tsan::Context
racy_state	tsan/tsan_rtl.h	/^  u64 racy_state[2];$/;"	m	struct:__tsan::ThreadState
random_buffer_	hwasan/hwasan_thread.h	/^  u32 random_buffer_;$/;"	m	class:__hwasan::Thread
random_state_	hwasan/hwasan_thread.h	/^  u32 random_state_;$/;"	m	class:__hwasan::Thread
ranges	sanitizer_common/sanitizer_common.h	/^  const IntrusiveList<AddressRange> &ranges() const { return ranges_; }$/;"	f	class:__sanitizer::LoadedModule
ranges_	sanitizer_common/sanitizer_common.h	/^  IntrusiveList<AddressRange> ranges_;$/;"	m	class:__sanitizer::LoadedModule
raw	tsan/tsan_rtl.h	/^  u64 raw() const {$/;"	f	class:__tsan::FastState
rb_	hwasan/hwasan_report.cpp	/^  uptr rb_;$/;"	m	class:__hwasan::SavedStackAllocations
rc	tsan/tsan_fd.cpp	/^  atomic_uint64_t rc;$/;"	m	struct:__tsan::FdSync
read	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_read read;$/;"	m	struct:__sanitizer_cookie_io_functions_t
read_clock	tsan/tsan_sync.h	/^  SyncClock read_clock;  \/\/ Used for rw mutexes only.$/;"	m	struct:__tsan::SyncVar
real_frees	asan/asan_stats.h	/^  uptr real_frees;$/;"	m	struct:__asan::AsanStats
real_name	sanitizer_common/sanitizer_libignore.h	/^    char *real_name;  \/\/ target of symlink$/;"	m	struct:__sanitizer::LibIgnore::Lib
real_stack	asan/asan_fake_stack.h	/^  uptr real_stack;$/;"	m	struct:__asan::FakeFrame
realloc	asan/asan_malloc_win.cpp	/^void *realloc(void *ptr, size_t size) {$/;"	f
realloced	asan/asan_stats.h	/^  uptr realloced;$/;"	m	struct:__asan::AsanStats
reallocs	asan/asan_stats.h	/^  uptr reallocs;$/;"	m	struct:__asan::AsanStats
really_freed	asan/asan_stats.h	/^  uptr really_freed;$/;"	m	struct:__asan::AsanStats
reason	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t reason;$/;"	m	struct:__anon38
receive	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  HANDLE *receive() { return &h_; }$/;"	f	struct:__sanitizer::__anon10::ScopedHandle
recover	hwasan/hwasan_linux.cpp	/^  bool recover;$/;"	m	struct:__hwasan::AccessInfo
recursion	tsan/tsan_sync.h	/^  int recursion;$/;"	m	struct:__tsan::SyncVar
recursive_locks	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr recursive_locks[64];$/;"	m	class:__sanitizer::DeadlockDetectorTLS
recycle_mutex_	sanitizer_common/sanitizer_quarantine.h	/^  StaticSpinMutex recycle_mutex_;$/;"	m	class:__sanitizer::Quarantine
recycled_nodes_	sanitizer_common/sanitizer_deadlock_detector.h	/^  BV recycled_nodes_;$/;"	m	class:__sanitizer::DeadlockDetector
ref	tsan/tsan_fd.cpp	/^static FdSync *ref(FdSync *s) {$/;"	f	namespace:__tsan
ref_ptr	tsan/tsan_clock.cpp	/^static atomic_uint32_t *ref_ptr(ClockBlock *cb) {$/;"	f	namespace:__tsan
reg_sites	asan/asan_descriptions.h	/^  u32 reg_sites[kMaxGlobals];$/;"	m	struct:__asan::GlobalAddressDescription
region_base	sanitizer_common/sanitizer_allocator_primary64.h	/^    const uptr region_base;$/;"	m	class:SizeClassAllocator64::MemoryMapper
region_count	sanitizer_common/sanitizer_mac.cpp	/^  integer_t region_count;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
region_end	sanitizer_common/sanitizer_persistent_allocator.h	/^  atomic_uintptr_t region_end;$/;"	m	class:__sanitizer::PersistentAllocator
region_pos	sanitizer_common/sanitizer_persistent_allocator.h	/^  atomic_uintptr_t region_pos;  \/\/ Region allocator for Node's.$/;"	m	class:__sanitizer::PersistentAllocator
register_dso_globals	asan/asan_globals_win.cpp	/^static void register_dso_globals() {$/;"	f	namespace:__asan
registered_tags	tsan/tsan_external.cpp	/^static TagData registered_tags[kExternalTagMax] = {$/;"	m	namespace:__tsan
regs_struct	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^typedef _user_regs_struct regs_struct;$/;"	t	namespace:__sanitizer
regs_struct	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^typedef pt_regs regs_struct;$/;"	t	namespace:__sanitizer
regs_struct	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^typedef struct user regs_struct;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::user
regs_struct	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^typedef struct user_pt_regs regs_struct;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::user_pt_regs
regs_struct	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^typedef struct user_regs_struct regs_struct;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::user_regs_struct
regs_struct	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^typedef user_regs regs_struct;$/;"	t	namespace:__sanitizer
regs_struct	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^typedef user_regs_struct regs_struct;$/;"	t	namespace:__sanitizer
regs_struct	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^typedef arm_thread_state64_t regs_struct;$/;"	t	namespace:__sanitizer
regs_struct	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^typedef x86_thread_state32_t regs_struct;$/;"	t	namespace:__sanitizer
regs_struct	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^typedef x86_thread_state64_t regs_struct;$/;"	t	namespace:__sanitizer
release	sanitizer_common/sanitizer_addrhashmap.h	/^void AddrHashMap<T, kSize>::release(Handle *h) {$/;"	f	class:__sanitizer::AddrHashMap
release	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  HANDLE release() {$/;"	f	struct:__sanitizer::__anon10::ScopedHandle
release	tsan/tsan_clock.cpp	/^void ThreadClock::release(ClockCache *c, SyncClock *dst) {$/;"	f	class:__tsan::ThreadClock
releaseStoreAcquire	tsan/tsan_clock.cpp	/^void ThreadClock::releaseStoreAcquire(ClockCache *c, SyncClock *sc) {$/;"	f	class:__tsan::ThreadClock
release_my_map_info_list	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^release_my_map_info_list_func release_my_map_info_list;$/;"	v
release_my_map_info_list_func	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^typedef void (*release_my_map_info_list_func)(void *map);$/;"	t
release_to_os_interval_ms	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  s32 release_to_os_interval_ms;$/;"	m	struct:__asan::AllocatorOptions
release_to_os_interval_ms	asan/asan_allocator.h	/^  s32 release_to_os_interval_ms;$/;"	m	struct:__asan::AllocatorOptions
release_to_os_interval_ms_	sanitizer_common/sanitizer_allocator_primary64.h	/^  atomic_sint32_t release_to_os_interval_ms_;$/;"	m	class:SizeClassAllocator64
released_bytes	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr released_bytes;$/;"	m	class:SizeClassAllocator64::MemoryMapper
released_ranges_count	sanitizer_common/sanitizer_allocator_primary64.h	/^    uptr released_ranges_count;$/;"	m	class:SizeClassAllocator64::MemoryMapper
removeEdge	sanitizer_common/sanitizer_bvgraph.h	/^  bool removeEdge(uptr from, uptr to) {$/;"	f	class:__sanitizer::BVGraph
removeEdgesFrom	sanitizer_common/sanitizer_bvgraph.h	/^  bool removeEdgesFrom(const BV &from) {$/;"	f	class:__sanitizer::BVGraph
removeEdgesFrom	sanitizer_common/sanitizer_bvgraph.h	/^  void removeEdgesFrom(uptr from) {$/;"	f	class:__sanitizer::BVGraph
removeEdgesTo	sanitizer_common/sanitizer_bvgraph.h	/^  bool removeEdgesTo(const BV &to) {$/;"	f	class:__sanitizer::BVGraph
removeLock	sanitizer_common/sanitizer_deadlock_detector.h	/^  void removeLock(uptr lock_id) {$/;"	f	class:__sanitizer::DeadlockDetectorTLS
removeNode	sanitizer_common/sanitizer_deadlock_detector.h	/^  void removeNode(uptr node) {$/;"	f	class:__sanitizer::DeadlockDetector
remove_	sanitizer_common/sanitizer_addrhashmap.h	/^    bool                   remove_;$/;"	m	class:__sanitizer::AddrHashMap::Handle
rep	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  DDReport rep;$/;"	m	struct:__sanitizer::DDLogicalThread
rep	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  DDReport rep;$/;"	m	struct:__sanitizer::DDPhysicalThread
rep_	tsan/tsan_rtl.h	/^  ReportDesc *rep_;$/;"	m	class:__tsan::ScopedReportBase
replacement	interception/interception.h	/^  const __sanitizer::uptr replacement;$/;"	m	struct:interpose_substitution
report_file	sanitizer_common/sanitizer_file.cpp	/^ReportFile report_file = {&report_file_mu, kStderrFd, "", "", 0};$/;"	m	namespace:__sanitizer
report_file_mu	sanitizer_common/sanitizer_file.cpp	/^StaticSpinMutex report_file_mu;$/;"	m	namespace:__sanitizer
report_lock_	ubsan/ubsan_diag.h	/^  ScopedErrorReportLock report_lock_;$/;"	m	class:__ubsan::ScopedReport
report_mtx	tsan/tsan_rtl.h	/^  Mutex report_mtx;$/;"	m	struct:__tsan::Context
report_pending	sanitizer_common/sanitizer_deadlock_detector1.cpp	/^  bool report_pending;$/;"	m	struct:__sanitizer::DDLogicalThread
report_pending	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  bool report_pending;$/;"	m	struct:__sanitizer::DDPhysicalThread
reported_invalid_path_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool reported_invalid_path_;$/;"	m	class:__sanitizer::SymbolizerProcess
reporting_thread	sanitizer_common/sanitizer_symbolizer_report.cpp	/^static atomic_uintptr_t reporting_thread = {0};$/;"	m	namespace:__sanitizer
req	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  scsireq_t req; \/* from <sys\/scsiio.h> *\/$/;"	m	struct:__anon24
request	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int request;$/;"	m	struct:urio_command
requested_size	asan/asan_allocator.cpp	/^uptr LsanMetadata::requested_size() const {$/;"	f	class:__lsan::LsanMetadata
requested_size	asan/asan_errors.h	/^  uptr requested_size;$/;"	m	struct:__asan::ErrorOutOfMemory
requested_size	hwasan/hwasan_allocator.h	/^  u32  requested_size;$/;"	m	struct:__hwasan::HeapAllocationRecord
requested_size	lsan/lsan_allocator.cpp	/^uptr LsanMetadata::requested_size() const {$/;"	f	class:__lsan::LsanMetadata
requested_size	lsan/lsan_allocator.h	/^  uptr requested_size : 32;$/;"	m	struct:__lsan::ChunkMetadata
requested_size	lsan/lsan_allocator.h	/^  uptr requested_size : 54;$/;"	m	struct:__lsan::ChunkMetadata
requested_size_high	hwasan/hwasan_allocator.h	/^  u32 requested_size_high : 31;$/;"	m	struct:__hwasan::Metadata
requested_size_low	hwasan/hwasan_allocator.h	/^  u32 requested_size_low;$/;"	m	struct:__hwasan::Metadata
requesttype	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int requesttype;$/;"	m	struct:urio_command
requiresProcmaps	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static bool requiresProcmaps() {$/;"	f	namespace:__sanitizer
res	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 res;$/;"	m	struct:__sanitizer::__sanitizer_io_event
res	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 res;$/;"	m	struct:__sanitizer::__sanitizer_io_event
res2	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  u64 res2;$/;"	m	struct:__sanitizer::__sanitizer_io_event
res2	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 res2;$/;"	m	struct:__sanitizer::__sanitizer_io_event
reserve	sanitizer_common/sanitizer_common.h	/^  void reserve(uptr new_size) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
reset	ubsan/ubsan_diag.h	/^  void reset(SymbolizedStack *S) {$/;"	f	class:__ubsan::SymbolizedStackHolder
resident_size	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t resident_size;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
resident_size_peak	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t resident_size_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
resize	sanitizer_common/sanitizer_common.h	/^  void resize(uptr new_size) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
response_buffer	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *response_buffer;$/;"	m	struct:__anon36
response_size	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t response_size;$/;"	m	struct:__anon36
response_total	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t response_total;$/;"	m	struct:__anon36
response_used	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t response_used;$/;"	m	struct:__anon36
restore_tid_data	lsan/lsan_common_mac.cpp	/^void restore_tid_data(void *ptr) {$/;"	f	namespace:__lsan
reusable	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t reusable;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
reusable_peak	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t reusable_peak;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
reuse_count	sanitizer_common/sanitizer_thread_registry.h	/^  u32 reuse_count;  \/\/ Number of times this tid was reused.$/;"	m	class:__sanitizer::ThreadContextBase
reused	tsan/tsan_defs.h	/^  u64 reused : 64 - kClkBits;  \/\/ tid reuse count$/;"	m	struct:__tsan::ClockElem
revents	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
revents	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
revents	sanitizer_common/sanitizer_platform_limits_posix.h	/^  short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
revents	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short revents;$/;"	m	struct:__sanitizer::__sanitizer_pollfd
right_aligned	hwasan/hwasan_allocator.h	/^  u32 right_aligned : 1;$/;"	m	struct:__hwasan::Metadata
ring_buffer_size_	hwasan/hwasan_thread_list.h	/^  uptr ring_buffer_size_;$/;"	m	class:__hwasan::HwasanThreadList
rm_eo	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  OFF_T rm_eo;$/;"	m	struct:__sanitizer::__sanitizer_regmatch
rm_so	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  OFF_T rm_so;$/;"	m	struct:__sanitizer::__sanitizer_regmatch
root_regions	lsan/lsan_common.cpp	/^static InternalMmapVector<RootRegion> *root_regions;$/;"	m	namespace:__lsan
rss_limit_exceeded	asan/asan_allocator.cpp	/^  atomic_uint8_t rss_limit_exceeded;$/;"	m	struct:__asan::Allocator
rtl_generic_sighandler	tsan/tsan_interceptors_posix.cpp	/^void ALWAYS_INLINE rtl_generic_sighandler(bool sigact, int sig,$/;"	f
rtl_sigaction	tsan/tsan_interceptors_posix.cpp	/^static void rtl_sigaction(int sig, __sanitizer_siginfo *info, void *ctx) {$/;"	f
rtl_sighandler	tsan/tsan_interceptors_posix.cpp	/^static void rtl_sighandler(int sig) {$/;"	f
rtti_addr	ubsan/ubsan_type_hash_win.cpp	/^  int rtti_addr;$/;"	m	struct:CompleteObjectLocator
rtti_addr	ubsan/ubsan_type_hash_win.cpp	/^  std::type_info *rtti_addr;$/;"	m	struct:CompleteObjectLocatorAbs
run_handler	sanitizer_common/sanitizer_flag_parser.cpp	/^bool FlagParser::run_handler(const char *name, const char *value) {$/;"	f	class:__sanitizer::FlagParser
running	tsan/tsan_report.h	/^  bool running;$/;"	m	struct:__tsan::ReportThread
running_threads_	sanitizer_common/sanitizer_thread_registry.h	/^  uptr running_threads_;$/;"	m	class:__sanitizer::ThreadRegistry
s128	ubsan/ubsan_value.h	/^__extension__ typedef __int128 s128;$/;"	t
s16	sanitizer_common/sanitizer_internal_defs.h	/^typedef signed short s16;$/;"	t	namespace:__sanitizer
s32	sanitizer_common/sanitizer_internal_defs.h	/^typedef signed int s32;$/;"	t	namespace:__sanitizer
s64	sanitizer_common/sanitizer_internal_defs.h	/^typedef signed long long s64;$/;"	t	namespace:__sanitizer
s8	sanitizer_common/sanitizer_internal_defs.h	/^typedef signed char s8;$/;"	t	namespace:__sanitizer
sa_flags	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned long sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_flags	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_flags	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long sa_flags;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_handler	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	45;"	d
sa_handler	tsan/tsan_platform_linux.cpp	57;"	d
sa_mask	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_mask	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_kernel_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_mask	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_mask	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_kernel_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_mask	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_mask	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_kernel_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_mask	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_sigset_t sa_mask;$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_restorer	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void (*sa_restorer)(void);$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_restorer	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void (*sa_restorer)();$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_restorer	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void (*sa_restorer)(void);$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_restorer	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void (*sa_restorer)(void);$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigaction_t
sa_resv	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int sa_resv[2];$/;"	m	struct:__sanitizer::__sanitizer_sigaction
sa_sigaction	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	49;"	d
sa_sigaction	tsan/tsan_platform_linux.cpp	61;"	d
sa_sigaction_t	sanitizer_common/sanitizer_posix_libcdep.cpp	/^typedef void (*sa_sigaction_t)(int, siginfo_t *, void *);$/;"	t
sa_siginfo	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer
sa_siginfo	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer
sa_siginfo	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer
sa_siginfo	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  const uptr sa_siginfo = (uptr)SA_SIGINFO;$/;"	m	namespace:__sanitizer
sancov_flags	sanitizer_common/sancov_flags.h	/^inline SancovFlags* sancov_flags() { return &sancov_flags_dont_use_directly; }$/;"	f	namespace:__sancov
sancov_flags_dont_use_directly	sanitizer_common/sancov_flags.cpp	/^SancovFlags sancov_flags_dont_use_directly;  \/\/ use via flags();$/;"	m	namespace:__sancov
sandboxing_callback	sanitizer_common/sanitizer_common_libcdep.cpp	/^static void (*sandboxing_callback)();$/;"	m	namespace:__sanitizer
sanitizer_zone	sanitizer_common/sanitizer_mac.cpp	/^malloc_zone_t sanitizer_zone;$/;"	m	namespace:__sanitizer
scariness	asan/asan_errors.h	/^  ScarinessScoreBase scariness;$/;"	m	struct:__asan::ErrorBase
score	asan/asan_scariness_score.h	/^  int score;$/;"	m	struct:__asan::ScarinessScoreBase
second_deadlock_stack	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  bool second_deadlock_stack;$/;"	m	struct:__sanitizer::DDFlags
second_free_stack	asan/asan_errors.h	/^  const BufferedStackTrace *second_free_stack;$/;"	m	struct:__asan::ErrorDoubleFree
secondary_	sanitizer_common/sanitizer_allocator_combined.h	/^  SecondaryAllocator secondary_;$/;"	m	class:CombinedAllocator
seed	sanitizer_common/sanitizer_hash.h	/^  static const u32 seed = 0x9747b28c;$/;"	m	class:__sanitizer::MurMur2HashBuilder
seed	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 seed;$/;"	m	struct:__sanitizer::__sanitizer_cdbr
seek	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_seek seek;$/;"	m	struct:__sanitizer_cookie_io_functions_t
sem_count	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u32 sem_count;$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_magic	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u16 sem_magic;$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_pad1	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 sem_pad1[3];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_pad2	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 sem_pad2[2];$/;"	m	struct:__sanitizer::__sanitizer_sem_t
sem_t	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(sem_t);$/;"	v
sem_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(sem_t);$/;"	v
sem_t	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(sem_t);$/;"	v
sem_type	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u16 sem_type;$/;"	m	struct:__sanitizer::__sanitizer_sem_t
seq	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 seq;$/;"	m	struct:__sanitizer::Id
seq	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 seq;$/;"	m	struct:__sanitizer::Link
seq	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 seq;$/;"	m	struct:__sanitizer::Mutex
seq	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned short seq;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
seq	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int seq;           \/\/ uint_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
seq	sanitizer_common/sanitizer_stackdepotbase.h	/^  atomic_uint32_t seq[kPartCount];  \/\/ Unique id generators.$/;"	m	class:__sanitizer::StackDepotBase
seq_	tsan/tsan_mutex.h	/^  u64 seq_;$/;"	m	class:__tsan::InternalDeadlockDetector
session_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t session_id;$/;"	m	struct:__anon22
session_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t session_id;$/;"	m	struct:__anon24
session_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t session_id;$/;"	m	struct:__anon31
session_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t session_id;$/;"	m	struct:__anon33
session_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t session_id;$/;"	m	struct:__anon35
session_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t session_id;$/;"	m	struct:__anon36
session_id	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t session_id;$/;"	m	struct:__anon38
set	sanitizer_common/sanitizer_allocator_bytemap.h	/^  void set(uptr idx, u8 val) {$/;"	f	class:FlatByteMap
set	sanitizer_common/sanitizer_allocator_bytemap.h	/^  void set(uptr idx, u8 val) {$/;"	f	class:TwoLevelByteMap
set	sanitizer_common/sanitizer_common.cpp	/^void LoadedModule::set(const char *module_name, uptr base_address) {$/;"	f	class:__sanitizer::LoadedModule
set	sanitizer_common/sanitizer_common.cpp	/^void LoadedModule::set(const char *module_name, uptr base_address,$/;"	f	class:__sanitizer::LoadedModule
set	tsan/tsan_clock.cpp	/^void ThreadClock::set(ClockCache *c, unsigned tid, u64 v) {$/;"	f	class:__tsan::ThreadClock
setAll	sanitizer_common/sanitizer_bitvector.h	/^  void setAll() { bits_ = ~(basic_int_t)0; }$/;"	f	class:__sanitizer::BasicBitVector
setAll	sanitizer_common/sanitizer_bitvector.h	/^  void setAll() {$/;"	f	class:__sanitizer::TwoLevelBitVector
setBit	sanitizer_common/sanitizer_bitvector.h	/^  bool setBit(uptr idx) {$/;"	f	class:__sanitizer::BasicBitVector
setBit	sanitizer_common/sanitizer_bitvector.h	/^  bool setBit(uptr idx) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setDifference	sanitizer_common/sanitizer_bitvector.h	/^  bool setDifference(const BasicBitVector &v) {$/;"	f	class:__sanitizer::BasicBitVector
setDifference	sanitizer_common/sanitizer_bitvector.h	/^  bool setDifference(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setIntersection	sanitizer_common/sanitizer_bitvector.h	/^  bool setIntersection(const BasicBitVector &v) {$/;"	f	class:__sanitizer::BasicBitVector
setIntersection	sanitizer_common/sanitizer_bitvector.h	/^  bool setIntersection(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setUnion	sanitizer_common/sanitizer_bitvector.h	/^  bool setUnion(const BasicBitVector &v) {$/;"	f	class:__sanitizer::BasicBitVector
setUnion	sanitizer_common/sanitizer_bitvector.h	/^  bool setUnion(const TwoLevelBitVector &v) {$/;"	f	class:__sanitizer::TwoLevelBitVector
setUnwinding	asan/asan_thread.h	/^  void setUnwinding(bool b) { unwinding_ = b; }$/;"	f	class:__asan::AsanThread
set_context	asan/asan_thread.h	/^  void set_context(AsanThreadContext *context) { context_ = context; }$/;"	f	class:__asan::AsanThread
set_cur_thread	tsan/tsan_platform_linux.cpp	/^void set_cur_thread(ThreadState *thr) {$/;"	f	namespace:__tsan
set_cur_thread	tsan/tsan_platform_mac.cpp	/^void set_cur_thread(ThreadState *thr) {$/;"	f	namespace:__tsan
set_cur_thread	tsan/tsan_rtl.h	/^inline void set_cur_thread(ThreadState *thr) {$/;"	f	namespace:__tsan
set_requested_size	hwasan/hwasan_allocator.h	/^  void set_requested_size(u64 size) {$/;"	f	struct:__hwasan::Metadata
set_tag	asan/asan_allocator.cpp	/^void LsanMetadata::set_tag(ChunkTag value) {$/;"	f	class:__lsan::LsanMetadata
set_tag	lsan/lsan_allocator.cpp	/^void LsanMetadata::set_tag(ChunkTag value) {$/;"	f	class:__lsan::LsanMetadata
setjmp	tsan/tsan_rtl_mips64.S	/^setjmp:$/;"	l
setjmp	tsan/tsan_rtl_ppc64.S	/^setjmp:$/;"	l
setjmp_symname	tsan/tsan_interceptors_posix.cpp	553;"	d
setjmp_symname	tsan/tsan_interceptors_posix.cpp	556;"	d
setlim	sanitizer_common/sanitizer_posix_libcdep.cpp	/^static void setlim(int res, rlim_t lim) {$/;"	f	namespace:__sanitizer
setup_at_exit_wrapper	tsan/tsan_interceptors_posix.cpp	/^static int setup_at_exit_wrapper(ThreadState *thr, uptr pc, void(*f)(),$/;"	f
setup_lock_	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  BlockingMutex setup_lock_ = BlockingMutex(LINKER_INITIALIZED);$/;"	m	class:__sancov::__anon45::final
shadow	asan/asan_descriptions.h	/^      ShadowAddressDescription shadow;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon73
shadow_byte	asan/asan_descriptions.h	/^  u8 shadow_byte;$/;"	m	struct:__asan::ShadowAddressDescription
shadow_stack	tsan/tsan_rtl.h	/^  uptr *shadow_stack;$/;"	m	struct:__tsan::ThreadState
shadow_stack	tsan/tsan_trace.h	/^  uptr shadow_stack[kShadowStackSize];$/;"	m	struct:__tsan::Trace
shadow_stack_end	tsan/tsan_rtl.h	/^  uptr *shadow_stack_end;$/;"	m	struct:__tsan::ThreadState
shadow_stack_pos	tsan/tsan_rtl.h	/^  uptr *shadow_stack_pos;$/;"	m	struct:__tsan::JmpBuf
shadow_stack_pos	tsan/tsan_rtl.h	/^  uptr *shadow_stack_pos;$/;"	m	struct:__tsan::ThreadState
shadow_val	asan/asan_errors.h	/^  u8 shadow_val;$/;"	m	struct:__asan::ErrorGeneric
shared_owners	tsan/tsan_interceptors_mac.cpp	/^  volatile a64 shared_owners;$/;"	m	struct:__tsan::__anon78::fake_shared_weak_count
shared_weak_owners	tsan/tsan_interceptors_mac.cpp	/^  volatile a64 shared_weak_owners;$/;"	m	struct:__tsan::__anon78::fake_shared_weak_count
shm_allocated	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 shm_allocated;          \/\/ uint64_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_amp	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *shm_amp;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_time_t shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  long shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr shm_atime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_atime	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_atime;             \/\/ time_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cnattch	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_cnattch;  \/\/ ulong_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int shm_cpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 shm_cpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int shm_cpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_cpid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_cpid;               \/\/ pid_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_time_t shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  long shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_ctime;             \/\/ time_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_ctime	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_ctime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_time_t shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u64 shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  long shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_dtime;             \/\/ time_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_dtime	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  long shm_dtime;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_flags	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_flags;    \/\/ uintptr_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_gransize	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 shm_gransize;           \/\/ uint64_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lkcnt	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned short shm_lkcnt;   \/\/ ushort_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int shm_lpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 shm_lpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int shm_lpid;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_lpid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_lpid;               \/\/ pid_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned int shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u64 shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned long shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr shm_nattch;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_nattch	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_nattch;   \/\/ shmatt_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_pad1	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_pad1;               \/\/ int32_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_pad2	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int shm_pad2;               \/\/ int32_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_pad4	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u64 shm_pad4[1];            \/\/ int64_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_perm	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_ipc_perm shm_perm;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned long shm_segsz;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  unsigned long shm_segsz;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr shm_segsz;$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shm_segsz	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned long shm_segsz;    \/\/ size_t$/;"	m	struct:__sanitizer::__sanitizer_shmid_ds
shmctl_ipc_info	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int shmctl_ipc_info = (int)IPC_INFO;$/;"	m	namespace:__sanitizer
shmctl_ipc_info	sanitizer_common/sanitizer_platform_limits_netbsd.h	498;"	d
shmctl_ipc_info	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int shmctl_ipc_info = (int)IPC_INFO;$/;"	m	namespace:__sanitizer
shmctl_ipc_info	sanitizer_common/sanitizer_platform_limits_solaris.h	362;"	d
shmctl_ipc_stat	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer
shmctl_ipc_stat	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer
shmctl_ipc_stat	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer
shmctl_ipc_stat	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  int shmctl_ipc_stat = (int)IPC_STAT;$/;"	m	namespace:__sanitizer
shmctl_shm_info	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int shmctl_shm_info = (int)SHM_INFO;$/;"	m	namespace:__sanitizer
shmctl_shm_info	sanitizer_common/sanitizer_platform_limits_netbsd.h	499;"	d
shmctl_shm_info	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int shmctl_shm_info = (int)SHM_INFO;$/;"	m	namespace:__sanitizer
shmctl_shm_info	sanitizer_common/sanitizer_platform_limits_solaris.h	363;"	d
shmctl_shm_stat	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^int shmctl_shm_stat = (int)SHM_STAT;$/;"	m	namespace:__sanitizer
shmctl_shm_stat	sanitizer_common/sanitizer_platform_limits_netbsd.h	497;"	d
shmctl_shm_stat	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  int shmctl_shm_stat = (int)SHM_STAT;$/;"	m	namespace:__sanitizer
shmctl_shm_stat	sanitizer_common/sanitizer_platform_limits_solaris.h	361;"	d
shmid_ds	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
shmid_ds	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
shmid_ds	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
shmid_ds	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(shmid_ds);$/;"	v
si	tsan/tsan_interceptors_posix.cpp	/^  ScopedInterceptor *si;$/;"	m	struct:CondMutexUnlockCtx
si_SEGV_ACCERR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer
si_SEGV_ACCERR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer
si_SEGV_ACCERR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer
si_SEGV_ACCERR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  const int si_SEGV_ACCERR = SEGV_ACCERR;$/;"	m	namespace:__sanitizer
si_SEGV_MAPERR	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer
si_SEGV_MAPERR	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer
si_SEGV_MAPERR	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer
si_SEGV_MAPERR	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  const int si_SEGV_MAPERR = SEGV_MAPERR;$/;"	m	namespace:__sanitizer
sig	sanitizer_common/sanitizer_platform_limits_posix.h	/^  u8 sig[8];$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigset_t
sig	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr sig[2];$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigset_t
sig	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  u8 sig[8];$/;"	m	struct:__sanitizer::__sanitizer_kernel_sigset_t
sig_dfl	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer
sig_dfl	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer
sig_dfl	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer
sig_dfl	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  const uptr sig_dfl = (uptr)SIG_DFL;$/;"	m	namespace:__sanitizer
sig_err	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer
sig_err	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer
sig_err	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer
sig_err	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  const uptr sig_err = (uptr)SIG_ERR;$/;"	m	namespace:__sanitizer
sig_ign	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer
sig_ign	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer
sig_ign	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer
sig_ign	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  const uptr sig_ign = (uptr)SIG_IGN;$/;"	m	namespace:__sanitizer
sigaction	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^    __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon47
sigaction	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon17
sigaction	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^    void (*sigaction)(int signo, void *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon18
sigaction	sanitizer_common/sanitizer_platform_limits_posix.h	/^    __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon55
sigaction	sanitizer_common/sanitizer_platform_limits_posix.h	/^    void (*sigaction)(int signo, __sanitizer_siginfo *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon56
sigaction	sanitizer_common/sanitizer_platform_limits_posix.h	/^    void (*sigaction)(int signo, __sanitizer_siginfo *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon57
sigaction	sanitizer_common/sanitizer_platform_limits_solaris.h	/^    __sanitizer_sigactionhandler_ptr sigaction;$/;"	m	union:__sanitizer::__sanitizer_sigaction::__anon59
sigaction	sanitizer_common/sanitizer_platform_limits_solaris.h	/^    void (*sigaction)(int signo, __sanitizer_siginfo *info, void *ctx);$/;"	m	union:__sanitizer::__sanitizer_kernel_sigaction_t::__anon60
sigaction	tsan/tsan_interceptors_posix.cpp	/^  bool sigaction;$/;"	m	struct:__tsan::SignalDesc
sigaction_impl	tsan/tsan_interceptors_posix.cpp	/^int sigaction_impl(int sig, const __sanitizer_sigaction *act,$/;"	f
sigactions	tsan/tsan_interceptors_posix.cpp	/^  __sanitizer_sigaction sigactions[kSigCount];$/;"	m	struct:__tsan::InterceptorContext
sigev_notify	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sigev_notify;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_notify_attributes	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr sigev_notify_attributes;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_notify_function	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr sigev_notify_function;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_signo	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sigev_signo;$/;"	m	struct:__sanitizer::__sanitizer_sigevent
sigev_value	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  union __sanitizer_sigval sigev_value;$/;"	m	struct:__sanitizer::__sanitizer_sigevent	typeref:union:__sanitizer::__sanitizer_sigevent::__sanitizer_sigval
siginfo	sanitizer_common/sanitizer_common.h	/^  void *siginfo;$/;"	m	struct:__sanitizer::SignalContext
siginfo	tsan/tsan_interceptors_posix.cpp	/^  __sanitizer_siginfo siginfo;$/;"	m	struct:__tsan::SignalDesc
siginfo_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer
siginfo_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer
siginfo_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer
siginfo_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned siginfo_t_sz = sizeof(siginfo_t);$/;"	m	namespace:__sanitizer
sigjmp_buf	hwasan/hwasan_type_test.cpp	/^CHECK_TYPE_SIZE_FITS(sigjmp_buf);$/;"	v
siglongjmp	asan/asan_interceptors.cpp	304;"	d
siglongjmp_symname	tsan/tsan_interceptors_posix.cpp	616;"	d
signal	asan/asan_errors.h	/^  SignalContext signal;$/;"	m	struct:__asan::ErrorDeadlySignal
signal_ctx	tsan/tsan_rtl.h	/^  ThreadSignalContext *signal_ctx;$/;"	m	struct:__tsan::ThreadState
signal_impl	tsan/tsan_interceptors_posix.cpp	/^static __sanitizer_sighandler_ptr signal_impl(int sig,$/;"	f
sigset_t	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(sigset_t);$/;"	v
sigset_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer
sigset_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer
sigset_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer
sigset_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned sigset_t_sz = sizeof(sigset_t);$/;"	m	namespace:__sanitizer
sigsetjmp	tsan/tsan_rtl_mips64.S	/^sigsetjmp:$/;"	l
sigsetjmp	tsan/tsan_rtl_ppc64.S	/^sigsetjmp:$/;"	l
sigsetjmp_symname	tsan/tsan_interceptors_posix.cpp	554;"	d
sigsetjmp_symname	tsan/tsan_interceptors_posix.cpp	557;"	d
sival_int	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int sival_int;$/;"	m	union:__sanitizer::__sanitizer_sigval
sival_ptr	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr sival_ptr;$/;"	m	union:__sanitizer::__sanitizer_sigval
siz	tsan/tsan_defs.h	/^  u64  siz : 48;$/;"	m	struct:__tsan::MBlock
size	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  uptr size() { return size_; }$/;"	f	class:__asan::AsanChunkFifoList
size	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    uptr size;               \/\/ The original size of the global.$/;"	m	struct:__asan_global
size	asan/asan_allocator.h	/^  uptr size() { return size_; }$/;"	f	class:__asan::AsanChunkFifoList
size	asan/asan_descriptions.h	/^  u8 size;$/;"	m	struct:__asan::GlobalAddressDescription
size	asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorCallocOverflow
size	asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorInvalidAlignedAllocAlignment
size	asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorPvallocOverflow
size	asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorReallocArrayOverflow
size	asan/asan_errors.h	/^  uptr size;$/;"	m	struct:__asan::ErrorStringFunctionSizeOverflow
size	asan/asan_interface_internal.h	/^    uptr size;               \/\/ The original size of the global.$/;"	m	struct:__asan_global
size	asan/asan_report.h	/^  uptr size;$/;"	m	struct:__asan::StackVarDescr
size	hwasan/hwasan_globals.h	/^  uptr size() const { return info & 0xffffff; }$/;"	f	struct:__hwasan::hwasan_global
size	hwasan/hwasan_linux.cpp	/^  uptr size;$/;"	m	struct:__hwasan::AccessInfo
size	lsan/lsan_common.h	/^  uptr size;$/;"	m	struct:__lsan::LeakedObject
size	lsan/lsan_common.h	/^  uptr size;$/;"	m	struct:__lsan::RootRegion
size	sanitizer_common/sanitizer_addrhashmap.h	/^    uptr size;$/;"	m	struct:__sanitizer::AddrHashMap::AddBucket
size	sanitizer_common/sanitizer_allocator_bytemap.h	/^  uptr size() const { return kSize1 * kSize2; }$/;"	f	class:TwoLevelByteMap
size	sanitizer_common/sanitizer_allocator_secondary.h	/^    uptr size;$/;"	m	struct:LargeMmapAllocator::Header
size	sanitizer_common/sanitizer_bitvector.h	/^  uptr size() const { return kSize; }$/;"	f	class:__sanitizer::BasicBitVector
size	sanitizer_common/sanitizer_bitvector.h	/^  uptr size() const { return kSize; }$/;"	f	class:__sanitizer::TwoLevelBitVector
size	sanitizer_common/sanitizer_bvgraph.h	/^  uptr size() const { return kSize; }$/;"	f	class:__sanitizer::BVGraph
size	sanitizer_common/sanitizer_common.h	/^  uptr size() const { return modules_.size(); }$/;"	f	class:__sanitizer::ListOfModules
size	sanitizer_common/sanitizer_common.h	/^  uptr size() const { return size_; }$/;"	f	class:__sanitizer::ReservedAddressRange
size	sanitizer_common/sanitizer_common.h	/^  uptr size() const {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
size	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr size() const { return g_.size(); }$/;"	f	class:__sanitizer::DeadlockDetector
size	sanitizer_common/sanitizer_list.h	/^  uptr size() const { return size_; }$/;"	f	struct:__sanitizer::IntrusiveList
size	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char size[128];$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
size	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char size[128];$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
size	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned size;$/;"	m	struct:__sanitizer::__sanitizer_perf_event_attr
size	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char size[128];$/;"	m	union:__sanitizer::__sanitizer_pthread_attr_t
size	sanitizer_common/sanitizer_quarantine.h	/^  uptr size;$/;"	m	struct:__sanitizer::QuarantineBatch
size	sanitizer_common/sanitizer_ring_buffer.h	/^  uptr size() const { return GetStorageSize() \/ sizeof(T); }$/;"	f	class:__sanitizer::CompactRingBuffer
size	sanitizer_common/sanitizer_ring_buffer.h	/^  uptr size() const {$/;"	f	class:__sanitizer::RingBuffer
size	sanitizer_common/sanitizer_stackdepot.cpp	/^  u32 size;$/;"	m	struct:__sanitizer::StackDepotNode
size	sanitizer_common/sanitizer_stacktrace.h	/^  u32 size;$/;"	m	struct:__sanitizer::StackTrace
size	sanitizer_common/sanitizer_symbolizer.h	/^  uptr size;$/;"	m	struct:__sanitizer::DataInfo
size	sanitizer_common/sanitizer_symbolizer.h	/^  uptr size;$/;"	m	struct:__sanitizer::LocalInfo
size	sanitizer_common/sanitizer_symbolizer_libbacktrace.cpp	/^  uptr size, allocated;$/;"	m	struct:__sanitizer::__anon11::CplusV3DemangleData
size	sanitizer_common/sanitizer_tls_get_addr.cpp	/^  uptr size;$/;"	m	struct:__sanitizer::Glibc_2_19_tls_header
size	sanitizer_common/sanitizer_tls_get_addr.h	/^    uptr beg, size;$/;"	m	struct:__sanitizer::DTLS::DTV
size	tsan/tsan_interface_ann.cpp	/^  uptr size;$/;"	m	struct:__tsan::ExpectRace
size	tsan/tsan_report.h	/^  int size;$/;"	m	struct:__tsan::ReportMop
size	tsan/tsan_rtl.h	/^  u64 ALWAYS_INLINE size() const { return 1ull << size_log(); }$/;"	f	class:__tsan::Shadow
size1	sanitizer_common/sanitizer_allocator_bytemap.h	/^  uptr size1() const { return kSize1; }$/;"	f	class:TwoLevelByteMap
size2	sanitizer_common/sanitizer_allocator_bytemap.h	/^  uptr size2() const { return kSize2; }$/;"	f	class:TwoLevelByteMap
size_	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  uptr size_;$/;"	m	class:__asan::AsanChunkFifoList
size_	asan/asan_allocator.h	/^  uptr size_;$/;"	m	class:__asan::AsanChunkFifoList
size_	sanitizer_common/sanitizer_common.h	/^  uptr size_;$/;"	m	class:__sanitizer::InternalMmapVectorNoCtor
size_	sanitizer_common/sanitizer_common.h	/^  uptr size_;$/;"	m	class:__sanitizer::ReservedAddressRange
size_	sanitizer_common/sanitizer_list.h	/^  uptr size_;$/;"	m	struct:__sanitizer::IntrusiveList
size_	sanitizer_common/sanitizer_quarantine.h	/^  atomic_uintptr_t size_;$/;"	m	class:__sanitizer::QuarantineCache
size_	tsan/tsan_ignoreset.h	/^  uptr size_;$/;"	m	class:__tsan::IgnoreSet
size_	tsan/tsan_mutexset.h	/^  uptr size_;$/;"	m	class:__tsan::MutexSet
size_allocated	asan/asan_stats.h	/^  uptr size_allocated;$/;"	m	struct:__asan::AsanMallocStats
size_class_info_array	sanitizer_common/sanitizer_allocator_primary32.h	/^  SizeClassInfo size_class_info_array[kNumClasses];$/;"	m	class:SizeClassAllocator32
size_in_use	asan/asan_stats.h	/^  uptr size_in_use;$/;"	m	struct:__asan::AsanMallocStats
size_log	tsan/tsan_rtl.h	/^  u64 size_log() const { return (x_ >> (3 + kClkBits)) & 3; }$/;"	f	class:__tsan::Shadow
size_t	asan/asan_new_delete.cpp	58;"	d
size_t	tsan/tsan_dispatch_defs.h	/^typedef unsigned long size_t;$/;"	t
size_with_redzone	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_interface_internal.h	/^    uptr size_with_redzone;  \/\/ The size with the redzone.$/;"	m	struct:__asan_global
size_with_redzone	asan/asan_interface_internal.h	/^    uptr size_with_redzone;  \/\/ The size with the redzone.$/;"	m	struct:__asan_global
sizeof	interception/interception_type_test.cpp	/^COMPILER_CHECK(sizeof(::INTMAX_T) == sizeof(intmax_t));$/;"	v
sizeof	interception/interception_type_test.cpp	/^COMPILER_CHECK(sizeof(::OFF64_T) == sizeof(off64_t));$/;"	v
sizeof	interception/interception_type_test.cpp	/^COMPILER_CHECK(sizeof(::OFF_T) == sizeof(off_t));$/;"	v
sizeof	interception/interception_type_test.cpp	/^COMPILER_CHECK(sizeof(::PTRDIFF_T) == sizeof(ptrdiff_t));$/;"	v
sizeof	interception/interception_type_test.cpp	/^COMPILER_CHECK(sizeof(::SIZE_T) == sizeof(size_t));$/;"	v
sizeof	interception/interception_type_test.cpp	/^COMPILER_CHECK(sizeof(::SSIZE_T) == sizeof(ssize_t));$/;"	v
sizeof	sanitizer_common/sanitizer_mac.cpp	/^static_assert(sizeof(MacosVersion) == sizeof(atomic_uint32_t::Type),$/;"	m	namespace:__sanitizer
sizeof	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^               sizeof(((ifaddrs *)nullptr)->ifa_ifu));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^COMPILER_CHECK(sizeof(__sanitizer_struct_mallinfo) == sizeof(struct mallinfo));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^               sizeof(((ifaddrs *)nullptr)->ifa_ifu));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^COMPILER_CHECK(sizeof(__sanitizer_sigaction) == sizeof(struct sigaction));$/;"	v
sizeof	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^COMPILER_CHECK(sizeof(socklen_t) == sizeof(unsigned));$/;"	v
sizeof	sanitizer_common/sanitizer_symbolizer_mac.cpp	/^                    (sizeof(K_ATOS_ENV_VAR) + sizeof(pid_str_)),$/;"	m	class:__sanitizer::final
skip_linker_allocations	lsan/lsan_common.cpp	/^  bool skip_linker_allocations;$/;"	m	struct:__lsan::InvalidPCParam
skip_whitespace	sanitizer_common/sanitizer_flag_parser.cpp	/^void FlagParser::skip_whitespace() {$/;"	f	class:__sanitizer::FlagParser
sleep	tsan/tsan_report.h	/^  ReportStack *sleep;$/;"	m	class:__tsan::ReportDesc
smbioc_flags	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct smbioc_flags {$/;"	s
smbioc_lookup	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct smbioc_lookup {$/;"	s
smbioc_oshare	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct smbioc_oshare {$/;"	s
smbioc_ossn	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct smbioc_ossn {$/;"	s
smbioc_rq	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct smbioc_rq {$/;"	s
smbioc_rw	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct smbioc_rw {$/;"	s
socket	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int socket;$/;"	m	struct:__anon31
socksync	tsan/tsan_fd.cpp	/^  FdSync socksync;$/;"	m	struct:__tsan::FdContext
sp	asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorGeneric
sp	asan/asan_errors.h	/^  uptr pc, bp, sp;$/;"	m	struct:__asan::ErrorInvalidPointerPair
sp	sanitizer_common/sanitizer_common.h	/^  uptr sp;$/;"	m	struct:__sanitizer::SignalContext
sp	tsan/tsan_rtl.h	/^  uptr sp;$/;"	m	struct:__tsan::JmpBuf
sptr	sanitizer_common/sanitizer_internal_defs.h	/^typedef signed long long sptr;$/;"	t	namespace:__sanitizer
ss_flags	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ss_flags;$/;"	m	struct:__sanitizer::__sanitizer_sigaltstack
ss_size	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr ss_size;$/;"	m	struct:__sanitizer::__sanitizer_sigaltstack
ss_sp	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void *ss_sp;$/;"	m	struct:__sanitizer::__sanitizer_sigaltstack
st_atime	sanitizer_common/sanitizer_linux.cpp	260;"	d
st_atime	sanitizer_common/sanitizer_linux.cpp	42;"	d
st_atime	sanitizer_common/sanitizer_linux.cpp	45;"	d
st_atime_nsec	sanitizer_common/sanitizer_linux.cpp	269;"	d
st_ctime	sanitizer_common/sanitizer_linux.cpp	262;"	d
st_ctime	sanitizer_common/sanitizer_linux.cpp	44;"	d
st_ctime	sanitizer_common/sanitizer_linux.cpp	47;"	d
st_ctime_nsec	sanitizer_common/sanitizer_linux.cpp	271;"	d
st_mtime	sanitizer_common/sanitizer_linux.cpp	261;"	d
st_mtime	sanitizer_common/sanitizer_linux.cpp	43;"	d
st_mtime	sanitizer_common/sanitizer_linux.cpp	46;"	d
st_mtime_nsec	sanitizer_common/sanitizer_linux.cpp	270;"	d
stack	asan/asan_descriptions.h	/^      StackAddressDescription stack;$/;"	m	union:__asan::AddressDescription::AddressDescriptionData::__anon73
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorBadParamsToAnnotateContiguousContainer
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorCallocOverflow
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorInvalidAlignedAllocAlignment
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorInvalidAllocationAlignment
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorInvalidPosixMemalignAlignment
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorMallocUsableSizeNotOwned
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorOutOfMemory
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorPvallocOverflow
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorReallocArrayOverflow
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorRssLimitExceeded
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorSanitizerGetAllocatedSizeNotOwned
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorStringFunctionMemoryRangesOverlap
stack	asan/asan_errors.h	/^  const BufferedStackTrace *stack;$/;"	m	struct:__asan::ErrorStringFunctionSizeOverflow
stack	asan/asan_thread.h	/^    StackTrace *stack;$/;"	m	struct:__asan::final::CreateThreadContextArgs
stack	sanitizer_common/sanitizer_allocator_report.cpp	/^  const StackTrace* const stack;$/;"	m	class:__sanitizer::ScopedAllocatorErrorReport
stack	sanitizer_common/sanitizer_stackdepot.cpp	/^  uptr stack[1];  \/\/ [size]$/;"	m	struct:__sanitizer::StackDepotNode
stack	sanitizer_common/sanitizer_symbolizer_markup.cpp	/^  BufferedStackTrace *stack;$/;"	m	struct:__sanitizer::UnwindTraceArg
stack	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^  BufferedStackTrace *stack;$/;"	m	struct:__sanitizer::__anon64::UnwindTraceArg
stack	tsan/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportLocation
stack	tsan/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportMop
stack	tsan/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportMutex
stack	tsan/tsan_report.h	/^  ReportStack *stack;$/;"	m	struct:__tsan::ReportThread
stack0	tsan/tsan_trace.h	/^  BufferedStackTrace stack0;  \/\/ Start stack for the trace.$/;"	m	struct:__tsan::TraceHeader
stack_	asan/asan_allocator.cpp	/^  BufferedStackTrace* const stack_;$/;"	m	struct:__asan::QuarantineCallback
stack_allocations	hwasan/hwasan_thread.h	/^  StackAllocationsRingBuffer *stack_allocations() { return stack_allocations_; }$/;"	f	class:__hwasan::Thread
stack_allocations_	hwasan/hwasan_thread.h	/^  StackAllocationsRingBuffer *stack_allocations_;$/;"	m	class:__hwasan::Thread
stack_begin	lsan/lsan_fuchsia.cpp	/^  uptr stack_begin, stack_end;$/;"	m	struct:__lsan::OnCreatedArgs
stack_begin	lsan/lsan_posix.cpp	/^  uptr stack_begin;$/;"	m	struct:__lsan::OnStartedArgs
stack_begin	lsan/lsan_thread.h	/^  uptr stack_begin() { return stack_begin_; }$/;"	f	class:__lsan::ThreadContextLsanBase
stack_begin_	lsan/lsan_thread.h	/^  uptr stack_begin_ = 0;$/;"	m	class:__lsan::ThreadContextLsanBase
stack_bottom	asan/asan_fuchsia.cpp	/^  uptr stack_bottom, stack_size;$/;"	m	struct:__asan::AsanThread::InitOptions
stack_bottom	asan/asan_rtems.cpp	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions
stack_bottom	asan/asan_thread.cpp	/^uptr AsanThread::stack_bottom() {$/;"	f	class:__asan::AsanThread
stack_bottom	hwasan/hwasan_thread.h	/^  uptr stack_bottom() { return stack_bottom_; }$/;"	f	class:__hwasan::Thread
stack_bottom_	asan/asan_thread.h	/^  uptr stack_bottom_;$/;"	m	class:__asan::AsanThread
stack_bottom_	hwasan/hwasan_thread.h	/^  uptr stack_bottom_;$/;"	m	class:__hwasan::Thread
stack_depot_reverse_map	lsan/lsan_common.cpp	/^  StackDepotReverseMap *stack_depot_reverse_map;$/;"	m	struct:__lsan::InvalidPCParam
stack_end	lsan/lsan_fuchsia.cpp	/^  uptr stack_begin, stack_end;$/;"	m	struct:__lsan::OnCreatedArgs
stack_end	lsan/lsan_posix.cpp	/^  uptr stack_end;$/;"	m	struct:__lsan::OnStartedArgs
stack_end	lsan/lsan_thread.h	/^  uptr stack_end() { return stack_end_; }$/;"	f	class:__lsan::ThreadContextLsanBase
stack_end_	lsan/lsan_thread.h	/^  uptr stack_end_ = 0;$/;"	m	class:__lsan::ThreadContextLsanBase
stack_id	asan/asan_globals.cpp	/^  u32 stack_id;$/;"	m	struct:__asan::GlobalRegistrationSite
stack_id	asan/asan_thread.h	/^  u32 stack_id;$/;"	m	class:__asan::final
stack_id1	asan/asan_errors.h	/^  u32 stack_id1, stack_id2;$/;"	m	struct:__asan::ErrorODRViolation
stack_id2	asan/asan_errors.h	/^  u32 stack_id1, stack_id2;$/;"	m	struct:__asan::ErrorODRViolation
stack_size	asan/asan_fuchsia.cpp	/^  uptr stack_bottom, stack_size;$/;"	m	struct:__asan::AsanThread::InitOptions
stack_size	asan/asan_rtems.cpp	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions
stack_size	asan/asan_thread.cpp	/^uptr AsanThread::stack_size() {$/;"	f	class:__asan::AsanThread
stack_size	hwasan/hwasan_thread.h	/^  uptr stack_size() { return stack_top() - stack_bottom(); }$/;"	f	class:__hwasan::Thread
stack_size	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^  uptr stack_size;$/;"	m	struct:__sanitizer::__anon64::__anon65
stack_size_	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  uptr stack_size_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard
stack_size_	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  uptr stack_size_;$/;"	m	class:__sanitizer::ScopedStackSpaceWithGuard
stack_size_log	asan/asan_fake_stack.h	/^  uptr stack_size_log() const { return stack_size_log_; }$/;"	f	class:__asan::FakeStack
stack_size_log_	asan/asan_fake_stack.h	/^  uptr stack_size_log_;$/;"	m	class:__asan::FakeStack
stack_switching_	asan/asan_thread.h	/^  atomic_uint8_t stack_switching_;$/;"	m	class:__asan::AsanThread
stack_top	asan/asan_thread.cpp	/^uptr AsanThread::stack_top() {$/;"	f	class:__asan::AsanThread
stack_top	hwasan/hwasan_thread.h	/^  uptr stack_top() { return stack_top_; }$/;"	f	class:__hwasan::Thread
stack_top	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^  uptr stack_top;$/;"	m	struct:__sanitizer::__anon64::__anon65
stack_top_	asan/asan_thread.h	/^  uptr stack_top_;$/;"	m	class:__asan::AsanThread
stack_top_	hwasan/hwasan_thread.h	/^  uptr stack_top_;$/;"	m	class:__hwasan::Thread
stack_trace_id	asan/asan_allocator.cpp	/^u32 LsanMetadata::stack_trace_id() const {$/;"	f	class:__lsan::LsanMetadata
stack_trace_id	lsan/lsan_allocator.cpp	/^u32 LsanMetadata::stack_trace_id() const {$/;"	f	class:__lsan::LsanMetadata
stack_trace_id	lsan/lsan_allocator.h	/^  u32 stack_trace_id;$/;"	m	struct:__lsan::ChunkMetadata
stack_trace_id	lsan/lsan_common.h	/^  u32 stack_trace_id;$/;"	m	struct:__lsan::Leak
stacks	tsan/tsan_report.h	/^  Vector<ReportStack*> stacks;$/;"	m	class:__tsan::ReportDesc
stacks_	tsan/tsan_ignoreset.h	/^  u32 stacks_[kMaxSize];$/;"	m	class:__tsan::IgnoreSet
start	sanitizer_common/sanitizer_procmaps.h	/^  uptr start;$/;"	m	class:__sanitizer::MemoryMappedSegment
start	sanitizer_common/sanitizer_symbolizer.h	/^  uptr start;$/;"	m	struct:__sanitizer::DataInfo
start	sanitizer_common/sanitizer_tls_get_addr.cpp	/^  uptr start;$/;"	m	struct:__sanitizer::Glibc_2_19_tls_header
start_hook_	sanitizer_common/sanitizer_symbolizer.h	/^  StartSymbolizationHook start_hook_;$/;"	m	class:__sanitizer::final
start_routine_	asan/asan_thread.h	/^  thread_callback_t start_routine_;$/;"	m	class:__asan::AsanThread
stat	sanitizer_common/sanitizer_linux.cpp	40;"	d
stat	sanitizer_common/sanitizer_linux.cpp	50;"	d
stat	tsan/tsan_rtl.h	/^  u64 stat[StatCnt];$/;"	m	struct:__tsan::Context
stat	tsan/tsan_rtl.h	/^  u64 stat[StatCnt];$/;"	m	struct:__tsan::ThreadState
stat64_to_stat	sanitizer_common/sanitizer_linux.cpp	/^static void stat64_to_stat(struct stat64 *in, struct stat *out) {$/;"	f	namespace:__sanitizer
stat_type_	tsan/tsan_mutex.h	/^  StatType stat_type_;$/;"	m	class:__tsan::Mutex
state_	sanitizer_common/sanitizer_mutex.h	/^  atomic_uint32_t state_;$/;"	m	class:__sanitizer::RWMutex
state_	sanitizer_common/sanitizer_mutex.h	/^  atomic_uint8_t state_;$/;"	m	class:__sanitizer::StaticSpinMutex
state_	sanitizer_common/sanitizer_symbolizer_libbacktrace.h	/^  void *state_;  \/\/ Leaked.$/;"	m	class:__sanitizer::final
state_	tsan/tsan_mutex.h	/^  atomic_uintptr_t state_;$/;"	m	class:__tsan::Mutex
stats	asan/asan_thread.h	/^  AsanStats &stats() { return stats_; }$/;"	f	class:__asan::AsanThread
stats	sanitizer_common/sanitizer_allocator_secondary.h	/^  } stats;$/;"	m	class:LargeMmapAllocator	typeref:struct:LargeMmapAllocator::Stats
stats	sanitizer_common/sanitizer_stackdepotbase.h	/^  StackDepotStats stats;$/;"	m	class:__sanitizer::StackDepotBase
stats_	asan/asan_thread.h	/^  AsanStats stats_;$/;"	m	class:__asan::AsanThread
stats_	hwasan/hwasan_thread_list.h	/^  ThreadStats stats_;$/;"	m	class:__hwasan::HwasanThreadList
stats_	sanitizer_common/sanitizer_allocator_combined.h	/^  AllocatorGlobalStats stats_;$/;"	m	class:CombinedAllocator
stats_	sanitizer_common/sanitizer_allocator_local_cache.h	/^  AllocatorStats stats_;$/;"	m	struct:SizeClassAllocator32LocalCache
stats_	sanitizer_common/sanitizer_allocator_local_cache.h	/^  AllocatorStats stats_;$/;"	m	struct:SizeClassAllocator64LocalCache
stats_	sanitizer_common/sanitizer_allocator_stats.h	/^  atomic_uintptr_t stats_[AllocatorStatCount];$/;"	m	class:AllocatorStats
stats_mutex_	hwasan/hwasan_thread_list.h	/^  SpinMutex stats_mutex_;$/;"	m	class:__hwasan::HwasanThreadList
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon22
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon23
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon24
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon31
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon33
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon34
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon35
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon36
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon37
status	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint32_t status;$/;"	m	struct:__anon38
status	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadStatus status;$/;"	m	class:__sanitizer::ThreadContextBase
statvfs90	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct statvfs90 {$/;"	s
std	asan/asan_new_delete.cpp	/^namespace std {$/;"	n
std	hwasan/hwasan_new_delete.cpp	/^namespace std {$/;"	n
std	lsan/lsan_interceptors.cpp	/^namespace std {$/;"	n
std	tsan/tsan_new_delete.cpp	/^namespace std {$/;"	n
std	ubsan/ubsan_type_hash_itanium.cpp	/^namespace std {$/;"	n
std_suppressions	tsan/tsan_suppressions.cpp	/^static const char *const std_suppressions =$/;"	v
stderr	tsan/tsan_interceptors_posix.cpp	40;"	d
stderr	tsan/tsan_interceptors_posix.cpp	51;"	d
stdout	tsan/tsan_interceptors_posix.cpp	39;"	d
stdout	tsan/tsan_interceptors_posix.cpp	50;"	d
stk	sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 stk;$/;"	m	struct:__sanitizer::DeadlockDetectorTLS::LockWithContext
stk	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 stk;$/;"	m	struct:__sanitizer::ThreadMutex
stk	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u32 stk[2];  \/\/ stack ids for the edge$/;"	m	struct:__sanitizer::DDReport::__anon13
stk	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  u32  stk;  \/\/ creation stack$/;"	m	struct:__sanitizer::DDMutex
stk	tsan/tsan_defs.h	/^  u32  stk;$/;"	m	struct:__tsan::MBlock
stk0	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 stk0;$/;"	m	struct:__sanitizer::Link
stk1	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 stk1;$/;"	m	struct:__sanitizer::Link
stk_addr	tsan/tsan_rtl.h	/^  const uptr stk_addr;$/;"	m	struct:__tsan::ThreadState
stk_addr	tsan/tsan_rtl_thread.cpp	/^  uptr stk_addr;$/;"	m	struct:__tsan::OnStartedArgs
stk_from	sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 stk_from;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
stk_size	tsan/tsan_rtl.h	/^  const uptr stk_size;$/;"	m	struct:__tsan::ThreadState
stk_size	tsan/tsan_rtl_thread.cpp	/^  uptr stk_size;$/;"	m	struct:__tsan::OnStartedArgs
stk_to	sanitizer_common/sanitizer_deadlock_detector.h	/^    u32 stk_to;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
stop_background_thread	tsan/tsan_rtl.h	/^  atomic_uint32_t stop_background_thread;$/;"	m	struct:__tsan::Context
stoptheworld_tracer_pid	sanitizer_common/sanitizer_common.cpp	/^uptr stoptheworld_tracer_pid = 0;$/;"	m	namespace:__sanitizer
stoptheworld_tracer_ppid	sanitizer_common/sanitizer_common.cpp	/^uptr stoptheworld_tracer_ppid = 0;$/;"	m	namespace:__sanitizer
storage_	sanitizer_common/sanitizer_symbolizer.h	/^    InternalMmapVector<const char*> storage_;$/;"	m	class:__sanitizer::final::ModuleNameOwner
storage_size	sanitizer_common/sanitizer_stackdepot.cpp	/^  static uptr storage_size(const args_type &args) {$/;"	f	struct:__sanitizer::StackDepotNode
store	sanitizer_common/sanitizer_stackdepot.cpp	/^  void store(const args_type &args, u32 hash) {$/;"	f	struct:__sanitizer::StackDepotNode
strcat	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strcat);$/;"	v
strchr	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strchr);$/;"	v
strcmp	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strcmp);$/;"	v
strcmp	libbacktrace/backtrace-rename.h	55;"	d
strcmp	libbacktrace/backtrace-rename.h	63;"	d
strcpy	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strcpy);$/;"	v
strcspn	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strcspn);$/;"	v
strdup	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strdup);$/;"	v
strlen	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strlen);$/;"	v
strlen	libbacktrace/backtrace-rename.h	57;"	d
strlen	libbacktrace/backtrace-rename.h	65;"	d
strncat	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strncat);$/;"	v
strncmp	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strncmp);$/;"	v
strncmp	libbacktrace/backtrace-rename.h	56;"	d
strncmp	libbacktrace/backtrace-rename.h	64;"	d
strncpy	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strncpy);$/;"	v
strnlen	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strnlen);$/;"	v
strnlen	libbacktrace/backtrace-rename.h	58;"	d
strnlen	libbacktrace/backtrace-rename.h	67;"	d
strpbrk	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strpbrk);$/;"	v
strrchr	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strrchr);$/;"	v
strspn	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strspn);$/;"	v
strstr	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strstr);$/;"	v
strtok	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strtok);$/;"	v
strtol	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(strtol);$/;"	v
struct_ElfW_Phdr_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_ElfW_Phdr_sz = sizeof(Elf_Phdr);$/;"	m	namespace:__sanitizer
struct_ElfW_Phdr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ElfW_Phdr_sz = sizeof(Elf_Phdr);$/;"	m	namespace:__sanitizer
struct_ElfW_Phdr_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^unsigned struct_ElfW_Phdr_sz = sizeof(ElfW(Phdr));$/;"	m	namespace:__sanitizer
struct_ElfW_Phdr_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^unsigned struct_ElfW_Phdr_sz = sizeof(Elf_Phdr);$/;"	m	namespace:__sanitizer
struct_ElfW_Phdr_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_ElfW_Phdr_sz = sizeof(ElfW(Phdr));$/;"	m	namespace:__sanitizer
struct_FTSENT_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_FTSENT_sz = sizeof(FTSENT);$/;"	m	namespace:__sanitizer
struct_FTSENT_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_FTSENT_sz = sizeof(FTSENT);$/;"	m	namespace:__sanitizer
struct_FTS_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_FTS_sz = sizeof(FTS);$/;"	m	namespace:__sanitizer
struct_FTS_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_FTS_sz = sizeof(FTS);$/;"	m	namespace:__sanitizer
struct_RF_ComponentLabel_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_RF_ComponentLabel_sz = sizeof(RF_ComponentLabel_t);$/;"	m	namespace:__sanitizer
struct_RF_ProgressInfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_RF_ProgressInfo_sz = sizeof(RF_ProgressInfo_t);$/;"	m	namespace:__sanitizer
struct_RF_SingleComponent_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_RF_SingleComponent_sz = sizeof(RF_SingleComponent_t);$/;"	m	namespace:__sanitizer
struct_RF_SparetWait_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_RF_SparetWait_sz = sizeof(RF_SparetWait_t);$/;"	m	namespace:__sanitizer
struct_StringList_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_StringList_sz = sizeof(StringList);$/;"	m	namespace:__sanitizer
struct_StringList_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_StringList_sz = sizeof(StringList);$/;"	m	namespace:__sanitizer
struct___old_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^const unsigned struct___old_kernel_stat_sz = 0;$/;"	m	namespace:__sanitizer
struct___old_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^const unsigned struct___old_kernel_stat_sz = 32;$/;"	m	namespace:__sanitizer
struct___old_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct___old_kernel_stat_sz = 0;$/;"	m	namespace:__sanitizer
struct___old_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct___old_kernel_stat_sz = 32;$/;"	m	namespace:__sanitizer
struct__agp_allocate_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct__agp_allocate_sz = sizeof(struct _agp_allocate);$/;"	m	namespace:__sanitizer
struct__agp_bind_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct__agp_bind_sz = sizeof(struct _agp_bind);$/;"	m	namespace:__sanitizer
struct__agp_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct__agp_info_sz = sizeof(struct _agp_info);$/;"	m	namespace:__sanitizer
struct__agp_setup_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct__agp_setup_sz = sizeof(struct _agp_setup);$/;"	m	namespace:__sanitizer
struct__agp_unbind_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct__agp_unbind_sz = sizeof(struct _agp_unbind);$/;"	m	namespace:__sanitizer
struct__old_mixer_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct__old_mixer_info_sz = sizeof(struct _old_mixer_info);$/;"	m	namespace:__sanitizer
struct_altqreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_altqreq_sz = sizeof(altqreq);$/;"	m	namespace:__sanitizer
struct_amr_user_ioctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_amr_user_ioctl_sz = sizeof(amr_user_ioctl);$/;"	m	namespace:__sanitizer
struct_ap_control_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ap_control_sz = sizeof(ap_control);$/;"	m	namespace:__sanitizer
struct_apm_ctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_apm_ctl_sz = sizeof(apm_ctl);$/;"	m	namespace:__sanitizer
struct_apm_event_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_apm_event_info_sz = sizeof(apm_event_info);$/;"	m	namespace:__sanitizer
struct_apm_power_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_apm_power_info_sz = sizeof(apm_power_info);$/;"	m	namespace:__sanitizer
struct_arpreq_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_arpreq_sz = sizeof(struct arpreq);$/;"	m	namespace:__sanitizer
struct_atabusiodetach_args_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_atabusiodetach_args_sz = sizeof(atabusiodetach_args);$/;"	m	namespace:__sanitizer
struct_atabusioscan_args_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_atabusioscan_args_sz = sizeof(atabusioscan_args);$/;"	m	namespace:__sanitizer
struct_atareq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_atareq_sz = sizeof(struct atareq);$/;"	m	namespace:__sanitizer
struct_ath_diag_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ath_diag_sz = sizeof(ath_diag);$/;"	m	namespace:__sanitizer
struct_atm_flowmap_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_atm_flowmap_sz = sizeof(atm_flowmap);$/;"	m	namespace:__sanitizer
struct_audio_buf_info_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_audio_buf_info_sz = sizeof(struct audio_buf_info);$/;"	m	namespace:__sanitizer
struct_audio_buf_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_audio_buf_info_sz = sizeof(audio_buf_info);$/;"	m	namespace:__sanitizer
struct_audio_buf_info_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_audio_buf_info_sz = sizeof(struct audio_buf_info);$/;"	m	namespace:__sanitizer
struct_audio_device_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_audio_device_sz = sizeof(audio_device);$/;"	m	namespace:__sanitizer
struct_audio_encoding_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_audio_encoding_sz = sizeof(audio_encoding);$/;"	m	namespace:__sanitizer
struct_audio_format_query_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_audio_format_query_sz = sizeof(audio_format_query);$/;"	m	namespace:__sanitizer
struct_audio_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_audio_info_sz = sizeof(audio_info);$/;"	m	namespace:__sanitizer
struct_audio_offset_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_audio_offset_sz = sizeof(audio_offset);$/;"	m	namespace:__sanitizer
struct_autofs_daemon_done_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_autofs_daemon_done_sz = sizeof(autofs_daemon_done);$/;"	m	namespace:__sanitizer
struct_autofs_daemon_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_autofs_daemon_request_sz = sizeof(autofs_daemon_request);$/;"	m	namespace:__sanitizer
struct_ax25_parms_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_ax25_parms_struct_sz = sizeof(struct ax25_parms_struct);$/;"	m	namespace:__sanitizer
struct_bio_locate_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bio_locate_sz = sizeof(bio_locate);$/;"	m	namespace:__sanitizer
struct_bioc_alarm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bioc_alarm_sz = sizeof(bioc_alarm);$/;"	m	namespace:__sanitizer
struct_bioc_blink_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bioc_blink_sz = sizeof(bioc_blink);$/;"	m	namespace:__sanitizer
struct_bioc_disk_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bioc_disk_sz = sizeof(bioc_disk);$/;"	m	namespace:__sanitizer
struct_bioc_inq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bioc_inq_sz = sizeof(bioc_inq);$/;"	m	namespace:__sanitizer
struct_bioc_setstate_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bioc_setstate_sz = sizeof(bioc_setstate);$/;"	m	namespace:__sanitizer
struct_bioc_vol_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bioc_vol_sz = sizeof(bioc_vol);$/;"	m	namespace:__sanitizer
struct_bioc_volops_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bioc_volops_sz = sizeof(bioc_volops);$/;"	m	namespace:__sanitizer
struct_bktr_chnlset_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bktr_chnlset_sz = sizeof(bktr_chnlset);$/;"	m	namespace:__sanitizer
struct_bktr_remote_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bktr_remote_sz = sizeof(bktr_remote);$/;"	m	namespace:__sanitizer
struct_blue_conf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_blue_conf_sz = sizeof(blue_conf);$/;"	m	namespace:__sanitizer
struct_blue_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_blue_interface_sz = sizeof(blue_interface);$/;"	m	namespace:__sanitizer
struct_blue_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_blue_stats_sz = sizeof(blue_stats);$/;"	m	namespace:__sanitizer
struct_bpf_dltlist_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bpf_dltlist_sz = sizeof(bpf_dltlist);$/;"	m	namespace:__sanitizer
struct_bpf_program_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bpf_program_sz = sizeof(bpf_program);$/;"	m	namespace:__sanitizer
struct_bpf_stat_old_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bpf_stat_old_sz = sizeof(bpf_stat_old);$/;"	m	namespace:__sanitizer
struct_bpf_stat_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bpf_stat_sz = sizeof(bpf_stat);$/;"	m	namespace:__sanitizer
struct_bpf_version_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_bpf_version_sz = sizeof(bpf_version);$/;"	m	namespace:__sanitizer
struct_btreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_btreq_sz = sizeof(btreq);$/;"	m	namespace:__sanitizer
struct_btsco_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_btsco_info_sz = sizeof(btsco_info);$/;"	m	namespace:__sanitizer
struct_buffmem_desc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_buffmem_desc_sz = sizeof(buffmem_desc);$/;"	m	namespace:__sanitizer
struct_cap_rights_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_cap_rights_sz = sizeof(cap_rights_t);$/;"	m	namespace:__sanitizer
struct_cbq_add_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cbq_add_class_sz = sizeof(cbq_add_class);$/;"	m	namespace:__sanitizer
struct_cbq_add_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cbq_add_filter_sz = sizeof(cbq_add_filter);$/;"	m	namespace:__sanitizer
struct_cbq_delete_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cbq_delete_class_sz = sizeof(cbq_delete_class);$/;"	m	namespace:__sanitizer
struct_cbq_delete_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cbq_delete_filter_sz = sizeof(cbq_delete_filter);$/;"	m	namespace:__sanitizer
struct_cbq_getstats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cbq_getstats_sz = sizeof(cbq_getstats);$/;"	m	namespace:__sanitizer
struct_cbq_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cbq_interface_sz = sizeof(cbq_interface);$/;"	m	namespace:__sanitizer
struct_cbq_modify_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cbq_modify_class_sz = sizeof(cbq_modify_class);$/;"	m	namespace:__sanitizer
struct_ccd_ioctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ccd_ioctl_sz = sizeof(ccd_ioctl);$/;"	m	namespace:__sanitizer
struct_cdnr_add_element_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_add_element_sz = sizeof(cdnr_add_element);$/;"	m	namespace:__sanitizer
struct_cdnr_add_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_add_filter_sz = sizeof(cdnr_add_filter);$/;"	m	namespace:__sanitizer
struct_cdnr_add_tbmeter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_add_tbmeter_sz = sizeof(cdnr_add_tbmeter);$/;"	m	namespace:__sanitizer
struct_cdnr_add_trtcm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_add_trtcm_sz = sizeof(cdnr_add_trtcm);$/;"	m	namespace:__sanitizer
struct_cdnr_add_tswtcm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_add_tswtcm_sz = sizeof(cdnr_add_tswtcm);$/;"	m	namespace:__sanitizer
struct_cdnr_delete_element_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_delete_element_sz = sizeof(cdnr_delete_element);$/;"	m	namespace:__sanitizer
struct_cdnr_delete_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_delete_filter_sz = sizeof(cdnr_delete_filter);$/;"	m	namespace:__sanitizer
struct_cdnr_get_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_get_stats_sz = sizeof(cdnr_get_stats);$/;"	m	namespace:__sanitizer
struct_cdnr_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_interface_sz = sizeof(cdnr_interface);$/;"	m	namespace:__sanitizer
struct_cdnr_modify_tbmeter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_modify_tbmeter_sz = sizeof(cdnr_modify_tbmeter);$/;"	m	namespace:__sanitizer
struct_cdnr_modify_trtcm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_modify_trtcm_sz = sizeof(cdnr_modify_trtcm);$/;"	m	namespace:__sanitizer
struct_cdnr_modify_tswtcm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_modify_tswtcm_sz = sizeof(cdnr_modify_tswtcm);$/;"	m	namespace:__sanitizer
struct_cdnr_tbmeter_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_tbmeter_stats_sz = sizeof(cdnr_tbmeter_stats);$/;"	m	namespace:__sanitizer
struct_cdnr_tcm_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cdnr_tcm_stats_sz = sizeof(cdnr_tcm_stats);$/;"	m	namespace:__sanitizer
struct_cdrom_msf_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_msf_sz = sizeof(struct cdrom_msf);$/;"	m	namespace:__sanitizer
struct_cdrom_multisession_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_multisession_sz = sizeof(struct cdrom_multisession);$/;"	m	namespace:__sanitizer
struct_cdrom_read_audio_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_read_audio_sz = sizeof(struct cdrom_read_audio);$/;"	m	namespace:__sanitizer
struct_cdrom_subchnl_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_subchnl_sz = sizeof(struct cdrom_subchnl);$/;"	m	namespace:__sanitizer
struct_cdrom_ti_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_ti_sz = sizeof(struct cdrom_ti);$/;"	m	namespace:__sanitizer
struct_cdrom_tocentry_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_tocentry_sz = sizeof(struct cdrom_tocentry);$/;"	m	namespace:__sanitizer
struct_cdrom_tochdr_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_tochdr_sz = sizeof(struct cdrom_tochdr);$/;"	m	namespace:__sanitizer
struct_cdrom_volctrl_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_cdrom_volctrl_sz = sizeof(struct cdrom_volctrl);$/;"	m	namespace:__sanitizer
struct_cgd_ioctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cgd_ioctl_sz = sizeof(cgd_ioctl);$/;"	m	namespace:__sanitizer
struct_cgd_user_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cgd_user_sz = sizeof(cgd_user);$/;"	m	namespace:__sanitizer
struct_changer_element_status_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_changer_element_status_request_sz =$/;"	m	namespace:__sanitizer
struct_changer_exchange_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_changer_exchange_request_sz = sizeof(changer_exchange_request);$/;"	m	namespace:__sanitizer
struct_changer_move_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_changer_move_request_sz = sizeof(changer_move_request);$/;"	m	namespace:__sanitizer
struct_changer_params_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_changer_params_sz = sizeof(changer_params);$/;"	m	namespace:__sanitizer
struct_changer_position_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_changer_position_request_sz = sizeof(changer_position_request);$/;"	m	namespace:__sanitizer
struct_changer_set_voltag_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_changer_set_voltag_request_sz =$/;"	m	namespace:__sanitizer
struct_clockctl_adjtime_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_clockctl_adjtime_sz = sizeof(clockctl_adjtime);$/;"	m	namespace:__sanitizer
struct_clockctl_clock_settime_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_clockctl_clock_settime_sz = sizeof(clockctl_clock_settime);$/;"	m	namespace:__sanitizer
struct_clockctl_ntp_adjtime_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_clockctl_ntp_adjtime_sz = sizeof(clockctl_ntp_adjtime);$/;"	m	namespace:__sanitizer
struct_clockctl_settimeofday_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_clockctl_settimeofday_sz = sizeof(clockctl_settimeofday);$/;"	m	namespace:__sanitizer
struct_cnwistats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cnwistats_sz = sizeof(cnwistats);$/;"	m	namespace:__sanitizer
struct_cnwitrail_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cnwitrail_sz = sizeof(cnwitrail);$/;"	m	namespace:__sanitizer
struct_cnwstatus_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cnwstatus_sz = sizeof(cnwstatus);$/;"	m	namespace:__sanitizer
struct_copr_buffer_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_copr_buffer_sz = 0;$/;"	m	namespace:__sanitizer
struct_copr_buffer_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_copr_buffer_sz = sizeof(struct copr_buffer);$/;"	m	namespace:__sanitizer
struct_copr_buffer_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_copr_buffer_sz = 0;$/;"	m	namespace:__sanitizer
struct_copr_buffer_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_copr_buffer_sz = sizeof(struct copr_buffer);$/;"	m	namespace:__sanitizer
struct_copr_debug_buf_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_copr_debug_buf_sz = 0;$/;"	m	namespace:__sanitizer
struct_copr_debug_buf_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_copr_debug_buf_sz = sizeof(struct copr_debug_buf);$/;"	m	namespace:__sanitizer
struct_copr_debug_buf_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_copr_debug_buf_sz = 0;$/;"	m	namespace:__sanitizer
struct_copr_debug_buf_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_copr_debug_buf_sz = sizeof(struct copr_debug_buf);$/;"	m	namespace:__sanitizer
struct_copr_msg_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_copr_msg_sz = 0;$/;"	m	namespace:__sanitizer
struct_copr_msg_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_copr_msg_sz = sizeof(struct copr_msg);$/;"	m	namespace:__sanitizer
struct_copr_msg_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_copr_msg_sz = 0;$/;"	m	namespace:__sanitizer
struct_copr_msg_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_copr_msg_sz = sizeof(struct copr_msg);$/;"	m	namespace:__sanitizer
struct_count_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_count_info_sz = sizeof(count_info);$/;"	m	namespace:__sanitizer
struct_cpu_ucode_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cpu_ucode_sz = sizeof(cpu_ucode);$/;"	m	namespace:__sanitizer
struct_cpu_ucode_version_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cpu_ucode_version_sz = sizeof(cpu_ucode_version);$/;"	m	namespace:__sanitizer
struct_cpustate_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cpustate_sz = sizeof(struct cpustate);$/;"	m	namespace:__sanitizer
struct_crypt_data_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_crypt_data_sz = sizeof(struct crypt_data);$/;"	m	namespace:__sanitizer
struct_crypt_kop_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_crypt_kop_sz = sizeof(crypt_kop);$/;"	m	namespace:__sanitizer
struct_crypt_mkop_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_crypt_mkop_sz = sizeof(crypt_mkop);$/;"	m	namespace:__sanitizer
struct_crypt_mop_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_crypt_mop_sz = sizeof(crypt_mop);$/;"	m	namespace:__sanitizer
struct_crypt_op_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_crypt_op_sz = sizeof(crypt_op);$/;"	m	namespace:__sanitizer
struct_crypt_result_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_crypt_result_sz = sizeof(crypt_result);$/;"	m	namespace:__sanitizer
struct_crypt_sfop_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_crypt_sfop_sz = sizeof(crypt_sfop);$/;"	m	namespace:__sanitizer
struct_crypt_sgop_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_crypt_sgop_sz = sizeof(crypt_sgop);$/;"	m	namespace:__sanitizer
struct_cryptret_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_cryptret_sz = sizeof(cryptret);$/;"	m	namespace:__sanitizer
struct_devdetachargs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_devdetachargs_sz = sizeof(devdetachargs);$/;"	m	namespace:__sanitizer
struct_devlistargs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_devlistargs_sz = sizeof(devlistargs);$/;"	m	namespace:__sanitizer
struct_devpmargs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_devpmargs_sz = sizeof(devpmargs);$/;"	m	namespace:__sanitizer
struct_devrescanargs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_devrescanargs_sz = sizeof(devrescanargs);$/;"	m	namespace:__sanitizer
struct_disk_badsecinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_disk_badsecinfo_sz = sizeof(disk_badsecinfo);$/;"	m	namespace:__sanitizer
struct_disk_strategy_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_disk_strategy_sz = sizeof(disk_strategy);$/;"	m	namespace:__sanitizer
struct_disklabel_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_disklabel_sz = sizeof(disklabel);$/;"	m	namespace:__sanitizer
struct_dkbad_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dkbad_sz = sizeof(dkbad);$/;"	m	namespace:__sanitizer
struct_dkwedge_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dkwedge_info_sz = sizeof(dkwedge_info);$/;"	m	namespace:__sanitizer
struct_dkwedge_list_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dkwedge_list_sz = sizeof(dkwedge_list);$/;"	m	namespace:__sanitizer
struct_dmio_setfunc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dmio_setfunc_sz = sizeof(dmio_setfunc);$/;"	m	namespace:__sanitizer
struct_dmx_caps_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dmx_caps_sz = sizeof(struct dmx_caps);$/;"	m	namespace:__sanitizer
struct_dmx_pes_filter_params_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dmx_pes_filter_params_sz = sizeof(dmx_pes_filter_params);$/;"	m	namespace:__sanitizer
struct_dmx_sct_filter_params_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dmx_sct_filter_params_sz = sizeof(dmx_sct_filter_params);$/;"	m	namespace:__sanitizer
struct_dmx_stc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dmx_stc_sz = sizeof(dmx_stc);$/;"	m	namespace:__sanitizer
struct_dvb_diseqc_master_cmd_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dvb_diseqc_master_cmd_sz = sizeof(dvb_diseqc_master_cmd);$/;"	m	namespace:__sanitizer
struct_dvb_diseqc_slave_reply_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dvb_diseqc_slave_reply_sz = sizeof(dvb_diseqc_slave_reply);$/;"	m	namespace:__sanitizer
struct_dvb_frontend_event_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dvb_frontend_event_sz = sizeof(dvb_frontend_event);$/;"	m	namespace:__sanitizer
struct_dvb_frontend_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dvb_frontend_info_sz = sizeof(dvb_frontend_info);$/;"	m	namespace:__sanitizer
struct_dvb_frontend_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_dvb_frontend_parameters_sz = sizeof(dvb_frontend_parameters);$/;"	m	namespace:__sanitizer
struct_eccapreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_eccapreq_sz = sizeof(eccapreq);$/;"	m	namespace:__sanitizer
struct_envsys_basic_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_envsys_basic_info_sz = sizeof(struct envsys_basic_info);$/;"	m	namespace:__sanitizer
struct_envsys_tre_data_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_envsys_tre_data_sz = sizeof(struct envsys_tre_data);$/;"	m	namespace:__sanitizer
struct_epoll_event_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_epoll_event_sz = sizeof(struct epoll_event);$/;"	m	namespace:__sanitizer
struct_fbcmap_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fbcmap_sz = sizeof(fbcmap);$/;"	m	namespace:__sanitizer
struct_fbcurpos_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fbcurpos_sz = sizeof(fbcurpos);$/;"	m	namespace:__sanitizer
struct_fbcursor_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fbcursor_sz = sizeof(fbcursor);$/;"	m	namespace:__sanitizer
struct_fbgattr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fbgattr_sz = sizeof(fbgattr);$/;"	m	namespace:__sanitizer
struct_fbsattr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fbsattr_sz = sizeof(fbsattr);$/;"	m	namespace:__sanitizer
struct_fbtype_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fbtype_sz = sizeof(fbtype);$/;"	m	namespace:__sanitizer
struct_fdformat_cmd_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fdformat_cmd_sz = sizeof(fdformat_cmd);$/;"	m	namespace:__sanitizer
struct_fdformat_parms_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fdformat_parms_sz = sizeof(fdformat_parms);$/;"	m	namespace:__sanitizer
struct_ff_effect_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_ff_effect_sz = sizeof(struct ff_effect);$/;"	m	namespace:__sanitizer
struct_fifoq_conf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fifoq_conf_sz = sizeof(fifoq_conf);$/;"	m	namespace:__sanitizer
struct_fifoq_getstats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fifoq_getstats_sz = sizeof(fifoq_getstats);$/;"	m	namespace:__sanitizer
struct_fifoq_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fifoq_interface_sz = sizeof(fifoq_interface);$/;"	m	namespace:__sanitizer
struct_floppy_drive_params_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_floppy_drive_params_sz = sizeof(struct floppy_drive_params);$/;"	m	namespace:__sanitizer
struct_floppy_drive_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_floppy_drive_struct_sz = sizeof(struct floppy_drive_struct);$/;"	m	namespace:__sanitizer
struct_floppy_fdc_state_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_floppy_fdc_state_sz = sizeof(struct floppy_fdc_state);$/;"	m	namespace:__sanitizer
struct_floppy_max_errors_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_floppy_max_errors_sz = sizeof(struct floppy_max_errors);$/;"	m	namespace:__sanitizer
struct_floppy_raw_cmd_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_floppy_raw_cmd_sz = sizeof(struct floppy_raw_cmd);$/;"	m	namespace:__sanitizer
struct_floppy_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_floppy_struct_sz = sizeof(struct floppy_struct);$/;"	m	namespace:__sanitizer
struct_floppy_write_errors_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_floppy_write_errors_sz = sizeof(struct floppy_write_errors);$/;"	m	namespace:__sanitizer
struct_format_descr_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_format_descr_sz = sizeof(struct format_descr);$/;"	m	namespace:__sanitizer
struct_format_op_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_format_op_sz = sizeof(format_op);$/;"	m	namespace:__sanitizer
struct_fss_get_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fss_get_sz = sizeof(fss_get);$/;"	m	namespace:__sanitizer
struct_fss_set_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fss_set_sz = sizeof(fss_set);$/;"	m	namespace:__sanitizer
struct_fstab_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_fstab_sz = sizeof(struct fstab);$/;"	m	namespace:__sanitizer
struct_fstab_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_fstab_sz = sizeof(struct fstab);$/;"	m	namespace:__sanitizer
struct_fstab_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_fstab_sz = sizeof(struct fstab);$/;"	m	namespace:__sanitizer
struct_gdt_ctrt_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gdt_ctrt_sz = sizeof(struct gdt_ctrt);$/;"	m	namespace:__sanitizer
struct_gdt_event_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gdt_event_sz = sizeof(struct gdt_event);$/;"	m	namespace:__sanitizer
struct_gdt_osv_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gdt_osv_sz = sizeof(struct gdt_osv);$/;"	m	namespace:__sanitizer
struct_gdt_rescan_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gdt_rescan_sz = sizeof(struct gdt_rescan);$/;"	m	namespace:__sanitizer
struct_gdt_statist_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gdt_statist_sz = sizeof(struct gdt_statist);$/;"	m	namespace:__sanitizer
struct_gdt_ucmd_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gdt_ucmd_sz = sizeof(struct gdt_ucmd);$/;"	m	namespace:__sanitizer
struct_gpio_attach_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gpio_attach_sz = sizeof(gpio_attach);$/;"	m	namespace:__sanitizer
struct_gpio_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gpio_info_sz = sizeof(gpio_info);$/;"	m	namespace:__sanitizer
struct_gpio_req_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gpio_req_sz = sizeof(gpio_req);$/;"	m	namespace:__sanitizer
struct_gpio_set_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_gpio_set_sz = sizeof(gpio_set);$/;"	m	namespace:__sanitizer
struct_group_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer
struct_group_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer
struct_group_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer
struct_group_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_group_sz = sizeof(struct group);$/;"	m	namespace:__sanitizer
struct_hd_driveid_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_hd_driveid_sz = sizeof(struct hd_driveid);$/;"	m	namespace:__sanitizer
struct_hd_geometry_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_hd_geometry_sz = sizeof(struct hd_geometry);$/;"	m	namespace:__sanitizer
struct_hfsc_add_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_add_class_sz = sizeof(hfsc_add_class);$/;"	m	namespace:__sanitizer
struct_hfsc_add_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_add_filter_sz = sizeof(hfsc_add_filter);$/;"	m	namespace:__sanitizer
struct_hfsc_attach_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_attach_sz = sizeof(hfsc_attach);$/;"	m	namespace:__sanitizer
struct_hfsc_class_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_class_stats_sz = sizeof(hfsc_class_stats);$/;"	m	namespace:__sanitizer
struct_hfsc_delete_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_delete_class_sz = sizeof(hfsc_delete_class);$/;"	m	namespace:__sanitizer
struct_hfsc_delete_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_delete_filter_sz = sizeof(hfsc_delete_filter);$/;"	m	namespace:__sanitizer
struct_hfsc_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_interface_sz = sizeof(hfsc_interface);$/;"	m	namespace:__sanitizer
struct_hfsc_modify_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hfsc_modify_class_sz = sizeof(hfsc_modify_class);$/;"	m	namespace:__sanitizer
struct_hpcfb_dsp_op_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hpcfb_dsp_op_sz = sizeof(hpcfb_dsp_op);$/;"	m	namespace:__sanitizer
struct_hpcfb_dspconf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hpcfb_dspconf_sz = sizeof(hpcfb_dspconf);$/;"	m	namespace:__sanitizer
struct_hpcfb_fbconf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_hpcfb_fbconf_sz = sizeof(hpcfb_fbconf);$/;"	m	namespace:__sanitizer
struct_if_addrprefreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_if_addrprefreq_sz = sizeof(if_addrprefreq);$/;"	m	namespace:__sanitizer
struct_if_clonereq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_if_clonereq_sz = sizeof(if_clonereq);$/;"	m	namespace:__sanitizer
struct_if_laddrreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_if_laddrreq_sz = sizeof(if_laddrreq);$/;"	m	namespace:__sanitizer
struct_ifaddr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifaddr_sz = sizeof(ifaddr);$/;"	m	namespace:__sanitizer
struct_ifaliasreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifaliasreq_sz = sizeof(ifaliasreq);$/;"	m	namespace:__sanitizer
struct_ifcapreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifcapreq_sz = sizeof(ifcapreq);$/;"	m	namespace:__sanitizer
struct_ifconf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifconf_sz = sizeof(ifconf);$/;"	m	namespace:__sanitizer
struct_ifdatareq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifdatareq_sz = sizeof(ifdatareq);$/;"	m	namespace:__sanitizer
struct_ifdrv_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifdrv_sz = sizeof(ifdrv);$/;"	m	namespace:__sanitizer
struct_ifmediareq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifmediareq_sz = sizeof(ifmediareq);$/;"	m	namespace:__sanitizer
struct_ifpppcstatsreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifpppcstatsreq_sz = sizeof(ifpppcstatsreq);$/;"	m	namespace:__sanitizer
struct_ifpppstatsreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifpppstatsreq_sz = sizeof(ifpppstatsreq);$/;"	m	namespace:__sanitizer
struct_ifreq_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_ifreq_sz = sizeof(struct ifreq);$/;"	m	namespace:__sanitizer
struct_ifreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ifreq_sz = sizeof(ifreq);$/;"	m	namespace:__sanitizer
struct_ifreq_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_ifreq_sz = sizeof(struct ifreq);$/;"	m	namespace:__sanitizer
struct_ifreq_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_ifreq_sz = sizeof(struct ifreq);$/;"	m	namespace:__sanitizer
struct_in6_addrpolicy_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_in6_addrpolicy_sz = sizeof(in6_addrpolicy);$/;"	m	namespace:__sanitizer
struct_in6_ndireq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_in6_ndireq_sz = sizeof(in6_ndireq);$/;"	m	namespace:__sanitizer
struct_input_absinfo_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_input_absinfo_sz = sizeof(struct input_absinfo);$/;"	m	namespace:__sanitizer
struct_input_id_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_input_id_sz = sizeof(struct input_id);$/;"	m	namespace:__sanitizer
struct_input_keymap_entry_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_input_keymap_entry_sz = 0;$/;"	m	namespace:__sanitizer
struct_input_keymap_entry_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_input_keymap_entry_sz = sizeof(struct input_keymap_entry);$/;"	m	namespace:__sanitizer
struct_ioc_load_unload_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_load_unload_sz = sizeof(ioc_load_unload);$/;"	m	namespace:__sanitizer
struct_ioc_patch_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_patch_sz = sizeof(ioc_patch);$/;"	m	namespace:__sanitizer
struct_ioc_play_blocks_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_play_blocks_sz = sizeof(ioc_play_blocks);$/;"	m	namespace:__sanitizer
struct_ioc_play_msf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_play_msf_sz = sizeof(ioc_play_msf);$/;"	m	namespace:__sanitizer
struct_ioc_play_track_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_play_track_sz = sizeof(ioc_play_track);$/;"	m	namespace:__sanitizer
struct_ioc_read_subchannel_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_read_subchannel_sz = sizeof(ioc_read_subchannel);$/;"	m	namespace:__sanitizer
struct_ioc_read_toc_entry_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_read_toc_entry_sz = sizeof(ioc_read_toc_entry);$/;"	m	namespace:__sanitizer
struct_ioc_toc_header_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_toc_header_sz = sizeof(ioc_toc_header);$/;"	m	namespace:__sanitizer
struct_ioc_vol_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioc_vol_sz = sizeof(ioc_vol);$/;"	m	namespace:__sanitizer
struct_ioctl_pt_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioctl_pt_sz = sizeof(ioctl_pt);$/;"	m	namespace:__sanitizer
struct_ioppt_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ioppt_sz = sizeof(ioppt);$/;"	m	namespace:__sanitizer
struct_iovec_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iovec_sz = sizeof(iovec);$/;"	m	namespace:__sanitizer
struct_ipfobj_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ipfobj_sz = sizeof(ipfobj);$/;"	m	namespace:__sanitizer
struct_ipmi_cmdspec_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ipmi_cmdspec_sz = sizeof(ipmi_cmdspec);$/;"	m	namespace:__sanitizer
struct_ipmi_recv_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ipmi_recv_sz = sizeof(ipmi_recv);$/;"	m	namespace:__sanitizer
struct_ipmi_req_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ipmi_req_sz = sizeof(ipmi_req);$/;"	m	namespace:__sanitizer
struct_ipx_config_data_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_ipx_config_data_sz = sizeof(struct ipx_config_data);$/;"	m	namespace:__sanitizer
struct_irda_params_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_irda_params_sz = sizeof(irda_params);$/;"	m	namespace:__sanitizer
struct_iscsi_conn_status_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_conn_status_parameters_sz =$/;"	m	namespace:__sanitizer
struct_iscsi_get_version_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_get_version_parameters_sz =$/;"	m	namespace:__sanitizer
struct_iscsi_iocommand_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_iocommand_parameters_sz =$/;"	m	namespace:__sanitizer
struct_iscsi_login_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_login_parameters_sz = sizeof(iscsi_login_parameters_t);$/;"	m	namespace:__sanitizer
struct_iscsi_logout_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_logout_parameters_sz = sizeof(iscsi_logout_parameters_t);$/;"	m	namespace:__sanitizer
struct_iscsi_register_event_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_register_event_parameters_sz =$/;"	m	namespace:__sanitizer
struct_iscsi_remove_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_remove_parameters_sz = sizeof(iscsi_remove_parameters_t);$/;"	m	namespace:__sanitizer
struct_iscsi_send_targets_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_send_targets_parameters_sz =$/;"	m	namespace:__sanitizer
struct_iscsi_set_node_name_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_set_node_name_parameters_sz =$/;"	m	namespace:__sanitizer
struct_iscsi_wait_event_parameters_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_iscsi_wait_event_parameters_sz =$/;"	m	namespace:__sanitizer
struct_isp_fc_device_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_isp_fc_device_sz = sizeof(isp_fc_device);$/;"	m	namespace:__sanitizer
struct_isp_fc_tsk_mgmt_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_isp_fc_tsk_mgmt_sz = sizeof(isp_fc_tsk_mgmt);$/;"	m	namespace:__sanitizer
struct_isp_hba_device_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_isp_hba_device_sz = sizeof(isp_hba_device);$/;"	m	namespace:__sanitizer
struct_isp_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_isp_stats_sz = sizeof(isp_stats_t);$/;"	m	namespace:__sanitizer
struct_isv_cmd_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_isv_cmd_sz = sizeof(isv_cmd);$/;"	m	namespace:__sanitizer
struct_itimerspec_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_itimerspec_sz = sizeof(struct itimerspec);$/;"	m	namespace:__sanitizer
struct_itimerspec_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_itimerspec_sz = sizeof(struct itimerspec);$/;"	m	namespace:__sanitizer
struct_itimerspec_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_itimerspec_sz = sizeof(struct itimerspec);$/;"	m	namespace:__sanitizer
struct_itimerval_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer
struct_itimerval_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer
struct_itimerval_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer
struct_itimerval_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_itimerval_sz = sizeof(struct itimerval);$/;"	m	namespace:__sanitizer
struct_jobs_add_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_add_class_sz = sizeof(jobs_add_class);$/;"	m	namespace:__sanitizer
struct_jobs_add_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_add_filter_sz = sizeof(jobs_add_filter);$/;"	m	namespace:__sanitizer
struct_jobs_attach_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_attach_sz = sizeof(jobs_attach);$/;"	m	namespace:__sanitizer
struct_jobs_class_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_class_stats_sz = sizeof(jobs_class_stats);$/;"	m	namespace:__sanitizer
struct_jobs_delete_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_delete_class_sz = sizeof(jobs_delete_class);$/;"	m	namespace:__sanitizer
struct_jobs_delete_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_delete_filter_sz = sizeof(jobs_delete_filter);$/;"	m	namespace:__sanitizer
struct_jobs_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_interface_sz = sizeof(jobs_interface);$/;"	m	namespace:__sanitizer
struct_jobs_modify_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_jobs_modify_class_sz = sizeof(jobs_modify_class);$/;"	m	namespace:__sanitizer
struct_kbdiacrs_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_kbdiacrs_sz = sizeof(struct kbdiacrs);$/;"	m	namespace:__sanitizer
struct_kbentry_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_kbentry_sz = sizeof(kbentry);$/;"	m	namespace:__sanitizer
struct_kbentry_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_kbentry_sz = sizeof(struct kbentry);$/;"	m	namespace:__sanitizer
struct_kbkeycode_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_kbkeycode_sz = sizeof(struct kbkeycode);$/;"	m	namespace:__sanitizer
struct_kbsentry_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_kbsentry_sz = sizeof(struct kbsentry);$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat64_sz = 0;  \/\/ RISCV64 does not use stat64$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat64_sz = 0;$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat64_sz = 104;$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat64_sz = 144;$/;"	m	namespace:__sanitizer
struct_kernel_stat64_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat64_sz = 96;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat_sz = 104;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat_sz = 128;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat_sz = 144;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat_sz = 64;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat_sz = 72;$/;"	m	namespace:__sanitizer
struct_kernel_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kernel_stat_sz = SANITIZER_ANDROID$/;"	m	namespace:__sanitizer
struct_kevent_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_kevent_sz = sizeof(struct kevent);$/;"	m	namespace:__sanitizer
struct_kexec_segment_sz	sanitizer_common/sanitizer_platform_limits_posix.h	/^const unsigned struct_kexec_segment_sz = 4 * sizeof(unsigned long);$/;"	m	namespace:__sanitizer
struct_kfilter_mapping_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_kfilter_mapping_sz = sizeof(kfilter_mapping);$/;"	m	namespace:__sanitizer
struct_kiockeymap_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_kiockeymap_sz = sizeof(kiockeymap);$/;"	m	namespace:__sanitizer
struct_ksyms_gsymbol_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ksyms_gsymbol_sz = sizeof(ksyms_gsymbol);$/;"	m	namespace:__sanitizer
struct_ksyms_gvalue_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ksyms_gvalue_sz = sizeof(ksyms_gvalue);$/;"	m	namespace:__sanitizer
struct_ksyms_ogsymbol_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ksyms_ogsymbol_sz = sizeof(ksyms_ogsymbol);$/;"	m	namespace:__sanitizer
struct_kttcp_io_args_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_kttcp_io_args_sz = sizeof(kttcp_io_args);$/;"	m	namespace:__sanitizer
struct_lsdisable_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_lsdisable_sz = sizeof(struct lsdisable);$/;"	m	namespace:__sanitizer
struct_lsenable_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_lsenable_sz = sizeof(struct lsenable);$/;"	m	namespace:__sanitizer
struct_ltchars_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ltchars_sz = sizeof(ltchars);$/;"	m	namespace:__sanitizer
struct_lua_create_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_lua_create_sz = sizeof(struct lua_create);$/;"	m	namespace:__sanitizer
struct_lua_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_lua_info_sz = sizeof(struct lua_info);$/;"	m	namespace:__sanitizer
struct_lua_load_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_lua_load_sz = sizeof(struct lua_load);$/;"	m	namespace:__sanitizer
struct_lua_require_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_lua_require_sz = sizeof(lua_require);$/;"	m	namespace:__sanitizer
struct_mbpp_param_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mbpp_param_sz = sizeof(mbpp_param);$/;"	m	namespace:__sanitizer
struct_md_conf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_md_conf_sz = sizeof(md_conf);$/;"	m	namespace:__sanitizer
struct_meteor_capframe_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_meteor_capframe_sz = sizeof(meteor_capframe);$/;"	m	namespace:__sanitizer
struct_meteor_counts_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_meteor_counts_sz = sizeof(meteor_counts);$/;"	m	namespace:__sanitizer
struct_meteor_geomet_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_meteor_geomet_sz = sizeof(meteor_geomet);$/;"	m	namespace:__sanitizer
struct_meteor_pixfmt_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_meteor_pixfmt_sz = sizeof(meteor_pixfmt);$/;"	m	namespace:__sanitizer
struct_meteor_video_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_meteor_video_sz = sizeof(meteor_video);$/;"	m	namespace:__sanitizer
struct_midi_info_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_midi_info_sz = sizeof(struct midi_info);$/;"	m	namespace:__sanitizer
struct_midi_info_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_midi_info_sz = sizeof(struct midi_info);$/;"	m	namespace:__sanitizer
struct_mixer_ctrl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mixer_ctrl_sz = sizeof(struct mixer_ctrl);$/;"	m	namespace:__sanitizer
struct_mixer_devinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mixer_devinfo_sz = sizeof(struct mixer_devinfo);$/;"	m	namespace:__sanitizer
struct_mixer_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mixer_info_sz = sizeof(struct mixer_info);$/;"	m	namespace:__sanitizer
struct_mlx_cinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mlx_cinfo_sz = sizeof(mlx_cinfo);$/;"	m	namespace:__sanitizer
struct_mlx_pause_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mlx_pause_sz = sizeof(mlx_pause);$/;"	m	namespace:__sanitizer
struct_mlx_rebuild_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mlx_rebuild_request_sz = sizeof(mlx_rebuild_request);$/;"	m	namespace:__sanitizer
struct_mlx_rebuild_status_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mlx_rebuild_status_sz = sizeof(mlx_rebuild_status);$/;"	m	namespace:__sanitizer
struct_mlx_usercommand_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mlx_usercommand_sz = sizeof(mlx_usercommand);$/;"	m	namespace:__sanitizer
struct_mly_user_command_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mly_user_command_sz = sizeof(mly_user_command);$/;"	m	namespace:__sanitizer
struct_mly_user_health_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mly_user_health_sz = sizeof(mly_user_health);$/;"	m	namespace:__sanitizer
struct_mpu_command_rec_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mpu_command_rec_sz = sizeof(mpu_command_rec);$/;"	m	namespace:__sanitizer
struct_mq_attr_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_mq_attr_sz = sizeof(struct mq_attr);$/;"	m	namespace:__sanitizer
struct_mq_attr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mq_attr_sz = sizeof(struct mq_attr);$/;"	m	namespace:__sanitizer
struct_mq_attr_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_mq_attr_sz = sizeof(struct mq_attr);$/;"	m	namespace:__sanitizer
struct_msqid_ds_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_msqid_ds_sz = sizeof(struct msqid_ds);$/;"	m	namespace:__sanitizer
struct_msqid_ds_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_msqid_ds_sz = sizeof(struct msqid_ds);$/;"	m	namespace:__sanitizer
struct_msqid_ds_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_msqid_ds_sz = sizeof(struct msqid_ds);$/;"	m	namespace:__sanitizer
struct_mtconfiginfo_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_mtconfiginfo_sz = sizeof(struct mtconfiginfo);$/;"	m	namespace:__sanitizer
struct_mtget_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_mtget_sz = sizeof(struct mtget);$/;"	m	namespace:__sanitizer
struct_mtget_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mtget_sz = sizeof(mtget);$/;"	m	namespace:__sanitizer
struct_mtget_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_mtget_sz = sizeof(struct mtget);$/;"	m	namespace:__sanitizer
struct_mtop_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_mtop_sz = sizeof(struct mtop);$/;"	m	namespace:__sanitizer
struct_mtop_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_mtop_sz = sizeof(mtop);$/;"	m	namespace:__sanitizer
struct_mtop_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_mtop_sz = sizeof(struct mtop);$/;"	m	namespace:__sanitizer
struct_mtpos_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_mtpos_sz = sizeof(struct mtpos);$/;"	m	namespace:__sanitizer
struct_new_utsname_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_new_utsname_sz = sizeof(struct new_utsname);$/;"	m	namespace:__sanitizer
struct_npf_ioctl_table_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_npf_ioctl_table_sz = sizeof(npf_ioctl_table);$/;"	m	namespace:__sanitizer
struct_npioctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_npioctl_sz = sizeof(npioctl);$/;"	m	namespace:__sanitizer
struct_nr_parms_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_nr_parms_struct_sz = sizeof(struct nr_parms_struct);$/;"	m	namespace:__sanitizer
struct_nvlist_ref_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvlist_ref_sz = sizeof(struct __sanitizer_nvlist_ref_t);$/;"	m	namespace:__sanitizer
struct_nvme_pt_command_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvme_pt_command_sz = sizeof(nvme_pt_command);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_capability_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_capability_sz = sizeof(nvmm_ioc_capability);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_ctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_ctl_sz = sizeof(nvmm_ioc_ctl);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_gpa_map_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_gpa_map_sz = sizeof(nvmm_ioc_gpa_map);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_gpa_unmap_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_gpa_unmap_sz = sizeof(nvmm_ioc_gpa_unmap);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_hva_map_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_hva_map_sz = sizeof(nvmm_ioc_hva_map);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_hva_unmap_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_hva_unmap_sz = sizeof(nvmm_ioc_hva_unmap);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_machine_configure_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_machine_configure_sz =$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_machine_create_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_machine_create_sz = sizeof(nvmm_ioc_machine_create);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_machine_destroy_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_machine_destroy_sz = sizeof(nvmm_ioc_machine_destroy);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_vcpu_configure_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_vcpu_configure_sz = sizeof(nvmm_ioc_vcpu_configure);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_vcpu_create_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_vcpu_create_sz = sizeof(nvmm_ioc_vcpu_create);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_vcpu_destroy_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_vcpu_destroy_sz = sizeof(nvmm_ioc_vcpu_destroy);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_vcpu_getstate_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_vcpu_getstate_sz = sizeof(nvmm_ioc_vcpu_getstate);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_vcpu_inject_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_vcpu_inject_sz = sizeof(nvmm_ioc_vcpu_inject);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_vcpu_run_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_vcpu_run_sz = sizeof(nvmm_ioc_vcpu_run);$/;"	m	namespace:__sanitizer
struct_nvmm_ioc_vcpu_setstate_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_nvmm_ioc_vcpu_setstate_sz = sizeof(nvmm_ioc_vcpu_destroy);$/;"	m	namespace:__sanitizer
struct_ochanger_element_status_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ochanger_element_status_request_sz =$/;"	m	namespace:__sanitizer
struct_ofiocdesc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ofiocdesc_sz = sizeof(ofiocdesc);$/;"	m	namespace:__sanitizer
struct_okiockey_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_okiockey_sz = sizeof(okiockey);$/;"	m	namespace:__sanitizer
struct_old_utsname_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_old_utsname_sz = sizeof(struct old_utsname);$/;"	m	namespace:__sanitizer
struct_oldold_utsname_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_oldold_utsname_sz = sizeof(struct oldold_utsname);$/;"	m	namespace:__sanitizer
struct_ortentry_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ortentry_sz = sizeof(ortentry);$/;"	m	namespace:__sanitizer
struct_oscsi_addr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_oscsi_addr_sz = sizeof(oscsi_addr);$/;"	m	namespace:__sanitizer
struct_oss_audioinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_oss_audioinfo_sz = sizeof(oss_audioinfo);$/;"	m	namespace:__sanitizer
struct_oss_sysinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_oss_sysinfo_sz = sizeof(oss_sysinfo);$/;"	m	namespace:__sanitizer
struct_passwd_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer
struct_passwd_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer
struct_passwd_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer
struct_passwd_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_passwd_sz = sizeof(struct passwd);$/;"	m	namespace:__sanitizer
struct_pciio_bdf_cfgreg_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pciio_bdf_cfgreg_sz = sizeof(pciio_bdf_cfgreg);$/;"	m	namespace:__sanitizer
struct_pciio_businfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pciio_businfo_sz = sizeof(pciio_businfo);$/;"	m	namespace:__sanitizer
struct_pciio_cfgreg_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pciio_cfgreg_sz = sizeof(pciio_cfgreg);$/;"	m	namespace:__sanitizer
struct_pciio_drvname_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pciio_drvname_sz = sizeof(pciio_drvname);$/;"	m	namespace:__sanitizer
struct_pciio_drvnameonbus_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pciio_drvnameonbus_sz = sizeof(pciio_drvnameonbus);$/;"	m	namespace:__sanitizer
struct_pcvtid_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pcvtid_sz = sizeof(pcvtid);$/;"	m	namespace:__sanitizer
struct_pf_osfp_ioctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pf_osfp_ioctl_sz = sizeof(pf_osfp_ioctl);$/;"	m	namespace:__sanitizer
struct_pf_status_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pf_status_sz = sizeof(pf_status);$/;"	m	namespace:__sanitizer
struct_pfioc_altq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_altq_sz = sizeof(pfioc_altq);$/;"	m	namespace:__sanitizer
struct_pfioc_if_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_if_sz = sizeof(pfioc_if);$/;"	m	namespace:__sanitizer
struct_pfioc_iface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_iface_sz = sizeof(pfioc_iface);$/;"	m	namespace:__sanitizer
struct_pfioc_limit_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_limit_sz = sizeof(pfioc_limit);$/;"	m	namespace:__sanitizer
struct_pfioc_natlook_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_natlook_sz = sizeof(pfioc_natlook);$/;"	m	namespace:__sanitizer
struct_pfioc_pooladdr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_pooladdr_sz = sizeof(pfioc_pooladdr);$/;"	m	namespace:__sanitizer
struct_pfioc_qstats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_qstats_sz = sizeof(pfioc_qstats);$/;"	m	namespace:__sanitizer
struct_pfioc_rule_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_rule_sz = sizeof(pfioc_rule);$/;"	m	namespace:__sanitizer
struct_pfioc_ruleset_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_ruleset_sz = sizeof(pfioc_ruleset);$/;"	m	namespace:__sanitizer
struct_pfioc_src_node_kill_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_src_node_kill_sz = sizeof(pfioc_src_node_kill);$/;"	m	namespace:__sanitizer
struct_pfioc_src_nodes_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_src_nodes_sz = sizeof(pfioc_src_nodes);$/;"	m	namespace:__sanitizer
struct_pfioc_state_kill_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_state_kill_sz = sizeof(pfioc_state_kill);$/;"	m	namespace:__sanitizer
struct_pfioc_state_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_state_sz = sizeof(pfioc_state);$/;"	m	namespace:__sanitizer
struct_pfioc_states_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_states_sz = sizeof(pfioc_states);$/;"	m	namespace:__sanitizer
struct_pfioc_table_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_table_sz = sizeof(pfioc_table);$/;"	m	namespace:__sanitizer
struct_pfioc_tm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_tm_sz = sizeof(pfioc_tm);$/;"	m	namespace:__sanitizer
struct_pfioc_trans_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pfioc_trans_sz = sizeof(pfioc_trans);$/;"	m	namespace:__sanitizer
struct_plistref_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_plistref_sz = sizeof(plistref);$/;"	m	namespace:__sanitizer
struct_power_type_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_power_type_sz = sizeof(power_type);$/;"	m	namespace:__sanitizer
struct_ppp_idle_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ppp_idle_sz = sizeof(ppp_idle);$/;"	m	namespace:__sanitizer
struct_ppp_option_data_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ppp_option_data_sz = sizeof(ppp_option_data);$/;"	m	namespace:__sanitizer
struct_ppp_rawin_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ppp_rawin_sz = sizeof(ppp_rawin);$/;"	m	namespace:__sanitizer
struct_ppp_stats_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_ppp_stats_sz = sizeof(struct ppp_stats);$/;"	m	namespace:__sanitizer
struct_ppp_stats_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_ppp_stats_sz = sizeof(struct ppp_stats);$/;"	m	namespace:__sanitizer
struct_pppoeconnectionstate_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pppoeconnectionstate_sz = sizeof(pppoeconnectionstate);$/;"	m	namespace:__sanitizer
struct_pppoediscparms_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pppoediscparms_sz = sizeof(pppoediscparms);$/;"	m	namespace:__sanitizer
struct_pps_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pps_info_sz = sizeof(pps_info_t);$/;"	m	namespace:__sanitizer
struct_pps_params_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_pps_params_sz = sizeof(pps_params_t);$/;"	m	namespace:__sanitizer
struct_priq_add_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_priq_add_class_sz = sizeof(priq_add_class);$/;"	m	namespace:__sanitizer
struct_priq_add_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_priq_add_filter_sz = sizeof(priq_add_filter);$/;"	m	namespace:__sanitizer
struct_priq_class_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_priq_class_stats_sz = sizeof(priq_class_stats);$/;"	m	namespace:__sanitizer
struct_priq_delete_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_priq_delete_class_sz = sizeof(priq_delete_class);$/;"	m	namespace:__sanitizer
struct_priq_delete_filter_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_priq_delete_filter_sz = sizeof(priq_delete_filter);$/;"	m	namespace:__sanitizer
struct_priq_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_priq_interface_sz = sizeof(priq_interface);$/;"	m	namespace:__sanitizer
struct_priq_modify_class_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_priq_modify_class_sz = sizeof(priq_modify_class);$/;"	m	namespace:__sanitizer
struct_ptmget_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptmget_sz = sizeof(ptmget);$/;"	m	namespace:__sanitizer
struct_ptrace_dbreg_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_dbreg_struct_sz = -1;$/;"	m	namespace:__sanitizer
struct_ptrace_dbreg_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_dbreg_struct_sz = sizeof(struct dbreg);$/;"	m	namespace:__sanitizer
struct_ptrace_fpreg_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_fpreg_struct_sz = -1;$/;"	m	namespace:__sanitizer
struct_ptrace_fpreg_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_fpreg_struct_sz = sizeof(struct fpreg);$/;"	m	namespace:__sanitizer
struct_ptrace_ptrace_event_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_ptrace_event_struct_sz = sizeof(ptrace_event_t);$/;"	m	namespace:__sanitizer
struct_ptrace_ptrace_io_desc_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_ptrace_io_desc_struct_sz = sizeof(struct ptrace_io_desc);$/;"	m	namespace:__sanitizer
struct_ptrace_ptrace_lwpinfo_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_ptrace_lwpinfo_struct_sz = sizeof(struct ptrace_lwpinfo);$/;"	m	namespace:__sanitizer
struct_ptrace_ptrace_lwpstatus_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_ptrace_lwpstatus_struct_sz =$/;"	m	namespace:__sanitizer
struct_ptrace_ptrace_siginfo_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_ptrace_siginfo_struct_sz = sizeof(ptrace_siginfo_t);$/;"	m	namespace:__sanitizer
struct_ptrace_reg_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_reg_struct_sz = -1;$/;"	m	namespace:__sanitizer
struct_ptrace_reg_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ptrace_reg_struct_sz = sizeof(struct reg);$/;"	m	namespace:__sanitizer
struct_radio_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_radio_info_sz = sizeof(radio_info);$/;"	m	namespace:__sanitizer
struct_red_conf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_red_conf_sz = sizeof(red_conf);$/;"	m	namespace:__sanitizer
struct_red_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_red_interface_sz = sizeof(red_interface);$/;"	m	namespace:__sanitizer
struct_red_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_red_stats_sz = sizeof(red_stats);$/;"	m	namespace:__sanitizer
struct_redparams_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_redparams_sz = sizeof(redparams);$/;"	m	namespace:__sanitizer
struct_regex_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_regex_sz = sizeof(regex_t);$/;"	m	namespace:__sanitizer
struct_regex_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_regex_sz = sizeof(regex_t);$/;"	m	namespace:__sanitizer
struct_regex_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_regex_sz = sizeof(regex_t);$/;"	m	namespace:__sanitizer
struct_regmatch_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_regmatch_sz = sizeof(regmatch_t);$/;"	m	namespace:__sanitizer
struct_regmatch_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_regmatch_sz = sizeof(regmatch_t);$/;"	m	namespace:__sanitizer
struct_regmatch_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_regmatch_sz = sizeof(regmatch_t);$/;"	m	namespace:__sanitizer
struct_rf_pmparams_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rf_pmparams_sz = sizeof(rf_pmparams);$/;"	m	namespace:__sanitizer
struct_rf_pmstat_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rf_pmstat_sz = sizeof(rf_pmstat);$/;"	m	namespace:__sanitizer
struct_rf_recon_req_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rf_recon_req_sz = sizeof(rf_recon_req);$/;"	m	namespace:__sanitizer
struct_rio_conf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rio_conf_sz = sizeof(rio_conf);$/;"	m	namespace:__sanitizer
struct_rio_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rio_interface_sz = sizeof(rio_interface);$/;"	m	namespace:__sanitizer
struct_rio_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rio_stats_sz = sizeof(rio_stats);$/;"	m	namespace:__sanitizer
struct_rlimit64_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_rlimit64_sz = sizeof(struct rlimit64);$/;"	m	namespace:__sanitizer
struct_rlimit_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_rlimit_sz = sizeof(struct rlimit);$/;"	m	namespace:__sanitizer
struct_rlimit_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rlimit_sz = sizeof(struct rlimit);$/;"	m	namespace:__sanitizer
struct_rlimit_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_rlimit_sz = sizeof(struct rlimit);$/;"	m	namespace:__sanitizer
struct_rndctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rndctl_sz = sizeof(rndctl_t);$/;"	m	namespace:__sanitizer
struct_rnddata_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rnddata_sz = sizeof(rnddata_t);$/;"	m	namespace:__sanitizer
struct_rndpoolstat_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rndpoolstat_sz = sizeof(rndpoolstat_t);$/;"	m	namespace:__sanitizer
struct_rndstat_est_name_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rndstat_est_name_sz = sizeof(rndstat_est_name_t);$/;"	m	namespace:__sanitizer
struct_rndstat_est_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rndstat_est_sz = sizeof(rndstat_est_t);$/;"	m	namespace:__sanitizer
struct_rndstat_name_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rndstat_name_sz = sizeof(rndstat_name_t);$/;"	m	namespace:__sanitizer
struct_rndstat_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rndstat_sz = sizeof(rndstat_t);$/;"	m	namespace:__sanitizer
struct_rtentry_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_rtentry_sz = sizeof(struct rtentry);$/;"	m	namespace:__sanitizer
struct_rusage_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer
struct_rusage_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer
struct_rusage_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer
struct_rusage_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_rusage_sz = sizeof(struct rusage);$/;"	m	namespace:__sanitizer
struct_sbi_instrument_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_sbi_instrument_sz = sizeof(struct sbi_instrument);$/;"	m	namespace:__sanitizer
struct_sbi_instrument_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sbi_instrument_sz = sizeof(struct sbi_instrument);$/;"	m	namespace:__sanitizer
struct_scan_io_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_scan_io_sz = sizeof(scan_io);$/;"	m	namespace:__sanitizer
struct_scbusaccel_args_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_scbusaccel_args_sz = sizeof(scbusaccel_args);$/;"	m	namespace:__sanitizer
struct_scbusiodetach_args_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_scbusiodetach_args_sz = sizeof(scbusiodetach_args);$/;"	m	namespace:__sanitizer
struct_scbusioscan_args_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_scbusioscan_args_sz = sizeof(scbusioscan_args);$/;"	m	namespace:__sanitizer
struct_scc_modem_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_scc_modem_sz = sizeof(struct scc_modem);$/;"	m	namespace:__sanitizer
struct_scc_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_scc_stat_sz = sizeof(struct scc_stat);$/;"	m	namespace:__sanitizer
struct_sched_param_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer
struct_sched_param_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer
struct_sched_param_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer
struct_sched_param_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_sched_param_sz = sizeof(struct sched_param);$/;"	m	namespace:__sanitizer
struct_scsi_addr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_scsi_addr_sz = sizeof(scsi_addr);$/;"	m	namespace:__sanitizer
struct_scsireq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_scsireq_sz = sizeof(struct scsireq);$/;"	m	namespace:__sanitizer
struct_sctp_connectx_addrs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sctp_connectx_addrs_sz = sizeof(sctp_connectx_addrs);$/;"	m	namespace:__sanitizer
struct_sembuf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sembuf_sz = sizeof(struct sembuf);$/;"	m	namespace:__sanitizer
struct_seq_event_rec_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_seq_event_rec_sz = sizeof(struct seq_event_rec);$/;"	m	namespace:__sanitizer
struct_seq_event_rec_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_seq_event_rec_sz = sizeof(seq_event_rec);$/;"	m	namespace:__sanitizer
struct_seq_event_rec_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_seq_event_rec_sz = sizeof(struct seq_event_rec);$/;"	m	namespace:__sanitizer
struct_serial_multiport_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_serial_multiport_struct_sz$/;"	m	namespace:__sanitizer
struct_serial_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_serial_struct_sz = sizeof(struct serial_struct);$/;"	m	namespace:__sanitizer
struct_session_op_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_session_op_sz = sizeof(session_op);$/;"	m	namespace:__sanitizer
struct_sgttyb_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sgttyb_sz = sizeof(sgttyb);$/;"	m	namespace:__sanitizer
struct_shm_info_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_shm_info_sz = sizeof(struct shm_info);$/;"	m	namespace:__sanitizer
struct_shm_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.h	496;"	d
struct_shm_info_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_shm_info_sz = sizeof(struct shm_info);$/;"	m	namespace:__sanitizer
struct_shm_info_sz	sanitizer_common/sanitizer_platform_limits_solaris.h	360;"	d
struct_shminfo_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_shminfo_sz = sizeof(struct shminfo);$/;"	m	namespace:__sanitizer
struct_shminfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.h	495;"	d
struct_shminfo_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_shminfo_sz = sizeof(struct shminfo);$/;"	m	namespace:__sanitizer
struct_shminfo_sz	sanitizer_common/sanitizer_platform_limits_solaris.h	359;"	d
struct_sigaction_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer
struct_sigaction_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer
struct_sigaction_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer
struct_sigaction_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_sigaction_sz = sizeof(struct sigaction);$/;"	m	namespace:__sanitizer
struct_sigaltstack_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sigaltstack_sz = sizeof(stack_t);$/;"	m	namespace:__sanitizer
struct_sigevent_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_sigevent_sz = sizeof(struct sigevent);$/;"	m	namespace:__sanitizer
struct_sigevent_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sigevent_sz = sizeof(struct sigevent);$/;"	m	namespace:__sanitizer
struct_sigevent_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sigevent_sz = sizeof(struct sigevent);$/;"	m	namespace:__sanitizer
struct_sigevent_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_sigevent_sz = sizeof(struct sigevent);$/;"	m	namespace:__sanitizer
struct_sioc_sg_req_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_sioc_sg_req_sz = sizeof(struct sioc_sg_req);$/;"	m	namespace:__sanitizer
struct_sioc_sg_req_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sioc_sg_req_sz = sizeof(sioc_sg_req);$/;"	m	namespace:__sanitizer
struct_sioc_sg_req_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sioc_sg_req_sz = sizeof(struct sioc_sg_req);$/;"	m	namespace:__sanitizer
struct_sioc_sg_req_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_sioc_sg_req_sz = sizeof(struct sioc_sg_req);$/;"	m	namespace:__sanitizer
struct_sioc_vif_req_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_sioc_vif_req_sz = sizeof(struct sioc_vif_req);$/;"	m	namespace:__sanitizer
struct_sioc_vif_req_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sioc_vif_req_sz = sizeof(sioc_vif_req);$/;"	m	namespace:__sanitizer
struct_sioc_vif_req_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sioc_vif_req_sz = sizeof(struct sioc_vif_req);$/;"	m	namespace:__sanitizer
struct_sioc_vif_req_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_sioc_vif_req_sz = sizeof(struct sioc_vif_req);$/;"	m	namespace:__sanitizer
struct_smbioc_flags_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_smbioc_flags_sz = sizeof(smbioc_flags);$/;"	m	namespace:__sanitizer
struct_smbioc_lookup_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_smbioc_lookup_sz = sizeof(smbioc_lookup);$/;"	m	namespace:__sanitizer
struct_smbioc_oshare_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_smbioc_oshare_sz = sizeof(smbioc_oshare);$/;"	m	namespace:__sanitizer
struct_smbioc_ossn_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_smbioc_ossn_sz = sizeof(smbioc_ossn);$/;"	m	namespace:__sanitizer
struct_smbioc_rq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_smbioc_rq_sz = sizeof(smbioc_rq);$/;"	m	namespace:__sanitizer
struct_smbioc_rw_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_smbioc_rw_sz = sizeof(smbioc_rw);$/;"	m	namespace:__sanitizer
struct_sockaddr_ax25_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sockaddr_ax25_sz = sizeof(struct sockaddr_ax25);$/;"	m	namespace:__sanitizer
struct_sockaddr_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer
struct_sockaddr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer
struct_sockaddr_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer
struct_sockaddr_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_sockaddr_sz = sizeof(struct sockaddr);$/;"	m	namespace:__sanitizer
struct_spi_ioctl_configure_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spi_ioctl_configure_sz = sizeof(spi_ioctl_configure);$/;"	m	namespace:__sanitizer
struct_spi_ioctl_transfer_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spi_ioctl_transfer_sz = sizeof(spi_ioctl_transfer);$/;"	m	namespace:__sanitizer
struct_spppauthcfg_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppauthcfg_sz = sizeof(spppauthcfg);$/;"	m	namespace:__sanitizer
struct_spppauthfailuresettings_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppauthfailuresettings_sz = sizeof(spppauthfailuresettings);$/;"	m	namespace:__sanitizer
struct_spppauthfailurestats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppauthfailurestats_sz = sizeof(spppauthfailurestats);$/;"	m	namespace:__sanitizer
struct_spppdnsaddrs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppdnsaddrs_sz = sizeof(spppdnsaddrs);$/;"	m	namespace:__sanitizer
struct_spppdnssettings_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppdnssettings_sz = sizeof(spppdnssettings);$/;"	m	namespace:__sanitizer
struct_spppidletimeout_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppidletimeout_sz = sizeof(spppidletimeout);$/;"	m	namespace:__sanitizer
struct_spppkeepalivesettings_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppkeepalivesettings_sz = sizeof(spppkeepalivesettings);$/;"	m	namespace:__sanitizer
struct_sppplcpcfg_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sppplcpcfg_sz = sizeof(sppplcpcfg);$/;"	m	namespace:__sanitizer
struct_spppstatus_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppstatus_sz = sizeof(spppstatus);$/;"	m	namespace:__sanitizer
struct_spppstatusncp_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_spppstatusncp_sz = sizeof(spppstatusncp);$/;"	m	namespace:__sanitizer
struct_srt_rt_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_srt_rt_sz = sizeof(srt_rt);$/;"	m	namespace:__sanitizer
struct_stack_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_stack_t_sz = sizeof(stack_t);$/;"	m	namespace:__sanitizer
struct_stack_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_stack_t_sz = sizeof(stack_t);$/;"	m	namespace:__sanitizer
struct_stack_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_stack_t_sz = sizeof(stack_t);$/;"	m	namespace:__sanitizer
struct_stack_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_stack_t_sz = sizeof(stack_t);$/;"	m	namespace:__sanitizer
struct_stat64_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_stat64_sz = sizeof(struct stat64);$/;"	m	namespace:__sanitizer
struct_stat64_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_stat64_sz = sizeof(struct stat64);$/;"	m	namespace:__sanitizer
struct_stat_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer
struct_stat_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer
struct_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer
struct_stat_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_stat_sz = sizeof(struct stat);$/;"	m	namespace:__sanitizer
struct_statfs64_sz	sanitizer_common/sanitizer_platform_limits_linux.cpp	/^  unsigned struct_statfs64_sz = sizeof(struct statfs64);$/;"	m	namespace:__sanitizer
struct_statfs64_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_statfs64_sz = sizeof(struct statfs64);$/;"	m	namespace:__sanitizer
struct_statfs_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_statfs_sz = sizeof(struct statfs);$/;"	m	namespace:__sanitizer
struct_statfs_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_statfs_sz = sizeof(struct statfs);$/;"	m	namespace:__sanitizer
struct_statfs_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_statfs_sz = sizeof(struct statfs);$/;"	m	namespace:__sanitizer
struct_statvfs64_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_statvfs64_sz = sizeof(struct statvfs64);$/;"	m	namespace:__sanitizer
struct_statvfs64_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_statvfs64_sz = sizeof(struct statvfs64);$/;"	m	namespace:__sanitizer
struct_statvfs90_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_statvfs90_sz = sizeof(struct statvfs90);$/;"	v
struct_statvfs_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer
struct_statvfs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer
struct_statvfs_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer
struct_statvfs_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_statvfs_sz = sizeof(struct statvfs);$/;"	m	namespace:__sanitizer
struct_stic_xinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_stic_xinfo_sz = sizeof(stic_xinfo);$/;"	m	namespace:__sanitizer
struct_sun_dkctlr_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sun_dkctlr_sz = sizeof(sun_dkctlr);$/;"	m	namespace:__sanitizer
struct_sun_dkgeom_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sun_dkgeom_sz = sizeof(sun_dkgeom);$/;"	m	namespace:__sanitizer
struct_sun_dkpart_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_sun_dkpart_sz = sizeof(sun_dkpart);$/;"	m	namespace:__sanitizer
struct_synth_info_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_synth_info_sz = sizeof(struct synth_info);$/;"	m	namespace:__sanitizer
struct_synth_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_synth_info_sz = sizeof(synth_info);$/;"	m	namespace:__sanitizer
struct_synth_info_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_synth_info_sz = sizeof(struct synth_info);$/;"	m	namespace:__sanitizer
struct_sysinfo_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_sysinfo_sz = sizeof(struct sysinfo);$/;"	m	namespace:__sanitizer
struct_tbrreq_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_tbrreq_sz = sizeof(tbrreq);$/;"	m	namespace:__sanitizer
struct_tchars_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_tchars_sz = sizeof(tchars);$/;"	m	namespace:__sanitizer
struct_termio_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_termio_sz = sizeof(struct termio);$/;"	m	namespace:__sanitizer
struct_termios_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_termios_sz = sizeof(struct termios);$/;"	m	namespace:__sanitizer
struct_termios_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_termios_sz = sizeof(termios);$/;"	m	namespace:__sanitizer
struct_termios_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_termios_sz = sizeof(struct termios);$/;"	m	namespace:__sanitizer
struct_termios_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_termios_sz = sizeof(struct termios);$/;"	m	namespace:__sanitizer
struct_timeb_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_timeb_sz = sizeof(struct timeb);$/;"	m	namespace:__sanitizer
struct_timespec_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer
struct_timespec_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer
struct_timespec_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer
struct_timespec_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_timespec_sz = sizeof(struct timespec);$/;"	m	namespace:__sanitizer
struct_timeval_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer
struct_timex_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_timex_sz = sizeof(struct timex);$/;"	m	namespace:__sanitizer
struct_timex_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_timex_sz = sizeof(struct timex);$/;"	m	namespace:__sanitizer
struct_timezone_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer
struct_timezone_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer
struct_timezone_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer
struct_timezone_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_timezone_sz = sizeof(struct timezone);$/;"	m	namespace:__sanitizer
struct_tm_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer
struct_tm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer
struct_tm_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer
struct_tm_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_tm_sz = sizeof(struct tm);$/;"	m	namespace:__sanitizer
struct_tms_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer
struct_tms_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer
struct_tms_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer
struct_tms_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_tms_sz = sizeof(struct tms);$/;"	m	namespace:__sanitizer
struct_tone_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_tone_sz = sizeof(tone_t);$/;"	m	namespace:__sanitizer
struct_ttyent_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^int struct_ttyent_sz = sizeof(struct ttyent);$/;"	m	namespace:__sanitizer
struct_twe_drivecommand_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_twe_drivecommand_sz = sizeof(twe_drivecommand);$/;"	m	namespace:__sanitizer
struct_twe_paramcommand_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_twe_paramcommand_sz = sizeof(twe_paramcommand);$/;"	m	namespace:__sanitizer
struct_twe_usercommand_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_twe_usercommand_sz = sizeof(twe_usercommand);$/;"	m	namespace:__sanitizer
struct_ukyopon_identify_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_ukyopon_identify_sz = sizeof(ukyopon_identify);$/;"	m	namespace:__sanitizer
struct_unimapdesc_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_unimapdesc_sz = sizeof(struct unimapdesc);$/;"	m	namespace:__sanitizer
struct_unimapinit_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_unimapinit_sz = sizeof(struct unimapinit);$/;"	m	namespace:__sanitizer
struct_urio_command_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_urio_command_sz = sizeof(urio_command);$/;"	m	namespace:__sanitizer
struct_usb_alt_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_alt_interface_sz = sizeof(usb_alt_interface);$/;"	m	namespace:__sanitizer
struct_usb_bulk_ra_wb_opt_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_bulk_ra_wb_opt_sz = sizeof(usb_bulk_ra_wb_opt);$/;"	m	namespace:__sanitizer
struct_usb_config_desc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_config_desc_sz = sizeof(usb_config_desc);$/;"	m	namespace:__sanitizer
struct_usb_ctl_report_desc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_ctl_report_desc_sz = sizeof(usb_ctl_report_desc);$/;"	m	namespace:__sanitizer
struct_usb_ctl_report_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_ctl_report_sz = sizeof(usb_ctl_report);$/;"	m	namespace:__sanitizer
struct_usb_ctl_request_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_ctl_request_sz = sizeof(usb_ctl_request);$/;"	m	namespace:__sanitizer
struct_usb_device_descriptor_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_device_descriptor_sz = sizeof(usb_device_descriptor_t);$/;"	m	namespace:__sanitizer
struct_usb_device_info_old_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_device_info_old_sz = sizeof(usb_device_info_old);$/;"	m	namespace:__sanitizer
struct_usb_device_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_device_info_sz = sizeof(usb_device_info);$/;"	m	namespace:__sanitizer
struct_usb_device_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_device_stats_sz = sizeof(usb_device_stats);$/;"	m	namespace:__sanitizer
struct_usb_endpoint_desc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_endpoint_desc_sz = sizeof(usb_endpoint_desc);$/;"	m	namespace:__sanitizer
struct_usb_full_desc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_full_desc_sz = sizeof(usb_full_desc);$/;"	m	namespace:__sanitizer
struct_usb_interface_desc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_interface_desc_sz = sizeof(usb_interface_desc);$/;"	m	namespace:__sanitizer
struct_usb_string_desc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_usb_string_desc_sz = sizeof(usb_string_desc);$/;"	m	namespace:__sanitizer
struct_user_fpregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_fpregs_struct_sz = sizeof(elf_fpregset_t);$/;"	m	namespace:__sanitizer
struct_user_fpregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_fpregs_struct_sz = sizeof(struct __riscv_q_ext_state);$/;"	m	namespace:__sanitizer
struct_user_fpregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_fpregs_struct_sz = sizeof(struct _user_fpregs_struct);$/;"	m	namespace:__sanitizer
struct_user_fpregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_fpregs_struct_sz = sizeof(struct user_fpregs_struct);$/;"	m	namespace:__sanitizer
struct_user_fpregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_fpregs_struct_sz = sizeof(struct user_fpsimd_state);$/;"	m	namespace:__sanitizer
struct_user_fpxregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_fpxregs_struct_sz = 0;$/;"	m	namespace:__sanitizer
struct_user_fpxregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_fpxregs_struct_sz = sizeof(struct user_fpxregs_struct);$/;"	m	namespace:__sanitizer
struct_user_regs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_regs_struct_sz = sizeof(struct _user_regs_struct);$/;"	m	namespace:__sanitizer
struct_user_regs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_regs_struct_sz = sizeof(struct pt_regs);$/;"	m	namespace:__sanitizer
struct_user_regs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_regs_struct_sz = sizeof(struct user_pt_regs);$/;"	m	namespace:__sanitizer
struct_user_regs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_regs_struct_sz = sizeof(struct user_regs_struct);$/;"	m	namespace:__sanitizer
struct_user_vfpregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_vfpregs_struct_sz = 0;$/;"	m	namespace:__sanitizer
struct_user_vfpregs_struct_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_user_vfpregs_struct_sz = ARM_VFPREGS_SIZE;$/;"	m	namespace:__sanitizer
struct_ustat_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_ustat_sz = SIZEOF_STRUCT_USTAT;$/;"	m	namespace:__sanitizer
struct_utimbuf_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_utimbuf_sz = sizeof(struct utimbuf);$/;"	m	namespace:__sanitizer
struct_utimbuf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utimbuf_sz = sizeof(struct utimbuf);$/;"	m	namespace:__sanitizer
struct_utimbuf_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_utimbuf_sz = sizeof(struct utimbuf);$/;"	m	namespace:__sanitizer
struct_utmp_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utmp_sz = sizeof(struct utmp);$/;"	m	namespace:__sanitizer
struct_utmp_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_utmp_sz = sizeof(struct utmp);$/;"	m	namespace:__sanitizer
struct_utmp_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_utmp_sz = sizeof(struct utmp);$/;"	m	namespace:__sanitizer
struct_utmpx_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_utmpx_sz = sizeof(struct utmpx);$/;"	m	namespace:__sanitizer
struct_utmpx_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utmpx_sz = sizeof(struct utmpx);$/;"	m	namespace:__sanitizer
struct_utmpx_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_utmpx_sz = sizeof(struct utmpx);$/;"	m	namespace:__sanitizer
struct_utmpx_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_utmpx_sz = sizeof(struct utmpx);$/;"	m	namespace:__sanitizer
struct_utoppy_readfile_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utoppy_readfile_sz = sizeof(utoppy_readfile);$/;"	m	namespace:__sanitizer
struct_utoppy_rename_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utoppy_rename_sz = sizeof(utoppy_rename);$/;"	m	namespace:__sanitizer
struct_utoppy_stats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utoppy_stats_sz = sizeof(utoppy_stats);$/;"	m	namespace:__sanitizer
struct_utoppy_writefile_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utoppy_writefile_sz = sizeof(utoppy_writefile);$/;"	m	namespace:__sanitizer
struct_utsname_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer
struct_utsname_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer
struct_utsname_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer
struct_utsname_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_utsname_sz = sizeof(struct utsname);$/;"	m	namespace:__sanitizer
struct_v4l2_audio_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_audio_sz = sizeof(v4l2_audio);$/;"	m	namespace:__sanitizer
struct_v4l2_audioout_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_audioout_sz = sizeof(v4l2_audioout);$/;"	m	namespace:__sanitizer
struct_v4l2_buffer_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_buffer_sz = sizeof(v4l2_buffer);$/;"	m	namespace:__sanitizer
struct_v4l2_capability_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_capability_sz = sizeof(v4l2_capability);$/;"	m	namespace:__sanitizer
struct_v4l2_control_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_control_sz = sizeof(v4l2_control);$/;"	m	namespace:__sanitizer
struct_v4l2_crop_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_crop_sz = sizeof(v4l2_crop);$/;"	m	namespace:__sanitizer
struct_v4l2_cropcap_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_cropcap_sz = sizeof(v4l2_cropcap);$/;"	m	namespace:__sanitizer
struct_v4l2_fmtdesc_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_fmtdesc_sz = sizeof(v4l2_fmtdesc);$/;"	m	namespace:__sanitizer
struct_v4l2_format_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_format_sz = sizeof(v4l2_format);$/;"	m	namespace:__sanitizer
struct_v4l2_framebuffer_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_framebuffer_sz = sizeof(v4l2_framebuffer);$/;"	m	namespace:__sanitizer
struct_v4l2_frequency_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_frequency_sz = sizeof(v4l2_frequency);$/;"	m	namespace:__sanitizer
struct_v4l2_frmivalenum_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_frmivalenum_sz = sizeof(v4l2_frmivalenum);$/;"	m	namespace:__sanitizer
struct_v4l2_frmsizeenum_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_frmsizeenum_sz = sizeof(v4l2_frmsizeenum);$/;"	m	namespace:__sanitizer
struct_v4l2_input_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_input_sz = sizeof(v4l2_input);$/;"	m	namespace:__sanitizer
struct_v4l2_jpegcompression_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_jpegcompression_sz = sizeof(v4l2_jpegcompression);$/;"	m	namespace:__sanitizer
struct_v4l2_modulator_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_modulator_sz = sizeof(v4l2_modulator);$/;"	m	namespace:__sanitizer
struct_v4l2_output_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_output_sz = sizeof(v4l2_output);$/;"	m	namespace:__sanitizer
struct_v4l2_queryctrl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_queryctrl_sz = sizeof(v4l2_queryctrl);$/;"	m	namespace:__sanitizer
struct_v4l2_querymenu_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_querymenu_sz = sizeof(v4l2_querymenu);$/;"	m	namespace:__sanitizer
struct_v4l2_requestbuffers_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_requestbuffers_sz = sizeof(v4l2_requestbuffers);$/;"	m	namespace:__sanitizer
struct_v4l2_standard_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_standard_sz = sizeof(v4l2_standard);$/;"	m	namespace:__sanitizer
struct_v4l2_streamparm_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_streamparm_sz = sizeof(v4l2_streamparm);$/;"	m	namespace:__sanitizer
struct_v4l2_tuner_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_v4l2_tuner_sz = sizeof(v4l2_tuner);$/;"	m	namespace:__sanitizer
struct_vnd_ioctl_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_vnd_ioctl_sz = sizeof(vnd_ioctl);$/;"	m	namespace:__sanitizer
struct_vnd_user_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_vnd_user_sz = sizeof(vnd_user);$/;"	m	namespace:__sanitizer
struct_vt_consize_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_vt_consize_sz = sizeof(struct vt_consize);$/;"	m	namespace:__sanitizer
struct_vt_mode_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_vt_mode_sz = sizeof(struct vt_mode);$/;"	m	namespace:__sanitizer
struct_vt_mode_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_vt_mode_sz = sizeof(struct vt_mode);$/;"	m	namespace:__sanitizer
struct_vt_sizes_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_vt_sizes_sz = sizeof(struct vt_sizes);$/;"	m	namespace:__sanitizer
struct_vt_stat_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_vt_stat_sz = sizeof(vt_stat);$/;"	m	namespace:__sanitizer
struct_vt_stat_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_vt_stat_sz = sizeof(struct vt_stat);$/;"	m	namespace:__sanitizer
struct_wdog_conf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wdog_conf_sz = sizeof(wdog_conf);$/;"	m	namespace:__sanitizer
struct_wdog_mode_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wdog_mode_sz = sizeof(wdog_mode);$/;"	m	namespace:__sanitizer
struct_wfq_conf_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wfq_conf_sz = sizeof(wfq_conf);$/;"	m	namespace:__sanitizer
struct_wfq_getqid_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wfq_getqid_sz = sizeof(wfq_getqid);$/;"	m	namespace:__sanitizer
struct_wfq_getstats_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wfq_getstats_sz = sizeof(wfq_getstats);$/;"	m	namespace:__sanitizer
struct_wfq_interface_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wfq_interface_sz = sizeof(wfq_interface);$/;"	m	namespace:__sanitizer
struct_wfq_setweight_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wfq_setweight_sz = sizeof(wfq_setweight);$/;"	m	namespace:__sanitizer
struct_winsize_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned struct_winsize_sz = sizeof(struct winsize);$/;"	m	namespace:__sanitizer
struct_winsize_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_winsize_sz = sizeof(winsize);$/;"	m	namespace:__sanitizer
struct_winsize_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned struct_winsize_sz = sizeof(struct winsize);$/;"	m	namespace:__sanitizer
struct_winsize_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned struct_winsize_sz = sizeof(struct winsize);$/;"	m	namespace:__sanitizer
struct_wscons_event_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wscons_event_sz = sizeof(wscons_event);$/;"	m	namespace:__sanitizer
struct_wsdisplay_addscreendata_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_addscreendata_sz = sizeof(wsdisplay_addscreendata);$/;"	m	namespace:__sanitizer
struct_wsdisplay_char_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_char_sz = sizeof(wsdisplay_char);$/;"	m	namespace:__sanitizer
struct_wsdisplay_cmap_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_cmap_sz = sizeof(wsdisplay_cmap);$/;"	m	namespace:__sanitizer
struct_wsdisplay_curpos_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_curpos_sz = sizeof(wsdisplay_curpos);$/;"	m	namespace:__sanitizer
struct_wsdisplay_cursor_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_cursor_sz = sizeof(wsdisplay_cursor);$/;"	m	namespace:__sanitizer
struct_wsdisplay_delscreendata_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_delscreendata_sz = sizeof(wsdisplay_delscreendata);$/;"	m	namespace:__sanitizer
struct_wsdisplay_fbinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_fbinfo_sz = sizeof(wsdisplay_fbinfo);$/;"	m	namespace:__sanitizer
struct_wsdisplay_font_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_font_sz = sizeof(wsdisplay_font);$/;"	m	namespace:__sanitizer
struct_wsdisplay_kbddata_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_kbddata_sz = sizeof(wsdisplay_kbddata);$/;"	m	namespace:__sanitizer
struct_wsdisplay_msgattrs_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_msgattrs_sz = sizeof(wsdisplay_msgattrs);$/;"	m	namespace:__sanitizer
struct_wsdisplay_param_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_param_sz = sizeof(wsdisplay_param);$/;"	m	namespace:__sanitizer
struct_wsdisplay_scroll_data_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_scroll_data_sz = sizeof(wsdisplay_scroll_data);$/;"	m	namespace:__sanitizer
struct_wsdisplay_usefontdata_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplay_usefontdata_sz = sizeof(wsdisplay_usefontdata);$/;"	m	namespace:__sanitizer
struct_wsdisplayio_blit_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplayio_blit_sz = sizeof(wsdisplayio_blit);$/;"	m	namespace:__sanitizer
struct_wsdisplayio_bus_id_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplayio_bus_id_sz = sizeof(wsdisplayio_bus_id);$/;"	m	namespace:__sanitizer
struct_wsdisplayio_edid_info_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplayio_edid_info_sz = sizeof(wsdisplayio_edid_info);$/;"	m	namespace:__sanitizer
struct_wsdisplayio_fbinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsdisplayio_fbinfo_sz = sizeof(wsdisplayio_fbinfo);$/;"	m	namespace:__sanitizer
struct_wskbd_bell_data_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wskbd_bell_data_sz = sizeof(wskbd_bell_data);$/;"	m	namespace:__sanitizer
struct_wskbd_keyrepeat_data_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wskbd_keyrepeat_data_sz = sizeof(wskbd_keyrepeat_data);$/;"	m	namespace:__sanitizer
struct_wskbd_map_data_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wskbd_map_data_sz = sizeof(wskbd_map_data);$/;"	m	namespace:__sanitizer
struct_wskbd_scroll_data_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wskbd_scroll_data_sz = sizeof(wskbd_scroll_data);$/;"	m	namespace:__sanitizer
struct_wsmouse_calibcoords_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsmouse_calibcoords_sz = sizeof(wsmouse_calibcoords);$/;"	m	namespace:__sanitizer
struct_wsmouse_id_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsmouse_id_sz = sizeof(wsmouse_id);$/;"	m	namespace:__sanitizer
struct_wsmouse_repeat_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsmouse_repeat_sz = sizeof(wsmouse_repeat);$/;"	m	namespace:__sanitizer
struct_wsmux_device_list_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsmux_device_list_sz = sizeof(wsmux_device_list);$/;"	m	namespace:__sanitizer
struct_wsmux_device_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_wsmux_device_sz = sizeof(wsmux_device);$/;"	m	namespace:__sanitizer
struct_xd_iocmd_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned struct_xd_iocmd_sz = sizeof(xd_iocmd);$/;"	m	namespace:__sanitizer
submitted_synchronously	tsan/tsan_interceptors_libdispatch.cpp	/^  bool submitted_synchronously;$/;"	m	struct:__tsan::__anon77
subtractNoOverflow	ubsan/ubsan_diag.cpp	/^static inline uptr subtractNoOverflow(uptr LHS, uptr RHS) {$/;"	f
success	lsan/lsan_common.h	/^  bool success = false;$/;"	m	struct:__lsan::CheckForLeaksParam
supp	tsan/tsan_rtl.h	/^  Suppression *supp;$/;"	m	struct:__tsan::FiredSuppression
suppress_reports	tsan/tsan_rtl.h	/^  int suppress_reports;$/;"	m	struct:__tsan::ThreadState
suppressable	tsan/tsan_report.h	/^  bool suppressable;$/;"	m	struct:__tsan::ReportLocation
suppressable	tsan/tsan_report.h	/^  bool suppressable;$/;"	m	struct:__tsan::ReportStack
suppression_ctx	asan/asan_suppressions.cpp	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	m	namespace:__asan
suppression_ctx	lsan/lsan_common.cpp	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	m	namespace:__lsan
suppression_ctx	tsan/tsan_suppressions.cpp	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	m	namespace:__tsan
suppression_ctx	ubsan/ubsan_diag.cpp	/^static SuppressionContext *suppression_ctx = nullptr;$/;"	v
suppression_placeholder	asan/asan_suppressions.cpp	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	m	namespace:__asan
suppression_placeholder	lsan/lsan_common.cpp	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	m	namespace:__lsan
suppression_placeholder	tsan/tsan_suppressions.cpp	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	m	namespace:__tsan
suppression_placeholder	ubsan/ubsan_diag.cpp	/^ALIGNED(64) static char suppression_placeholder[sizeof(SuppressionContext)];$/;"	v
suppression_types_	sanitizer_common/sanitizer_suppressions.h	/^  const char **const suppression_types_;$/;"	m	class:__sanitizer::SuppressionContext
suppression_types_num_	sanitizer_common/sanitizer_suppressions.h	/^  const int suppression_types_num_;$/;"	m	class:__sanitizer::SuppressionContext
suppressions_	sanitizer_common/sanitizer_suppressions.h	/^  InternalMmapVector<Suppression> suppressions_;$/;"	m	class:__sanitizer::SuppressionContext
suspended_threads_list	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  SuspendedThreadsListLinux &suspended_threads_list() {$/;"	f	class:__sanitizer::ThreadSuspender
suspended_threads_list	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  SuspendedThreadsListNetBSD &suspended_threads_list() {$/;"	f	class:__sanitizer::ThreadSuspender
suspended_threads_list_	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  SuspendedThreadsListLinux suspended_threads_list_;$/;"	m	class:__sanitizer::ThreadSuspender
suspended_threads_list_	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  SuspendedThreadsListNetBSD suspended_threads_list_;$/;"	m	class:__sanitizer::ThreadSuspender
swap	sanitizer_common/sanitizer_common.h	/^  void swap(InternalMmapVectorNoCtor &other) {$/;"	f	class:__sanitizer::InternalMmapVectorNoCtor
swift_demangle_f	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^static swift_demangle_ft swift_demangle_f;$/;"	m	namespace:__sanitizer
swift_demangle_ft	sanitizer_common/sanitizer_symbolizer_posix_libcdep.cpp	/^typedef char *(*swift_demangle_ft)(const char *mangledName,$/;"	t	namespace:__sanitizer
sym_	sanitizer_common/sanitizer_symbolizer.h	/^    const Symbolizer *sym_;$/;"	m	class:__sanitizer::final::SymbolizerScope
symbolizer_	sanitizer_common/sanitizer_symbolizer.cpp	/^Symbolizer *Symbolizer::symbolizer_;$/;"	m	class:__sanitizer::Symbolizer
symbolizer_	sanitizer_common/sanitizer_symbolizer.h	/^  static Symbolizer *symbolizer_;$/;"	m	class:__sanitizer::final
symbolizer_allocator_	sanitizer_common/sanitizer_symbolizer.cpp	/^LowLevelAllocator Symbolizer::symbolizer_allocator_;$/;"	m	class:__sanitizer::Symbolizer
symbolizer_allocator_	sanitizer_common/sanitizer_symbolizer.h	/^  static LowLevelAllocator symbolizer_allocator_;$/;"	m	class:__sanitizer::final
symbolizer_process_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  LLVMSymbolizerProcess *symbolizer_process_;$/;"	m	class:__sanitizer::final
sync	tsan/tsan_fd.cpp	/^  FdSync *sync;$/;"	m	struct:__tsan::FdDesc
sync	tsan/tsan_rtl.h	/^  SyncClock sync;$/;"	m	class:__tsan::final
sync_cache	tsan/tsan_rtl.h	/^  DenseSlabAllocCache sync_cache;$/;"	m	struct:__tsan::Processor
sync_ignore_set	tsan/tsan_rtl.h	/^  IgnoreSet sync_ignore_set;$/;"	m	struct:__tsan::ThreadState
syscall_access_range	tsan/tsan_interceptors_posix.cpp	/^static void syscall_access_range(uptr pc, uptr p, uptr s, bool write) {$/;"	f
syscall_acquire	tsan/tsan_interceptors_posix.cpp	/^static USED void syscall_acquire(uptr pc, uptr addr) {$/;"	f
syscall_fd_acquire	tsan/tsan_interceptors_posix.cpp	/^static USED void syscall_fd_acquire(uptr pc, int fd) {$/;"	f
syscall_fd_close	tsan/tsan_interceptors_posix.cpp	/^static void syscall_fd_close(uptr pc, int fd) {$/;"	f
syscall_fd_release	tsan/tsan_interceptors_posix.cpp	/^static USED void syscall_fd_release(uptr pc, int fd) {$/;"	f
syscall_post_fork	tsan/tsan_interceptors_posix.cpp	/^static void syscall_post_fork(uptr pc, int pid) {$/;"	f
syscall_pre_fork	tsan/tsan_interceptors_posix.cpp	/^static void syscall_pre_fork(uptr pc) {$/;"	f
syscall_release	tsan/tsan_interceptors_posix.cpp	/^static USED void syscall_release(uptr pc, uptr addr) {$/;"	f
t	asan/asan_interceptors.cpp	/^  atomic_uintptr_t t;$/;"	m	struct:ThreadStartParam
t1	sanitizer_common/sanitizer_bvgraph.h	/^  BV t1, t2;$/;"	m	class:__sanitizer::BVGraph
t2	sanitizer_common/sanitizer_bvgraph.h	/^  BV t1, t2;$/;"	m	class:__sanitizer::BVGraph
t_	sanitizer_common/sanitizer_flag_parser.h	/^  T *t_;$/;"	m	class:__sanitizer::final
tab	sanitizer_common/sanitizer_stackdepotbase.h	/^  atomic_uintptr_t tab[kTabSize];   \/\/ Hash table of Node's.$/;"	m	class:__sanitizer::StackDepotBase
tab	tsan/tsan_fd.cpp	/^  atomic_uintptr_t tab[kTableSizeL1];$/;"	m	struct:__tsan::FdContext
table	tsan/tsan_defs.h	/^    u32       table[kTableSize];$/;"	m	union:__tsan::ClockBlock::__anon80
table_	sanitizer_common/sanitizer_addrhashmap.h	/^  Bucket *table_;$/;"	m	class:__sanitizer::AddrHashMap
tag	asan/asan_allocator.cpp	/^ChunkTag LsanMetadata::tag() const {$/;"	f	class:__lsan::LsanMetadata
tag	hwasan/hwasan_globals.h	/^  u8 tag() const { return info >> 24; };$/;"	f	struct:__hwasan::hwasan_global
tag	lsan/lsan_allocator.cpp	/^ChunkTag LsanMetadata::tag() const {$/;"	f	class:__lsan::LsanMetadata
tag	lsan/lsan_allocator.h	/^  ChunkTag tag : 2;$/;"	m	struct:__lsan::ChunkMetadata
tag	sanitizer_common/sanitizer_stackdepot.cpp	/^  u32 tag;$/;"	m	struct:__sanitizer::StackDepotNode
tag	sanitizer_common/sanitizer_stacktrace.h	/^  u32 tag;$/;"	m	struct:__sanitizer::StackTrace
tag	tsan/tsan_defs.h	/^  u64  tag : 16;$/;"	m	struct:__tsan::MBlock
tag	tsan/tsan_report.h	/^  uptr tag;$/;"	m	class:__tsan::ReportDesc
tag_offset	sanitizer_common/sanitizer_symbolizer.h	/^  uptr tag_offset;$/;"	m	struct:__sanitizer::LocalInfo
tag_t	hwasan/hwasan.h	/^typedef u8 tag_t;$/;"	t
tagged_addr	hwasan/hwasan_allocator.h	/^  uptr tagged_addr;$/;"	m	struct:__hwasan::HeapAllocationRecord
tagging_disabled_	hwasan/hwasan_thread.h	/^  u32 tagging_disabled_;  \/\/ if non-zero, malloc uses zero tag in this thread.$/;"	m	class:__hwasan::Thread
tail	tsan/tsan_symbolize.cpp	/^  SymbolizedStack *tail;$/;"	m	struct:__tsan::SymbolizedStackBuilder
tail_magic	hwasan/hwasan_allocator.cpp	/^static ALIGNED(16) u8 tail_magic[kShadowAlignment - 1];$/;"	m	namespace:__hwasan
target_password	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int target_password : 1;$/;"	m	struct:__anon31::__anon32
target_password	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *target_password;$/;"	m	struct:__anon31
tctx	tsan/tsan_rtl.h	/^  ThreadContext *tctx;$/;"	m	struct:__tsan::ThreadState
tctx	tsan/tsan_rtl_thread.cpp	/^  ThreadContext *tctx;$/;"	m	struct:__tsan::ThreadLeak
tctx	tsan/tsan_rtl_thread.cpp	/^  ThreadContextBase *tctx;$/;"	m	struct:__tsan::ConsumeThreadContext
templ	sanitizer_common/sanitizer_libignore.h	/^    char *templ;$/;"	m	struct:__sanitizer::LibIgnore::Lib
templ	sanitizer_common/sanitizer_suppressions.h	/^  char *templ;$/;"	m	struct:__sanitizer::Suppression
testOnlyGetEpoch	sanitizer_common/sanitizer_deadlock_detector.h	/^  uptr testOnlyGetEpoch() const { return current_epoch_; }$/;"	f	class:__sanitizer::DeadlockDetector
testOnlyHasEdge	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool testOnlyHasEdge(uptr l1, uptr l2) {$/;"	f	class:__sanitizer::DeadlockDetector
testOnlyHasEdgeRaw	sanitizer_common/sanitizer_deadlock_detector.h	/^  bool testOnlyHasEdgeRaw(uptr idx1, uptr idx2) {$/;"	f	class:__sanitizer::DeadlockDetector
theDepot	sanitizer_common/sanitizer_stackdepot.cpp	/^static StackDepot theDepot;$/;"	m	namespace:__sanitizer
thePersistentAllocator	sanitizer_common/sanitizer_persistent_allocator.cpp	/^PersistentAllocator thePersistentAllocator;$/;"	m	namespace:__sanitizer
thr	tsan/tsan_interceptors_posix.cpp	/^  ThreadState *thr;$/;"	m	struct:BlockingCall
thr	tsan/tsan_interceptors_posix.cpp	/^  ThreadState *thr;$/;"	m	struct:CondMutexUnlockCtx
thr	tsan/tsan_interceptors_posix.cpp	/^  ThreadState *thr;$/;"	m	struct:ScopedSyscall
thr	tsan/tsan_interceptors_posix.cpp	/^  ThreadState *thr;$/;"	m	struct:TsanInterceptorContext
thr	tsan/tsan_interceptors_posix.cpp	/^  ThreadState *thr;$/;"	m	struct:dl_iterate_phdr_data
thr	tsan/tsan_rtl.h	/^  ThreadState *thr; \/\/ currently wired thread, or nullptr$/;"	m	struct:__tsan::Processor
thr	tsan/tsan_rtl.h	/^  ThreadState *thr;$/;"	m	class:__tsan::final
thr	tsan/tsan_rtl_mutex.cpp	/^  ThreadState *thr;$/;"	m	struct:__tsan::final
thr	tsan/tsan_rtl_thread.cpp	/^  ThreadState *thr;$/;"	m	struct:__tsan::OnCreatedArgs
thr	tsan/tsan_rtl_thread.cpp	/^  ThreadState *thr;$/;"	m	struct:__tsan::OnStartedArgs
thr_	tsan/tsan_interceptors.h	/^  ThreadState *const thr_;$/;"	m	class:__tsan::ScopedInterceptor
thr_	tsan/tsan_interface_ann.cpp	/^  ThreadState *const thr_;$/;"	m	class:__tsan::ScopedAnnotation
thr_	tsan/tsan_interface_atomic.cpp	/^  ThreadState *thr_;$/;"	m	class:ScopedAtomic
thr_	tsan/tsan_interface_java.cpp	/^  ThreadState *thr_;$/;"	m	class:__tsan::ScopedJavaFunc
thr_ctx	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^    u64 thr_ctx;   \/\/ user thread context$/;"	m	struct:__sanitizer::DDReport::__anon13
thread	asan/asan_stack.cpp	/^  AsanThread *thread = nullptr;$/;"	m	class:__asan::__anon70::ScopedUnwinding
thread	asan/asan_thread.h	/^    AsanThread *thread;$/;"	m	struct:__asan::final::CreateThreadContextArgs
thread	asan/asan_thread.h	/^  AsanThread *thread;$/;"	m	class:__asan::final
thread	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  thread_t thread;$/;"	m	struct:__sanitizer::__anon41
thread_alloc_size_	hwasan/hwasan_thread_list.h	/^  uptr thread_alloc_size_;$/;"	m	class:__hwasan::HwasanThreadList
thread_callback_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef thread_return_t (THREAD_CALLING_CONV *thread_callback_t)(void* arg);$/;"	t	namespace:__sanitizer
thread_descriptor_size	sanitizer_common/sanitizer_linux_libcdep.cpp	/^static atomic_uintptr_t thread_descriptor_size;$/;"	m	namespace:__sanitizer
thread_destroyed	sanitizer_common/sanitizer_thread_registry.h	/^  atomic_uint32_t thread_destroyed; \/\/ To address race of Joined vs Finished$/;"	m	class:__sanitizer::ThreadContextBase
thread_finalize	lsan/lsan_interceptors.cpp	/^static void thread_finalize(void *v) {$/;"	f	namespace:std
thread_finalize	tsan/tsan_interceptors_posix.cpp	/^static void thread_finalize(void *v) {$/;"	f
thread_ids_	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  InternalMmapVector<tid_t> thread_ids_;$/;"	m	class:__sanitizer::final
thread_ids_	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  InternalMmapVector<tid_t> thread_ids_;$/;"	m	class:__sanitizer::final
thread_list_placeholder	hwasan/hwasan_thread_list.cpp	/^static ALIGNED(16) char thread_list_placeholder[sizeof(HwasanThreadList)];$/;"	m	namespace:__hwasan
thread_local_data_t	lsan/lsan_common_mac.cpp	/^} thread_local_data_t;$/;"	t	namespace:__lsan	typeref:struct:__lsan::__anon85
thread_local_quarantine_size_kb	asan/.ccls-cache/@home@seal@workspace@gcc-11.2.0@libsanitizer@asan/asan_allocator.h	/^  u32 thread_local_quarantine_size_kb;$/;"	m	struct:__asan::AllocatorOptions
thread_local_quarantine_size_kb	asan/asan_allocator.h	/^  u32 thread_local_quarantine_size_kb;$/;"	m	struct:__asan::AllocatorOptions
thread_name	tsan/tsan_report.cpp	/^const char *thread_name(char *buf, int tid) {$/;"	f	namespace:__tsan
thread_quarantine_size_	sanitizer_common/sanitizer_thread_registry.h	/^  const u32 thread_quarantine_size_;$/;"	m	class:__sanitizer::ThreadRegistry
thread_registry	lsan/lsan_thread.cpp	/^static ThreadRegistry *thread_registry;$/;"	m	namespace:__lsan
thread_registry	tsan/tsan_rtl.h	/^  ThreadRegistry *thread_registry;$/;"	m	struct:__tsan::Context
thread_registry_placeholder	asan/asan_thread.cpp	/^static ALIGNED(16) char thread_registry_placeholder[sizeof(ThreadRegistry)];$/;"	m	namespace:__asan
thread_registry_placeholder	tsan/tsan_rtl.cpp	/^static char thread_registry_placeholder[sizeof(ThreadRegistry)];$/;"	m	namespace:__tsan
thread_return_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef DWORD thread_return_t;$/;"	t	namespace:__sanitizer
thread_return_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef void* thread_return_t;$/;"	t	namespace:__sanitizer
thread_suspender_instance	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^static ThreadSuspender *thread_suspender_instance = nullptr;$/;"	m	namespace:__sanitizer
thread_suspender_instance	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^static ThreadSuspender *thread_suspender_instance = nullptr;$/;"	m	namespace:__sanitizer
thread_type	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadType thread_type;$/;"	m	class:__sanitizer::ThreadContextBase
thread_type	tsan/tsan_report.h	/^  ThreadType thread_type;$/;"	m	struct:__tsan::ReportThread
threads	tsan/tsan_report.h	/^  Vector<ReportThread*> threads;$/;"	m	class:__tsan::ReportDesc
threads_	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  InternalMmapVector<SuspendedThreadInfo> threads_;$/;"	m	class:__sanitizer::final
threads_	sanitizer_common/sanitizer_thread_registry.h	/^  ThreadContextBase **threads_;  \/\/ Array of thread contexts is leaked.$/;"	m	class:__sanitizer::ThreadRegistry
tid	asan/asan_descriptions.h	/^  uptr tid;$/;"	m	struct:__asan::StackAddressDescription
tid	asan/asan_errors.h	/^  u32 tid;$/;"	m	struct:__asan::ErrorBase
tid	asan/asan_thread.h	/^  u32 tid() { return context_->tid; }$/;"	f	class:__asan::AsanThread
tid	lsan/lsan_interceptors.cpp	/^  atomic_uintptr_t tid;$/;"	m	struct:std::ThreadParam
tid	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  u32 tid;$/;"	m	struct:__sanitizer::Link
tid	sanitizer_common/sanitizer_stoptheworld_mac.cpp	/^  tid_t tid;$/;"	m	struct:__sanitizer::__anon41
tid	sanitizer_common/sanitizer_thread_registry.h	/^  const u32 tid;  \/\/ Thread ID. Main thread should have tid = 0.$/;"	m	class:__sanitizer::ThreadContextBase
tid	tsan/tsan_defs.h	/^  u16  tid;$/;"	m	struct:__tsan::MBlock
tid	tsan/tsan_interceptors_posix.cpp	/^  atomic_uintptr_t tid;$/;"	m	struct:ThreadParam
tid	tsan/tsan_report.h	/^  int tid;$/;"	m	struct:__tsan::ReportLocation
tid	tsan/tsan_report.h	/^  int tid;$/;"	m	struct:__tsan::ReportMop
tid	tsan/tsan_rtl.h	/^  const int tid;$/;"	m	struct:__tsan::ThreadState
tid	tsan/tsan_rtl.h	/^  u64 tid() const {$/;"	f	class:__tsan::FastState
tid_t	sanitizer_common/sanitizer_internal_defs.h	/^typedef u64 tid_t;$/;"	t	namespace:__sanitizer
time	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_time_t time;$/;"	m	struct:__sanitizer::__sanitizer_timeb
time	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t time;$/;"	m	struct:__sanitizer::__sanitizer_timeb
time	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_time_t time;$/;"	m	struct:__sanitizer::__sanitizer_timeb
time	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_time_t time;$/;"	m	struct:__sanitizer::__sanitizer_timeb
time_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	43;"	d
timeb	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(timeb);$/;"	v
timeb	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(timeb);$/;"	v
timeb	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(timeb);$/;"	v
timeb	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(timeb);$/;"	v
timeout	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int timeout;$/;"	m	struct:urio_command
times_restarted_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  uptr times_restarted_;$/;"	m	class:__sanitizer::SymbolizerProcess
timeval_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer
timeval_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer
timeval_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer
timeval_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned timeval_sz = sizeof(timeval);$/;"	m	namespace:__sanitizer
timezone	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  short timezone;$/;"	m	struct:__sanitizer::__sanitizer_timeb
timezone	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  short timezone;$/;"	m	struct:__sanitizer::__sanitizer_timeb
timezone	sanitizer_common/sanitizer_platform_limits_posix.h	/^  short timezone;$/;"	m	struct:__sanitizer::__sanitizer_timeb
timezone	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  short timezone;$/;"	m	struct:__sanitizer::__sanitizer_timeb
tls_addr	tsan/tsan_rtl.h	/^  const uptr tls_addr;$/;"	m	struct:__tsan::ThreadState
tls_addr	tsan/tsan_rtl_thread.cpp	/^  uptr tls_addr;$/;"	m	struct:__tsan::OnStartedArgs
tls_begin	asan/asan_thread.h	/^  uptr tls_begin() { return tls_begin_; }$/;"	f	class:__asan::AsanThread
tls_begin	hwasan/hwasan_thread.h	/^  uptr tls_begin() { return tls_begin_; }$/;"	f	class:__hwasan::Thread
tls_begin	lsan/lsan_posix.cpp	/^  uptr tls_begin;$/;"	m	struct:__lsan::OnStartedArgs
tls_begin	lsan/lsan_posix.h	/^  uptr tls_begin() { return tls_begin_; }$/;"	f	class:__lsan::final
tls_begin_	asan/asan_thread.h	/^  uptr tls_begin_;$/;"	m	class:__asan::AsanThread
tls_begin_	hwasan/hwasan_thread.h	/^  uptr tls_begin_;$/;"	m	class:__hwasan::Thread
tls_begin_	lsan/lsan_posix.h	/^  uptr tls_begin_ = 0;$/;"	m	class:__lsan::final
tls_bottom	asan/asan_rtems.cpp	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions
tls_end	asan/asan_thread.h	/^  uptr tls_end() { return tls_end_; }$/;"	f	class:__asan::AsanThread
tls_end	hwasan/hwasan_thread.h	/^  uptr tls_end() { return tls_end_; }$/;"	f	class:__hwasan::Thread
tls_end	lsan/lsan_posix.cpp	/^  uptr tls_end;$/;"	m	struct:__lsan::OnStartedArgs
tls_end	lsan/lsan_posix.h	/^  uptr tls_end() { return tls_end_; }$/;"	f	class:__lsan::final
tls_end_	asan/asan_thread.h	/^  uptr tls_end_;$/;"	m	class:__asan::AsanThread
tls_end_	hwasan/hwasan_thread.h	/^  uptr tls_end_;$/;"	m	class:__hwasan::Thread
tls_end_	lsan/lsan_posix.h	/^  uptr tls_end_ = 0;$/;"	m	class:__lsan::final
tls_size	asan/asan_rtems.cpp	/^  uptr stack_bottom, stack_size, tls_bottom, tls_size;$/;"	m	struct:__asan::AsanThread::InitOptions
tls_size	tsan/tsan_rtl.h	/^  const uptr tls_size;$/;"	m	struct:__tsan::ThreadState
tls_size	tsan/tsan_rtl_thread.cpp	/^  uptr tls_size;$/;"	m	struct:__tsan::OnStartedArgs
tm	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(tm);$/;"	v
tm_gmtoff	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  long int tm_gmtoff;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_gmtoff	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long int tm_gmtoff;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_gmtoff	sanitizer_common/sanitizer_platform_limits_posix.h	/^  long int tm_gmtoff;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_hour	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_hour;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_isdst	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_isdst;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mday	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_mday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_min	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_min;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_mon	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_mon;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_sec	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_sec;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_wday	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_wday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_yday	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_yday;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_year	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int tm_year;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_zone	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  const char *tm_zone;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_zone	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  const char *tm_zone;$/;"	m	struct:__sanitizer::__sanitizer_tm
tm_zone	sanitizer_common/sanitizer_platform_limits_posix.h	/^  const char *tm_zone;$/;"	m	struct:__sanitizer::__sanitizer_tm
tmp_bv_	sanitizer_common/sanitizer_deadlock_detector.h	/^  BV tmp_bv_;$/;"	m	class:__sanitizer::DeadlockDetector
to	sanitizer_common/sanitizer_deadlock_detector.h	/^    u16 to;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
to_atomic	tsan/tsan_interface_atomic.cpp	/^static atomic_uint16_t *to_atomic(const volatile a16 *a) {$/;"	f
to_atomic	tsan/tsan_interface_atomic.cpp	/^static atomic_uint32_t *to_atomic(const volatile a32 *a) {$/;"	f
to_atomic	tsan/tsan_interface_atomic.cpp	/^static atomic_uint64_t *to_atomic(const volatile a64 *a) {$/;"	f
to_atomic	tsan/tsan_interface_atomic.cpp	/^static atomic_uint8_t *to_atomic(const volatile a8 *a) {$/;"	f
to_mo	tsan/tsan_interface_atomic.cpp	/^static memory_order to_mo(morder mo) {$/;"	f
tools_	sanitizer_common/sanitizer_symbolizer.h	/^  IntrusiveList<SymbolizerTool> tools_;$/;"	m	class:__sanitizer::final
top	asan/asan_thread.h	/^    uptr top;$/;"	m	struct:__asan::AsanThread::StackBounds
top_frame_bp	sanitizer_common/sanitizer_stacktrace.h	/^  uptr top_frame_bp;  \/\/ Optional bp of a top frame.$/;"	m	struct:__sanitizer::BufferedStackTrace
total_allocated_count_	asan/asan_memory_profile.cpp	/^  uptr total_allocated_count_ = 0;$/;"	m	class:__asan::HeapProfile
total_allocated_user_size_	asan/asan_memory_profile.cpp	/^  uptr total_allocated_user_size_ = 0;$/;"	m	class:__asan::HeapProfile
total_other_count_	asan/asan_memory_profile.cpp	/^  uptr total_other_count_ = 0;$/;"	m	class:__asan::HeapProfile
total_quarantined_count_	asan/asan_memory_profile.cpp	/^  uptr total_quarantined_count_ = 0;$/;"	m	class:__asan::HeapProfile
total_quarantined_user_size_	asan/asan_memory_profile.cpp	/^  uptr total_quarantined_user_size_ = 0;$/;"	m	class:__asan::HeapProfile
total_size	asan/asan_errors.h	/^  uptr total_size;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
total_size	asan/asan_memory_profile.cpp	/^  uptr total_size;$/;"	m	struct:__asan::AllocationSite
total_size	lsan/lsan_common.h	/^  uptr total_size;$/;"	m	struct:__lsan::Leak
total_stack_size	hwasan/hwasan_thread_list.h	/^  uptr total_stack_size;$/;"	m	struct:__hwasan::ThreadStats
total_threads_	sanitizer_common/sanitizer_thread_registry.h	/^  u64 total_threads_;   \/\/ Total number of created threads. May be greater than$/;"	m	class:__sanitizer::ThreadRegistry
trace	sanitizer_common/sanitizer_stacktrace.h	/^  const uptr *trace;$/;"	m	struct:__sanitizer::StackTrace
trace_buffer	sanitizer_common/sanitizer_stacktrace.h	/^  uptr trace_buffer[kStackTraceMax];$/;"	m	struct:__sanitizer::BufferedStackTrace
trace_buffer	tsan/tsan_stack_trace.h	/^  uptr *trace_buffer;  \/\/ Owned.$/;"	m	struct:__tsan::VarSizeStackTrace
track_instrumented_libs_	sanitizer_common/sanitizer_libignore.h	/^  bool track_instrumented_libs_;$/;"	m	class:__sanitizer::LibIgnore
true_type	sanitizer_common/sanitizer_type_traits.h	/^struct true_type {$/;"	s	namespace:__sanitizer
tryAlloc	sanitizer_common/sanitizer_persistent_allocator.h	/^inline void *PersistentAllocator::tryAlloc(uptr size) {$/;"	f	class:__sanitizer::PersistentAllocator
tsd_destructor	asan/asan_posix.cpp	/^static void (*tsd_destructor)(void *tsd) = nullptr;$/;"	m	namespace:__asan
tsd_key	asan/asan_posix.cpp	/^  tsd_key() : key(nullptr) {}$/;"	f	struct:__asan::tsd_key
tsd_key	asan/asan_posix.cpp	/^static pthread_key_t tsd_key;$/;"	m	namespace:__asan
tsd_key	asan/asan_posix.cpp	/^struct tsd_key {$/;"	s	namespace:__asan
tsd_key	hwasan/hwasan_linux.cpp	/^static pthread_key_t tsd_key;$/;"	m	namespace:__hwasan
tsd_key_inited	asan/asan_posix.cpp	/^static bool tsd_key_inited = false;$/;"	m	namespace:__asan
tsd_key_inited	asan/asan_win.cpp	/^static bool tsd_key_inited = false;$/;"	m	namespace:__asan
tsd_key_inited	hwasan/hwasan_linux.cpp	/^static bool tsd_key_inited = false;$/;"	m	namespace:__hwasan
tv_nsec	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  long tv_nsec;$/;"	m	struct:__sanitizer::__sanitizer_timespec
tv_sec	sanitizer_common/sanitizer_linux.cpp	/^  long tv_sec;$/;"	m	struct:kernel_timeval
tv_sec	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_sec	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timespec
tv_sec	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_sec	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_sec	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_time_t tv_sec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	sanitizer_common/sanitizer_linux.cpp	/^  long tv_usec;$/;"	m	struct:kernel_timeval
tv_usec	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
tv_usec	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  __sanitizer_suseconds_t tv_usec;$/;"	m	struct:__sanitizer::__sanitizer_timeval
ty_class	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_class;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_comment	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_comment;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_getty	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_getty;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_name	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_name;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_status	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  int ty_status;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_type	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_type;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
ty_window	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *ty_window;$/;"	m	struct:__sanitizer::__sanitizer_ttyent
typ	tsan/tsan_report.h	/^  ReportType typ;$/;"	m	class:__tsan::ReportDesc
type	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned type;$/;"	m	struct:__sanitizer::__sanitizer_perf_event_attr
type	sanitizer_common/sanitizer_suppressions.h	/^  const char *type;$/;"	m	struct:__sanitizer::Suppression
type	tsan/tsan_report.h	/^  ReportLocationType type;$/;"	m	struct:__tsan::ReportLocation
type	tsan/tsan_rtl.h	/^  ReportType type;$/;"	m	struct:__tsan::FiredSuppression
type_	tsan/tsan_mutex.h	/^  MutexType type_;$/;"	m	class:__tsan::Mutex
type_info	ubsan/ubsan_type_hash_itanium.cpp	/^  class type_info {$/;"	c	namespace:std
u128	ubsan/ubsan_value.h	/^__extension__ typedef unsigned __int128 u128;$/;"	t
u16	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned short u16;$/;"	t	namespace:__sanitizer
u32	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned int u32;$/;"	t	namespace:__sanitizer
u64	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long long u64;$/;"	t	namespace:__sanitizer
u8	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned char u8;$/;"	t	namespace:__sanitizer
ubsan_GetStackTrace	ubsan/ubsan_diag.cpp	/^void ubsan_GetStackTrace(BufferedStackTrace *stack, uptr max_depth,$/;"	f
ubsan_flags	ubsan/ubsan_flags.cpp	/^Flags ubsan_flags;$/;"	m	namespace:__ubsan
ubsan_init_mu	ubsan/ubsan_init.cpp	/^static StaticSpinMutex ubsan_init_mu;$/;"	v
ubsan_initialized	ubsan/ubsan_init.cpp	/^static bool ubsan_initialized;$/;"	v
ubsan_standalone_initializer	ubsan/ubsan_init_standalone.cpp	/^static UbsanStandaloneInitializer ubsan_standalone_initializer;$/;"	m	namespace:__ubsan
uc_flags	sanitizer_common/sanitizer_freebsd.h	/^  int uc_flags;$/;"	m	struct:__sanitizer::__xucontext
uc_link	sanitizer_common/sanitizer_freebsd.h	/^  struct __ucontext *uc_link;$/;"	m	struct:__sanitizer::__xucontext	typeref:struct:__sanitizer::__xucontext::__ucontext
uc_mcontext	sanitizer_common/sanitizer_freebsd.h	/^  xmcontext_t uc_mcontext;$/;"	m	struct:__sanitizer::__xucontext
uc_sigmask	sanitizer_common/sanitizer_freebsd.h	/^  sigset_t uc_sigmask;$/;"	m	struct:__sanitizer::__xucontext
uc_stack	sanitizer_common/sanitizer_freebsd.h	/^  stack_t uc_stack;$/;"	m	struct:__sanitizer::__xucontext
ucontext_t	asan/asan_linux.cpp	64;"	d
ucontext_t	tsan/tsan_interceptors_posix.cpp	/^struct ucontext_t {$/;"	s
ucontext_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned ucontext_t_sz = sizeof(ucontext_t);$/;"	m	namespace:__sanitizer
ucontext_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned ucontext_t_sz = sizeof(ucontext_t);$/;"	m	namespace:__sanitizer
ucontext_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned ucontext_t_sz = sizeof(ucontext_t);$/;"	m	namespace:__sanitizer
ucontext_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned ucontext_t_sz = sizeof(ucontext_t);$/;"	m	namespace:__sanitizer
uhwptr	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long long uhwptr;$/;"	t	namespace:__sanitizer
uhwptr	sanitizer_common/sanitizer_internal_defs.h	/^typedef uptr uhwptr;$/;"	t	namespace:__sanitizer
uid	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  unsigned int uid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  u32 uid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int uid;$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned int uid;           \/\/ uid_t$/;"	m	struct:__sanitizer::__sanitizer_ipc_perm
uid	tsan/tsan_rtl_thread.cpp	/^  uptr uid;$/;"	m	struct:__tsan::ConsumeThreadContext
uid	tsan/tsan_sync.h	/^  u64 uid;  \/\/ Globally unique id.$/;"	m	struct:__tsan::SyncVar
uid_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	40;"	d
uid_t	sanitizer_common/sanitizer_platform_limits_linux.cpp	49;"	d
uid_t_sz	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer
uid_t_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer
uid_t_sz	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^  unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer
uid_t_sz	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^  unsigned uid_t_sz = sizeof(uid_t);$/;"	m	namespace:__sanitizer
uint16_t	tsan/tsan_interceptors_libdispatch.cpp	/^  typedef u16 uint16_t;$/;"	t	namespace:__tsan
uintptr_t	tsan/tsan_dispatch_defs.h	/^typedef unsigned long uintptr_t;$/;"	t
ulong_t	tsan/tsan_md5.cpp	/^typedef unsigned long ulong_t;$/;"	t	namespace:__tsan
union_dvd_authinfo_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned union_dvd_authinfo_sz = sizeof(dvd_authinfo);$/;"	m	namespace:__sanitizer
union_dvd_struct_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned union_dvd_struct_sz = sizeof(dvd_struct);$/;"	m	namespace:__sanitizer
union_twe_statrequest_sz	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^unsigned union_twe_statrequest_sz = sizeof(union twe_statrequest);$/;"	m	namespace:__sanitizer
unique_id	hwasan/hwasan_thread.h	/^  u64 unique_id() const { return unique_id_; }$/;"	f	class:__hwasan::Thread
unique_id	sanitizer_common/sanitizer_thread_registry.h	/^  u64 unique_id;  \/\/ Unique thread ID.$/;"	m	class:__sanitizer::ThreadContextBase
unique_id	tsan/tsan_rtl.h	/^  const int unique_id;$/;"	m	struct:__tsan::ThreadState
unique_id_	hwasan/hwasan_thread.h	/^  u64 unique_id_;  \/\/ counting from zero.$/;"	m	class:__hwasan::Thread
unique_tid	sanitizer_common/sanitizer_deadlock_detector.h	/^    int unique_tid;$/;"	m	struct:__sanitizer::DeadlockDetector::Edge
unique_tids	tsan/tsan_report.h	/^  Vector<int> unique_tids;$/;"	m	class:__tsan::ReportDesc
unknown_flags	sanitizer_common/sanitizer_flag_parser.cpp	/^UnknownFlags unknown_flags;$/;"	m	namespace:__sanitizer
unknown_flags_	sanitizer_common/sanitizer_flag_parser.cpp	/^  const char *unknown_flags_[kMaxUnknownFlags];$/;"	m	class:__sanitizer::UnknownFlags
unlock	sanitizer_common/sanitizer_stackdepotbase.h	/^void StackDepotBase<Node, kReservedBits, kTabSizeLog>::unlock($/;"	f	class:__sanitizer::StackDepotBase
unmap	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  void (*unmap)(void *, void *, uptr);$/;"	m	struct:__sanitizer::__sanitizer_cdbr
unreachable	tsan/tsan_interceptors_posix.cpp	/^static void unreachable() {$/;"	f	namespace:__tsan
unref	tsan/tsan_fd.cpp	/^static void unref(ThreadState *thr, uptr pc, FdSync *s) {$/;"	f	namespace:__tsan
unregister_dso_globals	asan/asan_globals_win.cpp	/^static void unregister_dso_globals() {$/;"	f	namespace:__asan
unvis_valid	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const int unvis_valid = UNVIS_VALID;$/;"	m	namespace:__sanitizer
unvis_valid	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int unvis_valid = UNVIS_VALID;$/;"	m	namespace:__sanitizer
unvis_validpush	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^const int unvis_validpush = UNVIS_VALIDPUSH;$/;"	m	namespace:__sanitizer
unvis_validpush	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^const int unvis_validpush = UNVIS_VALIDPUSH;$/;"	m	namespace:__sanitizer
unwind_backtrace_signal_arch	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^unwind_backtrace_signal_arch_func unwind_backtrace_signal_arch;$/;"	v
unwind_backtrace_signal_arch_func	sanitizer_common/sanitizer_unwind_linux_libcdep.cpp	/^typedef sptr (*unwind_backtrace_signal_arch_func)($/;"	t
unwinding_	asan/asan_thread.h	/^  bool unwinding_;$/;"	m	class:__asan::AsanThread
upperBound	ubsan/ubsan_diag.cpp	/^static Range *upperBound(MemoryLocation Loc, Range *Ranges,$/;"	f
uptr	interception/interception.h	/^typedef unsigned long long uptr;$/;"	t	namespace:__interception
uptr	sanitizer_common/sanitizer_internal_defs.h	/^typedef unsigned long long uptr;$/;"	t	namespace:__sanitizer
urio_command	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^struct urio_command {$/;"	s
us16	sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) s16 us16;$/;"	m	namespace:__sanitizer
us32	sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) s32 us32;$/;"	m	namespace:__sanitizer
us64	sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) s64 us64;$/;"	m	namespace:__sanitizer
use_count	sanitizer_common/sanitizer_stackdepot.cpp	/^int StackDepotHandle::use_count() {$/;"	f	class:__sanitizer::StackDepotHandle
use_posix_spawn_	sanitizer_common/sanitizer_symbolizer_internal.h	/^  bool use_posix_spawn_;$/;"	m	class:__sanitizer::SymbolizerProcess
use_xnu_fast_mmap	sanitizer_common/sanitizer_mac.cpp	/^static bool use_xnu_fast_mmap = false;$/;"	m	namespace:__sanitizer
user_aligned_alloc	tsan/tsan_mman.cpp	/^void *user_aligned_alloc(ThreadState *thr, uptr pc, uptr align, uptr sz) {$/;"	f	namespace:__tsan
user_alloc	tsan/tsan_mman.cpp	/^void *user_alloc(ThreadState *thr, uptr pc, uptr sz) {$/;"	f	namespace:__tsan
user_alloc_internal	tsan/tsan_mman.cpp	/^void *user_alloc_internal(ThreadState *thr, uptr pc, uptr sz, uptr align,$/;"	f	namespace:__tsan
user_alloc_usable_size	tsan/tsan_mman.cpp	/^uptr user_alloc_usable_size(const void *p) {$/;"	f	namespace:__tsan
user_calloc	tsan/tsan_mman.cpp	/^void *user_calloc(ThreadState *thr, uptr pc, uptr size, uptr n) {$/;"	f	namespace:__tsan
user_free	tsan/tsan_mman.cpp	/^void user_free(ThreadState *thr, uptr pc, void *p, bool signal) {$/;"	f	namespace:__tsan
user_id	sanitizer_common/sanitizer_thread_registry.h	/^  uptr user_id;   \/\/ Some opaque user thread id (e.g. pthread_t).$/;"	m	class:__sanitizer::ThreadContextBase
user_memalign	tsan/tsan_mman.cpp	/^void *user_memalign(ThreadState *thr, uptr pc, uptr align, uptr sz) {$/;"	f	namespace:__tsan
user_name	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^    unsigned int user_name : 1;$/;"	m	struct:__anon31::__anon32
user_name	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  void *user_name;$/;"	m	struct:__anon31
user_posix_memalign	tsan/tsan_mman.cpp	/^int user_posix_memalign(ThreadState *thr, uptr pc, void **memptr, uptr align,$/;"	f	namespace:__tsan
user_pvalloc	tsan/tsan_mman.cpp	/^void *user_pvalloc(ThreadState *thr, uptr pc, uptr sz) {$/;"	f	namespace:__tsan
user_realloc	tsan/tsan_mman.cpp	/^void *user_realloc(ThreadState *thr, uptr pc, void *p, uptr sz) {$/;"	f	namespace:__tsan
user_reallocarray	tsan/tsan_mman.cpp	/^void *user_reallocarray(ThreadState *thr, uptr pc, void *p, uptr size, uptr n) {$/;"	f	namespace:__tsan
user_requested_alignment	asan/asan_descriptions.h	/^  u32 user_requested_alignment : 12;$/;"	m	struct:__asan::ChunkAccess
user_requested_size_hi	asan/asan_allocator.cpp	/^  u16 user_requested_size_hi;$/;"	m	class:__asan::ChunkHeader
user_requested_size_lo	asan/asan_allocator.cpp	/^  u32 user_requested_size_lo;$/;"	m	class:__asan::ChunkHeader
user_seh_handler	asan/asan_win.cpp	/^static LPTOP_LEVEL_EXCEPTION_FILTER user_seh_handler;$/;"	v
user_size	asan/asan_errors.h	/^  uptr user_size;$/;"	m	struct:__asan::ErrorAllocationSizeTooBig
user_valloc	tsan/tsan_mman.cpp	/^void *user_valloc(ThreadState *thr, uptr pc, uptr sz) {$/;"	f	namespace:__tsan
userdata	include/sanitizer/dfsan_interface.h	/^  void *userdata;$/;"	m	struct:dfsan_label_info
ustat	include/system/linux/types.h	10;"	d
ustat	include/system/linux/types.h	8;"	d
uu16	sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) u16 uu16;$/;"	m	namespace:__sanitizer
uu32	sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) u32 uu32;$/;"	m	namespace:__sanitizer
uu64	sanitizer_common/sanitizer_internal_defs.h	/^typedef ALIGNED(1) u64 uu64;$/;"	m	namespace:__sanitizer
uuid	sanitizer_common/sanitizer_common.h	/^  const u8 *uuid() const { return uuid_; }$/;"	f	class:__sanitizer::LoadedModule
uuid	sanitizer_common/sanitizer_procmaps.h	/^  u8 uuid[kModuleUUIDSize];$/;"	m	class:__sanitizer::MemoryMappedSegment
uuid_	sanitizer_common/sanitizer_common.h	/^  u8 uuid_[kModuleUUIDSize];$/;"	m	class:__sanitizer::LoadedModule
v	sanitizer_common/sanitizer_bvgraph.h	/^  BV v[kSize];$/;"	m	class:__sanitizer::BVGraph
v	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int v[10];$/;"	m	struct:__sanitizer::__sanitizer_struct_mallinfo
v	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr v[10];$/;"	m	struct:__sanitizer::__sanitizer_struct_mallinfo
v0	tsan/tsan_ppc_regs.h	65;"	d
v1	tsan/tsan_ppc_regs.h	66;"	d
v10	tsan/tsan_ppc_regs.h	75;"	d
v11	tsan/tsan_ppc_regs.h	76;"	d
v12	tsan/tsan_ppc_regs.h	77;"	d
v13	tsan/tsan_ppc_regs.h	78;"	d
v14	tsan/tsan_ppc_regs.h	79;"	d
v15	tsan/tsan_ppc_regs.h	80;"	d
v16	tsan/tsan_ppc_regs.h	81;"	d
v17	tsan/tsan_ppc_regs.h	82;"	d
v18	tsan/tsan_ppc_regs.h	83;"	d
v19	tsan/tsan_ppc_regs.h	84;"	d
v2	tsan/tsan_ppc_regs.h	67;"	d
v20	tsan/tsan_ppc_regs.h	85;"	d
v21	tsan/tsan_ppc_regs.h	86;"	d
v22	tsan/tsan_ppc_regs.h	87;"	d
v23	tsan/tsan_ppc_regs.h	88;"	d
v24	tsan/tsan_ppc_regs.h	89;"	d
v25	tsan/tsan_ppc_regs.h	90;"	d
v26	tsan/tsan_ppc_regs.h	91;"	d
v27	tsan/tsan_ppc_regs.h	92;"	d
v28	tsan/tsan_ppc_regs.h	93;"	d
v29	tsan/tsan_ppc_regs.h	94;"	d
v3	tsan/tsan_ppc_regs.h	68;"	d
v30	tsan/tsan_ppc_regs.h	95;"	d
v31	tsan/tsan_ppc_regs.h	96;"	d
v4	tsan/tsan_ppc_regs.h	69;"	d
v5	tsan/tsan_ppc_regs.h	70;"	d
v6	tsan/tsan_ppc_regs.h	71;"	d
v7	tsan/tsan_ppc_regs.h	72;"	d
v8	tsan/tsan_ppc_regs.h	73;"	d
v9	tsan/tsan_ppc_regs.h	74;"	d
va_copy	sanitizer_common/sanitizer_printf.cpp	25;"	d
val	sanitizer_common/sanitizer_addrhashmap.h	/^    T                val;$/;"	m	struct:__sanitizer::AddrHashMap::Cell
val	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr val[128 \/ sizeof(uptr)];$/;"	m	struct:__sanitizer::__sanitizer_sigset_t
val_dont_use	sanitizer_common/sanitizer_atomic.h	/^  volatile ALIGNED(8) Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint64_t
val_dont_use	sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_sint32_t
val_dont_use	sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint16_t
val_dont_use	sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint32_t
val_dont_use	sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uint8_t
val_dont_use	sanitizer_common/sanitizer_atomic.h	/^  volatile Type val_dont_use;$/;"	m	struct:__sanitizer::atomic_uintptr_t
valid	sanitizer_common/sanitizer_stackdepot.h	/^  bool valid() { return node_; }$/;"	f	struct:__sanitizer::StackDepotHandle
value	asan/asan_poisoning.cpp	/^  s8 value;  \/\/ = *chunk;$/;"	m	struct:__asan::ShadowSegmentEndpoint
value	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  int value;$/;"	m	struct:urio_command
value	sanitizer_common/sanitizer_type_traits.cpp	/^const bool false_type::value;$/;"	m	class:__sanitizer::false_type
value	sanitizer_common/sanitizer_type_traits.cpp	/^const bool true_type::value;$/;"	m	class:__sanitizer::true_type
value	sanitizer_common/sanitizer_type_traits.h	/^  static const bool value = false;$/;"	m	struct:__sanitizer::false_type
value	sanitizer_common/sanitizer_type_traits.h	/^  static const bool value = true;$/;"	m	struct:__sanitizer::true_type
value	sanitizer_common/sanitizer_win.cpp	/^  char value[kMaxEnvValueLength];$/;"	m	struct:__sanitizer::__anon42::EnvVariable
version_string	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^  uint8_t version_string[224];$/;"	m	struct:__anon23
vfork	tsan/tsan_interceptors_posix.cpp	54;"	d
vfork_spill	hwasan/hwasan_thread.h	/^  uptr &vfork_spill() { return vfork_spill_; }$/;"	f	class:__hwasan::Thread
vfork_spill_	hwasan/hwasan_thread.h	/^  uptr vfork_spill_;$/;"	m	class:__hwasan::Thread
vfptr_offset	ubsan/ubsan_type_hash_win.cpp	/^  int vfptr_offset;$/;"	m	struct:CompleteObjectLocator
vfptr_offset	ubsan/ubsan_type_hash_win.cpp	/^  int vfptr_offset;$/;"	m	struct:CompleteObjectLocatorAbs
virtual_size	sanitizer_common/sanitizer_mac.cpp	/^  mach_vm_size_t virtual_size;$/;"	m	struct:__sanitizer::__sanitizer_task_vm_info
visited	sanitizer_common/sanitizer_deadlock_detector2.cpp	/^  bool visited[kMaxMutex];$/;"	m	struct:__sanitizer::DDPhysicalThread
vmaSize	tsan/tsan_platform_linux.cpp	/^uptr vmaSize;$/;"	m	namespace:__tsan
vmo_	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  zx_handle_t vmo_ = {};$/;"	m	class:__sancov::__anon45::final
vmo_name_	sanitizer_common/sanitizer_coverage_fuchsia.cpp	/^  char vmo_name_[ZX_MAX_NAME_LEN] = {};$/;"	m	class:__sancov::__anon45::final
wcslen	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(wcslen);$/;"	v
wcsnlen	asan/asan_win_dll_thunk.cpp	/^INTERCEPT_LIBRARY_FUNCTION(wcsnlen);$/;"	v
we_nbytes	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr we_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_nbytes	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr we_nbytes;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_offs	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr we_offs;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_offs	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr we_offs;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_offs	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr we_offs;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_offs	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr we_offs;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_strings	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char *we_strings;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_strings	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char *we_strings;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordc	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  uptr we_wordc;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordc	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  uptr we_wordc;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordc	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr we_wordc;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordc	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr we_wordc;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordn	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int we_wordn;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordp	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **we_wordp;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordv	sanitizer_common/sanitizer_platform_limits_freebsd.h	/^  char **we_wordv;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordv	sanitizer_common/sanitizer_platform_limits_netbsd.h	/^  char **we_wordv;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordv	sanitizer_common/sanitizer_platform_limits_posix.h	/^  char **we_wordv;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
we_wordv	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  char **we_wordv;$/;"	m	struct:__sanitizer::__sanitizer_wordexp_t
weak_intercept_init	sanitizer_common/sanitizer_win_weak_interception.cpp	/^static int weak_intercept_init() {$/;"	f
weak_intercept_thread_init	sanitizer_common/sanitizer_win_weak_interception.cpp	/^static void WINAPI weak_intercept_thread_init(void *mod, unsigned long reason,$/;"	f
weight	sanitizer_common/sanitizer_suppressions.h	/^  uptr weight;$/;"	m	struct:__sanitizer::Suppression
wordexp_t	sanitizer_common/sanitizer_platform_limits_freebsd.cpp	/^CHECK_TYPE_SIZE(wordexp_t);$/;"	v
wordexp_t	sanitizer_common/sanitizer_platform_limits_netbsd.cpp	/^CHECK_TYPE_SIZE(wordexp_t);$/;"	v
wordexp_t	sanitizer_common/sanitizer_platform_limits_posix.cpp	/^CHECK_TYPE_SIZE(wordexp_t);$/;"	v
wordexp_t	sanitizer_common/sanitizer_platform_limits_solaris.cpp	/^CHECK_TYPE_SIZE(wordexp_t);$/;"	v
worker_t	asan/asan_mac.cpp	/^typedef void* (*worker_t)(void *block);$/;"	t	namespace:__asan
worker_t	lsan/lsan_mac.cpp	/^typedef void *(*worker_t)(void *block);$/;"	t	namespace:__lsan
writable	sanitizer_common/sanitizer_common.h	/^    bool writable;$/;"	m	struct:__sanitizer::LoadedModule::AddressRange
write	sanitizer_common/sanitizer_platform_limits_posix.h	/^  __sanitizer_cookie_io_write write;$/;"	m	struct:__sanitizer_cookie_io_functions_t
write	tsan/tsan_mutexset.h	/^    bool write;$/;"	m	struct:__tsan::MutexSet::Desc
write	tsan/tsan_report.h	/^  bool write;$/;"	m	struct:__tsan::ReportMop
write	tsan/tsan_report.h	/^  bool write;$/;"	m	struct:__tsan::ReportMopMutex
write_flag	sanitizer_common/sanitizer_common.h	/^  enum WriteFlag { UNKNOWN, READ, WRITE } write_flag;$/;"	m	struct:__sanitizer::SignalContext	typeref:enum:__sanitizer::SignalContext::WriteFlag
x	asan/asan_malloc_linux.cpp	/^  int x[10];$/;"	m	struct:fake_mallinfo
x	lsan/lsan_interceptors.cpp	/^  int x[10];$/;"	m	struct:std::fake_mallinfo
x_	tsan/tsan_rtl.h	/^  u64 x_;$/;"	m	class:__tsan::FastState
x_base	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr x_base;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_base	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr x_base;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_handy	sanitizer_common/sanitizer_platform_limits_posix.h	/^  unsigned x_handy;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_handy	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  unsigned x_handy;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_op	sanitizer_common/sanitizer_platform_limits_posix.h	/^  int x_op;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_op	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  int x_op;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_ops	sanitizer_common/sanitizer_platform_limits_posix.h	/^  void *x_ops;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_ops	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  void *x_ops;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_private	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr x_private;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_private	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr x_private;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_public	sanitizer_common/sanitizer_platform_limits_posix.h	/^  uptr x_public;$/;"	m	struct:__sanitizer::__sanitizer_XDR
x_public	sanitizer_common/sanitizer_platform_limits_solaris.h	/^  uptr x_public;$/;"	m	struct:__sanitizer::__sanitizer_XDR
xdl_iterate_phdr	sanitizer_common/sanitizer_freebsd.h	129;"	d
xdl_iterate_phdr_t	sanitizer_common/sanitizer_freebsd.h	/^typedef int xdl_iterate_phdr_t(__xdl_iterate_hdr_callback, void *);$/;"	t	namespace:__sanitizer
xdl_phdr_info	sanitizer_common/sanitizer_freebsd.h	/^struct xdl_phdr_info {$/;"	s	namespace:__sanitizer
xkinfo_vmentry	sanitizer_common/sanitizer_freebsd.h	/^struct xkinfo_vmentry {$/;"	s	namespace:__sanitizer
xmcontext_t	sanitizer_common/sanitizer_freebsd.h	/^} xmcontext_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__xmcontext
xorshift	hwasan/hwasan_thread.cpp	/^static u32 xorshift(u32 state) {$/;"	f	namespace:__hwasan
xucontext_t	sanitizer_common/sanitizer_freebsd.h	/^} xucontext_t;$/;"	t	namespace:__sanitizer	typeref:struct:__sanitizer::__xucontext
~BlockingCall	tsan/tsan_interceptors_posix.cpp	/^  ~BlockingCall() {$/;"	f	struct:BlockingCall
~CompactRingBuffer	sanitizer_common/sanitizer_ring_buffer.h	/^  ~CompactRingBuffer() {}$/;"	f	class:__sanitizer::CompactRingBuffer
~DDCallback	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  ~DDCallback() {}$/;"	f	struct:__sanitizer::DDCallback
~DDetector	sanitizer_common/sanitizer_deadlock_detector_interface.h	/^  ~DDetector() {}$/;"	f	struct:__sanitizer::DDetector
~DenseSlabAlloc	tsan/tsan_dense_alloc.h	/^  ~DenseSlabAlloc() {$/;"	f	class:__tsan::DenseSlabAlloc
~Diag	ubsan/ubsan_diag.cpp	/^Diag::~Diag() {$/;"	f	class:Diag
~FileCloser	sanitizer_common/sanitizer_file.h	/^  ~FileCloser() { CloseFile(fd); }$/;"	f	struct:__sanitizer::FileCloser
~FlagHandlerBase	sanitizer_common/sanitizer_flag_parser.h	/^  ~FlagHandlerBase() {}$/;"	f	class:__sanitizer::FlagHandlerBase
~GenericScopedLock	sanitizer_common/sanitizer_mutex.h	/^  ~GenericScopedLock() {$/;"	f	class:__sanitizer::GenericScopedLock
~GenericScopedReadLock	sanitizer_common/sanitizer_mutex.h	/^  ~GenericScopedReadLock() {$/;"	f	class:__sanitizer::GenericScopedReadLock
~Handle	sanitizer_common/sanitizer_addrhashmap.h	/^AddrHashMap<T, kSize>::Handle::~Handle() {$/;"	f	class:__sanitizer::AddrHashMap::Handle
~InternalMmapVector	sanitizer_common/sanitizer_common.h	/^  ~InternalMmapVector() { InternalMmapVectorNoCtor<T>::Destroy(); }$/;"	f	class:__sanitizer::InternalMmapVector
~ListOfModules	sanitizer_common/sanitizer_common.h	/^  ~ListOfModules() { clear(); }$/;"	f	class:__sanitizer::ListOfModules
~MemoryMappedSegment	sanitizer_common/sanitizer_procmaps.h	/^  ~MemoryMappedSegment() {}$/;"	f	class:__sanitizer::MemoryMappedSegment
~MemoryMappingLayout	sanitizer_common/sanitizer_procmaps_common.cpp	/^MemoryMappingLayout::~MemoryMappingLayout() {$/;"	f	class:__sanitizer::MemoryMappingLayout
~MemoryMappingLayout	sanitizer_common/sanitizer_procmaps_fuchsia.cpp	/^MemoryMappingLayout::~MemoryMappingLayout() {}$/;"	f	class:__sanitizer::MemoryMappingLayout
~MemoryMappingLayout	sanitizer_common/sanitizer_procmaps_mac.cpp	/^MemoryMappingLayout::~MemoryMappingLayout() {$/;"	f	class:__sanitizer::MemoryMappingLayout
~Mutex	tsan/tsan_mutex.cpp	/^Mutex::~Mutex() {$/;"	f	class:__tsan::Mutex
~PackedCounterArray	sanitizer_common/sanitizer_allocator_primary64.h	/^    ~PackedCounterArray() {$/;"	f	class:SizeClassAllocator64::PackedCounterArray
~RWMutex	sanitizer_common/sanitizer_mutex.h	/^  ~RWMutex() {$/;"	f	class:__sanitizer::RWMutex
~ReportDesc	tsan/tsan_report.cpp	/^ReportDesc::~ReportDesc() {$/;"	f	class:__tsan::ReportDesc
~RingBuffer	sanitizer_common/sanitizer_ring_buffer.h	/^  ~RingBuffer() {}$/;"	f	class:__sanitizer::RingBuffer
~RunOnDestruction	sanitizer_common/sanitizer_common.h	/^  ~RunOnDestruction() { fn_(); }$/;"	f	class:__sanitizer::RunOnDestruction
~SavedStackAllocations	hwasan/hwasan_report.cpp	/^  ~SavedStackAllocations() {$/;"	f	class:__hwasan::SavedStackAllocations
~ScopedAllocatorErrorReport	sanitizer_common/sanitizer_allocator_report.cpp	/^  ~ScopedAllocatorErrorReport() {$/;"	f	class:__sanitizer::ScopedAllocatorErrorReport
~ScopedAnnotation	tsan/tsan_interface_ann.cpp	/^  ~ScopedAnnotation() {$/;"	f	class:__tsan::ScopedAnnotation
~ScopedAtomic	tsan/tsan_interface_atomic.cpp	/^  ~ScopedAtomic() {$/;"	f	class:ScopedAtomic
~ScopedDisabler	include/sanitizer/lsan_interface.h	/^  ~ScopedDisabler() { __lsan_enable(); }$/;"	f	class:__lsan::ScopedDisabler
~ScopedErrorReportLock	sanitizer_common/sanitizer_symbolizer_report.cpp	/^ScopedErrorReportLock::~ScopedErrorReportLock() {$/;"	f	class:__sanitizer::ScopedErrorReportLock
~ScopedGlobalProcessor	tsan/tsan_mman.cpp	/^ScopedGlobalProcessor::~ScopedGlobalProcessor() {$/;"	f	class:__tsan::ScopedGlobalProcessor
~ScopedHandle	sanitizer_common/sanitizer_symbolizer_win.cpp	/^  ~ScopedHandle() {$/;"	f	struct:__sanitizer::__anon10::ScopedHandle
~ScopedIgnoreInterceptors	tsan/tsan_rtl.h	/^  ~ScopedIgnoreInterceptors() {$/;"	f	struct:__tsan::ScopedIgnoreInterceptors
~ScopedInErrorReport	asan/asan_report.cpp	/^  ~ScopedInErrorReport() {$/;"	f	class:__asan::ScopedInErrorReport
~ScopedInterceptor	tsan/tsan_interceptors_posix.cpp	/^ScopedInterceptor::~ScopedInterceptor() {$/;"	f	class:ScopedInterceptor
~ScopedInterceptorDisabler	lsan/lsan_common.h	/^  ~ScopedInterceptorDisabler() { EnableInThisThread(); }$/;"	f	struct:__lsan::ScopedInterceptorDisabler
~ScopedJavaFunc	tsan/tsan_interface_java.cpp	/^  ~ScopedJavaFunc() {$/;"	f	class:__tsan::ScopedJavaFunc
~ScopedReport	hwasan/hwasan_report.cpp	/^  ~ScopedReport() {$/;"	f	class:__hwasan::ScopedReport
~ScopedReport	tsan/tsan_rtl_report.cpp	/^ScopedReport::~ScopedReport() {}$/;"	f	class:__tsan::ScopedReport
~ScopedReport	ubsan/ubsan_diag.cpp	/^ScopedReport::~ScopedReport() {$/;"	f	class:ScopedReport
~ScopedReportBase	tsan/tsan_rtl_report.cpp	/^ScopedReportBase::~ScopedReportBase() {$/;"	f	class:__tsan::ScopedReportBase
~ScopedSetTracerPID	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  ~ScopedSetTracerPID() {$/;"	f	struct:__sanitizer::ScopedSetTracerPID
~ScopedSetTracerPID	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  ~ScopedSetTracerPID() {$/;"	f	struct:__sanitizer::ScopedSetTracerPID
~ScopedStackSpaceWithGuard	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  ~ScopedStackSpaceWithGuard() {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
~ScopedStackSpaceWithGuard	sanitizer_common/sanitizer_stoptheworld_netbsd_libcdep.cpp	/^  ~ScopedStackSpaceWithGuard() {$/;"	f	class:__sanitizer::ScopedStackSpaceWithGuard
~ScopedSyscall	tsan/tsan_interceptors_posix.cpp	/^  ~ScopedSyscall() {$/;"	f	struct:ScopedSyscall
~ScopedTaggingDisabler	hwasan/hwasan_thread.h	/^  ~ScopedTaggingDisabler() { GetCurrentThread()->EnableTagging(); }$/;"	f	struct:__hwasan::ScopedTaggingDisabler
~ScopedUnwinding	asan/asan_stack.cpp	/^  ~ScopedUnwinding() {$/;"	f	class:__asan::__anon70::ScopedUnwinding
~StopTheWorldScope	sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cpp	/^  ~StopTheWorldScope() {$/;"	f	class:__sanitizer::StopTheWorldScope
~SuspendedThreadsList	sanitizer_common/sanitizer_stoptheworld.h	/^  ~SuspendedThreadsList() {}$/;"	f	class:__sanitizer::SuspendedThreadsList
~SymbolizedStackHolder	ubsan/ubsan_diag.h	/^  ~SymbolizedStackHolder() { clear(); }$/;"	f	class:__ubsan::SymbolizedStackHolder
~SymbolizerProcess	sanitizer_common/sanitizer_symbolizer_internal.h	/^  ~SymbolizerProcess() {}$/;"	f	class:__sanitizer::SymbolizerProcess
~SymbolizerScope	sanitizer_common/sanitizer_symbolizer.cpp	/^Symbolizer::SymbolizerScope::~SymbolizerScope() {$/;"	f	class:__sanitizer::Symbolizer::SymbolizerScope
~SymbolizerTool	sanitizer_common/sanitizer_symbolizer_internal.h	/^  ~SymbolizerTool() {}$/;"	f	class:__sanitizer::SymbolizerTool
~SyncClock	tsan/tsan_clock.cpp	/^SyncClock::~SyncClock() {$/;"	f	class:__tsan::SyncClock
~ThreadContext	tsan/tsan_rtl_thread.cpp	/^ThreadContext::~ThreadContext() {$/;"	f	class:__tsan::ThreadContext
~ThreadContextBase	sanitizer_common/sanitizer_thread_registry.cpp	/^ThreadContextBase::~ThreadContextBase() {$/;"	f	class:__sanitizer::ThreadContextBase
~ThreadContextLsanBase	lsan/lsan_thread.h	/^  ~ThreadContextLsanBase() {}$/;"	f	class:__lsan::ThreadContextLsanBase
~ThreadLister	sanitizer_common/sanitizer_linux.cpp	/^ThreadLister::~ThreadLister() {$/;"	f	class:__sanitizer::ThreadLister
~VarSizeStackTrace	tsan/tsan_stack_trace.cpp	/^VarSizeStackTrace::~VarSizeStackTrace() {$/;"	f	class:__tsan::VarSizeStackTrace
~Vector	sanitizer_common/sanitizer_vector.h	/^  ~Vector() {$/;"	f	class:__sanitizer::Vector
~tsd_key	asan/asan_posix.cpp	/^  ~tsd_key() {$/;"	f	struct:__asan::tsd_key
